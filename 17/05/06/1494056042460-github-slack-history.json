[
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299610152|#611: Nvidia GPU support with different driver versions?>",
                "text": "I think your install might be off.. can you try removing everything from the old version completely, there is actually a lot hiding:\n\n```$ sudo rm -rf /usr/local/libexec/singularity\n$ sudo rm -rf /usr/local/etc/singularity\n$ sudo rm -rf /usr/local/include/singularity\n$ sudo rm -rf /usr/local/lib/singularity\n$ sudo rm -rf /usr/local/var/lib/singularity/\n$ sudo rm /usr/local/bin/singularity\n$ sudo rm /usr/local/bin/run-singularity\n$ sudo rm /usr/local/etc/bash_completion.d/singularity \n$ sudo rm /usr/local/man/man1/singularity.1\n```\nThen, when you download and install, just do this in a fresh place:\n\n```$ git clone -b development https://github.com/singularityware/singularity.git\n$ cd singularity\n$ git fetch\n$ git checkout development\n$ ./autogen.sh\n$ ./configure --prefix=/usr/local --sysconfdir=/etc\n$ make\n$ sudo make install\n```\nthen do `singularity --version`. You should see something that looks like `2.2.99-development.g945c6ee\n` - the ones above don't seem quite right to me.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299610152|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494037753.290572",
        "date": 1494037753290
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by davidedelvento on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299608407|#611: Nvidia GPU support with different driver versions?>",
                "text": "Thanks @vsoch for the message. I should have mentioned that on my own...\nThanks also @GodloveD for that, however these were some of the options I did try and did not work (I retried them right now, just in case).\n\nI installed many versions, but I deleted a few of them. For the ones that I did not delete, the output of `--version` is one of `2.2.1`, `2.2.99-HEAD.g1a64d3b` or `2.2.99`. Is any of these supposed to work?",
                "pretext": "[singularityware/singularity] New comment by davidedelvento on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299608407|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494035515.192648",
        "date": 1494035515192
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299600804|#611: Nvidia GPU support with different driver versions?>",
                "text": "good catch @GodloveD !",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299600804|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494028807.795993",
        "date": 1494028807795
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299600737|#611: Nvidia GPU support with different driver versions?>",
                "image_url": "https://asciinema.org/a/2n8lxkukfa0z2o6pcxp1yki9g.png",
                "image_width": 372,
                "image_height": 250,
                "image_bytes": 60612,
                "text": "Use either --nv (2 dashes) or -n. :relaxed:\n\nOn May 5, 2017 7:57 PM, \"Vanessa Sochat\" <mailto:notifications@github.com|notifications@github.com> wrote:\n\n&gt; hey @davidedelvento <https://github.com/davidedelvento> could you double\n&gt; check the version?\n&gt; \n&gt; singularity --version\n&gt; \n&gt; I just tested with a (slightly dated) and then updated development branch,\n&gt; and I couldn't produce this error:\n&gt; \n&gt; <https://asciinema.org/a/2n8lxkukfa0z2o6pcxp1yki9g?speed=3>\n&gt; \n&gt; â€”\n&gt; You are receiving this because you were mentioned.\n&gt; Reply to this email directly, view it on GitHub\n&gt; <https://github.com/singularityware/singularity/issues/611#issuecomment-299600521>,\n&gt; or mute the thread\n&gt; <https://github.com/notifications/unsubscribe-auth/AHUUXC0NHeg06lkcXk1yENBaNxiP6fR6ks5r27dMgaJpZM4M-zk7>\n&gt; .",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299600737|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494028767.792487",
        "date": 1494028767792
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299600521|#611: Nvidia GPU support with different driver versions?>",
                "image_url": "https://asciinema.org/a/2n8lxkukfa0z2o6pcxp1yki9g.png",
                "image_width": 372,
                "image_height": 250,
                "image_bytes": 60612,
                "text": "hey @davidedelvento could you double check the version? \n\n```singularity --version\n```\n\nI just tested with a (slightly dated) and then updated development branch, and I couldn't produce this error:\n\n<https://asciinema.org/a/2n8lxkukfa0z2o6pcxp1yki9g?speed=3>",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299600521|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494028634.782433",
        "date": 1494028634782
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by davidedelvento on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299583061|#611: Nvidia GPU support with different driver versions?>",
                "text": "I must be doing something very stupid. Every time I try to run something like\n\n```/path/to/singularity shell -nv docker://tensorflow/tensorflow:latest-gpu\n```\n\nI get\n\n```ERROR: Unknown option: -nv\n```\n\nAnd yes, I installed the dev branch, and even explicitly tried the `1a64d3b`. I also set the `SINGULARITY_INCLUDEGPU` env variable to `1` at configure/compile time and runtime.\n\nSince the `exec` command mentioned `-n`, I tried that too (and double dashes --nv etc).\n\nClues?",
                "pretext": "[singularityware/singularity] New comment by davidedelvento on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299583061|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494020684.880261",
        "date": 1494020684880
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-299334508|#659: Using development branch on Singularity Hub>",
                "text": "yeah I understand completely! There are some exciting updates / changes to singularity hub, and it's infrastructure coming in the next few months - still figuring out some details and then we will be able to move forward with the work! Minimally, when 2.3 is out I will update the builders quickly for the new version.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-299334508|#659: Using development branch on Singularity Hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493939677.525428",
        "date": 1493939677525
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by belledon on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-299333965|#659: Using development branch on Singularity Hub>",
                "text": "@vsoch , \n It makes sense to shy away from \"quasi-finished\" versions! I have all I need on my end. Just figured it may serve some use in controlled settings. ",
                "pretext": "[singularityware/singularity] New comment by belledon on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-299333965|#659: Using development branch on Singularity Hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493939452.496806",
        "date": 1493939452496
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-299333551|#659: Using development branch on Singularity Hub>",
                "text": "hey @belledon ! I could definitely generate a custom development image for a workaround for now, although my hope was to be able to provide versioned (eg 2.3) images to not have any \"quasi finished\" ones up there. Hey @gmkurtzer how close realistically are we to 2.3 release?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-299333551|#659: Using development branch on Singularity Hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493939286.475430",
        "date": 1493939286475
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#659 Using development branch on Singularity Hub' https://github.com/singularityware/singularity/issues/659 by belledon",
                "text": "Hey @vsoch ,\n\nI was trying to build a container from a docker container and ran into an old issue with file names being too long when using `2.2.1`. I was pressed for time so I didn't think to save the output (I'd be happy to recreate it over the weekend). However, I remember that bug was fixed in the `librefractor` branch (which I'm assuming is now `development`). Cloning and doing a local build from the `development` branch worked without a hitch. I was wondering if it would be easy on your end to include the singularity branch in build options of Singularity Hub? Sorry if this is a repost/ not practical.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/belledon|belledon>",
                "title": "#659 Using development branch on Singularity Hub",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/659",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493938482.361950",
        "date": 1493938482361
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#658 [feature request] Option to run only parts of the bootstrapping process. ' https://github.com/singularityware/singularity/issues/658 by georghildebrand",
                "text": "Hi here, i am fascinated by singularity. In the last weeks i started playing around with it a little and it works quite nice on our HPC system. One nice feature to have would be, if you could add a functionality to allow running the different bootstrapping stages separately. \n\nExample: \nwhen doing\n&gt; singularity bootstrap image.img imagedef.def\nit would help to if one could run %post, %setup, bootstrap separately.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/georghildebrand|georghildebrand>",
                "title": "#658 [feature request] Option to run only parts of the bootstrapping process. ",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/658",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493928552.301936",
        "date": 1493928552301
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/628#issuecomment-299249237|#628: Add a Gitter chat badge to README.md>",
                "text": "There still could be another option, here are some that I found:\n\nâ€¢ <https://ryver.com/>\nâ€¢ <https://rocket.chat/>\nâ€¢ <https://www.samepage.io/>\nâ€¢ <https://sdelements.github.io/lets-chat/>\nâ€¢ <https://glip.com/pricing>\n\nit's too bad the <https://www.recode.net/2017/3/9/14872162/googles-hangouts-slack-rooms-thread-conversation|new hangouts> I think isn't free, I bet that one will top them all :)\n\nself hosting is probably a no go, but a nice option if we ever have the resources.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/628#issuecomment-299249237|#628: Add a Gitter chat badge to README.md>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493917812.358585",
        "date": 1493917812358
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/628#issuecomment-299226383|#628: Add a Gitter chat badge to README.md>",
                "text": "yeah I'm in agreement - I really wanted Gitter to be great, but it doesn't work very well. ",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/628#issuecomment-299226383|#628: Add a Gitter chat badge to README.md>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493912854.915981",
        "date": 1493912854915
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/475#issuecomment-299209731|#475: Add/opensuse>",
                "text": "@FlyElephant-M31, We are getting close to releasing 2.3, and would love to have this support. Any chance on getting it ported to the development branch?\n\nThank you!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/475#issuecomment-299209731|#475: Add/opensuse>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493909679.884390",
        "date": 1493909679884
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/628#issuecomment-299209300|#628: Add a Gitter chat badge to README.md>",
                "text": "Do we want Gitter as our default? I love the idea, but it is a tad clunky and not as intuitive as Slack. On the other hand, even though Slack has a fantastic interface, it's financially motivated limitations (especially for an open source project) has really rubbed me the wrong way.\n\nThoughts?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/628#issuecomment-299209300|#628: Add a Gitter chat badge to README.md>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493909592.856661",
        "date": 1493909592856
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by djw8605 on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-299207333|#653: Add bind mounts to slurm support, and clarify options>",
                "text": "Thank you very much @gmkurtzer.  I was waiting on my sys admin here to build and install the new version to test it.\n\nThank you very much, I will open an issue or PR if we find anything not working.",
                "pretext": "[singularityware/singularity] New comment by djw8605 on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-299207333|#653: Add bind mounts to slurm support, and clarify options>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493909216.735997",
        "date": 1493909216735
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/653|#653 Add bind mounts to slurm support, and clarify options> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/653|#653 Add bind mounts to slurm support, and clarify options> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493909127.706604",
        "date": 1493909127706
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-299206862|#653: Add bind mounts to slurm support, and clarify options>",
                "text": "I am inclined to accept this PR as it stands considering I am pretty sure that the SLURM support as it stands in the development branch right now doesn't work.\n\n@djw8605 If you have an opportunity to test and find any issues, let's open another PR.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-299206862|#653: Add bind mounts to slurm support, and clarify options>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493909121.704624",
        "date": 1493909121704
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/642|#642 bind paths and overlay in the configuration file> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/642|#642 bind paths and overlay in the configuration file> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493854685.202630",
        "date": 1493854685202
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-299065104|#642: bind paths and overlay in the configuration file>",
                "text": "It sounds like this issue is ready for closing, and I'm in cleanup mode. Comment and let me know if it needs reopening.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-299065104|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493854685.202613",
        "date": 1493854685202
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-299036986|#655: Making the world a better place>",
                "text": "Wahoo, thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-299036986|#655: Making the world a better place>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493845956.704398",
        "date": 1493845956704
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-299036919|#655: Making the world a better place>",
                "text": ":rainbow: :earth_asia: :smile: ",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-299036919|#655: Making the world a better place>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493845936.700033",
        "date": 1493845936700
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/655|#655 Making the world a better place> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/655|#655 Making the world a better place> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493845877.686258",
        "date": 1493845877686
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/657#issuecomment-299025394|#657: Files missing in release archive>",
                "text": "haha, np! I think at that time we were still having conversations like \"oh, releases! yeah we should have those... Github tags? Oh yeah that will make it work!\" :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/657#issuecomment-299025394|#657: Files missing in release archive>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493843238.995460",
        "date": 1493843238995
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-299024148|#655: Making the world a better place>",
                "image_url": "https://asciinema.org/a/118922.png",
                "image_width": 226,
                "image_height": 250,
                "image_bytes": 88689,
                "text": "I've updated the PR to do the following:\n\nâ€¢ info statements are not printed with any color, even\nâ€¢ the progress bar is not printed with any color, ever\nâ€¢ this means by default, we can have colors enabled for logger prefixes for a subset of levels (but not all)\n\nFor a demo of this during runtime, <https://asciinema.org/a/118922?speed=3|see here>\nFor a demo of the different levels and all colors, <https://asciinema.org/a/118923?speed=3|see here>",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-299024148|#655: Making the world a better place>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            },
            {
                "fallback": "asciinema.org: Singularity Message (Python) colors, Interactive",
                "image_url": "https://asciinema.org/a/118923.png",
                "image_width": 226,
                "image_height": 250,
                "image_bytes": 76102,
                "service_name": "asciinema.org",
                "text": "This shows the complete array of Singularity message colors for the Python bits. For the complete example, see the description in: the runtime example here",
                "title": "Singularity Message (Python) colors, Interactive",
                "id": 2,
                "title_link": "https://asciinema.org/a/118923?speed=3",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493842967.924073",
        "date": 1493842967924
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/657|#657 Files missing in release archive> by <https://github.com/cclerget|cclerget>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/657|#657 Files missing in release archive> by <https://github.com/cclerget|cclerget>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493840382.230716",
        "date": 1493840382230
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by cclerget on issue <https://github.com/singularityware/singularity/issues/657#issuecomment-299013754|#657: Files missing in release archive>",
                "text": "Oh my bad, sorry ! I thought it was introduced in 2.2 release",
                "pretext": "[singularityware/singularity] New comment by cclerget on issue <https://github.com/singularityware/singularity/issues/657#issuecomment-299013754|#657: Files missing in release archive>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493840382.230714",
        "date": 1493840382230
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-299006683|#642: bind paths and overlay in the configuration file>",
                "text": "@afortiorama Yes, you need dev, sys, and proc mounted.",
                "pretext": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-299006683|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493838603.754941",
        "date": 1493838603754
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/656#issuecomment-298971756|#656: ImportError: cannot import name get_fullpath>",
                "text": "in an already existing repo:\n\n```git checkout -b development\ngit pull origin development\n```\nor clone fresh\n\n```git checkout -b development https://github.com/singularityware/singularity.git\n```\n\nthen cd singularity and do the same install. You can check with:\n\n```singularity --version\n```\nwhich should be something like 2.99 followed by the commit id.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/656#issuecomment-298971756|#656: ImportError: cannot import name get_fullpath>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493830723.487317",
        "date": 1493830723487
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/657#issuecomment-298956526|#657: Files missing in release archive>",
                "text": "hey @cclerget! pull wasn't added until a later version of 2.2, so your best bet will be to use development branch. You could also try one of the security releases for 2.2, although I'm not totally sure when it was added.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/657#issuecomment-298956526|#657: Files missing in release archive>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493827348.525763",
        "date": 1493827348525
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#657 Files missing in release archive' https://github.com/singularityware/singularity/issues/657 by cclerget",
                "text": "Hello,\n\nThere is something wrong with generation of release archive.\n\nAfter compiling and installing latest release 2.2.1 from release archive:\n<https://github.com/singularityware/singularity/releases/download/2.2.1/singularity-2.2.1.tar.gz>\nor\n<https://github.com/singularityware/singularity/archive/2.2.1.tar.gz>\nthe resulting binary come without pull command.\n\nBy comparing archive content and git repository, it appear that libexec/cli/pull.* files are missing, for all versions",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/cclerget|cclerget>",
                "title": "#657 Files missing in release archive",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/657",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493825351.900435",
        "date": 1493825351900
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/656#issuecomment-298946384|#656: ImportError: cannot import name get_fullpath>",
                "text": "HI @lheck on your prefered folder. just run\n\n```git clone -b development https://github.com/singularityware/singularity.git \n```\nOr you can try with the <https://github.com/singularityware/singularity-builder|Singularity-Builder> repo.",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/656#issuecomment-298946384|#656: ImportError: cannot import name get_fullpath>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493825304.884752",
        "date": 1493825304884
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by lheck on issue <https://github.com/singularityware/singularity/issues/656#issuecomment-298918435|#656: ImportError: cannot import name get_fullpath>",
                "text": "How do I get the development branch?",
                "pretext": "[singularityware/singularity] New comment by lheck on issue <https://github.com/singularityware/singularity/issues/656#issuecomment-298918435|#656: ImportError: cannot import name get_fullpath>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493819822.167449",
        "date": 1493819822167
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/656#issuecomment-298915906|#656: ImportError: cannot import name get_fullpath>",
                "text": "hey @lheck ! This error was a name conflict, for a package called \"utils\" that does not have our functions. Could you please try installation with the development branch? We've fixed this by renaming utils to sutils. Let us know if this resolves the issue!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/656#issuecomment-298915906|#656: ImportError: cannot import name get_fullpath>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493819307.022376",
        "date": 1493819307022
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by lheck on issue <https://github.com/singularityware/singularity/issues/656#issuecomment-298913181|#656: ImportError: cannot import name get_fullpath>",
                "text": "I should mention: we have a linux system and in our python installation we have utils packages installed using pip.",
                "pretext": "[singularityware/singularity] New comment by lheck on issue <https://github.com/singularityware/singularity/issues/656#issuecomment-298913181|#656: ImportError: cannot import name get_fullpath>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493818711.857003",
        "date": 1493818711857
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#656 ImportError: cannot import name get_fullpath' https://github.com/singularityware/singularity/issues/656 by lheck",
                "text": "Dear singularity team, I am trying to build singularity and get \n./configure_transform.py --defaults ../src/lib/config_defaults.h --infile singularity.conf.in --outfile singularity.conf\nTraceback (most recent call last):\n  File \"./configure_transform.py\", line 8, in &lt;module&gt;\n    from utils import (\nImportError: cannot import name get_fullpath\nmake[1]: *** [singularity.conf] Error 1\n\nI found a similar link on this page. It looked that this specific problem only appeared under #542 with dpjensen commenting. \n\nAs I only now downloaded singularity from github, should the problem not have been solved in there?\nWhere can I go from here?",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/lheck|lheck>",
                "title": "#656 ImportError: cannot import name get_fullpath",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/656",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493818142.704732",
        "date": 1493818142704
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-298792263|#655: Making the world a better place>",
                "text": "I can tell by your quick response to this PR that you are super excited about colors in the terminal @gmkurtzer ! To make it more flexible and error tolerant, I've added an optional environment variable that will completely disable color output. Eg:\n\n```SINGULARITY_COLORIZE=false\nexport SINGULARITY_COLORIZE\n```\nI also do a check to see if the output is not in a terminal (eg going to pipe) and it doesn't use color in those cases. I tried exporting the different TERM environment variables as you specified, but it didn't seem to cause issue with the colors. This could be that I am not able to reproduce a terminal that doesn't support ansi escape. From Googling, it seems like the biggest contender is Windows-based terminals, and we could do a check for the system type if we ever add Windows support. Which I hope is just never. I didn't say that :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-298792263|#655: Making the world a better place>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493768856.895686",
        "date": 1493768856895
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-298721183|#655: Making the world a better place>",
                "text": "@gmkurtzer is there a way to test this? We can also easily disable all colors if the term is in some list, or not in some list. It really looks nice, and makes it fun and easier to distinguish the different output, I hope we can have colors :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-298721183|#655: Making the world a better place>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493749843.817234",
        "date": 1493749843817
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-298714989|#642: bind paths and overlay in the configuration file>",
                "text": "Hi,\n\nthank you, so I've disable the users bind control and disabled mount home and mount tmp. And now I can bind /pippo without the rest.\n\nwould you recommend to leave mount dev, sys and proc?",
                "pretext": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-298714989|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493748505.435288",
        "date": 1493748505435
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-298712943|#655: Making the world a better place>",
                "image_url": "https://asciinema.org/a/dqrl3xt07ypa0bkllh1jxezdb.png",
                "image_width": 372,
                "image_height": 250,
                "image_bytes": 57949,
                "text": "<https://asciinema.org/a/dqrl3xt07ypa0bkllh1jxezdb?speed=3|Seems to be ok> unless I did the change of term incorrectly? (I exported the `TERM` variable)",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-298712943|#655: Making the world a better place>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493748058.304408",
        "date": 1493748058304
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/643#issuecomment-298656279|#643: shell command doesn't read .bashrc>",
                "text": "I meant the --help with the software; I didn't see other docs.",
                "pretext": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/643#issuecomment-298656279|#643: shell command doesn't read .bashrc>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493736173.786274",
        "date": 1493736173786
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-298643075|#655: Making the world a better place>",
                "text": "It's very colorful! Can you set `TERM=xterm` and `TERM=vt100`? I'm just wondering what happens in legacy modes.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-298643075|#655: Making the world a better place>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493733410.958272",
        "date": 1493733410958
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/645|#645 `locale` configuration copied into container> by <https://github.com/nordmoen|nordmoen>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/645|#645 `locale` configuration copied into container> by <https://github.com/nordmoen|nordmoen>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493724073.141111",
        "date": 1493724073141
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/645#issuecomment-298608577|#645: `locale` configuration copied into container>",
                "text": "Resolving issue :100: ",
                "pretext": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/645#issuecomment-298608577|#645: `locale` configuration copied into container>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493724073.141103",
        "date": 1493724073141
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/645#issuecomment-298578628|#645: `locale` configuration copied into container>",
                "text": "ok cool, is this issue resolved then? And happy holidays!! I hope we get some more over here soon too :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/645#issuecomment-298578628|#645: `locale` configuration copied into container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493717847.233582",
        "date": 1493717847233
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/645#issuecomment-298561763|#645: `locale` configuration copied into container>",
                "text": "To elaborate, I tried to debug in the same way as above.\n\nFor `--contain` I get this `locale` configuration:\n```Singularity locale.img:~&gt; locale\nlocale: Cannot set LC_ALL to default locale: No such file or directory\nLANG=en_US.UTF-8\nLANGUAGE=\nLC_CTYPE=en_US.UTF-8\nLC_NUMERIC=nb_NO.UTF-8\nLC_TIME=nb_NO.UTF-8\nLC_COLLATE=\"en_US.UTF-8\"\nLC_MONETARY=nb_NO.UTF-8\nLC_MESSAGES=\"en_US.UTF-8\"\nLC_PAPER=nb_NO.UTF-8\nLC_NAME=\"en_US.UTF-8\"\nLC_ADDRESS=\"en_US.UTF-8\"\nLC_TELEPHONE=\"en_US.UTF-8\"\nLC_MEASUREMENT=nb_NO.UTF-8\nLC_IDENTIFICATION=\"en_US.UTF-8\"\nLC_ALL=\n```\n\nFor `--containall` and `--cleanenv`:\n```Singularity locale.img:~&gt; locale\nLANG=en_US.UTF-8\nLANGUAGE=\nLC_CTYPE=\"en_US.UTF-8\"\nLC_NUMERIC=\"en_US.UTF-8\"\nLC_TIME=\"en_US.UTF-8\"\nLC_COLLATE=\"en_US.UTF-8\"\nLC_MONETARY=\"en_US.UTF-8\"\nLC_MESSAGES=\"en_US.UTF-8\"\nLC_PAPER=\"en_US.UTF-8\"\nLC_NAME=\"en_US.UTF-8\"\nLC_ADDRESS=\"en_US.UTF-8\"\nLC_TELEPHONE=\"en_US.UTF-8\"\nLC_MEASUREMENT=\"en_US.UTF-8\"\nLC_IDENTIFICATION=\"en_US.UTF-8\"\nLC_ALL=\n```\nIn all of them I get the following from `locale -a`:\n```Singularity locale.img:~/Repos/singularity_images/locale&gt; locale -a\nC\nC.UTF-8\nen_US.utf8\nPOSIX\n```\nI don't know if `locale` is case-sensitive, but that could be the problem?",
                "pretext": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/645#issuecomment-298561763|#645: `locale` configuration copied into container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493715041.773407",
        "date": 1493715041773
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/645#issuecomment-298556094|#645: `locale` configuration copied into container>",
                "text": "Again, sorry for the delay, Norwegian holidays...\n\nI tried all the options you mentioned with the same result:\n```bash\n âœ˜ î‚° ~/Repos/singularity_images/locale î‚° singularity shell --contain locale.img\nSingularity: Invoking an interactive shell within container...\n\nSingularity locale.img:~&gt; cd /workspace/\nSingularity locale.img:/workspace&gt; ./a.out \nterminate called after throwing an instance of 'std::runtime_error'\n  what():  locale::facet::_S_create_c_locale name not valid\nAborted (core dumped)\nSingularity locale.img:/workspace&gt; exit\nexit\n âœ˜ î‚° ~/Repos/singularity_images/locale î‚° singularity shell --cleanenv locale.img\nSingularity: Invoking an interactive shell within container...\n\nSingularity locale.img:~/Repos/singularity_images/locale&gt; cd /workspace/\nSingularity locale.img:/workspace&gt; ./a.out \nterminate called after throwing an instance of 'std::runtime_error'\n  what():  locale::facet::_S_create_c_locale name not valid\nAborted (core dumped)\nSingularity locale.img:/workspace&gt; exit\nexit\n âœ˜ î‚° ~/Repos/singularity_images/locale î‚° singularity shell --containall locale.img\nSingularity: Invoking an interactive shell within container...\n\nSingularity locale.img:~&gt; cd /workspace/\nSingularity locale.img:/workspace&gt; ./a.out \nterminate called after throwing an instance of 'std::runtime_error'\n  what():  locale::facet::_S_create_c_locale name not valid\nAborted (core dumped)\n```",
                "pretext": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/645#issuecomment-298556094|#645: `locale` configuration copied into container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493714211.641076",
        "date": 1493714211641
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#655 Making the world a better place' https://github.com/singularityware/singularity/pull/655 by vsoch",
                "image_url": "https://asciinema.org/a/118543.png",
                "image_width": 372,
                "image_height": 250,
                "image_bytes": 40632,
                "text": "I'll just leave this here.\n\n<https://asciinema.org/a/118543?speed=3>\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#655 Making the world a better place",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/655",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493706487.648211",
        "date": 1493706487648
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/654#issuecomment-298441597|#654: Add/plugins: environment variable driven custom functions for Singularity>",
                "text": "Thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/654#issuecomment-298441597|#654: Add/plugins: environment variable driven custom functions for Singularity>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493675247.592967",
        "date": 1493675247592
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/654|#654 Add/plugins: environment variable driven custom functions for Singularity> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/654|#654 Add/plugins: environment variable driven custom functions for Singularity> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493675156.576664",
        "date": 1493675156576
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-298436356|#653: Add bind mounts to slurm support, and clarify options>",
                "text": "I resolved it via the web interface, can you test it?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-298436356|#653: Add bind mounts to slurm support, and clarify options>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493673741.309178",
        "date": 1493673741309
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#654 Add/plugins: environment variable driven custom functions for Singularity' https://github.com/singularityware/singularity/pull/654 by vsoch",
                "image_url": "https://asciinema.org/a/118507.png",
                "image_width": 372,
                "image_height": 250,
                "image_bytes": 53901,
                "text": "This is a first go at a (simple) implementation for custom functionality to be triggered by an environment variable. In this case, we have the following issue. For most of our bootstraps, a recursive function to change permissions on the tarballs is sufficient to produce a working container. This process is much faster than our old approach (by 2-6 or 7 times depending on the image), and the ideal \"default\" setting. However, we have niche use cases, namely containers like `docker://blacklabelops/centos` where the default doing this, <https://github.com/singularityware/singularity/issues/538#issuecomment-289534014|as we've seen before>\n\n```singularity shell docker://blacklabelops/centos\n```\nisn't going to work. However we should not add extreme levels of custom commands on funky tarballs that require slowing down the process by 2-7 fold for all users just for these niche use cases. \n\nThe workaround is to empower the user to ask for this permissions fix, and the slowdown, and we can do this by way of what I am calling a \"plugin\" or a custom function/filter to run given the preference for it. With our current base, this makes sense to specify via environment variables, and @gmkurtzer we could have some kind of command line flag, or in the case of many plugins, an additional `%plugins` or `%custom` section in the bootstrap (at some point in the future.) For example, here is how the current PR works:\n\n```\n\n*Runs normally, changing permissions after Python at the end  (fast)*\n\nsingularity shell docker://ubuntu\n\n*Changes permissions in memory using python*\n\nSINGULARITY_FIX_PERMS=True\nexport SINGULARITY_FIX_PERMS\nsingularity shell docker://ubuntu\n```\n\nTo see how it works, I've also prepared a <https://asciinema.org/a/118507?speed=3|DEMO>.\n\nIn the future, you could imagine something like:\n\n```\nBootstrap: docker\nFrom: blacklabelops/centos\n\n%custom\nplugin fix_perms\n```\n\nor\n\n```\nBootstrap: docker\nFrom: blacklabelops/centos\n\n%plugins\nfix_perms var1\nadd_webserver port\n```\netc.etc.\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#654 Add/plugins: environment variable driven custom functions for Singularity",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/654",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493673414.243223",
        "date": 1493673414243
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by djw8605 on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-298421567|#653: Add bind mounts to slurm support, and clarify options>",
                "text": "Great!  @gmkurtzer I was able to change the \"base\" of this pull request.\n\nCould you look at the conflict, it looks like you changed it to use the function `singularity_registry_get` instead of `envar_path`.  I'm not familiar with this function, possibly you could help resolve this conflict?",
                "pretext": "[singularityware/singularity] New comment by djw8605 on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-298421567|#653: Add bind mounts to slurm support, and clarify options>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493669925.458606",
        "date": 1493669925458
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-298416418|#653: Add bind mounts to slurm support, and clarify options>",
                "text": "Hi @djw8605,\n\nThis looks fantastic! Can you rebase or resubmit this PR against the development branch (as opposed to master)? Sorry about the confusion in branches, we are moving to the standard GitFlow model as soon as we get 2.3 released.\n\nThank you!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-298416418|#653: Add bind mounts to slurm support, and clarify options>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493668643.156026",
        "date": 1493668643156
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/648#issuecomment-298416027|#648: Fix for glibc-2.25 changes>",
                "text": "Hi @jlec,\n\nOh fantastic news about maintaining it in Gentoo main repo, thank you! We should post a news bulletin about that!\n\nBootstrapping using a base OS tarball is very clean, great idea! Let me know if you need a hand or have any questions. If you want to join our Slack, send me a mail at gmkurtzer@gmail.com.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/648#issuecomment-298416027|#648: Fix for glibc-2.25 changes>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493668546.132971",
        "date": 1493668546132
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/652|#652 Fix for glibc-2.25 changes> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/652|#652 Fix for glibc-2.25 changes> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493668420.102475",
        "date": 1493668420102
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/652#issuecomment-298415511|#652: Fix for glibc-2.25 changes>",
                "text": "Perfect, thank you!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/652#issuecomment-298415511|#652: Fix for glibc-2.25 changes>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493668416.101631",
        "date": 1493668416101
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by djw8605 on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-298407369|#653: Add bind mounts to slurm support, and clarify options>",
                "text": "@bbockelm As the original maintainer of the slurm support, could you take a look at this pull request.",
                "pretext": "[singularityware/singularity] New comment by djw8605 on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-298407369|#653: Add bind mounts to slurm support, and clarify options>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493666262.606757",
        "date": 1493666262606
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#653 Add bind mounts to slurm support, and clarify options' https://github.com/singularityware/singularity/pull/653 by djw8605",
                "text": "After testing with real user's feedback, we have made changes to the Slurm support for singularity.\n\nChanges proposed in this pull request:\n\nâ€¢ Added some return value checks.\nâ€¢ Renamed option --image to --singularity-image.\nâ€¢ Added --singularity-bind option\nâ€¢ Added \"spank/singularity\" string in format string passed to slurm_error().\nâ€¢ Wrapped lines that spanned more than 80 characters where I could.\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/djw8605|djw8605>",
                "title": "#653 Add bind mounts to slurm support, and clarify options",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/653",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493666224.598166",
        "date": 1493666224598
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/648|#648 Fix for glibc-2.25 changes> by <https://github.com/jlec|jlec>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/648|#648 Fix for glibc-2.25 changes> by <https://github.com/jlec|jlec>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493664168.097408",
        "date": 1493664168097
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#652 Fix for glibc-2.25 changes' https://github.com/singularityware/singularity/pull/652 by jlec",
                "text": "In glibc 2.25 sys/types.h doesn't automatically include sys/sysmacros.h\nanymore [1]. This leads to errors [2] like\n\nlibtool: link: x86_64-pc-linux-gnu-gcc -Wall -fpie -fPIC -O2 -pipe\n-march=native -Wall -Wl,-O1 -Wl,--as-needed -o sexec-suid sexec_suid-sexec.o\nutil/sexec_suid-util.o util/sexec_suid-file.o  lib/.libs/libsingularity.a\nlib/.libs/libsingularity.a(libsingularity_la-loop-control.o): In function\n`singularity_loop_bind':\nloop-control.c:(.text+0x422): undefined reference to `makedev'\nlib/.libs/libsingularity.a(dev.o): In function `singularity_mount_dev':\n\n1)\n<https://sourceware.org/ml/libc-alpha/2015-11/msg00253.html>\n2)\n<https://bugs.gentoo.org/show_bug.cgi?id=617082>\n\nSigned-off-by: Justin Lecher <mailto:jlec@gentoo.org|jlec@gentoo.org>\n\nFixes #648\n\nChanges proposed in this pull request\n\n -\n -\n -\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/jlec|jlec>",
                "title": "#652 Fix for glibc-2.25 changes",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/652",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493664156.094486",
        "date": 1493664156094
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/643#issuecomment-298385631|#643: shell command doesn't read .bashrc>",
                "text": "good idea. Do you mean the --help with the software, the docs, or both?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/643#issuecomment-298385631|#643: shell command doesn't read .bashrc>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493660944.291430",
        "date": 1493660944291
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/643#issuecomment-298378896|#643: shell command doesn't read .bashrc>",
                "text": "Ok.  How about documenting this surprising behavior in the shell help?  I think normally people would expect it to run the shell from /etc/passwd.  That's what I expected.  I see the help says it will run /bin/sh, but that's not actually what it does.\n\nI also see the -s option can be used to set SINGULARITY_SHELL.",
                "pretext": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/643#issuecomment-298378896|#643: shell command doesn't read .bashrc>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493659246.882615",
        "date": 1493659246882
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by jlec on pull request <https://github.com/singularityware/singularity/pull/648#issuecomment-298377337|#648: Fix for glibc-2.25 changes>",
                "text": "Hi @gmkurtzer \n\nsure will send it later.\n\nI am maintaining singularity in the main gentoo repository. \n\nBootstrap should be fairly straight forward. We are providing a _stage 3_ as tarball, which is basically a bootable system. For some more convenience the bootstrap should include setting up at least the main repository. I can have a look into that.",
                "pretext": "[singularityware/singularity] New comment by jlec on pull request <https://github.com/singularityware/singularity/pull/648#issuecomment-298377337|#648: Fix for glibc-2.25 changes>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493658836.786397",
        "date": 1493658836786
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-298375073|#642: bind paths and overlay in the configuration file>",
                "text": "@afortiorama to answer your question about crashing with overlay, that was a problem on Centos7.2 but not CentOS7.3.  It would crash whenever it was used in combination with cvmfs as you are doing.",
                "pretext": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-298375073|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493658247.654473",
        "date": 1493658247654
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/651#issuecomment-298370582|#651: singularity inspect>",
                "text": "yes exactly! We would start with labels, but probably eventually want to expose more about the containers configuration, etc.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/651#issuecomment-298370582|#651: singularity inspect>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493657000.374691",
        "date": 1493657000374
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/651#issuecomment-298369917|#651: singularity inspect>",
                "text": "Something like this?\n\n```$ singularity -q exec docker://centos cat /.singularity.d/labels.json\n{\"build-date\": \"20170406\", \"vendor\": \"CentOS\", \"name\": \"CentOS Base Image\", \"license\": \"GPLv2\"}gmk@gmkdev2:~/git/singularity$ \n```",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/651#issuecomment-298369917|#651: singularity inspect>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493656802.331572",
        "date": 1493656802331
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#651 singularity inspect' https://github.com/singularityware/singularity/issues/651 by vsoch",
                "text": "If our singularity metadata folder is hidden, and if we aren't (yet) having support for a header proper, we should consider providing a simple command line utility for the user to (minimally) access some of the containers metadata. For example, docker inspect reveals the equivalent of it's configuration (and it's json, which isn't great for parsing in bash, but is still possible and of course works great with most programming languages). Here I can see it while running the docker container, ubuntu:\n\n```\n docker inspect ubuntu\n[\n    {\n        \"Id\": \"sha256:f7b3f317ec734a73deca91b34c2b1e3dd7454650da9c8ef3047d29a873865178\",\n        \"RepoTags\": [\n            \"ubuntu:latest\"\n        ],\n        \"RepoDigests\": [\n            \"ubuntu@sha256:f3a61450ae43896c4332bda5e78b453f4a93179045f20c8181043b26b5e79028\"\n        ],\n        \"Parent\": \"\",\n        \"Comment\": \"\",\n\n...\netc\n```\n\nRight now, just by running a command to cat the labels, I can see some basic stuff about a singularity container:\n\n``` singularity exec ubuntu.img cat /.singularity.d/labels.json\n{\n    \"SINGULARITY_DEFFILE_BOOTSTRAP\": \"docker\",\n    \"SINGULARITY_DEFFILE\": \"Singularity\",\n    \"SINGULARITY_DEFFILE_FROM\": \"ubuntu:latest\",\n    \"SINGULARITY_BOOTSTRAP_VERSION\": \"2.2.99\"\n}\n```\nso, given that we will eventually want to interact with containers in this manner (eg integration with external tools) and we want it to not have to be known that labels (or other stuffs) are \"hiding\" in this hidden folder, we should provide easy access to these things via some kind of `inspect`. We could even use singularity to bootstrap Docker's API and serve their metadata without needing to pull the layers (eg you could inspect a Docker image and return a specific field, the size, number of layers, etc., and this is useful so you know how to best generate your singularity spec that bootstraps a Docker image. Thoughts?",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/vsoch|vsoch>",
                "title": "#651 singularity inspect",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/651",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493610832.035144",
        "date": 1493610832035
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/650#issuecomment-298274736|#650: adding docs for -T/--notest command in bootstrap>",
                "text": ":)",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/650#issuecomment-298274736|#650: adding docs for -T/--notest command in bootstrap>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493604899.740236",
        "date": 1493604899740
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/650#issuecomment-298274611|#650: adding docs for -T/--notest command in bootstrap>",
                "text": "Haha, thanks!!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/650#issuecomment-298274611|#650: adding docs for -T/--notest command in bootstrap>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493604809.735724",
        "date": 1493604809735
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/650|#650 adding docs for -T/--notest command in bootstrap> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/650|#650 adding docs for -T/--notest command in bootstrap> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493604798.735182",
        "date": 1493604798735
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#650 adding docs for -T/--notest command in bootstrap' https://github.com/singularityware/singularity/pull/650 by vsoch",
                "text": "Fixes #@gmk :)\n\nChanges proposed in this pull request\n\nâ€¢ adding a line to the bootstrap help doc to explain the notest option.\nâ€¢ \n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#650 adding docs for -T/--notest command in bootstrap",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/650",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493604038.692031",
        "date": 1493604038692
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/647#issuecomment-298273204|#647: Add ability to skip tests when bootstrapping image>",
                "text": "Singularity development branch now supports the ability to skip the `%test` during `bootstrap` with the `--notest` option.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/647#issuecomment-298273204|#647: Add ability to skip tests when bootstrapping image>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493603660.669371",
        "date": 1493603660669
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/649#issuecomment-298238458|#649: Add compression support for .img format>",
                "text": "Support for compressed images via SquashFS does already exist. Would that meet the use-case?\n\nBtw, on the fly decompression can not work with the default Singularity image in the format it stands now. ",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/649#issuecomment-298238458|#649: Add compression support for .img format>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493565855.937487",
        "date": 1493565855937
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/647#issuecomment-298238344|#647: Add ability to skip tests when bootstrapping image>",
                "text": "Hiya! Nope, no documentation on it yet as it was just introduced for testing. \n\nOptionally suppressing the tests during build would be an easy addition, I'll add it. \n\nGreg",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/647#issuecomment-298238344|#647: Add ability to skip tests when bootstrapping image>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493565736.932676",
        "date": 1493565736932
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#649 Add compression support for .img format' https://github.com/singularityware/singularity/issues/649 by DeepHorizons",
                "text": "While there is already a discussion on minimizing the image size in #470, another idea to reduce the size would be compression. A fast compression method such as LZ4 could be used to allow on the fly decoding. With initial tests images are often reduced to less than 50% of their original size.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/DeepHorizons|DeepHorizons>",
                "title": "#649 Add compression support for .img format",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/649",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493565616.927405",
        "date": 1493565616927
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DeepHorizons on issue <https://github.com/singularityware/singularity/issues/647#issuecomment-298235984|#647: Add ability to skip tests when bootstrapping image>",
                "text": "Hey @gmkurtzer \n\nNeat option! I'll check that out when I get the chance. Anything in the docs on how it works / debugging?\n\n`%buildtest` and `%runtest` don't exactly fit my use case. I don't know of any test that I could run on my GPU images that would not require a GPU. I still run the tests on the cluster with a GPU, I just don't need to run the tests when building. The main reason behind this is for better error reporting. If I could suppress the tests when building, I could have better error logging on the build process. Instead I have to have everything ignoring errors and looking through the logs manually.",
                "pretext": "[singularityware/singularity] New comment by DeepHorizons on issue <https://github.com/singularityware/singularity/issues/647#issuecomment-298235984|#647: Add ability to skip tests when bootstrapping image>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493563180.825209",
        "date": 1493563180825
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/648#issuecomment-298234293|#648: Fix for glibc-2.25 changes>",
                "text": "Ahh, this looks great thank you! Can you re-PR this against the \"development\" branch?\n\nAlso is there any chance you would be interested in brining in Gentoo bootstrap support and/or submitting it to Gentoo as a package to include?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/648#issuecomment-298234293|#648: Fix for glibc-2.25 changes>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493561095.739681",
        "date": 1493561095739
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#648 Fix for glibc-2.25 changes' https://github.com/singularityware/singularity/pull/648 by jlec",
                "text": "In glibc 2.25 sys/types.h doesn't automatically include sys/sysmacros.h\nanymore [1]. This leads to errors [2] like\n\nlibtool: link: x86_64-pc-linux-gnu-gcc -Wall -fpie -fPIC -O2 -pipe\n-march=native -Wall -Wl,-O1 -Wl,--as-needed -o sexec-suid sexec_suid-sexec.o\nutil/sexec_suid-util.o util/sexec_suid-file.o  lib/.libs/libsingularity.a\nlib/.libs/libsingularity.a(libsingularity_la-loop-control.o): In function\n`singularity_loop_bind':\nloop-control.c:(.text+0x422): undefined reference to `makedev'\nlib/.libs/libsingularity.a(dev.o): In function `singularity_mount_dev':\n\n1)\n<https://sourceware.org/ml/libc-alpha/2015-11/msg00253.html>\n2)\n<https://bugs.gentoo.org/show_bug.cgi?id=617082>\n\nSigned-off-by: Justin Lecher <mailto:jlec@gentoo.org|jlec@gentoo.org>",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/jlec|jlec>",
                "title": "#648 Fix for glibc-2.25 changes",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/648",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493549965.350752",
        "date": 1493549965350
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/647#issuecomment-298134595|#647: Add ability to skip tests when bootstrapping image>",
                "text": "Hiya @DeepHorizons,\n\nWe too have been working on GPU support and you can check it out in the 'development' branch with the `--nv` option.\n\nWould it work to have a separate %buildtest and %runtest?\n\nGreg",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/647#issuecomment-298134595|#647: Add ability to skip tests when bootstrapping image>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493425679.588708",
        "date": 1493425679588
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/615#issuecomment-298132630|#615: Issue looking up hostname inside container>",
                "text": "Great news, thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/615#issuecomment-298132630|#615: Issue looking up hostname inside container>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493424310.490883",
        "date": 1493424310490
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-298129947|#642: bind paths and overlay in the configuration file>",
                "text": "Hi @afortiorama,\n\nI am not sure that I understand exactly, but the administrator does have the ability to bind the directories that they wish. The admin can define the `bind point`s to always include into the container, and then can enable/disable the `mount tmp` option.\n\nBut we make an assumption.... That the admin defines the most a user can do, but it is up to the user to decide if they want less then that. For example, `--contain` is basically saying, \"I don't need what the admin suggested, I know what I'm doing, using at my own risk\". The ability for users to utilize the `-B` option is also enabled/disabled by the administrator. If the admin decides users can do that, then they can technically override the administrator's bind points and give themselves the ability to shoot themselves in the foot. LOL\n\nHopefully that answers your questions and concerns, otherwise please accept my preemptive apology for the misunderstand and never-mind. ;)\n\nThanks!\n\nGreg",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-298129947|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493422673.350255",
        "date": 1493422673350
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/644|#644 running from home path vs system path> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/644|#644 running from home path vs system path> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493422214.307429",
        "date": 1493422214307
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/644#issuecomment-298129138|#644: running from home path vs system path>",
                "text": "Singularity is very specific when it comes to the path of the configuration file, so each of those installations will most likely be using different configs. It also seems that \"test.py\" is in your current directory, so I would suggest that there is a difference between the two installations and/or configurations.\n\nThis doesn't seem like a Singularity error or issue, so I'm closing the issue (perhaps it deserves further discussion on the Google Group)?\n\nHope that helps!\n\nGreg",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/644#issuecomment-298129138|#644: running from home path vs system path>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493422213.307377",
        "date": 1493422213307
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/643|#643 shell command doesn't read .bashrc> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/643|#643 shell command doesn't read .bashrc> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493421922.279508",
        "date": 1493421922279
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/643#issuecomment-298128620|#643: shell command doesn't read .bashrc>",
                "text": "This is a \"feature\"! HAH\n\nIt came originally because I would always use `/bin/sh` for shell, but not all sh'es are equal (e.g. some are links to bash, sometimes dash, sometimes zsh, etc). It made the most sense to use Bash by default if present, but, when calling Bash directly, it automatically sources all of it's own login and dot files. Thus, if nothing else is passed, we call it with `--norc` option:\n\n```\n$ singularity shell -p /tmp/centos.img \nSingularity: Invoking an interactive shell within container...\n\nSingularity centos.img:~/git/singularity&gt; ps auxf\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\ngmk          1  0.0  0.0  12884   156 pts/4    S    23:24   0:00 /usr/local/libexec/singularity/bin/action-suid\ngmk          2  0.0  0.3  15208  3120 pts/4    S    23:24   0:00 /bin/bash --norc\ngmk          3  0.0  0.3  50880  3240 pts/4    R+   23:24   0:00   `_` ps auxf\nSingularity centos.img:~/git/singularity&gt; \n```\n\nIf you specify `SINGULARITY_SHELL` in your environment, or use `exec` as you pointed out, you can bypass this default behavior.\n\nHope that helps!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/643#issuecomment-298128620|#643: shell command doesn't read .bashrc>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493421921.279474",
        "date": 1493421921279
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-298128154|#635: Mounting of user home directory failing with --containall on development branch>",
                "text": "Fantastic, thank you!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-298128154|#635: Mounting of user home directory failing with --containall on development branch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493421681.256602",
        "date": 1493421681256
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#647 Add ability to skip tests when bootstrapping image' https://github.com/singularityware/singularity/issues/647 by DeepHorizons",
                "text": "I'm building singularity images using an automated build system. The build system does not mimic the production system which the containers will be run on, in particular we are adding in support for GPUs. Because of this, the tests that I write for the images are meant to be run on production system, and fail on the build system.\n\nIs there a way to not run tests when bootstrapping an image? There was something like this in #305 but was never fleshed out.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/DeepHorizons|DeepHorizons>",
                "title": "#647 Add ability to skip tests when bootstrapping image",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/647",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493420796.167813",
        "date": 1493420796167
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/636|#636 Adding check for empty Docker layers> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/636|#636 Adding check for empty Docker layers> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493419723.049598",
        "date": 1493419723049
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/646#issuecomment-298118222|#646: [feature request]: checking for image size before import/bootstrap/other>",
                "text": "Just for linking to the docker pull idea: <https://github.com/singularityware/singularity/issues/531>",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/646#issuecomment-298118222|#646: [feature request]: checking for image size before import/bootstrap/other>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493417419.761076",
        "date": 1493417419761
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/646#issuecomment-298116662|#646: [feature request]>",
                "text": "hey @ityonemo ! I think this would be very reasonable / doable to implement, even without having the user specify a `%size` field.  Here are a few cases that come off the top of my head:\n\n*Case 1: User is making a new image*\n\nThis would be akin to doing a bootstrap or import into a newly created image. Given that we are adding docker layers to something, it is reasonable that, given that the layers dump is too big for the image that exists or is being generated, we could issue a warning. If we had create and bootstrap (or import) wrapped into one command (eg, @gmkurtzer this would have been like the docker pull I've been poking about) then the size of the image would be already available to compare against the size of the layers.  This would be fairly accurate given that the image is not yet generated, because we have confidence that most of the dump of content is going to fit in the empty image. So in summary:\nâ€¢ given a new image with pull (bootstrap + create) we compare layers size to image size, stop if overflow\nâ€¢ given a pre-existing empty image (bootstrap or import after create) we get size of image first, and compare to layers, stop if overflow\n\n*Case 2: User is importing into existing image*\n\nThis (I hope) is less likely done, because it would mean a less reproducible practice, but you can imagine importing layers into an already existing image. In this case, the most we can do is estimate the size of content in the image, estimate the size of the layers, and issue a warning (but probably not stop the process) if the imported stuffs is greater than the image size. The reason is because some of the dump of the layers might just override stuff already there, so the size wouldn't be extra added. So in summary:\nâ€¢ given a pre-existing non empty image, we can't say what % of the image files will be overwritten, so the most we can do is give a warning.\n\n*Case 3: User is bootstrapping*\n\nThis case is most similar to what you are describing - the user has some idea about the size of the content in his bootstrap spec (meaning downloads and installs that aren't coming from the docker or other bootstrap). In this case, the user could specify some kind of `%size` parameter to check, but to play devil's advocate, couldn't he/she make this same specification when the image is created? Or is the idea to preserve this knowledge with the bootstrap?\n\nTLDR - I think this is a good feature to think about and possibly add, and implementation wise it is very doable. I added an endpoint to the Python internal API that will return the size for Docker layers, and this could be used by the calling function to do a check before any time intensive stuffs are done. I'll chat with @gmkurtzer about if/when/where would be reasonable to implement this!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/646#issuecomment-298116662|#646: [feature request]>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493416862.678013",
        "date": 1493416862678
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#646 [feature request]' https://github.com/singularityware/singularity/issues/646 by ityonemo",
                "text": "Do you think it's reasonable to have a minimum size check for the singularity container bootstrap definitions? Perhaps a %size field in the container that checks to see if the existing image has at a minimum enough space, and halts if the .img file being bootstrapped is large enough.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/ityonemo|ityonemo>",
                "title": "#646 [feature request]",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/646",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493414443.262990",
        "date": 1493414443262
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/645#issuecomment-298053752|#645: `locale` configuration copied into container>",
                "text": "Have you tried the `--contain` and `--containall` commands to isolate your host from the container? If you just want to isolate environment vars, try `--cleanenv`. Note - these are runtime variables, not anything you specify in a bootstrap definition. Eg:\n\n```singularity shell --contain muffin.img\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/645#issuecomment-298053752|#645: `locale` configuration copied into container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493399274.522411",
        "date": 1493399274522
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#645 `locale` configuration copied into container' https://github.com/singularityware/singularity/issues/645 by nordmoen",
                "text": "I have encountered yet another problem on the way to simulate my robot. This time around it seems as if some of my system configuration has been copied into the container, overwriting the docker configuration.\n\nThe problem is that launching <http://gazebosim.org/|`gzserver`> inside a container results in an error being thrown:\n```Singularity dyret_map.img:~&gt; gzserver\nNo protocol specified\nterminate called after throwing an instance of 'std::runtime_error'\n  what():  locale::facet::_S_create_c_locale name not valid\nAborted (core dumped)\n```\n\nTracking this down lead to the discovery that inside the container the `locale` is set to the same thing as outside without installing the necessary languages.\n\nInside my container executing `locale`:\n```Singularity dyret_map.img:~&gt; locale\nlocale: Cannot set LC_ALL to default locale: No such file or directory\nLANG=en_US.UTF-8\nLANGUAGE=\nLC_CTYPE=en_US.UTF-8\nLC_NUMERIC=nb_NO.UTF-8\nLC_TIME=nb_NO.UTF-8\nLC_COLLATE=\"en_US.UTF-8\"\nLC_MONETARY=nb_NO.UTF-8\nLC_MESSAGES=\"en_US.UTF-8\"\nLC_PAPER=nb_NO.UTF-8\nLC_NAME=\"en_US.UTF-8\"\nLC_ADDRESS=\"en_US.UTF-8\"\nLC_TELEPHONE=\"en_US.UTF-8\"\nLC_MEASUREMENT=nb_NO.UTF-8\nLC_IDENTIFICATION=\"en_US.UTF-8\"\nLC_ALL=\n```\nThen executing `locale -a` inside the container shows that the above languages (`nb_NO.UTF-8`) are not installed\n```Singularity dyret_map.img:~&gt; locale -a\nC\nC.UTF-8\nen_US.utf8\nPOSIX\n```\n\nIt seems to me that the configuration has been copied from my host computer into the container. To replicate this I created this small `C++` program:\n```cpp\n#include &lt;iostream&gt;\n#include &lt;locale&gt;\n\n// test_locale.cpp\n\nint main() {\n        auto loc = std::locale(\"nb_NO.UTF-8\");\n        std::cout.imbue(loc);\n        std::cout &lt;&lt; \"Hello 'C' world!\\n\";\n}\n```\nWhich when compiled (`g++ -std=c++11 test_locale.cpp`) works on my host computer, but fails inside a Singularity container.\n\n```bash\nRunning post scriptlet\nâ€¢ cd /workspace\nâ€¢ g++ -lboost_date_time -std=c++11 test_locale.cpp\n     Running test scriptlet\nâ€¢ cd /workspace\nâ€¢ ./a.out\n     terminate called after throwing an instance of 'std::runtime_error'\n     what():  locale::facet::_S_create_c_locale name not valid\n     Aborted (core dumped)\n     ERROR: Aborting with RETVAL=255\n     ```",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/nordmoen|nordmoen>",
                "title": "#645 `locale` configuration copied into container",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/645",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493386261.784426",
        "date": 1493386261784
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/615#issuecomment-297953722|#615: Issue looking up hostname inside container>",
                "text": "Sorry for the long delay.\n\nAdding `jorgehn-x1-carbon` to `/etc/hosts` works as expected.",
                "pretext": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/615#issuecomment-297953722|#615: Issue looking up hostname inside container>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493372024.343354",
        "date": 1493372024343
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/615|#615 Issue looking up hostname inside container> by <https://github.com/nordmoen|nordmoen>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/615|#615 Issue looking up hostname inside container> by <https://github.com/nordmoen|nordmoen>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493372024.343347",
        "date": 1493372024343
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297940327|#642: bind paths and overlay in the configuration file>",
                "text": "Said that there should be a way for an admin to share only the directories that she actually wants. for example /pippo but not /tmp ",
                "pretext": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297940327|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493368256.670193",
        "date": 1493368256670
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297938525|#642: bind paths and overlay in the configuration file>",
                "text": "Hi Vanessa,\n\nthank you. My bad. I misunderstood the --contain option. Somehow as not \nto mount everything the user wants but only that is listed.\n\nif I remove that it works.\n\ncheers\nalessandra\n\nOn 28/04/2017 09:03, Vanessa Sochat wrote:\n&gt;\n&gt; Hey @afortiorama <https://github.com/afortiorama> ! Could you describe \n&gt; the trouble that you are having? When you use |--contain| you are \n&gt; asking Singularity to disable / not allow all mounts, and so the \n&gt; configuration in your config file to mount /pippo will not be seen. \n&gt; When you add back in |-B|, you are again over-riding that and honoring \n&gt; both |--contain| and the specification for the bind and the overlayfs \n&gt; allowed by the config. Here is the description of the command:\n&gt; \n&gt; |-c/--contain This option disables the automatic sharing of writable \n&gt; filesystems on your host (e.g. $HOME and /tmp). |\n&gt; \n&gt; Could you please describe what isn't working - what your expectation \n&gt; is, and what you are not able to achieve? We can help to debug the issue.\n&gt; \n&gt; â€”\n&gt; You are receiving this because you were mentioned.\n&gt; Reply to this email directly, view it on GitHub \n&gt; <https://github.com/singularityware/singularity/issues/642#issuecomment-297934961>, \n&gt; or mute the thread \n&gt; <https://github.com/notifications/unsubscribe-auth/AE1IEKjRfIFmEjE1IUXxZg9w92dp8_sUks5r0Z1TgaJpZM4NJ0Ph>.\n-- \nRespect is a rational process. \\//\nFatti non foste a viver come bruti, ma per seguir virtute e canoscenza(Dante)\nFor Ur-Fascism, disagreement is treason. (U. Eco)\nBut but but her emails... (Anonymous)",
                "pretext": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297938525|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493367720.577274",
        "date": 1493367720577
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297934961|#642: bind paths and overlay in the configuration file>",
                "text": "Hey @afortiorama ! Could you describe the trouble that you are having? When you use `--contain` you are asking Singularity to disable / not allow all mounts, and so the configuration in your config file to mount /pippo will not be seen. When you add back in `-B`, you are again over-riding that and honoring both `--contain` and the specification for the bind and the overlayfs allowed by the config. Here is the description of the command:\n\n```    -c/--contain        This option disables the automatic sharing of writable\n                               filesystems on your host (e.g. $HOME and /tmp).\n```\n\nCould you please describe what isn't working - what your expectation is, and what you are not able to achieve? We can help to debug the issue.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297934961|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493366610.392489",
        "date": 1493366610392
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297931647|#642: bind paths and overlay in the configuration file>",
                "text": "Hi,\n\nit still doesn't work\n\n*Configuration* \n[singularity]# egrep 'overlay =|pippo' /etc/singularity/singularity.conf\nenable overlay = yes\nbind path = /pippo\n\n*New version*\n[singularity]# /usr/bin/singularity --version\n2.2.99\n\n*Running without options*\n[singularity]# /usr/bin/singularity shell --contain /cvmfs/atlas.cern.ch/repo/images/singularity/x86_64-slc6.img \nSingularity: Invoking an interactive shell within container...\n\nSingularity.x86_64-slc6.img&gt; ls /pippo\nls: cannot access /pippo: No such file or directory\nSingularity.x86_64-slc6.img&gt; exit\n\n*Running with options*\n[singularity]# /usr/bin/singularity shell -B /pippo --contain /cvmfs/atlas.cern.ch/repo/images/singularity/x86_64-slc6.img \nSingularity: Invoking an interactive shell within container...\n\nSingularity.x86_64-slc6.img&gt; ls /pippo\npluto",
                "pretext": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297931647|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493365582.230337",
        "date": 1493365582230
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#644 running from home path vs system path' https://github.com/singularityware/singularity/issues/644 by ketancmaheshwari",
                "text": "Running an image using the singularity executable from my $HOME works while using the same executable installed on an arbitrary system path does not work. The error is file not found.\n\n```\n[login1 singularity-Tensorflow]$ which singularity\n/ihome/install/singularity/bin/singularity\n[login1 singularity-Tensorflow]$ singularity exec ubuntu_tensorflow_GPU.img python test.py\npython: can't open file 'test.py': [Errno 2] No such file or directory\n\n```\nFollowing works:\n\n```\n[login1 singularity-Tensorflow]$ ~/singularity-install/bin/singularity exec ubuntu_tensorflow_GPU.img python test.py\n2017-04-27 17:51:40.045086: W tensorflow/core/platform/cpu_feature_guard.cc:45] ...\n...\n...\n\n```\n\nI checked that my home directory is mounted and available in the image. The `test.py` file is located in the directory from where the image is invoked in both cases. This problem is preventing us from making singularity available to the larger user base. Any suggestions?",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/ketancmaheshwari|ketancmaheshwari>",
                "title": "#644 running from home path vs system path",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/644",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493316001.710900",
        "date": 1493316001710
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#643 shell command doesn't read .bashrc' https://github.com/singularityware/singularity/issues/643 by DrDaveD",
                "text": "This is a fairly minor issue, but a little annoying.\n\nIn the latest development branch (I didn't test earlier versions), using the 'shell' command and --containall and --home where the mapped in home directory contains a .bashrc and the login shell is bash, bash does not read the .bashrc.  If I do 'exec $SHELL' inside the container, it then works.  If I use exec bash on the command line instead of shell, that also works.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/DrDaveD|DrDaveD>",
                "title": "#643 shell command doesn't read .bashrc",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/643",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493311692.461916",
        "date": 1493311692461
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/635|#635 Mounting of user home directory failing with --containall on development branch> by <https://github.com/DrDaveD|DrDaveD>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/635|#635 Mounting of user home directory failing with --containall on development branch> by <https://github.com/DrDaveD|DrDaveD>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493311418.385041",
        "date": 1493311418385
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297771870|#635: Mounting of user home directory failing with --containall on development branch>",
                "text": "Yes it is working now, thanks.",
                "pretext": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297771870|#635: Mounting of user home directory failing with --containall on development branch>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493311400.379721",
        "date": 1493311400379
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297750868|#642: bind paths and overlay in the configuration file>",
                "text": "Well, the 2.2 series won't get any updates (unless a security fix becomes required). If the 'development' branch works for you, I would just keep using that until the 2.3 version is released.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297750868|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493307252.106613",
        "date": 1493307252106
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297750424|#642: bind paths and overlay in the configuration file>",
                "text": "sure. Should I wait for 2.3?",
                "pretext": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297750424|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493307169.079653",
        "date": 1493307169079
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297749402|#642: bind paths and overlay in the configuration file>",
                "text": "Ooops, wrong button.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297749402|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493306957.008514",
        "date": 1493306957008
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue re-opened: <https://github.com/singularityware/singularity/issues/642|#642 bind paths and overlay in the configuration file> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue re-opened: <https://github.com/singularityware/singularity/issues/642|#642 bind paths and overlay in the configuration file> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493306951.006544",
        "date": 1493306951006
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/642|#642 bind paths and overlay in the configuration file> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/642|#642 bind paths and overlay in the configuration file> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493306949.005860",
        "date": 1493306949005
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297749363|#642: bind paths and overlay in the configuration file>",
                "text": "Can you try with the development branch (which will soon be the 2.3 release)?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297749363|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493306949.005819",
        "date": 1493306949005
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297749083|#642: bind paths and overlay in the configuration file>",
                "text": "Yes, you are understanding correctly.\n\nI'm using the 2.2.1 tarball.",
                "pretext": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297749083|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493306889.986425",
        "date": 1493306889986
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297748189|#642: bind paths and overlay in the configuration file>",
                "text": "Hi @afortiorama,\n\nIf I am understanding correctly, you are finding that the `bind path` configuration directive is not creating the directories if they don't already exist within the container even if overlay is enabled? Is that correct?\n\nWhat version of Singularity are you using?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297748189|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493306706.926615",
        "date": 1493306706926
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297644538|#642: bind paths and overlay in the configuration file>",
                "text": "BTW I'm on CentOS7 with kernel 3.10.0-514.16.1.el7.x86_64  on ext4 and overlay isn't crashing. Are there particular situations in which it happens?",
                "pretext": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297644538|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493280709.322573",
        "date": 1493280709322
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/636#issuecomment-297632870|#636: Adding check for empty Docker layers>",
                "text": "so weird, Travis appears to have fixed itself! Finally I can rest :P",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/636#issuecomment-297632870|#636: Adding check for empty Docker layers>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493277686.841354",
        "date": 1493277686841
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#642 bind paths and overlay in the configuration file' https://github.com/singularityware/singularity/issues/642 by afortiorama",
                "text": "Question\n\nif I enable overlay and bind paths in the configuration files do the paths have to exist in the image? It is not clear in the documentation. And if I use overlay and -B option I can see the directories in the container but if I list the bind path in the configuration file I can't. ",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/afortiorama|afortiorama>",
                "title": "#642 bind paths and overlay in the configuration file",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/642",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493276851.727664",
        "date": 1493276851727
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by bkemish on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-297602646|#624: binding directories in the same base directory as home>",
                "text": "Perfect! Thanks Gregory.",
                "pretext": "[singularityware/singularity] New comment by bkemish on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-297602646|#624: binding directories in the same base directory as home>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493264260.529101",
        "date": 1493264260529
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297600134|#635: Mounting of user home directory failing with --containall on development branch>",
                "text": "Oh my goodness... That was a silly error on my part, I blame this head cold I have!\n\nHopefully it is working better now?\n\nThanks for your patience on this!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297600134|#635: Mounting of user home directory failing with --containall on development branch>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493263030.424724",
        "date": 1493263030424
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297598227|#635: Mounting of user home directory failing with --containall on development branch>",
                "text": "It works with overlay enabled, but not with it disabled:\n```DEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking that home directry is configured: /srv\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking if SINGULARITY_CONTAIN is set\nDEBUG   [U=3382,P=2]       singularity_registry_get()                Returning value from registry: 'CONTAIN' = '1'\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking if home directories are being influenced by user\nDEBUG   [U=3382,P=2]       singularity_registry_get()                Returning value from registry: 'HOME' = '/cloud/login/dwd/root/home:/srv'\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking if user bind control is allowed\nDEBUG   [U=3382,P=2]       singularity_config_get_bool_char_impl()   Called singularity_config_get_bool(user bind control, yes)\nDEBUG   [U=3382,P=2]       singularity_config_get_value_impl()       Returning configuration value user bind control='yes'\nDEBUG   [U=3382,P=2]       singularity_config_get_bool_char_impl()   Return singularity_config_get_bool(user bind control, yes) = 1\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          SINGULARITY_HOME was set, not containing\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking ownership of home directory source: /cloud/login/dwd/root/home\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking to make sure home directory destination is a full path: /srv\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking if home directory is already mounted: /srv\nDEBUG   [U=3382,P=2]       singularity_runtime_rootfs()              Returning container_directory: /var/lib/singularity/mnt/final\nDEBUG   [U=3382,P=2]       check_mounted()                           Opening /proc/mounts\nDEBUG   [U=3382,P=2]       check_mounted()                           Iterating through /proc/mounts\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking if overlay is enabled\nDEBUG   [U=3382,P=2]       singularity_registry_get()                Returning NULL on 'OVERLAYFS_ENABLED'\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Staging home directory\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking if sessiondir/tmpdir is set\nDEBUG   [U=3382,P=2]       singularity_registry_get()                Returning value from registry: 'SESSIONDIR' = '/tmp/.singularity-session-Msn5SOFMjN'\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Identifying the base home directory: /srv\nDEBUG   [U=3382,P=2]       basedir()                                 Obtaining basedir for: /srv\nDEBUG   [U=3382,P=2]       basedir()                                 Iterating basedir: /srv\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking home directory base exists in container: /srv\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Creating temporary directory to stage home: /tmp/.singularity-session-Msn5SOFMjN/srv\nDEBUG   [U=3382,P=2]       s_mkpath()                                Creating directory: /tmp/.singularity-session-Msn5SOFMjN/srv\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Setting home directory source to: '/tmp/.singularity-session-Msn5SOFMjN' + '/srv'\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Setting home directory dest to: '/var/lib/singularity/mnt/final' + '/srv'\nDEBUG   [U=3382,P=2]       singularity_priv_escalate()               Temporarily escalating privileges (U=3382)\nDEBUG   [U=0,P=2]          singularity_priv_escalate()               Clearing supplementary GIDs.\nVERBOSE [U=0,P=2]          singularity_runtime_mount_home()          Mounting home directory source into container: /tmp/.singularity-session-Msn5SOFMjN/srv -&gt; /var/lib/singularity/mnt/final/srv\n```",
                "pretext": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297598227|#635: Mounting of user home directory failing with --containall on development branch>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493262084.342510",
        "date": 1493262084342
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/636#issuecomment-297593540|#636: Adding check for empty Docker layers>",
                "text": "oups, looks like I killed the update to fix the docker layers, oh well. Will add again!",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/636#issuecomment-297593540|#636: Adding check for empty Docker layers>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493259895.136674",
        "date": 1493259895136
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/641|#641 Add \"docker://\" bash_completion to \"shell-exec-run\"> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/641|#641 Add \"docker://\" bash_completion to \"shell-exec-run\"> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493257096.856760",
        "date": 1493257096856
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297585305|#635: Mounting of user home directory failing with --containall on development branch>",
                "text": "Ahh, ok. I see the problem. Luckily it was an easy fix! Will you take another look, and let me know?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297585305|#635: Mounting of user home directory failing with --containall on development branch>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493256233.765671",
        "date": 1493256233765
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/638#issuecomment-297582332|#638: Bootstrapping a container from a Fedora 25 host>",
                "text": "Oh, on RedHat and Fedora (RPM) based systems, I'd recommend building an RPM. The process is pretty simple:\n\n```$ ./autogen.sh\n$ ./configure\n$ make dist\n$ rpmbuild -ta singularity-*.tar.gz\n```\n\nAnd then install the RPMs onto your base system via the normal means.\n\nHope that helps!\n\nGreg",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/638#issuecomment-297582332|#638: Bootstrapping a container from a Fedora 25 host>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493254912.626883",
        "date": 1493254912626
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-297582044|#617: ERROR: Unrecognized OSBuild type: docker>",
                "text": "Oh, and the only reason I picked up on it so fast is because there was just a similar ticket and so it was fresh in my mind.\n\nGlad it's working now for you @inJeans and let us know how it works out for you.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-297582044|#617: ERROR: Unrecognized OSBuild type: docker>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493254780.610737",
        "date": 1493254780610
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#641 Add \"docker://\"  bash_completion to \"shell-exec-run\"' https://github.com/singularityware/singularity/pull/641 by ArangoGutierrez",
                "text": "Just a minor add\nChanges proposed in this pull request\n\nâ€¢ Add \"docker://\" for shell-exec-run to bash_completion\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "title": "#641 Add \"docker://\"  bash_completion to \"shell-exec-run\"",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/641",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493245969.483061",
        "date": 1493245969483
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/640#issuecomment-297511258|#640: fixing tests>",
                "text": "Awesome, thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/640#issuecomment-297511258|#640: fixing tests>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493233744.538269",
        "date": 1493233744538
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/640|#640 fixing tests> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/640|#640 fixing tests> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493233738.536853",
        "date": 1493233738536
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/640#issuecomment-297510852|#640: fixing tests, not sure about pylint but can check in runtime!>",
                "text": "@gmkurtzer ",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/640#issuecomment-297510852|#640: fixing tests, not sure about pylint but can check in runtime!>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493233644.511606",
        "date": 1493233644511
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297500772|#635: Mounting of user home directory failing with --containall on development branch>",
                "text": "@gmkurtzer Unfortunately it still gives me an empty directory.  Here's the debug output portion related to singularity_runtime_mount_home, using the above test command and default singularity.conf:\n```DEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking that home directry is configured: /srv\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking if home directories are being influenced by user\nDEBUG   [U=3382,P=2]       singularity_registry_get()                Returning value from registry: 'HOME' = '/cloud/login/dwd/root/home:/srv'\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking if user bind control is allowed\nDEBUG   [U=3382,P=2]       singularity_config_get_bool_char_impl()   Called singularity_config_get_bool(user bind control, yes)\nDEBUG   [U=3382,P=2]       singularity_config_get_value_impl()       Returning configuration value user bind control='yes'\nDEBUG   [U=3382,P=2]       singularity_config_get_bool_char_impl()   Return singularity_config_get_bool(user bind control, yes) = 1\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking ownership of home directory source: /cloud/login/dwd/root/home\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking to make sure home directory destination is a full path: /srv\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking if home directory is already mounted: /srv\nDEBUG   [U=3382,P=2]       singularity_runtime_rootfs()              Returning container_directory: /var/lib/singularity/mnt/final\nDEBUG   [U=3382,P=2]       check_mounted()                           Opening /proc/mounts\nDEBUG   [U=3382,P=2]       check_mounted()                           Iterating through /proc/mounts\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking if overlay is enabled\nDEBUG   [U=3382,P=2]       singularity_registry_get()                Returning value from registry: 'CONTAIN' = '1'\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Staging home directory\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking if sessiondir/tmpdir is set\nDEBUG   [U=3382,P=2]       singularity_registry_get()                Returning value from registry: 'SESSIONDIR' = '/tmp/.singularity-session-MNXSRljkXY'\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Identifying the base home directory: /srv\nDEBUG   [U=3382,P=2]       basedir()                                 Obtaining basedir for: /srv\nDEBUG   [U=3382,P=2]       basedir()                                 Iterating basedir: /srv\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking home directory base exists in container: /srv\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Creating temporary directory to stage home: /tmp/.singularity-session-MNXSRljkXY/srv\nDEBUG   [U=3382,P=2]       s_mkpath()                                Creating directory: /tmp/.singularity-session-MNXSRljkXY/srv\nDEBUG   [U=3382,P=2]       singularity_registry_get()                Returning value from registry: 'CONTAIN' = '1'\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Setting home directory source to: '/tmp/.singularity-session-MNXSRljkXY' + '/srv'\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Setting home directory dest to: '/var/lib/singularity/mnt/final' + '/srv'\nDEBUG   [U=3382,P=2]       singularity_priv_escalate()               Temporarily escalating privileges (U=3382)\nDEBUG   [U=0,P=2]          singularity_priv_escalate()               Clearing supplementary GIDs.\nVERBOSE [U=0,P=2]          singularity_runtime_mount_home()          Mounting home directory source into container: /tmp/.singularity-session-MNXSRljkXY/srv -&gt; /var/lib/singularity/mnt/final/srv\n```\n\nI get similar results with overlay disabled.",
                "pretext": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297500772|#635: Mounting of user home directory failing with --containall on development branch>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493231424.857292",
        "date": 1493231424857
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/640#issuecomment-297489810|#640: fixing tests, not sure about pylint but can check in runtime!>",
                "text": "confirmed pylint looks ok! I just didn't have it installed locally.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/640#issuecomment-297489810|#640: fixing tests, not sure about pylint but can check in runtime!>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493229017.128434",
        "date": 1493229017128
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#640 fixing tests, not sure about pylint but can check in runtime!' https://github.com/singularityware/singularity/pull/640 by vsoch",
                "text": "Probably didn't need to change the tests to output to PIPE, but it doesn't seem to matter.\n\nChanges proposed in this pull request\n\n -\n -\n -\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#640 fixing tests, not sure about pylint but can check in runtime!",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/640",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493228678.027123",
        "date": 1493228678027
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/630|#630 Markdown-ify> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/630|#630 Markdown-ify> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493221777.008206",
        "date": 1493221777008
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/630#issuecomment-297454928|#630: Markdown-ify>",
                "text": "Hrmm, this has been merged. Not sure why it didn't auto close, nor do I see it in the commit log, but I based my changes on your work, so I think GitHub is confused thus I'm closing this by hand. Feel free to check out my reorganization at <https://github.com/singularityware/singularity/commit/56ee6e80e158dda288609ca0d342a153c7ddfe19>.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/630#issuecomment-297454928|#630: Markdown-ify>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493221777.008096",
        "date": 1493221777008
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ShadowAce on issue <https://github.com/singularityware/singularity/issues/638#issuecomment-297347043|#638: Bootstrapping a container from a Fedora 25 host>",
                "text": "Thanks, guys!! \n\nI have got version 2.2.99 up and running.  One thing I noticed, though--On Fedora (and maybe on RH systems in general), the executable gets installed into /usr/local/bin which is not in root's PATH.  Easy enough to fix, but maybe it should be mentioned in the docs.\n\nThis will be great to use!  I look forward to installing it on our HPC cluster.",
                "pretext": "[singularityware/singularity] New comment by ShadowAce on issue <https://github.com/singularityware/singularity/issues/638#issuecomment-297347043|#638: Bootstrapping a container from a Fedora 25 host>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493203187.500860",
        "date": 1493203187500
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/638|#638 Bootstrapping a container from a Fedora 25 host> by <https://github.com/ShadowAce|ShadowAce>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/638|#638 Bootstrapping a container from a Fedora 25 host> by <https://github.com/ShadowAce|ShadowAce>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493203187.500845",
        "date": 1493203187500
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by c1t4r on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-297301391|#625: make singularity calling cmdline available from within container>",
                "text": "Thanks @gmkurtzer @vsoch,\n\n  that is what I do now in `/etc/singularity/init` : \n\n```\nSINGULARITY_BINDDIRS=$(grep '^[ ]_bind path[ ]_=' /etc/singularity/singularity.conf | sed 's/._=[ ]_//' | tr '\\n' ':')\nSINGULARITY_COMMANDLINE=\"$*\"\nexport SINGULARITY_COMMANDLINE SINGULARITY_BINDDIRS\n\n```yielding\n```\nsingularity exec -B /lustre /nfs/home1/CiTAR/Plurality/mksapp/images/Gaussian.sapp-2017-04-24-13-20.img /bin/bash\n\necho $SINGULARITY_BINDDIRS\n/nfs:/scratch:/etc/hosts:/etc/ssh:/var/spool/torque:/home:\n\necho $SINGULARITY_COMMANDLINE\n-B /lustre /nfs/home1/CiTAR/Plurality/mksapp/images/Gaussian.sapp-2017-04-24-13-20.img /bin/bash\n```\n\nThis enables me to reconstruct the total binds. You can close this issue :)\n\nPS I realize now this wouldn't work when I use mappings but I can fix this easily myself in `/etc/singularity/init` that's the most important thing...",
                "pretext": "[singularityware/singularity] New comment by c1t4r on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-297301391|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493196773.356790",
        "date": 1493196773356
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/617|#617 ERROR: Unrecognized OSBuild type: docker> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/617|#617 ERROR: Unrecognized OSBuild type: docker> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493183212.586948",
        "date": 1493183212586
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-297239185|#617: ERROR: Unrecognized OSBuild type: docker>",
                "text": "glad to hear @inJeans ! I still fall for these kind of things, and it's nothing to be ashamed of, it just means you are a human :) I'm going to close the issue, please re-open if necessary.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-297239185|#617: ERROR: Unrecognized OSBuild type: docker>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493183212.586933",
        "date": 1493183212586
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by inJeans on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-297238612|#617: ERROR: Unrecognized OSBuild type: docker>",
                "text": "Okay team. It was the line endings. Thanks @gmkurtzer for the suggestion. I have fallen victim to such rookie mistakes before. Thanks everyone for the help.",
                "pretext": "[singularityware/singularity] New comment by inJeans on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-297238612|#617: ERROR: Unrecognized OSBuild type: docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493182908.560658",
        "date": 1493182908560
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297233640|#634: Add/multiprocessing>",
                "text": "Fantastic, merged!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297233640|#634: Add/multiprocessing>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493180348.356361",
        "date": 1493180348356
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/634|#634 Add/multiprocessing> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/634|#634 Add/multiprocessing> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493180338.355696",
        "date": 1493180338355
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297223758|#634: Add/multiprocessing>",
                "image_url": "https://asciinema.org/a/117638.png",
                "image_width": 372,
                "image_height": 250,
                "image_bytes": 40901,
                "text": "<https://asciinema.org/a/117638?speed=3>",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297223758|#634: Add/multiprocessing>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493175566.960214",
        "date": 1493175566960
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297216529|#634: Add/multiprocessing>",
                "text": "ok, updates are the following! We wanted to be able to separate the downloading of layers from the changing of permissions, because right now they are packaged together, and each takes a substantial amount of time. However, you can imagine it would be less than ideal to do two \"batches\" like:\n\n1. Multiprocessing task 1: Download huge chunk of layers, since it's atomic, each is saved with some `.tmp` extension.\n2. Pass this list to Multiprocessing task 2: change permissions of layers, save with final name\n\nbecause let's say we have 15 files, it takes 10 minutes to get to number 10 and then for step 1, the entire thing dies. We have to start over. That's annoying, and that's why we have it (now) like:\n\n1. Download A, change permissions A --&gt; final A\n2. Download B, change permissions B --&gt; final B\n\nso the challenge is - how to split up changing permissions from downloading without making it a PITA if you fail mid way? I decided to do the following.\n\n*Dynamic Multiprocessing Client*\n\nWhat I basically wanted to do is allow for the multiprocessing client to, midway running things, add another \"thing\" to his queue, the \"thing\" being the file that is downloaded, but still needs permissions fixed. To support this, I made the MultiProcess client take an optional second function, `func2` and given that it's defined, it doubles the number of tasks to complete:\n\n```        # If two functions are run per task, double total jobs\n        if func2 is not None:\n            total = total * 2\n```\n\nthen, as before, we create a multiprocessing pool to start the first set of tasks to download the files.\n\n```            pool = multiprocessing.Pool(self.workers,init_worker)\n```        self.start()\n        for task in tasks:\n            result = pool.apply_async(multi_wrapper,\n                                      multi_package(func,[task]))\n            results.append(result)\n            level1.append(result._job)```\n```\nbut you'll notice I'm not appending these ids (`result._job` is an int) to a level1 list, and I do this so later I can check if a result object (one of the worker job things in the queue) has been processed through the second function. To do this, I then pop each result off the queue, and if it's a level1, and if a second function (eg change permissions) is defined, I dynamically add this new job to the multiprocessing pool:\n\n```            while len(results) &gt; 0:\n                result = results.pop()\n                result.wait()\n                bot.show_progress(progress,total,length=35,prefix=prefix)\n                progress+=1\n                prefix = \"[%s/%s]\" %(progress,total)\n```            # Pass the result through a second function?\n            if func2 is not None and result._job in level1:\n                result = pool.apply_async(multi_wrapper,\n                                          multi_package(func2,[(result.get(),)]))\n                results.append(result)\n            else:\n                finished.append(result.get())```\n``` \nThen we have some catches to make sure keyboard interrupts are caught, and we return the list of finished. To support this, the different functions for download and changing permissions are now under docker/tasks, and the `get_layer` function for the docker client doesn't change permissions by default.\n\nI think/hope this should speed things up a little bit! I haven't tested that all the results are still passing, but will update the PR with fixes for anything that doesn't.\n\n*Progress Bar*\n\nThe progress bar can now minimally show the number of total tasks (downloads and permissions) as separate things instead of them being bundled into 1. I've also fixed it so the shub downloads will have the progress bar again. I changed the `&gt;` symbol to a `|` because the arrow creates a sense of \"this thing is moving\" for the user, and it's more of a \"this is a marker for where we are\" now.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297216529|#634: Add/multiprocessing>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493172322.666418",
        "date": 1493172322666
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/639#issuecomment-297195229|#639: updating test to be specific to use ubuntu 14.04 to calculate size>",
                "text": "no problemo! Working on the other PR now... trying to see if I can use a callback to add the permissions fixes to the queue",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/639#issuecomment-297195229|#639: updating test to be specific to use ubuntu 14.04 to calculate size>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493163283.693962",
        "date": 1493163283693
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/639#issuecomment-297194646|#639: updating test to be specific to use ubuntu 14.04 to calculate size>",
                "text": "Thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/639#issuecomment-297194646|#639: updating test to be specific to use ubuntu 14.04 to calculate size>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493163060.665202",
        "date": 1493163060665
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/639|#639 updating test to be specific to use ubuntu 14.04 to calculate size> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/639|#639 updating test to be specific to use ubuntu 14.04 to calculate size> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493163055.664495",
        "date": 1493163055664
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297187081|#634: Add/multiprocessing>",
                "text": "sorry - where is the base case, and where is the list of times? The logger helper was not intended for this. I would recommend trying with image `poldracklab/mriqc` and please provide a base test case (serial download) minimal 5 times, and then the comparison with the multiprocessing, for also 5 times. And to make digestion of the result easy, you can just have two python lists, eg:\n\n```base: [A,B,C,D,E]\nmulti [A,B,C,D,E]\n```\nthanks!",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297187081|#634: Add/multiprocessing>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493160403.294697",
        "date": 1493160403294
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#639 updating test to be specific to use ubuntu 14.04 to calculate size' https://github.com/singularityware/singularity/pull/639 by vsoch",
                "text": "This is a quick fix to a test to use version 14.04 of Ubuntu to test calculation of size, as latest will change.\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#639 updating test to be specific to use ubuntu 14.04 to calculate size",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/639",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493160077.245163",
        "date": 1493160077245
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297163964|#634: Add/multiprocessing>",
                "text": "Here are some results using the \"hack\" script and the PR installed on my host ( Dual XEON DeLL WS)\n\nAverage Download speed using speedtest-cli : 53.94 Mbit/s\n\n```bash\n['/tmp/singularity/libexec/python', '/usr/lib/python27.zip', '/usr/lib64/python2.7', '/usr/lib64/python2.7/plat-linux2', '/usr/lib64/python2.7/lib-tk', '/usr/lib64/python2.7/lib-old', '/usr/lib64/python2.7/lib-dynload', '/usr/lib64/python2.7/site-packages', '/usr/lib64/python2.7/site-packages/gtk-2.0', '/usr/lib/python2.7/site-packages', '/tmp/singularity/libexec/python', '/tmp/singularity/libexec/python/docker']\nVERBOSE2 SINGULARITY_COMMAND_ASIS found as False\nVERBOSE2 SINGULARITY_ROOTFS not defined (None)\nVERBOSE2 SINGULARITY_METADATA_FOLDER found as None/.singularity.d\nVERBOSE2 SINGULARITY_DISABLE_CACHE found as False\nVERBOSE2 SINGULARITY_CACHEDIR found as /home/Eduardo/.singularity\nVERBOSE2 SINGULARITY_ENVBASE found as None/.singularity.d/env\nVERBOSE2 SINGULARITY_LABELFILE found as None/.singularity.d/labels.json\nVERBOSE2 SINGULARITY_INCLUDECMD found as False\nVERBOSE2 SINGULARITY_PULLFOLDER found as /tmp/singularity/libexec/python\nVERBOSE2 SHUB_NAMEBYHASH not defined (None)\nVERBOSE2 SHUB_NAMEBYCOMMIT not defined (None)\nVERBOSE2 SHUB_CONTAINERNAME not defined (None)\nVERBOSE2 SINGULARITY_CONTENTS found as None/.singularity.d/.layers\nDEBUG Headers found: Content-Type,Accept\nVERBOSE Registry: index.docker.io\nVERBOSE Namespace: library\nVERBOSE Repo Name: ubuntu\nVERBOSE Repo Tag: latest\nVERBOSE Version: None\nVERBOSE Obtaining tags: <https://index.docker.io/v2/library/ubuntu/tags/list>\nDEBUG GET <https://index.docker.io/v2/library/ubuntu/tags/list>\nDEBUG Http Error with code 401\nDEBUG GET <https://auth.docker.io/token?service=registry.docker.io&amp;expires_in=9000&amp;scope=repository:library/ubuntu:pull>\nDEBUG Headers found: Content-Type,Authorization,Accept\nVERBOSE Obtaining manifest: <https://index.docker.io/v2/library/ubuntu/manifests/latest>\nDEBUG GET <https://index.docker.io/v2/library/ubuntu/manifests/latest>\nDEBUG Image manifest version 2.2 found.\nDEBUG Adding digest sha256:aafe6b5e13de557451e1781fe7276620275625f970015cbd10036ab7d8ae27c0\nDEBUG Adding digest sha256:0a2b43a726608d3835aa027bbe181624789130c212eb191baa481f1d788a0676\nDEBUG Adding digest sha256:18bdd1e546d21240bd4c3e4e29032a38f18102d780a78686508d40fe01c60158\nDEBUG Adding digest sha256:8198342c3e05101bb56b0a585dc34e39346ece39ee5d39287cda24b1fb445fed\nDEBUG Adding digest sha256:f56970a44fd409805e3872cac236d29f5eed1a45e189bb765bcd2163c915f384\n         1633 function calls (1568 primitive calls) in 2.436 seconds\n\n   Ordered by: internal time, call count\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n        4    0.716    0.179    0.718    0.179 ssl.py:833(do_handshake)\n        4    0.716    0.179    0.716    0.179 ssl.py:642(read)\n        4    0.587    0.147    0.936    0.234 socket.py:541(create_connection)\n       24    0.349    0.015    0.349    0.015 socket.py:227(meth)\n        4    0.048    0.012    0.048    0.012 ssl.py:401(load_default_certs)\n    12/10    0.007    0.001    0.007    0.001 socket.py:280(close)\n        4    0.002    0.000    0.002    0.000 ssl.py:346(*new*)\n       40    0.001    0.000    0.717    0.018 socket.py:410(readline)\n      8/3    0.001    0.000    0.007    0.002 socket.py:340(read)\n       19    0.001    0.000    0.001    0.000 message.py:146(write)\n        4    0.000    0.000    0.000    0.000 ssl.py:673(getpeercert)\n     13/5    0.000    0.000    0.001    0.000 sre_parse.py:395(_parse)\n        4    0.000    0.000    0.718    0.180 ssl.py:529(*init*)\n        8    0.000    0.000    0.000    0.000 ssl.py:814(close)\n        4    0.000    0.000    0.001    0.000 httplib.py:271(readheaders)\n        4    0.000    0.000    2.423    0.606 urllib2.py:1154(do_open)\n        9    0.000    0.000    0.000    0.000 urllib2.py:348(add_handler)\n       24    0.000    0.000    0.000    0.000 httplib.py:1005(putheader)\n     24/5    0.000    0.000    0.000    0.000 sre_compile.py:64(_compile)\n        8    0.000    0.000    0.000    0.000 socket.py:189(*init*)\n        4    0.000    0.000    0.000    0.000 ssl.py:711(send)\n        4    0.000    0.000    0.000    0.000 socket.py:196(close)\n    35/16    0.000    0.000    0.000    0.000 sre_parse.py:151(getwidth)\n      123    0.000    0.000    0.000    0.000 sre_parse.py:193(*next)\n       19    0.000    0.000    0.001    0.000 message.py:112(emit)\n        4    0.000    0.000    0.001    0.000 ssl.py:198(_dnsname_match)\n        4    0.000    0.000    0.716    0.179 httplib.py:392(_read_status)\n        4    0.000    0.000    0.717    0.179 httplib.py:431(begin)\n        8    0.000    0.000    0.002    0.000 re.py:230(_compile)\n        4    0.000    0.000    0.050    0.012 ssl.py:410(create_default_context)\n        2    0.000    0.000    0.000    0.000 decoder.py:370(raw_decode)\n        6    0.000    0.000    0.000    0.000 urlparse.py:168(urlsplit)\n        8    0.000    0.000    0.000    0.000 re.py:208(escape)\n        4    0.000    0.000    1.655    0.414 httplib.py:1067(_send_request)\n      3/2    0.000    0.000    2.435    1.218 base.py:176(get)\n       82    0.000    0.000    0.000    0.000 sre_parse.py:141(*getitem*)\n        4    0.000    0.000    0.717    0.179 httplib.py:1084(getresponse)\n      2/1    0.000    0.000    2.000    2.000 api.py:113(update_token)\n        4    0.000    0.000    2.424    0.606 urllib2.py:411(open)\n        4    0.000    0.000    0.718    0.180 ssl.py:355(wrap_socket)\n        5    0.000    0.000    0.002    0.000 sre_compile.py:567(compile)\n        2    0.000    0.000    0.005    0.002 httplib.py:609(_read_chunked)\n        3    0.000    0.000    0.000    0.000 utf_8.py:15(decode)\n       75    0.000    0.000    0.000    0.000 sre_parse.py:149(append)\n      106    0.000    0.000    0.000    0.000 sre_parse.py:212(get)\n        4    0.000    0.000    0.001    0.000 mimetools.py:24(*init*)\n        4    0.000    0.000    0.001    0.000 urllib2.py:226(*init*)\n        5    0.000    0.000    0.001    0.000 sre_parse.py:706(parse)\n        4    0.000    0.000    1.654    0.414 httplib.py:1252(connect)\n       24    0.000    0.000    0.000    0.000 urllib2.py:1184(&lt;genexpr&gt;)\n        8    0.000    0.000    0.000    0.000 socket.py:250(*init*)\n       26    0.000    0.000    0.000    0.000 rfc822.py:202(isheader)\n        4    0.000    0.000    0.000    0.000 mimetools.py:33(parsetype)\n     13/5    0.000    0.000    0.001    0.000 sre_parse.py:317(_parse_sub)\n        4    0.000    0.000    0.000    0.000 urllib2.py:1125(do_request_)\n        4    0.000    0.000    1.655    0.414 httplib.py:840(send)\n        5    0.000    0.000    0.000    0.000 urllib.py:958(*init*)\n        1    0.000    0.000    0.000    0.000 api.py:333(read_digests)\n        4    0.000    0.000    0.000    0.000 urllib.py:1092(splithost)\n        4    0.000    0.000    0.000    0.000 urllib.py:1078(splittype)\n        4    0.000    0.000    2.423    0.606 urllib2.py:439(_open)\n        4    0.000    0.000    0.000    0.000 urllib2.py:208(request_host)\n        1    0.000    0.000    0.000    0.000 urllib.py:1372(getproxies_environment)\n        6    0.000    0.000    0.000    0.000 urlparse.py:137(urlparse)\n        4    0.000    0.000    0.000    0.000 urllib.py:1183(splittag)\n        3    0.000    0.000    0.000    0.000 sre_compile.py:256(_optimize_charset)\n        4    0.000    0.000    0.000    0.000 ssl.py:743(sendall)\n        4    0.000    0.000    1.655    0.414 httplib.py:867(_send_output)\n      8/7    0.000    0.000    0.002    0.000 socket.py:289(*del*)\n        4    0.000    0.000    2.423    0.606 urllib2.py:1241(https_open)\n        4    0.000    0.000    0.000    0.000 httplib.py:888(putrequest)\n      3/2    0.000    0.000    2.428    1.214 base.py:205(submit_request)\n        1    0.000    0.000    0.000    0.000 urllib2.py:479(build_opener)\n       26    0.000    0.000    0.000    0.000 httplib.py:257(addheader)\n        4    0.000    0.000    0.000    0.00â€¦",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297163964|#634: Add/multiprocessing>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493154158.072701",
        "date": 1493154158072
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/637#issuecomment-297157062|#637: SELinux Support?>",
                "text": "Ahh, cool. I \"think\" it should work just fine, but I haven't tested or even played with MLS mode. If you do get around to testing, will you report back on this issue?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/637#issuecomment-297157062|#637: SELinux Support?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493152572.668084",
        "date": 1493152572668
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by JusticeForMikeBrown on issue <https://github.com/singularityware/singularity/issues/637#issuecomment-297156351|#637: SELinux Support?>",
                "text": "Recon only!",
                "pretext": "[singularityware/singularity] New comment by JusticeForMikeBrown on issue <https://github.com/singularityware/singularity/issues/637#issuecomment-297156351|#637: SELinux Support?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493152408.625603",
        "date": 1493152408625
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/637#issuecomment-297153796|#637: SELinux Support?>",
                "text": "Hi @JusticeForMikeBrown \n\nI don't play much with selinux, but I can say that on my development Centos system, I have selinux both enabled and in enforcing targeted mode. Have you found an issue or are you doing recon?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/637#issuecomment-297153796|#637: SELinux Support?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493151829.471901",
        "date": 1493151829471
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297152860|#635: Mounting of user home directory failing with --containall on development branch>",
                "text": "@DrDaveD Will you retest with the latest development branch please?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297152860|#635: Mounting of user home directory failing with --containall on development branch>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493151623.418203",
        "date": 1493151623418
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/638#issuecomment-297149663|#638: Bootstrapping a container from a Fedora 25 host>",
                "text": "Hi @ShadowAce,\n\nDepending on what version of Singularity you are using, you will see different results as the bootstrap definition syntax that I gave as an example in some previous videos has been superseded with a much more flexible definition file syntax (as @ArangoGutierrez demonstrated and as the current documentation suggests).\n\nHope that helps, and sorry for the confusion.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/638#issuecomment-297149663|#638: Bootstrapping a container from a Fedora 25 host>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493150883.226353",
        "date": 1493150883226
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/638#issuecomment-297145397|#638: Bootstrapping a container from a Fedora 25 host>",
                "text": "Hi did someone say Fedora?\nI have a Fedora 24 Host, with the standard repo (master branch) (Installed Today 25 April)\nThis would be the .def file that you need\nFirst create the container:\n\n```sudo singularity create /SomePath/Centos7.img\n```\nPaste this on a .def using your favorite text editor\n\n```bash\nBootStrap: yum\nOSVersion: 7\nMirrorURL: <http://mirror.centos.org/centos-%>{OSVERSION}/%{OSVERSION}/os/$basearch/\nInclude: yum\n\n%post\n\nyum install vim-minimal python procps-ng\n```\n\nThen run the bootstrap process\n\n```sudo singularity bootstrap /Somepath/Centos7.img Centos7.def\n```\n\nIt worked on my Fedora 24 host. It should work on Fed 25.\n\nHere you can find more info about the bootstrap process on the standard repo (<https://github.com/singularityware/singularity|master branch>)\n&gt; <http://singularity.lbl.gov/docs-bootstrap|Bootstrap-Docs>",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/638#issuecomment-297145397|#638: Bootstrapping a container from a Fedora 25 host>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493149947.969358",
        "date": 1493149947969
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#638 Bootstrapping a container from a Fedora 25 host' https://github.com/singularityware/singularity/issues/638 by ShadowAce",
                "text": "I have installed singularity via the standard repo (version 2.0) on a Fedora 25 VM\n\nI have create a container using the recommended method:\n\nsudo singularity create container.img\n\nI have created a centos.def file as I saw in an exmaple video by gmkurtzer:\n```\nRELEASE=7\n\nDistType \"redhat\"\nMirrorURL \"<http://mirror.centos.org/centos-$>{RELEASE}/${RELEASE}/os/\\$basearch/\"\n\nSetup\nBootstrap\n\nInstallPkgs yum vim-minimal python procps-ng\n\nCleanup\n```\n\nHowever, when I run the bootstrap command:\n\nsudo singularity bootstrap container.img centos.def\n\nI get the following error message:\n\n```\nRedirecting to '/usr/bin/dnf --noplugins -c /mnt//etc/bootstrap-yum.conf --tolerant --installroot /mnt -y install /etc/redhat-release coreutils' (see 'man yum2dnf')\n\nNo such command: --tolerant. Please use /usr/bin/dnf --help\nIt could be a DNF plugin command, but loading of plugins is currently disabled.\n\n```\nAm I doing something wrong?  Does singularity not yet support dnf on the host?",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/ShadowAce|ShadowAce>",
                "title": "#638 Bootstrapping a container from a Fedora 25 host",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/638",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493142851.000112",
        "date": 1493142851000
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#637 SELinux Support?' https://github.com/singularityware/singularity/issues/637 by JusticeForMikeBrown",
                "text": "Hello\n\nI am new to singularity and was wondering if you have any guides on using it with SELinux in an HPC environment?\n\nThanks\nDoug",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/JusticeForMikeBrown|JusticeForMikeBrown>",
                "title": "#637 SELinux Support?",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/637",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493132084.776024",
        "date": 1493132084776
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297054379|#635: Mounting of user home directory failing with --containall on development branch>",
                "text": "I have reproduced this, debugging...",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297054379|#635: Mounting of user home directory failing with --containall on development branch>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493131674.645720",
        "date": 1493131674645
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-297047667|#624: binding directories in the same base directory as home>",
                "text": "@bkemish In the `singularity.conf` you may also find it adventageous to not only disable the automatic mounting of home, but add a `bind point` to /srv/home and ensure that `enable overlay` is set to `yes`. That way you don't have to do the bind by hand.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-297047667|#624: binding directories in the same base directory as home>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493130435.257032",
        "date": 1493130435257
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297020162|#634: Add/multiprocessing>",
                "text": "<https://docs.python.org/2/library/hotshot.html>",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297020162|#634: Add/multiprocessing>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493124786.719649",
        "date": 1493124786719
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297019777|#634: Add/multiprocessing>",
                "text": "In case it's of interest (even outside this PR) there are modules in python that let us do a pretty detailed logging of every function call! For example, here is just creating the client and getting images for ubuntu:latest:\n\n```\n         1456 function calls (1393 primitive calls) in 2.560 seconds\n\n   Ordered by: internal time, call count\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n        4    0.956    0.239    1.320    0.330 socket.py:537(create_connection)\n        4    0.780    0.195    0.780    0.195 ssl.py:401(do_handshake)\n        4    0.455    0.114    0.455    0.114 ssl.py:254(read)\n       12    0.365    0.030    0.365    0.030 socket.py:223(meth)\n        4    0.001    0.000    0.781    0.195 ssl.py:202(*init*)\n       19    0.000    0.000    0.000    0.000 message.py:146(write)\n       40    0.000    0.000    0.455    0.011 socket.py:406(readline)\n     12/4    0.000    0.000    0.000    0.000 sre_parse.py:379(_parse)\n    32/14    0.000    0.000    0.000    0.000 sre_parse.py:140(getwidth)\n        8    0.000    0.000    0.000    0.000 ssl.py:394(close)\n        9    0.000    0.000    0.000    0.000 urllib2.py:323(add_handler)\n        4    0.000    0.000    0.000    0.000 httplib.py:267(readheaders)\n        4    0.000    0.000    0.000    0.000 socket.py:192(close)\n        4    0.000    0.000    0.000    0.000 ssl.py:290(send)\n       24    0.000    0.000    0.000    0.000 httplib.py:980(putheader)\n        4    0.000    0.000    2.557    0.639 urllib2.py:1139(do_open)\n        8    0.000    0.000    0.000    0.000 socket.py:185(*init*)\n     22/4    0.000    0.000    0.000    0.000 sre_compile.py:32(_compile)\n      3/2    0.000    0.000    2.558    1.279 base.py:159(submit_request)\n        4    0.000    0.000    0.781    0.195 ssl.py:476(wrap_socket)\n      3/2    0.000    0.000    2.559    1.280 base.py:130(get)\n        4    0.000    0.000    0.455    0.114 httplib.py:437(begin)\n        6    0.000    0.000    0.000    0.000 urlparse.py:168(urlsplit)\n        3    0.000    0.000    0.000    0.000 utf_8.py:15(decode)\n       19    0.000    0.000    0.000    0.000 message.py:112(emit)\n        4    0.000    0.000    0.455    0.114 httplib.py:398(_read_status)\n    12/10    0.000    0.000    0.000    0.000 socket.py:276(close)\n        4    0.000    0.000    2.101    0.525 httplib.py:822(send)\n      8/3    0.000    0.000    0.000    0.000 socket.py:336(read)\n        2    0.000    0.000    0.000    0.000 decoder.py:372(raw_decode)\n      103    0.000    0.000    0.000    0.000 sre_parse.py:182(*next)\n        4    0.000    0.000    2.101    0.525 httplib.py:1212(connect)\n        4    0.000    0.000    0.455    0.114 httplib.py:1053(getresponse)\n        4    0.000    0.000    2.102    0.525 httplib.py:1036(_send_request)\n        4    0.000    0.000    2.557    0.639 urllib2.py:386(open)\n        6    0.000    0.000    0.000    0.000 urlparse.py:137(urlparse)\n        3    0.000    0.000    0.000    0.000 sre_compile.py:207(_optimize_charset)\n      2/1    0.000    0.000    1.876    1.876 api.py:113(update_token)\n        1    0.000    0.000    0.000    0.000 urllib.py:1361(getproxies_environment)\n        8    0.000    0.000    0.000    0.000 socket.py:246(*init*)\n        4    0.000    0.000    0.001    0.000 re.py:226(_compile)\n        4    0.000    0.000    0.000    0.000 mimetools.py:24(*init*)\n       76    0.000    0.000    0.000    0.000 sre_parse.py:130(*getitem*)\n        4    0.000    0.000    0.000    0.000 urllib2.py:199(*init*)\n        4    0.000    0.000    0.000    0.000 mimetools.py:33(parsetype)\n        4    0.000    0.000    0.000    0.000 urllib.py:1067(splittype)\n        4    0.000    0.000    0.000    0.000 urllib2.py:181(request_host)\n        1    0.000    0.000    0.000    0.000 urllib2.py:454(build_opener)\n        4    0.000    0.000    0.000    0.000 urllib2.py:1110(do_request_)\n        4    0.000    0.000    0.000    0.000 urllib.py:1172(splittag)\n        4    0.000    0.000    0.001    0.000 sre_compile.py:493(compile)\n        2    0.000    0.000    0.000    0.000 decoder.py:361(decode)\n     12/4    0.000    0.000    0.000    0.000 sre_parse.py:301(_parse_sub)\n        4    0.000    0.000    0.000    0.000 sre_compile.py:478(_code)\n        4    0.000    0.000    0.000    0.000 sre_parse.py:675(parse)\n        2    0.000    0.000    0.000    0.000 httplib.py:614(_read_chunked)\n       10    0.000    0.000    0.000    0.000 &lt;string&gt;:8(*new*)\n        4    0.000    0.000    0.000    0.000 ssl.py:463(makefile)\n        4    0.000    0.000    2.101    0.525 httplib.py:849(_send_output)\n        4    0.000    0.000    0.000    0.000 httplib.py:370(*init*)\n        4    0.000    0.000    0.000    0.000 sre_compile.py:359(_compile_info)\n       62    0.000    0.000    0.000    0.000 sre_parse.py:138(append)\n       26    0.000    0.000    0.000    0.000 httplib.py:253(addheader)\n       19    0.000    0.000    0.000    0.000 message.py:80(emitError)\n       10    0.000    0.000    2.557    0.256 urllib2.py:374(_call_chain)\n        5    0.000    0.000    0.000    0.000 urllib.py:952(*init*)\n        4    0.000    0.000    0.000    0.000 urllib.py:1081(splithost)\n        4    0.000    0.000    2.557    0.639 urllib2.py:414(_open)\n        4    0.000    0.000    0.000    0.000 ssl.py:320(sendall)\n       26    0.000    0.000    0.000    0.000 rfc822.py:197(isheader)\n        4    0.000    0.000    0.000    0.000 rfc822.py:88(*init*)\n        1    0.000    0.000    0.000    0.000 api.py:333(read_digests)\n        4    0.000    0.000    2.557    0.639 urllib2.py:1221(https_open)\n        2    0.000    0.000    0.000    0.000 base.py:46(update_headers)\n        1    0.000    0.000    0.684    0.684 api.py:208(get_manifest)\n      8/7    0.000    0.000    0.000    0.000 socket.py:285(*del*)\n       10    0.000    0.000    0.000    0.000 sre_compile.py:354(_simple)\n        3    0.000    0.000    0.000    0.000 urlparse.py:160(_splitnetloc)\n        1    0.000    0.000    0.000    0.000 shell.py:71(parse_image_uri)\n        5    0.000    0.000    0.000    0.000 urllib.py:1006(*init*)\n        4    0.000    0.000    0.000    0.000 httplib.py:870(putrequest)\n        1    0.000    0.000    1.876    1.876 api.py:68(*init*)\n        7    0.000    0.000    0.000    0.000 httplib.py:553(close)\n        4    0.000    0.000    0.000    0.000 base.py:189(prepare_request)\n        4    0.000    0.000    0.455    0.114 ssl.py:335(recv)\n       88    0.000    0.000    0.000    0.000 sre_parse.py:201(get)\n       54    0.000    0.000    0.000    0.000 sre_parse.py:195(match)\n        8    0.000    0.000    0.000    0.000 urllib2.py:261(get_host)\n        4    0.000    0.000    2.558    0.639 urllib2.py:123(urlopen)\n        4    0.000    0.000    0.000    0.000 mimetools.py:50(parseplist)\n        2    0.000    0.000    0.000    0.000 sutils.py:59(add_http)\n       12    0.000    0.000    0.000    0.000 message.py:234(debug)\n        4    0.000    0.000    0.000    0.000 urllib2.py:516(http_response)\n        2    0.000    0.000    0.000    0.000 UserDict.py:40(items)\n        1    0.000    0.000    1.876    1.876 api.py:179(get_tags)\n        8    0.000    0.000    0.000    0.000 urllib2.py:254(get_type)\n        6    0.000    0.000    0.000    0.000 httplib.py:569(read)\n        4    0.000    0.000    2.102    0.525 httplib.py:1015(request)\n        4    0.000    0.000    0.000    0.000 httplib.py:726(*init*)\n        4    0.000    0.000    0.000    0.000 httplib.py:812(close)\n       28    0.000    0.000    0.000    0.000 httplib.py:842(_output)\n       24    0.000    0.000    0.000    0.000 urllib2.py:1168(&lt;genexpr&gt;)\n       22    0.000    0.000    0.000    0.000 sre_parse.py:90(*init*)\n       19    0.000    0.000    0.000    0.000 message.py:104(isEnabledFor)\n        4    0.000    0.000    0.000    0.000 httplib.py:1204(*init*)\n        3    0.000    0.000    0.000    0.000 sre_compile.py:178(_compile_charset)\n        1    0.000    0.000    0.000    0.000 re.py:134(match)â€¦",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297019777|#634: Add/multiprocessing>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493124699.701122",
        "date": 1493124699701
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-296845761|#634: Add/multiprocessing>",
                "text": "ok a quick update on testing this (trivially) with a larger image. It's expensive so I limited to the test to a subset of layers [0:12] for `poldracklab/mriqc`. I also ran it just once, so we are going to miss any and all variance. The serial test is as follows:\n\n```\n\n*('Serial download time:', 547.8233549594879)*\n\n```\nand the multiprocessing hung and never finished, and I wasn't able to get any kind of log, but I can talk about my observations.\n\nWhat I observed is that the multiprocessing handled the smaller layers simultaneously, and they were all completed very quickly. The bottle neck was the larger layers - because we are still handling the layer download and permission changes via one worker. This means that any improvements / speed ups in time are due to making the smaller layers efficient to finish in \"parallel\" but the bottle neck is always going to be the largest layer. Interestingly enough, dumping more stuff into one layer is the recommended Dockery way of doing things, to prevent having more smaller layers. It's even farther from our approach since we are working with entire image files. \n\nIt would be great if someone that has this kind of infrastructure could test this proper, or just give me a log in and I'll do it. I can't be charging my group dollars per hour for it, it's not really good.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-296845761|#634: Add/multiprocessing>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493074967.691958",
        "date": 1493074967691
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/636#issuecomment-296819520|#636: Adding check for empty Docker layers>",
                "text": "ok, this seems to resolve the bug mentioned:\n\n```Exploding layer: sha256:7d6bbcadbe0101e0f7deb1b6a83d2a520e805447e5afd48303a0229c034df2ef.tar.gz\nExploding layer: sha256:d9e9382a21dd7dfe6babf8a4e744cafd6f2f7ebb983e2d40c7cb13fbc98b115d.tar.gz\nExploding layer: sha256:6f06d723971b4f12e240f3336a17bf45057b575e501bc65071d4298764d892e3.tar.gz\nExploding layer: sha256:91641bf41cb3485b405e4b2a287d8abc2c5545367faad1e2f72f103bff9c18f8.tar.gz\nExploding layer: sha256:bd842a2105a862f62ba4ad726531029be49046c290307e9c07a688c89f4606e6.tar.gz\nExploding layer: sha256:4a70713c436f2350e8a9f1c1e6c823290f331254c6c21d5657056499d8575608.tar.gz\nExploding layer: sha256:63fe8c0068a811103c702452985368fc99014f83b5f0151cf631644f13f383b2.tar.gz\nExploding layer: sha256:4daad8bdde31f5969d6a44800e993a911bed25853b2f89417b07ce7f0ac67714.tar.gz\nExploding layer: sha256:b3e1c725a85f0953e81815b7c7aabfad9ebfd90af53f99248981282b8045d787.tar.gz\nExploding layer: sha256:2bf1a0cf6f2a1259591399f9afe1956e03128633732c390aa0889af805e1b9a4.tar.gz\nFontconfig warning: ignoring C.UTF-8: not a valid language tag\nusage: mriqc [-h] [-v]\n             [--participant_label [PARTICIPANT_LABEL [PARTICIPANT_LABEL ...]]]\n             [-m [{T1w,bold,T2w} [{T1w,bold,T2w} ...]]] [-s SESSION_ID]\n             [-r RUN_ID] [--nthreads NTHREADS] [--n_procs N_PROCS]\n             [--mem_gb MEM_GB] [--write-graph] [--dry-run]\n             [--use-plugin USE_PLUGIN] [--ica] [--testing] [--profile]\n             [--hmc-afni] [--hmc-fsl] [-f] [--fft-spikes-detector]\n             [-w WORK_DIR] [--report-dir REPORT_DIR] [--verbose-reports]\n             [--ants-nthreads ANTS_NTHREADS] [--ants-settings ANTS_SETTINGS]\n             [--deoblique] [--despike] [--start-idx START_IDX]\n             [--stop-idx STOP_IDX] [--correct-slice-timing]\n             bids_dir output_dir {participant,group} [{participant,group} ...]\nmriqc: error: the following arguments are required: bids_dir, output_dir, analysis_level\n```\n@gmkurtzer ready for review.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/636#issuecomment-296819520|#636: Adding check for empty Docker layers>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493067298.312720",
        "date": 1493067298312
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#636 Adding check for empty Docker layers' https://github.com/singularityware/singularity/pull/636 by vsoch",
                "text": "Fixes #633 \n\nWe recently observed that, for some images with `ENV` or `LABELS` they can produce empty layers. \n\n<https://github.com/singularityware/singularity/issues/633>\n\nThis isn't a problem for Docker, but in our case, we did not expect this and attempt to change permissions using a function to show progress that divides the progress by the total objects to change. In the case of an empty layer, the total objects is 0, and you can imagine where that goes (division by zero, anyone?). As a reasonable fix to this, I have added a check for the number of objects, and given that it's 0, the user is warned:\n\n```singularity run docker://poldracklab/mriqc:0.9.3\nDocker image path: index.docker.io/poldracklab/mriqc:0.9.3\nCache folder set to /home/vanessa/.singularity/docker\n[1/24] Download |===================================| 100.0% layer 3ed9\nWARNING /home/vanessa/.singularity/docker/sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4.tar.gz.IZWQ8d is empty.\n[2/24] Download |===================================| 100.0% layer 4936\n[2/24] Prepare  |===================================| 100.0% layer 4936\n[3/24] Download |===================================| 100.0% layer d712\n[3/24] Prepare  |===================================| 100.0% layer d712\n[4/24] Download |===================================| 100.0% layer 7366\n[4/24] Prepare  |===================================| 100.0% layer 7366\n[5/24] Download |===================================| 100.0% layer de5b\n[5/24] Prepare  |===================================| 100.0% layer de5b\n[6/24] Download |===================================| 100.0% layer 4a55\n[6/24] Prepare  |===================================| 100.0% layer 4a55\n[7/24] Download |===================================| 100.0% layer 91f5\n[7/24] Prepare  |===================================| 100.0% layer 91f5\n[8/24] Download |===================================| 100.0% layer f506\n[8/24] Prepare  |===================================| 100.0% layer f506\n[9/24] Download |===================================| 100.0% layer 12f2\n[9/24] Prepare  |===================================| 100.0% layer 12f2\n[10/24] Download |===================================| 100.0% layer 9ddc\n```\n\nI think this is a reasonable solution, because there could be many stupid cases when a layer is empty, and this should not break the standard import/run, but the user should be alerted in case this is undesired functionality. \n\nThis image is a beast so it's still running the above (we need to make sure there is no issue from within Singularity to still extract the empty layer, but after that we should be good to go. @chrisfilo \n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#636 Adding check for empty Docker layers",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/636",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493065883.963766",
        "date": 1493065883963
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/633#issuecomment-296810038|#633: ERROR Cannot untar layer>",
                "text": "I think so. I'm testing a quick fix for this, will PR after I've looked over a few more things.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/633#issuecomment-296810038|#633: ERROR Cannot untar layer>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493065100.765398",
        "date": 1493065100765
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-296807042|#634: Add/multiprocessing>",
                "text": "ok I'm running on a n1-standard-32 (32 vCPUs, 120 GB memory) machine. First with a dinky image, ubuntu:latest. Here are results:\n\nserial\n```[30.841593980789185,\n 30.764344930648804,\n 30.08139419555664,\n 29.94521188735962,\n 29.80375099182129,\n 30.066102981567383,\n 30.142144918441772,\n 29.913299083709717,\n 30.201260805130005,\n 30.04903221130371]\n```\n\nHere are times using 2* CPU, in this case, 64 workers\n\n```[28.287593126296997,\n 27.664984941482544,\n 27.844917058944702,\n 28.089011192321777,\n 28.063278198242188,\n 27.838926076889038,\n 28.12764596939087,\n 28.15303897857666,\n 28.949312925338745,\n 28.98016881942749]\n```\n(not remarkably different)\n\nand finally here are times that are varying the workers (the idea being one configuration would be most optimal)\n\n```{1: 31.716920137405396,\n 2: 27.720598936080933,\n 3: 28.177881956100464,\n 4: 27.763348817825317,\n 5: 27.959540128707886,\n 6: 27.824767112731934,\n 7: 27.991510152816772,\n 8: 27.83053994178772,\n 9: 28.043720960617065,\n 10: 27.929732084274292,\n 11: 28.3353009223938,\n 12: 28.204150915145874,\n 13: 28.106995105743408,\n 14: 28.08035182952881,\n 15: 28.072475910186768,\n 16: 28.16374707221985,\n 17: 30.745393991470337,\n 18: 28.644512176513672,\n 19: 28.469332933425903,\n 20: 28.34295082092285,\n 21: 28.574687957763672,\n 22: 28.814728021621704,\n 23: 28.784103870391846,\n 24: 28.82189178466797,\n 25: 29.055819988250732,\n 26: 28.978917837142944,\n 27: 29.062932014465332,\n 28: 29.211053133010864,\n 29: 29.674387216567993}\n```\nAgain, it's really not convincingly different to warrant adding this. What I'm doing next is testing a much heftier image (one with 24 layers that are each much larger) and from there, I would suggest the following:\n\nâ€¢ if we see a difference, proceed with questions posted above\nâ€¢ if we don't see a difference, discuss if there are other components of the python API that would benefit from the multiprocessing, and if so, try those out.\nâ€¢ if no to both of the above, we can drop the PR.\n\nFor those interested in running their own test cases (@ArangoGutierrez) I have provided the testing code <https://gist.github.com/vsoch/84e966971ca4d9fe65fbceb9691a1344|here>. And you of course can use the PR here if you don't want to work internally in Python with simple dummy functions.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-296807042|#634: Add/multiprocessing>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493064363.583250",
        "date": 1493064363583
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ickc on pull request <https://github.com/singularityware/singularity/pull/630#issuecomment-296805350|#630: Markdown-ify>",
                "text": "No worries.\n\nIt seems that only by rebasing it, there's conflicts from the diff of the 2 branches. I'll take a look into this later.",
                "pretext": "[singularityware/singularity] New comment by ickc on pull request <https://github.com/singularityware/singularity/pull/630#issuecomment-296805350|#630: Markdown-ify>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493063948.474340",
        "date": 1493063948474
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#635 Mounting of user home directory failing with --containall on development branch' https://github.com/singularityware/singularity/issues/635 by DrDaveD",
                "text": "On Friday @gmk fixed one problem with mounting a user home directory in commit 6d18256 but there's still at least one problem.  Reproduce with \n```singularity shell --containall --home $HOME/root/home:/srv centos7.img\n```\nwhere $HOME/root/home contains some files you want in a temporary directory; it ends up with an empty directory instead of the one requested.  I believe the problem has to do with this message\n```singularity_runtime_mount_home()          Requested --contain option with no workdir, leaving homedir_source undefined\n```\nI attempted a quick fix (using SESSIONDIR if WORKDIR not found) but it still had problems so either I did it wrong or this isn't the last problem.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/DrDaveD|DrDaveD>",
                "title": "#635 Mounting of user home directory failing with --containall on development branch",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/635",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493060237.522167",
        "date": 1493060237522
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-296775506|#634: Add/multiprocessing>",
                "text": "As yes and two more things that came to mind now that I've slept a bit:\n\nâ€¢ the number of workers is a variable. It will depend on the running environment. This means we might expose it via an environment or config variable (likely config since the user could specify something suboptimal for the cluster) or have a calculation that figures it out automatically. The suggestions I saw were 2*CPU, but in testing on my small instance I found that generally odd numbers were better, eg 3,5,7.\nâ€¢ Logging. I also figured out how to get the workers sending their logging to the log, and this can be done at the same level as the Singularity logger.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-296775506|#634: Add/multiprocessing>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493057426.750562",
        "date": 1493057426750
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/631#issuecomment-296769828|#631: Test parallel processing of download / fix permissions> (assigned to <https://github.com/vsoch|vsoch>)",
                "text": "yes please test the current PR for this on different machines (with varying CPU) and compare the PR branch to development. Any shell command should work, and up to you how to time! Thanks!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/631#issuecomment-296769828|#631: Test parallel processing of download / fix permissions> (assigned to <https://github.com/vsoch|vsoch>)",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493056508.493757",
        "date": 1493056508493
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/630#issuecomment-296752044|#630: Markdown-ify>",
                "text": "This looks good, but can you rebase this against the development branch?\n\nDue to my ignorance, confusion and inability to break old habits easily, the master branch was being used as \"trunk\". This will be resolved as soon as 2.3 gets released. Until then, can you please rebase this to the \"development\" branch?\n\nThank you!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/630#issuecomment-296752044|#630: Markdown-ify>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493054094.839313",
        "date": 1493054094839
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/629#issuecomment-296747818|#629: Fix commit 0650c9d>",
                "text": "Hi @ickc, it is not the same license. At an initial glance, clause #3 has been modified, and the locations of the files are in different places. This structure and the file contents was dictated to me by legals of DOE, UCOP, and LBNL so they can not be modified at this time. I already have plans to modify the license and contributors clause but I am waiting for approvals before I can proceed. When that happens, I will re-review this PR and try to encompass as much as possible.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/629#issuecomment-296747818|#629: Fix commit 0650c9d>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493053615.712694",
        "date": 1493053615712
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296737369|#625: make singularity calling cmdline available from within container>",
                "text": "At the moment (in the development branch) all variables are generally being wiped clean that are prefixed with `SINGULARITY_` including `SINGULARITY_BINDDIRS`. If you want to ensure that that variable (or any others) are transposed down into the container, you can do so by editing `/etc/singularity/init` and doing something like:\n\n```SINGULARITYENV_SINGULARITY_BINDDIRS=\"$SINGULARITY_BINDDIRS\"`\nexport SINGULARITYENV_SINGULARITY_BINDDIRS\n```\n\nHope that helps!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296737369|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493052263.345994",
        "date": 1493052263345
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/633#issuecomment-296724845|#633: ERROR Cannot untar layer>",
                "text": "Here's the dockerfile used to create this image: <https://github.com/poldracklab/mriqc/blob/master/Dockerfile>\nHere's layer analysis:\n<https://microbadger.com/images/poldracklab/mriqc>\n\nI guess the ENVs are causing a problem?",
                "pretext": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/633#issuecomment-296724845|#633: ERROR Cannot untar layer>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493050576.890870",
        "date": 1493050576890
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/631#issuecomment-296664904|#631: Test parallel processing of download / fix permissions> (assigned to <https://github.com/vsoch|vsoch>)",
                "text": "Do you have any test scrypt to run? or simply any ``` singularity import ``` can be used as a test. \nI enjoy doing parallel stuff ( mostly on C/C++ , with OpenMP or the threads lib) ",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/631#issuecomment-296664904|#631: Test parallel processing of download / fix permissions> (assigned to <https://github.com/vsoch|vsoch>)",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493039995.808707",
        "date": 1493039995808
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-296662570|#634: Add/multiprocessing>",
                "text": "Do you have any test to run? or simply any ``` singularity import ``` can be used as a test. I enjoy doing parallel stuff ",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-296662570|#634: Add/multiprocessing>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493039466.683653",
        "date": 1493039466683
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/633#issuecomment-296562364|#633: ERROR Cannot untar layer>",
                "text": "Could be something like this: <https://github.com/moby/moby/issues/20917#issuecomment-191901912> can look more into tomorrow. Err today. Whatever.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/633#issuecomment-296562364|#633: ERROR Cannot untar layer>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493020184.454501",
        "date": 1493020184454
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/633#issuecomment-296560869|#633: ERROR Cannot untar layer>",
                "image_url": "https://cloud.githubusercontent.com/assets/814322/25326903/f43f7438-2886-11e7-8d3a-13d73e59a02d.png",
                "image_width": 1048,
                "image_height": 296,
                "image_bytes": 39809,
                "text": "The error is because there is an archive (or maybe more than one, it quits at the first) that is empty:\n\n<https://cloud.githubusercontent.com/assets/814322/25326903/f43f7438-2886-11e7-8d3a-13d73e59a02d.png|image>\n\nany ideas? Here is the layer:\n\n```DEBUG GET (stream) https://index.docker.io/v2/poldracklab/mriqc/blobs/sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4\n[1/24] Download |===================================| 100.0% layer 3ed9\nDEBUG Download of raw file (pre permissions fix) is /home/vanessa/.singularity/docker/sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4.tar.gz._Q66UL\nVERBOSE Fixing permission for /home/vanessa/.singularity/docker/sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4.tar.gz._Q66UL\n```\n\nand it triggers this bug:\n\n```Traceback (most recent call last):\n  File \"/usr/local/libexec/singularity/python/import.py\", line 107, in &lt;module&gt;\n    main()\n  File \"/usr/local/libexec/singularity/python/import.py\", line 83, in main\n    layerfile=LAYERFILE)\n  File \"/usr/local/libexec/singularity/python/docker/main.py\", line 104, in IMPORT\n    prefix=prefix)\n  File \"/usr/local/libexec/singularity/python/docker/api.py\", line 280, in get_layer\n    prefix=prefix)\n  File \"/usr/local/libexec/singularity/python/sutils.py\", line 329, in change_tar_permissions\n    bot.show_progress(ii,count,length=35,prefix=prefix,suffix=suffix)\n  File \"/usr/local/libexec/singularity/python/message.py\", line 173, in show_progress\n    percent = 100 * (iteration / float(total))\nZeroDivisionError: float division by zero\n```\n\nI can add a workaround to check if this total is 0, but I'd like to figure out why it's empty in the first place. It could be a bad download, or something on the Docker side, and the closer we can get to the root, the better. No pun intended. :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/633#issuecomment-296560869|#633: ERROR Cannot untar layer>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493019875.410204",
        "date": 1493019875410
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#634 Add/multiprocessing' https://github.com/singularityware/singularity/pull/634 by vsoch",
                "text": "This is the first PR to add multiprocessing to downloads, which, with some trivial testing, seems like it might speed things up by a small amount (see here <http://www.vanessasaur.us/rawr/2017/multiprocess/>). A few things I'd like to talk about:\n\n*Progress Bar*\n\nthe stream downloader now has the progress bar removed, in favor of including it with the multiprocessing calls (to ensure that you don't see crazy output). This also means that the updates are less frequent, and a lot more jumpy (eg, one bar is shown for all layers, and it proceeds when a layer is done. I used Pool.imap instead of Pool.imap_unordered or Pool.apply_async to ensure that the ordering is preserved.  This also means that the progress bar is gone for shub, and this should be changed. I'd like to have a discussion about a new progress bar strategy - is there a more ideal visual that can be shown that doesn't have the arrow `&gt;` making the user expecting more moving progress? If so, should we do the same for the shub image, or implement the old version for that (having the call to bot.show_progress be in separate functions, which is different than how it was before, both were in the stream function.\n\n*Testing*\n\nI'd like to have some test this out on different OS and CPUs to see if it does make a difference. And also get feedback on tweaking the MultiProcess module that I added in case we can make it faster.\n\nI noticed strange behavior with pool, that it would print an empty newline after each process. As a fix I wrote a `mute` function that sends stderr output to null, and that resolved it. I don't think I need to close this, but wanted to check.\n\nGoing to sleep!\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#634 Add/multiprocessing",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/634",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493018844.265160",
        "date": 1493018844265
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#633 ERROR Cannot untar layer' https://github.com/singularityware/singularity/issues/633 by chrisfilo",
                "text": "`singularity run docker://ubuntu` worked but:\n\n```[root@8357ee35d5f7 /]# singularity run docker://poldracklab/mriqc:0.9.3\nDocker image path: index.docker.io/poldracklab/mriqc:0.9.3\nCache folder set to /root/.singularity/docker\n[1/24] Download |===================================| 100.0% layer 3ed9\nERROR Cannot untar layer /root/.singularity/docker/sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4.tar.gz.TxY6kY, was there a problem with download?\n```\n\nI've tried without the tag with the same effect. This is the development branch running inside docker.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/chrisfilo|chrisfilo>",
                "title": "#633 ERROR Cannot untar layer",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/633",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493016987.034312",
        "date": 1493016987034
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/632|#632 ERROR : Could not virtualize file system namespace: Operation not permitted> by <https://github.com/chrisfilo|chrisfilo>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/632|#632 ERROR : Could not virtualize file system namespace: Operation not permitted> by <https://github.com/chrisfilo|chrisfilo>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493016811.015437",
        "date": 1493016811015
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/632#issuecomment-296545074|#632: ERROR : Could not virtualize file system namespace: Operation not permitted>",
                "text": "`--privileged` solved the problem. Thanks!",
                "pretext": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/632#issuecomment-296545074|#632: ERROR : Could not virtualize file system namespace: Operation not permitted>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493016809.015259",
        "date": 1493016809015
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/632#issuecomment-296529285|#632: ERROR : Could not virtualize file system namespace: Operation not permitted>",
                "text": "hey @chrisfilo ! I'm guessing you are running this inside Docker, did you check the things from <https://groups.google.com/a/lbl.gov/forum/#!topic/singularity/e9mlDuzKowc|this post>? Specifically:\n\nâ€¢ confirm running with `--privileged` via inspect\nâ€¢ adding `--cap-add=SYS_ADMIN `\nâ€¢ could be related to <https://github.com/moby/moby/issues/2918>\n\nIt would be good to see this run from via a non-Docker centos 6 to confirm it's Docker related, although I'm not sure who has those lying around :) Could you also please provide the complete `--debug` output, to anticipate the above needing further investigating?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/632#issuecomment-296529285|#632: ERROR : Could not virtualize file system namespace: Operation not permitted>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493012531.625273",
        "date": 1493012531625
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#632 ERROR  : Could not virtualize file system namespace: Operation not permitted' https://github.com/singularityware/singularity/issues/632 by chrisfilo",
                "text": "Running on CentOS 6 using root and af9551859655ca37f04e621a24f7d6614c3c5a8d version of Singularity (development HEAD at the time of writing).\n\n```\n[root@f00125c69849 /]# singularity run docker://ubuntu\nDocker image path: index.docker.io/library/ubuntu:latest\nCache folder set to /root/.singularity/docker\n[1/5] Download |===================================| 100.0% layer c627\n[1/5] Prepare  |===================================| 100.0% layer c627\n[2/5] Download |===================================| 100.0% layer d4fc\n[2/5] Prepare  |===================================| 100.0% layer d4fc\n[3/5] Download |===================================| 100.0% layer c912\n[3/5] Prepare  |===================================| 100.0% layer c912\n[4/5] Download |===================================| 100.0% layer 0062\n[4/5] Prepare  |===================================| 100.0% layer 0062\n[5/5] Download |===================================| 100.0% layer b33f\n[5/5] Prepare  |===================================| 100.0% layer b33f\nImporting: base Singularity environment\nExploding layer: sha256:c62795f78da9ad31d9669cb4feb4e8fba995a299a0b2bd0f05b10fdc05b1f35e.tar.gz\nExploding layer: sha256:d4fceeeb758e5103c39daf44c73404bf476ef6fd6b7a9a11e2260fcc1797c806.tar.gz\nExploding layer: sha256:5c9125a401ae0cf5a5b4128633e7a4e84230d3eb4c541c661618a70e5d29aeff.tar.gz\nExploding layer: sha256:0062f774e9942f61d13928855ab8111adc27def6f41bd6f7902c329ec836882b.tar.gz\nExploding layer: sha256:6b33fd031facf4d7dd97afeea8a93260c2f15c3e795eeccd8969198a3d52678d.tar.gz\nExploding layer: sha256:fe44851d529f465f9aa107b32351c8a0a722fc0619a2a7c22b058084fac068a4.tar.gz\nSingularity: action-suid (U=0,P=31)&gt; Could not virtualize file system namespace: Operation not permitted\n\nERROR  : Could not virtualize file system namespace: Operation not permitted\nSingularity: action-suid (U=0,P=31)&gt; Retval = 255\n\nABORT  : Retval = 255\n[root@f00125c69849 /]# Singularity: singularity: cleanupd (U=0,P=80)&gt; Failed removing file: /tmp/.singularity-runtime.eL6PzXJ2/container/ubuntu/root\n\nSingularity: singularity: cleanupd (U=0,P=80)&gt; Could not remove directory /tmp/.singularity-runtime.eL6PzXJ2: Directory not empty\n\nSingularity: singularity: cleanupd (U=0,P=80)&gt; Retval = 255\n```",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/chrisfilo|chrisfilo>",
                "title": "#632 ERROR  : Could not virtualize file system namespace: Operation not permitted",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/632",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493011163.528943",
        "date": 1493011163528
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-296520433|#624: binding directories in the same base directory as home>",
                "text": "Great to hear! ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-296520433|#624: binding directories in the same base directory as home>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493006851.257228",
        "date": 1493006851257
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/631#issuecomment-296515652|#631: Test parallel processing of download / fix permissions> (assigned to <https://github.com/vsoch|vsoch>)",
                "text": "ok! So I got only about 1/2 done the implementation, but I tested this out:\n\n<http://www.vanessasaur.us/rawr/2017/multiprocess/>\n\nand it does look like there is marginal speed up for using multiprocessing. This was also tested on a dinky instance (read the post for details!) The challenge is going to be to integrate the progress bar into this framework. I have some ideas, but am still debugging a bit. What I'd like to do is implement a base working case, and then have it tested in a few different places (eg, more CPU!) to see how big of a difference it can make. If we decide to implement this:\n\nâ€¢ we will need to be sure the progress bar is still useful, likely it won't have the same granularity\nâ€¢ possibly we want to split the changing of permissions into two different things, so we can again have more processes working on it, and give the user better updates\nâ€¢ I noticed cool behavior that I did optimally (on my weeny instance) with an odd number of pools. If it's the case that the number of pools needs to be optimzied per the cluster, we either need to:\n     â€¢ figure out the optimum at runtime\n     â€¢ give the admin a configuration value (with a reasonable default) and instructions / tool for determining an optimal\n\nor something like that. More on this later!! Learning about this stuff is wicked cool :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/631#issuecomment-296515652|#631: Test parallel processing of download / fix permissions> (assigned to <https://github.com/vsoch|vsoch>)",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493003922.064569",
        "date": 1493003922064
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by bkemish on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-296508243|#624: binding directories in the same base directory as home>",
                "text": "Thanks everybody! \n\nThe various solutions you offered all seem to work. My mistake using the -H option was that I tried to use /srv/home, when I should have used /srv/home/username. The command  \"singularity shell -H $HOME:/home/${HOME##*/} -bind /srv image\" works fine. However, I have elected to follow the other advice and have changed \"mount home = yes\" to \"mount home = no\" in /usr/local/etc/singularity/singularity.conf. ",
                "pretext": "[singularityware/singularity] New comment by bkemish on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-296508243|#624: binding directories in the same base directory as home>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492999514.764484",
        "date": 1492999514764
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/624|#624 binding directories in the same base directory as home> by <https://github.com/bkemish|bkemish>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/624|#624 binding directories in the same base directory as home> by <https://github.com/bkemish|bkemish>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492999514.764462",
        "date": 1492999514764
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#631 Test parallel processing of download / fix permissions' https://github.com/singularityware/singularity/issues/631 by vsoch",
                "text": "I have to be careful about using the term \"parallel\" because it could refer to different processes, threading, and intertwined with some concurrency. For this first case I'm going to test serial vs. multiprocessing, because that seems like the most common way to go about it.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/vsoch|vsoch> (assigned to <https://github.com/vsoch|vsoch>)",
                "title": "#631 Test parallel processing of download / fix permissions",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/631",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492990861.239858",
        "date": 1492990861239
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#630 Markdown-ify' https://github.com/singularityware/singularity/pull/630 by ickc",
                "text": "â€¢ 5fa3752: For all files that are already written in markdown, add a `.md` extension so that GitHub would recognize it. Contents hasn't been changed, only extension is added.\nâ€¢ 30243c4: Fix markdown syntax. No wordings has been changed.\n\nRelated to #629.",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/ickc|ickc>",
                "title": "#630 Markdown-ify",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/630",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492989172.161695",
        "date": 1492989172161
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ickc on pull request <https://github.com/singularityware/singularity/pull/629#issuecomment-296495224|#629: Fix commit 0650c9d>",
                "text": "I don't understand, because I actually didn't change the license. It is the same as before.\n\nBut IANAL. The purpose is really just to achieve what commit 0650c9d wanted to achieve. You might try to replicate what I did in your liking so that GitHub will recognize it.",
                "pretext": "[singularityware/singularity] New comment by ickc on pull request <https://github.com/singularityware/singularity/pull/629#issuecomment-296495224|#629: Fix commit 0650c9d>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492988410.126815",
        "date": 1492988410126
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/629|#629 Fix commit 0650c9d> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/629|#629 Fix commit 0650c9d> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492966634.080994",
        "date": 1492966634080
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/629#issuecomment-296456854|#629: Fix commit 0650c9d>",
                "text": "Thank you for suggesting this, but the project license is not to be changed without legal approvals.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/629#issuecomment-296456854|#629: Fix commit 0650c9d>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492966634.080977",
        "date": 1492966634080
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#629 Fix commit 0650c9d' https://github.com/singularityware/singularity/pull/629 by ickc",
                "text": "See <https://github.com/ickc/singularity/blob/master/LICENSE.md|singularity/LICENSE.md at master Â· ickc/singularity> for demo on GitHub's recognition of the LICENSE.",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/ickc|ickc>",
                "title": "#629 Fix commit 0650c9d",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/629",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492942576.085511",
        "date": 1492942576085
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by katakombi on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296428118|#625: make singularity calling cmdline available from within container>",
                "text": "Hi @gmkurtzer  and @vsoch ,\n\n I have a suggestion: instead of having the entire cmdline it would be sufficient for now to have just a list of bind dirs e.g. `SINGULARITY_BINDDIRS='/home:/opt/software:/scratch:/lustre'\nThat would be probably much easier and straightforward to do, right?",
                "pretext": "[singularityware/singularity] New comment by katakombi on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296428118|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492936540.900370",
        "date": 1492936540900
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by katakombi on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296427530|#625: make singularity calling cmdline available from within container>",
                "text": "I guess you even could. It probably required more caution to integrate this in MPI though.\nWhy are you asking?\nIn either case I do not know the `-B` arguments of the running container process and cannot reconstruct the singularity exec call on the remote host. ",
                "pretext": "[singularityware/singularity] New comment by katakombi on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296427530|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492935740.875206",
        "date": 1492935740875
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296424071|#625: make singularity calling cmdline available from within container>",
                "text": "like \n\n```cat scripty.sh\nsingularity exec $SINGULARITY_IMAGE $MPIRUN_ARGS\n```\nthen just do:\n\n```ssh $HOSTNAME &lt; scripty.sh\n```\n\napologies for being an ignoramus about this, I've never actually done anything with MPI :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296424071|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492930947.729454",
        "date": 1492930947729
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296423987|#625: make singularity calling cmdline available from within container>",
                "text": "can you take a local script and direct it to the neighbor node with stdin?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296423987|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492930814.724321",
        "date": 1492930814724
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by katakombi on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296423093|#625: make singularity calling cmdline available from within container>",
                "text": "Hi @vsoch, thanks for your thoughts. However, my case is somewhat different: \n\nMy app containers are ready and can be used on a single node.\nBut I want to invoke multinode `mpirun` jobs.\nThis is just doable from within containers because they use OpenMPI versions 1.xx (no hybrid MPI). Mpirun uses ssh to invoke the processes on neighbour nodes so I wrapped SSH to call from\n`ssh $HOSTNAME \"$MPIRUN_ARGS\"`\nto\n`ssh $HOSTNAME \"singularity exec $SINGULARITY_IMAGE $MPIRUN_ARGS\"`\n\nThis seems to work just fine until the point I want to pass a bind directory in the invoking call.\nI need the bind directories information to make it available to the neighbour nodes or else jobs die :(\nI didn't want to ask for making just the -B directories available as env vars because it is not too general. I reckoned it is better to have the entire cmdline. \n\n@gmkurtzer seems like there are a few possibilities to get the quotes into an envvar e.g. the `printq` approach: <http://stackoverflow.com/questions/6306386/how-can-i-escape-an-arbitrary-string-for-use-as-a-command-line-argument-in-bash>",
                "pretext": "[singularityware/singularity] New comment by katakombi on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296423093|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492929322.685722",
        "date": 1492929322685
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296421416|#625: make singularity calling cmdline available from within container>",
                "text": "hey @katakombi - this seems like a use case for some kind of workflow management that can handle the arguments and processing of commands, is that what you are getting at? The simplest way of going about this would be to have each container perform one small, modular task, and thus any running of it would envoke the task. custom arguments get tricky, but maybe you could do something like have the container expect inputs (and arguments?) to be specified in some log/folder where the call is from. Could you provide a concrete example for what you are wanting to do? I think a workflow management solution might be a way to go... for which <https://github.com/pditommaso/awesome-pipeline|there are many!>",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296421416|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492926456.608962",
        "date": 1492926456608
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by katakombi on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296420962|#625: make singularity calling cmdline available from within container>",
                "text": "Oh yes, of course, now I understand!\nI wasn't thinking of that just because I am mainly interested in the singularity command line (without the exec part) but ofc quotes could appear even inside singularity arguments (e.g. dirs with spaces etc)\n\nI see the following possibilities:\nâ€¢ Agree on using just one type of quotes (' or \") then this should work\nâ€¢ Write a substitution function (using ' \" ) which maintains the structure of the command. Is it even possible? I do not really know and would have to try it...\nâ€¢ Do not use an env var but dump the command in a container log file e.g. /tmp/var/log/singularity.log\n\nkind regards",
                "pretext": "[singularityware/singularity] New comment by katakombi on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296420962|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492925615.588557",
        "date": 1492925615588
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296411590|#625: make singularity calling cmdline available from within container>",
                "text": "Hi @katakombi,\n\nThe quoting becomes a big issue actually if you ever have to pass variables that might have a space, or a necessary quote, or escape characters within it. For example, if the original command is something like:\n\n```$ test() { echo \"$*\"; }\n$ test yum groupinstall \"Development Tools\"\nyum groupinstall Development Tools\n```\n\nYou can see how the quoting was lost in the response. So if I were to capture that in a single string variable that could be easily passed, I would also loose the quotes. For many commands this will work fine, but when things get quoted, unexpected results/failures will surface.\n\nThe appropriate way to deal with this is arrays, but that can't be easily obtained or passed via a Bourne environment variable.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296411590|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492908761.070894",
        "date": 1492908761070
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by katakombi on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296371444|#625: make singularity calling cmdline available from within container>",
                "text": "Hi Greg,\n\n something like a `SINGULARITYCMD` env var would be sufficient in my case. What do you mean by problems with quoting? Can you give a few examples of what you have in mind there?\n\nthanks",
                "pretext": "[singularityware/singularity] New comment by katakombi on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296371444|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492865765.137950",
        "date": 1492865765137
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/628#issuecomment-296342078|#628: Add a Gitter chat badge to README.md>",
                "text": "wow, is it just me, or did this robot spell check for us too? Wowza.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/628#issuecomment-296342078|#628: Add a Gitter chat badge to README.md>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492829306.877617",
        "date": 1492829306877
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#628 Add a Gitter chat badge to README.md' https://github.com/singularityware/singularity/pull/628 by gitter-badger",
                "text": "*singularityware/singularity now has a Chat Room on Gitter*\n\n@vsoch has just created a chat room. You can visit it here: &lt;https://gitter.im/singularityware/singularity?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;content=body_link|&lt;https://gitter.im/singularityware/singularity&gt;&gt;.\n\nThis pull-request adds this badge to your README.md:\n\n&lt;https://gitter.im/singularityware/singularity?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=body_badge|&lt;https://badges.gitter.im/singularityware/singularity.svg|Gitter&gt;&gt;\n\nIf my aim is a little off, please <https://github.com/gitterHQ/readme-badger/issues|let me know>.\n\nHappy chatting.\n\nPS: <https://gitter.im/settings/badger/opt-out|Click here> if you would prefer not to receive automatic pull-requests from Gitter in future.",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/gitter-badger|gitter-badger>",
                "title": "#628 Add a Gitter chat badge to README.md",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/628",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492828784.857035",
        "date": 1492828784857
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/626#issuecomment-296289842|#626: chdir to image directory to keep image accessed, prevent unmount>",
                "text": "Awesome, thank you!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/626#issuecomment-296289842|#626: chdir to image directory to keep image accessed, prevent unmount>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492804058.034401",
        "date": 1492804058034
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/626|#626 chdir to image directory to keep image accessed, prevent unmount> by <https://github.com/DrDaveD|DrDaveD>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/626|#626 chdir to image directory to keep image accessed, prevent unmount> by <https://github.com/DrDaveD|DrDaveD>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492802984.800997",
        "date": 1492802984800
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DrDaveD on pull request <https://github.com/singularityware/singularity/pull/626#issuecomment-296285746|#626: chdir to image directory to keep image accessed, prevent unmount>",
                "text": "Ok on the development branch, I didn't know about that.  I will close this PR and make a new one, not only to rebase but also because it turns out that doing chdir fails when the image directory is a relative path.  I'm changing it to do open instead of chdir.\n\nIt's very easy to reproduce.  I'll include simple steps in the next pull request.",
                "pretext": "[singularityware/singularity] New comment by DrDaveD on pull request <https://github.com/singularityware/singularity/pull/626#issuecomment-296285746|#626: chdir to image directory to keep image accessed, prevent unmount>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492802841.769463",
        "date": 1492802841769
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by frenchwr on issue <https://github.com/singularityware/singularity/issues/627#issuecomment-296272784|#627: Loading of Singularity Issues and Potential Network Congestion Issues?>",
                "text": "@gmkurtzer Thank you for the detailed response. It sounds like Singularity was designed with these types of use cases in mind. @damonms I'll let you follow up with any specific questions in case you have them.",
                "pretext": "[singularityware/singularity] New comment by frenchwr on issue <https://github.com/singularityware/singularity/issues/627#issuecomment-296272784|#627: Loading of Singularity Issues and Potential Network Congestion Issues?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492800416.203895",
        "date": 1492800416203
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/626#issuecomment-296263275|#626: chdir to image directory to keep image accessed, prevent unmount>",
                "text": "Can you tell me more about the issue itself? Do you have a reproducer that I can test on a RHEL7.3 kernel?\n\nBTW, The PR will need to be rebased to the `development` branch to be merged.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/626#issuecomment-296263275|#626: chdir to image directory to keep image accessed, prevent unmount>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492798165.648761",
        "date": 1492798165648
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/627#issuecomment-296262280|#627: Loading of Singularity Issues and Potential Network Congestion Issues?>",
                "text": "Hello,\n\nAs with any job programs and data being run at scale, there is the possibility for congestion of shared infrastructure. Now, Singularity was architected for parallel execution in mind which is one reason why we use a single image file by default. This single image file contains the root file system of your container but the entire image does _NOT_ get moved from GPFS or any POSIX compatible shared storage to each compute node that is running it. But, there is of course some data that will always be pulled as the image is loaded. Initially the image and file system meta-data and header, then once it is loaded, only the bits required for the container to operate will be transferred. No wasted (or rather very little) wasted network Tx/Rx.\n\nAdditionally, for very large jobs, that require large amounts of metadata lookups, Singularity will also be very beneficial there as the image itself is only a single metadata lookup to your shared storage (GPFS, Lustre, NFS, etc..). Then the image's metadata is cached, and thus metadata calls on inodes within the image are all done locally, which can yield very high performance benefits when comparing to shared storage.\n\nTo summarize; yes, there will be an increase in network load due to the containers being loaded but the architecture itself was designed to be as optimal as possible to work with shared storage.\n\nLet me know if that answers your question and/or causes more.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/627#issuecomment-296262280|#627: Loading of Singularity Issues and Potential Network Congestion Issues?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492797893.581200",
        "date": 1492797893581
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by damonms on issue <https://github.com/singularityware/singularity/issues/627#issuecomment-296255798|#627: Loading of Singularity Issues and Potential Network Congestion Issues?>",
                "text": "Hi All,\n\nI work in the lab that is stemming this issue. I'm happy to provide test cases if desired.\n\nCheers,\nSteve",
                "pretext": "[singularityware/singularity] New comment by damonms on issue <https://github.com/singularityware/singularity/issues/627#issuecomment-296255798|#627: Loading of Singularity Issues and Potential Network Congestion Issues?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492796297.179758",
        "date": 1492796297179
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-296247946|#624: binding directories in the same base directory as home>",
                "text": "hey @bkemish !\n\nWhen you bind the base of /srv, by way of project and share being in the image, they are included under that bind. However if /srv/home is bound first to home, it's going to skip /srv all together. For example, here I have a folder \"gitlab\" in my /srv folder:\n```ls /srv\ngitlab\n```\nHere I am sheling into ubuntu, binding my home to srv/home\n ```vanessa@vanessa-ThinkPad-T450s:~$ singularity shell -B /home/vanessa:/srv/home/vanessa docker://ubuntu\nDocker image path: index.docker.io/library/ubuntu:latest\nCache folder set to /home/vanessa/.singularity/docker\nImporting: base Singularity environment\nExploding layer: sha256:c62795f78da9ad31d9669cb4feb4e8fba995a299a0b2bd0f05b10fdc05b1f35e.tar.gz\nExploding layer: sha256:d4fceeeb758e5103c39daf44c73404bf476ef6fd6b7a9a11e2260fcc1797c806.tar.gz\nExploding layer: sha256:5c9125a401ae0cf5a5b4128633e7a4e84230d3eb4c541c661618a70e5d29aeff.tar.gz\nExploding layer: sha256:0062f774e9942f61d13928855ab8111adc27def6f41bd6f7902c329ec836882b.tar.gz\nExploding layer: sha256:6b33fd031facf4d7dd97afeea8a93260c2f15c3e795eeccd8969198a3d52678d.tar.gz\nExploding layer: sha256:fe44851d529f465f9aa107b32351c8a0a722fc0619a2a7c22b058084fac068a4.tar.gz\nSingularity: Invoking an interactive shell within container...\n```\nand now we see home is there, gitlabis not.\n ```Singularity ubuntu:~&gt; ls /srv\nhome\nSingularity ubuntu:~&gt; \n```\nA similar thing happens when you specify Home instead of bind:\n```singularity shell -H /home/vanessa:/srv/home/vanessa docker://ubuntu\nDocker image path: index.docker.io/library/ubuntu:latest\nCache folder set to /home/vanessa/.singularity/docker\nImporting: base Singularity environment\nExploding layer: sha256:c62795f78da9ad31d9669cb4feb4e8fba995a299a0b2bd0f05b10fdc05b1f35e.tar.gz\nExploding layer: sha256:d4fceeeb758e5103c39daf44c73404bf476ef6fd6b7a9a11e2260fcc1797c806.tar.gz\nExploding layer: sha256:5c9125a401ae0cf5a5b4128633e7a4e84230d3eb4c541c661618a70e5d29aeff.tar.gz\nExploding layer: sha256:0062f774e9942f61d13928855ab8111adc27def6f41bd6f7902c329ec836882b.tar.gz\nExploding layer: sha256:6b33fd031facf4d7dd97afeea8a93260c2f15c3e795eeccd8969198a3d52678d.tar.gz\nExploding layer: sha256:fe44851d529f465f9aa107b32351c8a0a722fc0619a2a7c22b058084fac068a4.tar.gz\nSingularity: Invoking an interactive shell within container...\nSingularity ubuntu:/home/vanessa&gt; ls /srv/\nhome\nSingularity ubuntu:/home/vanessa&gt; ls /home\nvanessa\nSingularity ubuntu:/home/vanessa&gt; \n```\n\nSo this bug probably comes down to what gets bound first, what is specified as defaults for the container to bind, and if your configuring lets you create directories on the fly. If users have their homes under srv, and the setting in the configure binds this automatically, this means by default /srv/home/username is probably bound to the container's home, and the rest goes away (as we saw above).\n\nSo the warning that you get:\n```If I try \"singularity shell --bind /srv my.img\" I get the warning\nWARNING: Not mounting requested bind point (already mounted in container): /srv\n ```\nIs related to that point.\n\nThe other two error messages are related to the fact that you are asking to bind directories that don't exist in the container. There is a setting in the config that will have something along the lines of \"create non existing directories by default\" and this is likely turned off. For example, when I ask singularity to bind to a non existing point in my container on my local machine:\n```\n:~$ singularity shell -B /srv/gitlab:/scratch docker://ubuntu\nDocker image path: index.docker.io/library/ubuntu:latest\nCache folder set to /home/vanessa/.singularity/docker\nImporting: base Singularity environment\nExploding layer: sha256:c62795f78da9ad31d9669cb4feb4e8fba995a299a0b2bd0f05b10fdc05b1f35e.tar.gz\nExploding layer: sha256:d4fceeeb758e5103c39daf44c73404bf476ef6fd6b7a9a11e2260fcc1797c806.tar.gz\nExploding layer: sha256:5c9125a401ae0cf5a5b4128633e7a4e84230d3eb4c541c661618a70e5d29aeff.tar.gz\nExploding layer: sha256:0062f774e9942f61d13928855ab8111adc27def6f41bd6f7902c329ec836882b.tar.gz\nExploding layer: sha256:6b33fd031facf4d7dd97afeea8a93260c2f15c3e795eeccd8969198a3d52678d.tar.gz\nExploding layer: sha256:fe44851d529f465f9aa107b32351c8a0a722fc0619a2a7c22b058084fac068a4.tar.gz\nSingularity: Invoking an interactive shell within container...\n\nSingularity ubuntu:~&gt; ls /scratch/\nconfig data logs\n```It works fine because /scratch was created on the fly! If I try this one my cluster where I can't do this, or even if I run a container that doesn't have some \"automatically mounted\" directores inside I get that message:\n```\nsingularity shell docker://ubuntu:latest\nlibrary/ubuntu:latest\nDownloading layer: sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4\nDownloading layer: sha256:6b33fd031facf4d7dd97afeea8a93260c2f15c3e795eeccd8969198a3d52678d\nDownloading layer: sha256:0062f774e9942f61d13928855ab8111adc27def6f41bd6f7902c329ec836882b\nDownloading layer: sha256:5c9125a401ae0cf5a5b4128633e7a4e84230d3eb4c541c661618a70e5d29aeff\nDownloading layer: sha256:d4fceeeb758e5103c39daf44c73404bf476ef6fd6b7a9a11e2260fcc1797c806\nDownloading layer: sha256:c62795f78da9ad31d9669cb4feb4e8fba995a299a0b2bd0f05b10fdc05b1f35e\nWARNING: Non exista\nThere could be a bug that it is mounting home at /srv/home/, and then skipping the mount of /srv because it already finds home. I would play around with the -H option to try mounting home where it traditionally is (/home) and see if that helps to resolve some of the issues.\nnt bind point (directory) in container: '/share/PI'\nWARNING: Non existant bind point (directory) in container: '/scratch'\nWARNING: Non existant bind point (directory) in container: '/local-scratch'\nSingularity: Invoking an interactive shell within container...\n```\nand this is because I am not allowed to create mounts for directories in the container that don't exist. The setting that controls that is the following:\n\n```\n\n*ENABLE OVERLAY: [BOOL]*\n\n*DEFAULT: yes*\n\n*Enabling this option will make it possible to specify bind paths to locations*\n\n*that do not currently exist within the container. Some limitations still exist*\n\n*when running in completely non-privileged mode. (note: this option is only*\n\n*supported on hosts that support overlay file systems).*\n\n*note: currently disabled because RHEL7 kernel crashes with it... :(*\n\nenable overlay = no\n```(note this is version 2.2 above) 2.3 now looks like this:\n```\n\n*ENABLE OVERLAY: [BOOL]*\n\n*DEFAULT: yes*\n\n*Enabling this option will make it possible to specify bind paths to locations*\n\n*that do not currently exist within the container. note: this only works when*\n\n*using the standard SUID mode (not user-namespaces)).*\n\nenable overlay = yes\n```\n\nSo given that you have control over the setup / config file and want to allow users to bind directories and have them automatically created, you can change this setting. If not, then in your bootstrap spec you could just make:\n```mkdir -p /srv/project\nmkdir -p /srv/share\n```\nand then I would specify home to be bound to /home instead, and just bind those two directories to themselves. Eg:\n```singularity -H /srv/home/vanessa:/home -B /srv/project:/srv/project -B /srv/share/srv/share container.img\n```\nI don't think you need to specify the host:mount if it's the same, I just like doing that so I'm clear about my intentions, to myself, lol.\n\nAn easier route would just be to bind /srv, given that it exists in the container, it should include the subdirectores. The reason I didn't suggest this first is because it might already be detected as mounted given that home is mounted by default in the settings. You could play around with doing this and mount home elsewhere, or prevent it from being mounted.\n\nHopefully this gives some insight and things to try! If you are still having trouble, please show the commands that you've tried with --debug and we should be able to see exactly what is going on there.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-296247946|#624: binding directories in the same base directory as home>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492794315.698225",
        "date": 1492794315698
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#627 Loading of Singularity Issues and Potential Network Congestion Issues?' https://github.com/singularityware/singularity/issues/627 by frenchwr",
                "text": "Hi there! We have started using Singularity at Vanderbilt University's HPC center (Advanced Computing Center for Research and Education, or ACCRE; <http://www.accre.vanderbilt.edu/>) and we LOVE it! Really great work with this tool.\n\nOne issue that is a little unclear to me...\n\nWe have a lot of relatively small, embarrassingly parallel type analyses on our cluster. It is not uncommon at all for users to submit and run 1000 or more single core jobs through SLURM at once with job arrays, with each job running for a relatively short amount of time. Should we be concerned about potential network congestion issues if an image is loaded off of a shared filesystem (we use GPFS) potentially hundreds or thousands of times in a relatively short period of time? Some of the images being developed by our users are on the order of 5GB. Does the entire image get moved from GPFS to a compute node each time a container of that image is run?\n\nThanks again, and all the best! ",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/frenchwr|frenchwr>",
                "title": "#627 Loading of Singularity Issues and Potential Network Congestion Issues?",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/627",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492794212.672510",
        "date": 1492794212672
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#626 chdir to image directory to keep image accessed, prevent unmount' https://github.com/singularityware/singularity/pull/626 by DrDaveD",
                "text": "Change proposed in this pull request:\n\nâ€¢ When the image is a directory, chdir to that directory in the outer sexec process.  This is to fix a problem at least on some kernels (e.g. the one in Centos7.3), where there's something about singularity's use of containers that prevents the kernel from thinking that the image is still in use if this chdir is not done. That is, the kernel does not prevent the filesystem that the image is in from being unmounted.  This was first noticed in a case where the filesystem was automounted, but it is also easily demonstrated with a manual umount command.  Keeping a file descriptor open to the top level directory would probably work just as well, but this seems simpler.\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/DrDaveD|DrDaveD>",
                "title": "#626 chdir to image directory to keep image accessed, prevent unmount",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/626",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492793701.540353",
        "date": 1492793701540
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/354#issuecomment-296227465|#354: Strange bind behavior on cluster>",
                "text": "I see we never updated this issue after Centos7.3 came out: it does not crash with overlayfs use in singularity in combination with cvmfs like it did with 7.2.  Here's the <https://sft.its.cern.ch/jira/browse/CVM-1090|cvmfs ticket> for reference.",
                "pretext": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/354#issuecomment-296227465|#354: Strange bind behavior on cluster>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492789552.451053",
        "date": 1492789552451
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296225972|#625: make singularity calling cmdline available from within container>",
                "text": "Hi @katakombi, what if there was a single variable, perhaps something like `SINGULARITYCMD=...` which has the full command. The bigger problem in either case is related to quoting of variables. Do you have any thoughts on how to solve that?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296225972|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492789214.354785",
        "date": 1492789214354
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/622#issuecomment-296223258|#622: mentioning googlegroup/gitter/slack/whatever in readme>",
                "text": "I craeted a community ages ago, before we moved it to its own organization. So I just created one for SingularityWare at <https://gitter.im/singularityware> if anyone wants to test.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/622#issuecomment-296223258|#622: mentioning googlegroup/gitter/slack/whatever in readme>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492788603.179798",
        "date": 1492788603179
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-296194324|#624: binding directories in the same base directory as home>",
                "text": "Hi @bkemish for \n&gt; \"Can anyone tell me how to either fix the binding on /srv or disable the automatic binding of $HOME so that I can bind /srv manually myself.\" \nTake a loot at \n```/usr/local/etc/singularity/singularity.conf```\n```bash\n\n*SINGULARITY.CONF*\n\n*This is the global configuration file for Singularity. This file controls*\n\n*what the container is allowed to do on a particular host, and as a result*\n\n*this file must be owned by root.*\n\n```\n\nAlso for the rest of the issue, would you give it a to the ```development``` branch and see if it works. I don' t have those folders on network, and  \n```singularity shell --bind /srv/ my.img\n```\nWorked for in my host",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-296194324|#624: binding directories in the same base directory as home>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492782254.425037",
        "date": 1492782254425
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#625 make singularity calling cmdline available from within container' https://github.com/singularityware/singularity/issues/625 by katakombi",
                "text": "In order to spawn nested container calls on neighbour nodes via ssh I'd like to have the entire cmdline available from within the container process, e.g. `singularity exec -B /mnt/share /home/user/containers/Ubuntu.sapp`\n\nBy now there is a certain amount of information inside a container process telling about how the container process got invoked, namely\n\nâ€¢ SINGULARITY_libexecdir=/usr/lib/x86_64-linux-gnu\nâ€¢ SINGULARITY_localstatedir=/var\nâ€¢ SINGULARITY_sysconfdir=/etc\nâ€¢ SINGULARITY_INIT=1\nâ€¢ SINGULARITY_CONTAINER=e.g. Ubuntu.sapp\nâ€¢ SINGULARITY_IMAGE=e.g. Ubuntu.sapp\n\nbut not sufficient for e.g. custom binds passed via the `-B` parameter.\nIn my case it would be enough to make the entire call available using one variable.\n\nSee also: <https://groups.google.com/a/lbl.gov/forum/#!topic/singularity/2_BuEkMb6aI>",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/katakombi|katakombi>",
                "title": "#625 make singularity calling cmdline available from within container",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/625",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492773494.866577",
        "date": 1492773494866
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#624 binding directories in the same base directory as home ' https://github.com/singularityware/singularity/issues/624 by bkemish",
                "text": "I am trying to use singularity on a  Linux cluster where network users have their home directory mapped to /srv/home/&lt;username&gt;. I also wish to bind 2 other network directories called /srv/proj and /srv/share. I created /srv/home, /srv/proj and /srv/share in the image. When I try to run \"singularity shell --bind /srv/proj --bind /srv/share my.img\" I get the warnings\nWARNING: Skipping user bind, non existant bind point (directory) in container: '/srv/proj'\nWARNING: Skipping user bind, non existant bind point (directory) in container: '/srv/share'\nand  the directories aren't bound.\n\nIf I try  \"singularity shell --bind /srv my.img\" I get the warning\nWARNING: Not mounting requested bind point (already  mounted in container): /srv\n\nIf I use a local user whose home directory is in /home everything works perfectly. I have tried changing the home using the -H option and --contain but /srv/home is still bound and I can not bind anything else in /srv. I can bind those directories to other locations on the image, but my use case is to run old pipelines which were developed on an old version of Ubuntu and unfortunately they have these directories hardcoded all over the place. Can anyone tell me how to either fix the binding on /srv or disable the automatic binding of $HOME so that I can bind /srv manually myself.\n\nThanks.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/bkemish|bkemish>",
                "title": "#624 binding directories in the same base directory as home ",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/624",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492738576.628316",
        "date": 1492738576628
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#623 RFE: `singularity shrink`' https://github.com/singularityware/singularity/issues/623 by akkornel",
                "text": "When I am bootstrapping a container, I'm never too sure how big that container image needs to be.  However, once I'm done bootstrapping it, I should never need to make changes to it.\n\nIt would be nice to have a `singularity shrink` command, which will shrink a container image to its smallest size.\n\nIt's actually possible to do this in shell today, with something like this script:\n\n```image=PATH_TO_IMAGE\nstripped_img=`tempfile --directory=.`\ntail -n +2 $image &gt; $stripped_img\ne2fsck -f $stripped_img\nresize2fs -M $stripped_img\nshrunk_img=`tempfile --directory=.`\nhead -n 1 $image &gt; $shrunk_img\ncat $stripped_img &gt;&gt; $shrunk_img\nrm $stripped_img\nmv $shrunk_img $image\nchmod a+x $image\n```\n\nThe above shell is inefficient (space utilization is up to 2x the image size), but safe (the original image isn't deleted until the very end).\n\nBut, it would probably be better implemented in the same way as `singularity expand`.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/akkornel|akkornel>",
                "title": "#623 RFE: `singularity shrink`",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/623",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492733683.145976",
        "date": 1492733683145
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/619#issuecomment-295947065|#619: `-f/--file` option restored to export command in export.exec and export.help>",
                "text": "Merged, thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/619#issuecomment-295947065|#619: `-f/--file` option restored to export command in export.exec and export.help>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492727755.392923",
        "date": 1492727755392
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/619|#619 `-f/--file` option restored to export command in export.exec and export.help> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/619|#619 `-f/--file` option restored to export command in export.exec and export.help> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492727746.391482",
        "date": 1492727746391
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/622#issuecomment-295936623|#622: mentioning googlegroup/gitter/slack/whatever in readme>",
                "text": "Hey Anton - are you suggesting Gitter in place of slack? We don't currently have a paid plan, so most of the conversation on slack is (soon) lost given the number o users that we have.  I haven't looked at Gitter in a long bit - is it unlimited for free, for history too?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/622#issuecomment-295936623|#622: mentioning googlegroup/gitter/slack/whatever in readme>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492725996.113046",
        "date": 1492725996113
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/621#issuecomment-295933494|#621: make normal UP button inside shell>",
                "text": "Could you try the development branch? We handle the shell differently now! I used to have this bug too and haven't seen it in a while.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/621#issuecomment-295933494|#621: make normal UP button inside shell>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492725503.020581",
        "date": 1492725503020
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by antonkulaga on issue <https://github.com/singularityware/singularity/issues/621#issuecomment-295930190|#621: make normal UP button inside shell>",
                "text": "Here is what I did to get the bug:\n``` sudo singularity import sra.img docker://itsjeffreyy/sratoolkit\n singularity shell sra.img\nSingularity.sra.img&gt; ls \nSingularity.sra.img&gt; ^[[A #when I push \"up arrow\"\n```\nI use the version from the website, 2.2.1",
                "pretext": "[singularityware/singularity] New comment by antonkulaga on issue <https://github.com/singularityware/singularity/issues/621#issuecomment-295930190|#621: make normal UP button inside shell>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492725019.927903",
        "date": 1492725019927
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/621#issuecomment-295928530|#621: make normal UP button inside shell>",
                "text": "What version of singualrity are you using @antonkulaga? \n\nThe development branch should automatically use `/bin/bash` if it is available, where previous versions just always called `/bin/sh`.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/621#issuecomment-295928530|#621: make normal UP button inside shell>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492724758.877698",
        "date": 1492724758877
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#622 making a gitter channel' https://github.com/singularityware/singularity/issues/622 by antonkulaga",
                "text": "Gitter chats and mailing lists are often useful to facilitate the discussions inside the commonity. In case of gitter it is super-easy to make it and add the badge to the repo",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/antonkulaga|antonkulaga>",
                "title": "#622 making a gitter channel",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/622",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492722539.404962",
        "date": 1492722539404
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/619#issuecomment-295906806|#619: `-f/--file` option restored to export command in export.exec and export.help>",
                "text": "It looks good! Well done! I will test it locally here shortly.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/619#issuecomment-295906806|#619: `-f/--file` option restored to export command in export.exec and export.help>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492721439.136740",
        "date": 1492721439136
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/621#issuecomment-295875178|#621: make normal UP button inside shell>",
                "text": "I am having trouble reproducing this (because I've had the same error for a long time) but I think it has to do with your `$SHELL` variable, specifically this happened for me on ubuntu when I wasn't using bash. What do you have for `$SHELL` both inside and outside the container and does it change when you start the container with `/bin/bash` instead?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/621#issuecomment-295875178|#621: make normal UP button inside shell>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492717209.059326",
        "date": 1492717209059
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#621 make normal UP button inside shell' https://github.com/singularityware/singularity/issues/621 by antonkulaga",
                "text": "Whe I shell into the container by\n```singularity shell foo.img\n```\nand try to run the previous command I get\n``` ^[[A\n```\nInstead of the previous command. This is super annoying, is it possible to fix it?",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/antonkulaga|antonkulaga>",
                "title": "#621 make normal UP button inside shell",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/621",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492716305.825851",
        "date": 1492716305825
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295834394|#39: strange mount/unmount behavior>",
                "text": "@vsoch I am using the raw devices and communicating to the driver via `ioctl()`. There is no underlying shell commands or other hooks that I am aware of.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295834394|#39: strange mount/unmount behavior>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492711050.375608",
        "date": 1492711050375
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/619#issuecomment-295818881|#619: `-f/--file` option restored to export command in export.exec and export.help>",
                "text": "Looks good! Now just one more thing to do. Can you write a few tests for this in `tests/28-importexport.sh`?\n\nThen it will be ready to merge! Well done!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/619#issuecomment-295818881|#619: `-f/--file` option restored to export command in export.exec and export.help>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492708184.580929",
        "date": 1492708184580
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/619#issuecomment-295802452|#619: `-f/--file` option restored to export command in export.exec and export.help>",
                "text": "Actually, the problem was fixed by `SINGULARITY_EXPORT_FILE=\"\"` as that defined the variable. The error you were getting was because the variable was not defined (not the quotes, but quotes are good). Another fix, and what I would recommend would be to instead get rid of the above line and do this to your conditional:\n\n```if [ -n \"${SINGULARITY_EXPORT_FILE:-}\" ]; then\n```",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/619#issuecomment-295802452|#619: `-f/--file` option restored to export command in export.exec and export.help>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492705765.907649",
        "date": 1492705765907
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on pull request <https://github.com/singularityware/singularity/pull/619#issuecomment-295770940|#619: `-f/--file` option restored to export command in export.exec and export.help>",
                "text": "Hi @gmkurtzer Done!  \n\nGreen travis !",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on pull request <https://github.com/singularityware/singularity/pull/619#issuecomment-295770940|#619: `-f/--file` option restored to export command in export.exec and export.help>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492700855.398749",
        "date": 1492700855398
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295750552|#611: Nvidia GPU support with different driver versions?>",
                "text": "Prob should have thought to give you that info in the first place. :stuck_out_tongue_winking_eye: \n\nI pm-ed you the info on slack.",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295750552|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492697235.266949",
        "date": 1492697235266
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295584997|#39: strange mount/unmount behavior>",
                "text": "<http://manpages.ubuntu.com/manpages/zesty/man8/mount.8.html#contenttoc6|This page> has some tidbits that might be useful...\n\n```    The mount command automatically creates a loop device  from  a  regular\n          file  if  a filesystem type is not specified or the filesystem is known\n          for libblkid, for example:\n```          mount /tmp/disk.img /mnt\n\n          mount -t ext3 /tmp/disk.img /mnt\n\n      This type of mount knows about three options, namely loop,  offset  and\n      sizelimit,  that  are really options to losetup(8).  (These options can\n      be used in addition to those specific to the filesystem type.)```\n```\n\n@gmkurtzer what is the C / shell command to set up the loop? We could start by looking at what that triggers, on Ubuntu,and then see if there is some flag or other that can be specified to prevent the actual mount.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295584997|#39: strange mount/unmount behavior>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492665707.998750",
        "date": 1492665707998
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295583374|#39: strange mount/unmount behavior>",
                "text": "Not sure, I'm reading <https://help.ubuntu.com/community/AutomaticallyMountPartitions|here> to start.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295583374|#39: strange mount/unmount behavior>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492665156.954963",
        "date": 1492665156954
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295580998|#39: strange mount/unmount behavior>",
                "text": "Wow, that is quite interesting... It seems like Ubuntu is seeing the image bind to the loop device and taking the initiative to mount the loop device directly. I don't like that at all, but I don't see a way around it. Thoughts?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295580998|#39: strange mount/unmount behavior>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492664353.889641",
        "date": 1492664353889
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295580139|#39: strange mount/unmount behavior>",
                "text": "It looks like ubuntu uses `/media` (username) as a general mount point for disks and whatnot:\n\n&gt; &gt; /media is intended as a mount point for external devices, such as hard drives or removable media (floppies, CDs, DVDs).\nfrom <https://help.ubuntu.com/community/LinuxFilesystemTreeOverview|here>",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295580139|#39: strange mount/unmount behavior>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492664058.866865",
        "date": 1492664058866
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295579891|#39: strange mount/unmount behavior>",
                "text": "```\n cat /etc/fstab\n\n*/etc/fstab: static file system information.*\n\n#\n\n*Use 'blkid' to print the universally unique identifier for a*\n\n*device; this may be used with UUID= as a more robust way to name devices*\n\n*that works even if disks are added and removed. See fstab(5).*\n\n#\n\n*&lt;file system&gt; &lt;mount point&gt;   &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;*\n\n/dev/mapper/ubuntu--vg-root /               ext4    errors=remount-ro 0       1\n\n*/boot was on /dev/sda2 during installation*\n\nUUID=75f22c8b-bde6-49fe-9ab9-f341bc4b6b77 /boot           ext2    defaults        0       2\n\n*/boot/efi was on /dev/sda1 during installation*\n\nUUID=F323-AD7C  /boot/efi       vfat    defaults        0       1\n/dev/mapper/ubuntu--vg-swap_1 none            swap    sw              0       0\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295579891|#39: strange mount/unmount behavior>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492663980.861204",
        "date": 1492663980861
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295579694|#39: strange mount/unmount behavior>",
                "text": "```\nvanessa@vanessa-ThinkPad-T450s:~$ sudo fdisk -l\n[sudo] password for vanessa: \n\nWARNING: GPT (GUID Partition Table) detected on '/dev/sda'! The util fdisk doesn't support GPT. Use GNU Parted.\n\nDisk /dev/sda: 512.1 GB, 512110190592 bytes\n255 heads, 63 sectors/track, 62260 cylinders, total 1000215216 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisk identifier: 0x2df5fa84\n\n   Device Boot      Start         End      Blocks   Id  System\n/dev/sda1               1  1000215215   500107607+  ee  GPT\n\nDisk /dev/mapper/ubuntu--vg-root: 490.0 GB, 489953427456 bytes\n255 heads, 63 sectors/track, 59566 cylinders, total 956940288 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisk identifier: 0x00000000\n\nDisk /dev/mapper/ubuntu--vg-root doesn't contain a valid partition table\n\nDisk /dev/mapper/ubuntu--vg-swap_1: 21.3 GB, 21344813056 bytes\n255 heads, 63 sectors/track, 2595 cylinders, total 41689088 sectors\nUnits = sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisk identifier: 0x00000000\n\nDisk /dev/mapper/ubuntu--vg-swap_1 doesn't contain a valid partition table\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295579694|#39: strange mount/unmount behavior>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492663909.855818",
        "date": 1492663909855
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295579570|#39: strange mount/unmount behavior>",
                "text": "```vanessa@vanessa-ThinkPad-T450s:~$ mount\n/dev/mapper/ubuntu--vg-root on / type ext4 (rw,errors=remount-ro)\nproc on /proc type proc (rw,noexec,nosuid,nodev)\nsysfs on /sys type sysfs (rw,noexec,nosuid,nodev)\nnone on /sys/fs/cgroup type tmpfs (rw)\nnone on /sys/fs/fuse/connections type fusectl (rw)\nnone on /sys/kernel/debug type debugfs (rw)\nnone on /sys/kernel/security type securityfs (rw)\nnone on /sys/firmware/efi/efivars type efivarfs (rw)\nudev on /dev type devtmpfs (rw,mode=0755)\ndevpts on /dev/pts type devpts (rw,noexec,nosuid,gid=5,mode=0620)\ntmpfs on /run type tmpfs (rw,noexec,nosuid,size=10%,mode=0755)\nnone on /run/lock type tmpfs (rw,noexec,nosuid,nodev,size=5242880)\nnone on /run/shm type tmpfs (rw,nosuid,nodev)\nnone on /run/user type tmpfs (rw,noexec,nosuid,nodev,size=104857600,mode=0755)\nnone on /sys/fs/pstore type pstore (rw)\ncgroup on /sys/fs/cgroup/cpuset type cgroup (rw,relatime,cpuset)\ncgroup on /sys/fs/cgroup/cpu type cgroup (rw,relatime,cpu)\ncgroup on /sys/fs/cgroup/cpuacct type cgroup (rw,relatime,cpuacct)\ncgroup on /sys/fs/cgroup/memory type cgroup (rw,relatime,memory)\ncgroup on /sys/fs/cgroup/devices type cgroup (rw,relatime,devices)\ncgroup on /sys/fs/cgroup/freezer type cgroup (rw,relatime,freezer)\ncgroup on /sys/fs/cgroup/net_cls type cgroup (rw,relatime,net_cls)\ncgroup on /sys/fs/cgroup/blkio type cgroup (rw,relatime,blkio)\ncgroup on /sys/fs/cgroup/perf_event type cgroup (rw,relatime,perf_event)\ncgroup on /sys/fs/cgroup/net_prio type cgroup (rw,relatime,net_prio)\ncgroup on /sys/fs/cgroup/hugetlb type cgroup (rw,relatime,hugetlb)\n/dev/sda2 on /boot type ext2 (rw)\n/dev/sda1 on /boot/efi type vfat (rw)\nbinfmt_misc on /proc/sys/fs/binfmt_misc type binfmt_misc (rw,noexec,nosuid,nodev)\ngvfsd-fuse on /run/user/1000/gvfs type fuse.gvfsd-fuse (rw,nosuid,nodev,user=vanessa)\ngvfsd-fuse on /home/vanessa/.gvfs type fuse.gvfsd-fuse (rw,nosuid,nodev)\n/tmp/test.img on /media/vanessa/4bdcde31-e46b-4e43-ae37-f76a561710c6 type ext3 (ro,nosuid,nodev,uhelper=udisks2)\n```\n\n```vanessa@vanessa-ThinkPad-T450s:~$ df -h\nFilesystem      Size  Used Avail Use% Mounted on\nudev            9.8G   12K  9.8G   1% /dev\ntmpfs           2.0G  1.6M  2.0G   1% /run\n/dev/dm-0       450G  367G   60G  86% /\nnone            4.0K     0  4.0K   0% /sys/fs/cgroup\nnone            5.0M     0  5.0M   0% /run/lock\nnone            9.8G  454M  9.4G   5% /run/shm\nnone            100M   56K  100M   1% /run/user\n/dev/sda2       237M   48M  177M  22% /boot\n/dev/sda1       511M  3.4M  508M   1% /boot/efi\n/dev/loop0      740M  207M  495M  30% /media/vanessa/4bdcde31-e46b-4e43-ae37-f76a561710c6\n```\n\n```vanessa@vanessa-ThinkPad-T450s:~$ cat /proc/mounts\nsysfs /sys sysfs rw,nosuid,nodev,noexec,relatime 0 0\nproc /proc proc rw,nosuid,nodev,noexec,relatime 0 0\nudev /dev devtmpfs rw,relatime,size=10207572k,nr_inodes=2551893,mode=755 0 0\ndevpts /dev/pts devpts rw,nosuid,noexec,relatime,gid=5,mode=620,ptmxmode=000 0 0\ntmpfs /run tmpfs rw,nosuid,noexec,relatime,size=2043804k,mode=755 0 0\n/dev/dm-0 / ext4 rw,relatime,errors=remount-ro,data=ordered 0 0\nnone /sys/fs/cgroup tmpfs rw,relatime,size=4k,mode=755 0 0\nnone /sys/fs/fuse/connections fusectl rw,relatime 0 0\nnone /sys/kernel/debug debugfs rw,relatime 0 0\nnone /sys/kernel/security securityfs rw,relatime 0 0\nnone /sys/firmware/efi/efivars efivarfs rw,relatime 0 0\ncgroup /sys/fs/cgroup/cpuset cgroup rw,relatime,cpuset 0 0\nnone /run/lock tmpfs rw,nosuid,nodev,noexec,relatime,size=5120k 0 0\nnone /run/shm tmpfs rw,nosuid,nodev,relatime 0 0\nnone /run/user tmpfs rw,nosuid,nodev,noexec,relatime,size=102400k,mode=755 0 0\ncgroup /sys/fs/cgroup/cpu cgroup rw,relatime,cpu 0 0\nnone /sys/fs/pstore pstore rw,relatime 0 0\ncgroup /sys/fs/cgroup/cpuacct cgroup rw,relatime,cpuacct 0 0\ncgroup /sys/fs/cgroup/memory cgroup rw,relatime,memory 0 0\ncgroup /sys/fs/cgroup/devices cgroup rw,relatime,devices 0 0\ncgroup /sys/fs/cgroup/freezer cgroup rw,relatime,freezer 0 0\ncgroup /sys/fs/cgroup/net_cls cgroup rw,relatime,net_cls 0 0\ncgroup /sys/fs/cgroup/blkio cgroup rw,relatime,blkio 0 0\ncgroup /sys/fs/cgroup/perf_event cgroup rw,relatime,perf_event 0 0\ncgroup /sys/fs/cgroup/net_prio cgroup rw,relatime,net_prio 0 0\ncgroup /sys/fs/cgroup/hugetlb cgroup rw,relatime,hugetlb 0 0\nname=systemd /sys/fs/cgroup/systemd cgroup rw,relatime,name=systemd 0 0\n/dev/sda2 /boot ext2 rw,relatime 0 0\n/dev/sda1 /boot/efi vfat rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=iso8859-1,shortname=mixed,errors=remount-ro 0 0\nbinfmt_misc /proc/sys/fs/binfmt_misc binfmt_misc rw,nosuid,nodev,noexec,relatime 0 0\n/dev/dm-0 /var/lib/docker/aufs ext4 rw,relatime,errors=remount-ro,data=ordered 0 0\ngvfsd-fuse /run/user/1000/gvfs fuse.gvfsd-fuse rw,nosuid,nodev,relatime,user_id=1000,group_id=1000 0 0\ngvfsd-fuse /home/vanessa/.gvfs fuse.gvfsd-fuse rw,nosuid,nodev,relatime,user_id=0,group_id=0 0 0\n/dev/loop0 /media/vanessa/4bdcde31-e46b-4e43-ae37-f76a561710c6 ext3 ro,nosuid,nodev,relatime,errors=remount-ro,data=ordered 0 0\n```\n\n```vanessa@vanessa-ThinkPad-T450s:~$ cat /etc/mtab\n/dev/mapper/ubuntu--vg-root / ext4 rw,errors=remount-ro 0 0\nproc /proc proc rw,noexec,nosuid,nodev 0 0\nsysfs /sys sysfs rw,noexec,nosuid,nodev 0 0\nnone /sys/fs/cgroup tmpfs rw 0 0\nnone /sys/fs/fuse/connections fusectl rw 0 0\nnone /sys/kernel/debug debugfs rw 0 0\nnone /sys/kernel/security securityfs rw 0 0\nnone /sys/firmware/efi/efivars efivarfs rw 0 0\nudev /dev devtmpfs rw,mode=0755 0 0\ndevpts /dev/pts devpts rw,noexec,nosuid,gid=5,mode=0620 0 0\ntmpfs /run tmpfs rw,noexec,nosuid,size=10%,mode=0755 0 0\nnone /run/lock tmpfs rw,noexec,nosuid,nodev,size=5242880 0 0\nnone /run/shm tmpfs rw,nosuid,nodev 0 0\nnone /run/user tmpfs rw,noexec,nosuid,nodev,size=104857600,mode=0755 0 0\nnone /sys/fs/pstore pstore rw 0 0\ncgroup /sys/fs/cgroup/cpuset cgroup rw,relatime,cpuset 0 0\ncgroup /sys/fs/cgroup/cpu cgroup rw,relatime,cpu 0 0\ncgroup /sys/fs/cgroup/cpuacct cgroup rw,relatime,cpuacct 0 0\ncgroup /sys/fs/cgroup/memory cgroup rw,relatime,memory 0 0\ncgroup /sys/fs/cgroup/devices cgroup rw,relatime,devices 0 0\ncgroup /sys/fs/cgroup/freezer cgroup rw,relatime,freezer 0 0\ncgroup /sys/fs/cgroup/net_cls cgroup rw,relatime,net_cls 0 0\ncgroup /sys/fs/cgroup/blkio cgroup rw,relatime,blkio 0 0\ncgroup /sys/fs/cgroup/perf_event cgroup rw,relatime,perf_event 0 0\ncgroup /sys/fs/cgroup/net_prio cgroup rw,relatime,net_prio 0 0\ncgroup /sys/fs/cgroup/hugetlb cgroup rw,relatime,hugetlb 0 0\n/dev/sda2 /boot ext2 rw 0 0\n/dev/sda1 /boot/efi vfat rw 0 0\nbinfmt_misc /proc/sys/fs/binfmt_misc binfmt_misc rw,noexec,nosuid,nodev 0 0\ngvfsd-fuse /run/user/1000/gvfs fuse.gvfsd-fuse rw,nosuid,nodev,user=vanessa 0 0\ngvfsd-fuse /home/vanessa/.gvfs fuse.gvfsd-fuse rw,nosuid,nodev 0 0\n/dev/loop0 /media/vanessa/4bdcde31-e46b-4e43-ae37-f76a561710c6 ext3 ro,nosuid,nodev,uhelper=udisks2 0 0\n```\n\n```vanessa@vanessa-ThinkPad-T450s:~$ dmesg | tail\n[384302.214726] EXT4-fs (loop0): mounting ext3 file system using the ext4 subsystem\n[384302.214927] EXT4-fs (loop0): mounted filesystem with ordered data mode. Opts: errors=remount-ro\n[384422.966861] EXT4-fs (loop0): mounting ext3 file system using the ext4 subsystem\n[384422.969552] EXT4-fs (loop0): mounted filesystem with ordered data mode. Opts: errors=remount-ro\n[384740.970417] thinkpad_acpi: EC reports that Thermal Table has changed\n[384847.975694] systemd-hostnamed[15885]: Warning: nss-myhostname is not installed. Changing the local hostname might make it unresolveable. Please install nss-myhostname!\n[384949.883432] EXT4-fs (loop0): mounting ext3 file system using the ext4 subsystem\n[384949.883920] EXT4-fs (loop0): mounted filesystem with ordered data mode. Opts: errors=remount-ro\n[385150.736716] EXT4-fs (loop1): mounting ext3 file system using the ext4 subsystem\n[385150.736950] EXT4-fs (loop1): mounted filesystem with ordered data mode. Opts: errors=remount-ro\n```\n\nThis might be useful too:\n\n```vanessa@vanessa-ThinkPad-T450s:~$ blkid\n/dev/sda1: UUID=\"F323-AD7C\" TYPE=\"vfat\" \n/dev/sda2: UUID=\"75f22c8b-bde6-49fe-9ab9-f341bc4b6b77\" TYPE=\"â€¦",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295579570|#39: strange mount/unmount behavior>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492663843.850598",
        "date": 1492663843850
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295578847|#39: strange mount/unmount behavior>",
                "text": "OMG,... I dislike that a lot! When you have a Singularity shell open, can you show me the output of the following commands from a different shell:\n\n```$ mount\n$ df -h\n$ cat /proc/mounts\n$ cat /etc/mtab\n$ dmesg | tail\n```\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295578847|#39: strange mount/unmount behavior>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492663445.820281",
        "date": 1492663445820
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295578646|#611: Nvidia GPU support with different driver versions?>",
                "text": "Oh, I forgot to mention, to see the leftover sessiondir, you must invoke Singularity like this:\n\n```SINGULARITY_NOSESSIONCLEANUP=1 singularity -d exec -n docker://ubuntu &gt;/tmp/debug 2&gt;&amp;1\n```\nThen in the debug output file, you will see where the sessiondir is, can you show me the permissions of both the sessiondir itself as well as the `libs/` directory within it?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295578646|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492663323.811235",
        "date": 1492663323811
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by kellyrowland on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295576952|#39: strange mount/unmount behavior>",
                "text": "I don't know? As mentioned above, whatever the \"strange behavior\" was happened a year ago and was not documented well...\n\nFWIW, I unmounted the volume (with Nautilus) and then successfully ran a basic \"echo\" command in the open Singularity shell in the terminal; I'm not sure if that behavior is expected or not.",
                "pretext": "[singularityware/singularity] New comment by kellyrowland on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295576952|#39: strange mount/unmount behavior>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492662478.744508",
        "date": 1492662478744
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295576546|#39: strange mount/unmount behavior>",
                "text": "maybe you are using auto mounting of some kind, or opening nautilus when something mounts? \n\n<https://askubuntu.com/questions/191527/disable-auto-opening-nautilus-window-after-auto-mount>",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295576546|#39: strange mount/unmount behavior>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492662332.733092",
        "date": 1492662332733
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295576344|#39: strange mount/unmount behavior>",
                "image_url": "https://cloud.githubusercontent.com/assets/814322/25213571/594f5f76-2546-11e7-9641-164c444e95b1.png",
                "image_width": 225,
                "image_height": 119,
                "image_bytes": 19296,
                "text": "Isn't this just standard ubuntu? Shelling into an image you have to mount it somewhere, and ubuntu by default shows mounts in the unity bar:\n\n<https://cloud.githubusercontent.com/assets/814322/25213571/594f5f76-2546-11e7-9641-164c444e95b1.png|image>\n\nand if you click, it will open up the location:\n\n<https://cloud.githubusercontent.com/assets/814322/25213581/6ec69f22-2546-11e7-9206-4e64bad874a7.png|image>\n\nwhich is some random mount under media:\n\n<https://cloud.githubusercontent.com/assets/814322/25213592/8478e1f4-2546-11e7-94ab-fc46457277df.png|image>\n\nhow would we expect that to be different?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295576344|#39: strange mount/unmount behavior>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            },
            {
                "fallback": "1296x687px image",
                "image_url": "https://cloud.githubusercontent.com/assets/814322/25213581/6ec69f22-2546-11e7-9206-4e64bad874a7.png",
                "image_width": 1296,
                "image_height": 687,
                "image_bytes": 96991,
                "id": 2,
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            },
            {
                "fallback": "1188x279px image",
                "image_url": "https://cloud.githubusercontent.com/assets/814322/25213592/8478e1f4-2546-11e7-94ab-fc46457277df.png",
                "image_width": 1188,
                "image_height": 279,
                "image_bytes": 51698,
                "id": 3,
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492662259.727018",
        "date": 1492662259727
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295575100|#611: Nvidia GPU support with different driver versions?>",
                "text": "What is your umask?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295575100|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492661780.690021",
        "date": 1492661780690
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by kellyrowland on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295573961|#39: strange mount/unmount behavior>",
                "image_url": "https://cloud.githubusercontent.com/assets/5440574/25213271/6d953bd4-25ca-11e7-9aca-b0e439d36fa6.png",
                "image_width": 855,
                "image_height": 569,
                "image_bytes": 86625,
                "text": "Hey @gmkurtzer -\n\nI think this is still a problem? I entered the commands as written and have this now open:\n\n<https://cloud.githubusercontent.com/assets/5440574/25213271/6d953bd4-25ca-11e7-9aca-b0e439d36fa6.png|image>",
                "pretext": "[singularityware/singularity] New comment by kellyrowland on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-295573961|#39: strange mount/unmount behavior>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492661357.656083",
        "date": 1492661357656
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295558426|#611: Nvidia GPU support with different driver versions?>",
                "text": "That is a very weird place for it to error out. I can't seem to replicate it, can you send me the full debug output as well as the permissions for that directory(`/tmp/.singularity-runtime.ka4aN7De/libs`)? Thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295558426|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492656671.259189",
        "date": 1492656671259
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/619#issuecomment-295556859|#619: `-f/--file` option restored to export command in export.exec and export.help>",
                "text": "Hi @ArangoGutierrez,\n\nThis looks good, but check the CI failure:\n\n<https://travis-ci.org/singularityware/singularity/builds/223749358#L3522>\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/619#issuecomment-295556859|#619: `-f/--file` option restored to export command in export.exec and export.help>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492656109.209316",
        "date": 1492656109209
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/619#issuecomment-295518725|#619: `-f/--file` option restored to export command in export.exec and export.help>",
                "text": "This option is no longer supported. <https://github.com/singularityware/singularity/issues/610#issuecomment-294570584>",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/619#issuecomment-295518725|#619: `-f/--file` option restored to export command in export.exec and export.help>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492649536.557986",
        "date": 1492649536557
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295508836|#611: Nvidia GPU support with different driver versions?>",
                "text": "OK, so after installing <https://github.com/singularityware/singularity/commit/cb5d6c5ccb46dc386f9401c24dabf86f39d84698,> I tried this:\n```singularity exec -n docker://tensorflow/tensorflow:latest-gpu python -m tensorflow.models.image.mnist.convolutional\n```\nand I got this (after all the fancy explosions):\n```ERROR  : Could not write to /tmp/.singularity-runtime.ka4aN7De/libs/libnvidia-tls.so.367.48: Permission denied\nERROR  : Failed creating file at /tmp/.singularity-runtime.ka4aN7De/libs/libnvidia-tls.so.367.48: Permission denied\nABORT  : Retval = 255\n```",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295508836|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492647941.393673",
        "date": 1492647941393
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295494296|#611: Nvidia GPU support with different driver versions?>",
                "text": "Hi @kcgthb,\n\nYour point about library compatibility and portability between distros is a good one, but the Nvidia library does not and can not fix that. The libraries that the build (as I understand) are built against reasonably old and thus compatible versions of glibc, so we get general compatibility across most (if not all) current distributions of Linux.\n\n@GodloveD Can you test the latest development branch. I moved things to the C backend, and I've updated the frontend considerably, so now there is a dedicated action_argparser.sh which does the library discovery. Eventually, we can move that to C as well, but for the time being, this works fine and is easily compatible (as long as the libraries are found via ld's standard paths).\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295494296|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492645061.060620",
        "date": 1492645061060
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by inJeans on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-295482712|#617: ERROR: Unrecognized OSBuild type: docker>",
                "text": "Hey, guys. I won't be at my desk for a few days, but the line endings sound like a very likely candidate. I will let you know when I get the chance. Thanks for your help.",
                "pretext": "[singularityware/singularity] New comment by inJeans on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-295482712|#617: ERROR: Unrecognized OSBuild type: docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492642786.756949",
        "date": 1492642786756
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request re-opened: <https://github.com/singularityware/singularity/pull/619|#619 `-f/--file` option restored to export command in export.exec and export.help> by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "text": "[singularityware/singularity] Pull request re-opened: <https://github.com/singularityware/singularity/pull/619|#619 `-f/--file` option restored to export command in export.exec and export.help> by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "id": 1,
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492640930.482208",
        "date": 1492640930482
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/620|#620 -f/--file option restored to export command> by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/620|#620 -f/--file option restored to export command> by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492640920.480597",
        "date": 1492640920480
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#620 -f/--file option restored to export command' https://github.com/singularityware/singularity/pull/620 by ArangoGutierrez",
                "text": "Changes proposed in this pull request\n\n-f/--file option restored to export command\n\nFixes #\n\nChanges proposed in this pull request\n\n -\n -\n -\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "title": "#620 -f/--file option restored to export command",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/620",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492639934.316991",
        "date": 1492639934316
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/619|#619 `-f/--file` option restored to export command in export.exec and export.help> by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/619|#619 `-f/--file` option restored to export command in export.exec and export.help> by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492639868.305476",
        "date": 1492639868305
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by zyndagj on issue <https://github.com/singularityware/singularity/issues/418#issuecomment-295448216|#418: Build error: 'O_CLOEXEC' undeclared>",
                "text": "Good to know. Thanks!",
                "pretext": "[singularityware/singularity] New comment by zyndagj on issue <https://github.com/singularityware/singularity/issues/418#issuecomment-295448216|#418: Build error: 'O_CLOEXEC' undeclared>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492636847.696435",
        "date": 1492636847696
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#619 Development' https://github.com/singularityware/singularity/pull/619 by ArangoGutierrez",
                "text": "Changes proposed in this pull request\n\nâ€¢ `-f/--file` option restored to export command in export.exec and export.help\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "title": "#619 Development",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/619",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492636714.666621",
        "date": 1492636714666
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/418#issuecomment-295447367|#418: Build error: 'O_CLOEXEC' undeclared>",
                "text": "Heya @zyndagj, that is a feature! :)\n\nStill requires root to bootstrap however.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/418#issuecomment-295447367|#418: Build error: 'O_CLOEXEC' undeclared>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492636703.664309",
        "date": 1492636703664
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by zyndagj on issue <https://github.com/singularityware/singularity/issues/418#issuecomment-295424139|#418: Build error: 'O_CLOEXEC' undeclared>",
                "text": "Hello,\n\nI previously reported that 4ce4fd38ba3d009bd17653005eb560159a204c41 correctly compiled on SLES 11.3 with glibc-2.11.3-17.90.4, but now it seems to be functioning incorrectly. I have been testing it today on CentOS Linux release 7.2.1511 with glibc-2.17-106 and it seems that users without unelevated privileges can create and modify images as I demonstrate with the `build` user below.\n\n```build@Wc253-101(20)$ singularity create --size 4000 tensorflow.img\nInitializing Singularity image subsystem\nOpening image file: tensorflow.img\nCreating 4000MiB image\nBinding image to loop\nCreating file system within image\nImage is done: tensorflow.img\nbuild@Wc253-101(22)$ singularity import tensorflow.img docker://tensorflow/tensorflow:latest\nDocker image path: index.docker.io/tensorflow/tensorflow:latest\nCache folder set to /admin/build/.singularity/docker\nDownloading layer sha256:52e18a0f2ca741bb6d5123a2ab499d89206628a5b48a18bceaa04729ecf53908\nProgress |========================================| 100.0% downloading layer\nProgress |========================================| 100.0% preparing layer\nDownloading layer sha256:cf26e7f79a1f56674084ecfde0f9cd5b21c495bcd1dacdf09e10af0518cfab47\nProgress |========================================| 100.0% downloading layer\nProgress |========================================| 100.0% preparing layer\nDownloading layer sha256:f1d0b6192b60f1baa4d997e574632d8d5e5d0e6508a13dff58a1458162b0dfef\nProgress |========================================| 100.0% downloading layer\nProgress |========================================| 100.0% preparing layer\nDownloading layer sha256:d3cca787fa7c8d05f2c94ece1eb7a6a6a86222c6b2fb73914154751947f708a7\nProgress |========================================| 100.0% downloading layer\nProgress |========================================| 100.0% preparing layer\nDownloading layer sha256:24b58a5e905fd20ae2c7bb9c5d6391e51189d9a2ca1066eab30912734fda1324\nProgress |========================================| 100.0% downloading layer\nProgress |========================================| 100.0% preparing layer\nDownloading layer sha256:4ed0083b781529482cdb00c17b7b91fb09770189eea88a5fac14f36fb6678993\nProgress |========================================| 100.0% downloading layer\nProgress |========================================| 100.0% preparing layer\nDownloading layer sha256:f181e59dac0601bdc55f13bcfce844315f039c1dbc7dcd9ab27a1392df4b7a30\nProgress |========================================| 100.0% downloading layer\nProgress |========================================| 100.0% preparing layer\nImporting: base Singularity environment\nImporting: /admin/build/.singularity/docker/sha256:c62795f78da9ad31d9669cb4feb4e8fba995a299a0b2bd0f05b10fdc05b1f35e.tar.gz\nImporting: /admin/build/.singularity/docker/sha256:d4fceeeb758e5103c39daf44c73404bf476ef6fd6b7a9a11e2260fcc1797c806.tar.gz\nImporting: /admin/build/.singularity/docker/sha256:5c9125a401ae0cf5a5b4128633e7a4e84230d3eb4c541c661618a70e5d29aeff.tar.gz\nImporting: /admin/build/.singularity/docker/sha256:0062f774e9942f61d13928855ab8111adc27def6f41bd6f7902c329ec836882b.tar.gz\nImporting: /admin/build/.singularity/docker/sha256:6b33fd031facf4d7dd97afeea8a93260c2f15c3e795eeccd8969198a3d52678d.tar.gz\nImporting: /admin/build/.singularity/docker/sha256:52e18a0f2ca741bb6d5123a2ab499d89206628a5b48a18bceaa04729ecf53908.tar.gz\nImporting: /admin/build/.singularity/docker/sha256:cf26e7f79a1f56674084ecfde0f9cd5b21c495bcd1dacdf09e10af0518cfab47.tar.gz\nImporting: /admin/build/.singularity/docker/sha256:f1d0b6192b60f1baa4d997e574632d8d5e5d0e6508a13dff58a1458162b0dfef.tar.gz\nImporting: /admin/build/.singularity/docker/sha256:d3cca787fa7c8d05f2c94ece1eb7a6a6a86222c6b2fb73914154751947f708a7.tar.gz\nImporting: /admin/build/.singularity/docker/sha256:24b58a5e905fd20ae2c7bb9c5d6391e51189d9a2ca1066eab30912734fda1324.tar.gz\nImporting: /admin/build/.singularity/docker/sha256:4ed0083b781529482cdb00c17b7b91fb09770189eea88a5fac14f36fb6678993.tar.gz\nImporting: /admin/build/.singularity/docker/sha256:f181e59dac0601bdc55f13bcfce844315f039c1dbc7dcd9ab27a1392df4b7a30.tar.gz\nImporting: /admin/build/.singularity/metadata/sha256:2f36cb5b3330bf555e37df518f88bca1b0f272fb16f0763435ff259451dc67f9.tar.gz\nbuild@Wc253-101(23)$ singularity shell tensorflow.img\nSingularity: Invoking an interactive shell within container...\n```\nWhen the same commands were run using the 2.2.1 release 8755ff141d50bdaacd3dc53771f017b678475f73, I correctly received\n```build@Wc253-101(6)$ singularity create --size 4000 tensorflow.img\nERROR: Calling user must be root!\n```",
                "pretext": "[singularityware/singularity] New comment by zyndagj on issue <https://github.com/singularityware/singularity/issues/418#issuecomment-295424139|#418: Build error: 'O_CLOEXEC' undeclared>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492633264.812907",
        "date": 1492633264812
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295327326|#611: Nvidia GPU support with different driver versions?>",
                "text": "@kcgthb I think this is going to give you much more flexibility than you think (provided it works).  I apologize if I am misunderstanding, but I think you might be conflating a few different ideas here.  \n\nIf you dynamically bind the NVIDIA libs into the container the way that @gmkurtzer is suggesting your are guaranteed to have an exact match between the binaries and libraries within the container and those on the host system.  The way I implemented it in may  gpu4singularity script you have to be finicky and match things precisely, but this will do it for you.   You will still have to install CUDA, cuDNN and anything else you need to run on top of the driver inside the container.  But that is always going to remain the case.  And CUDA is flexible.  You don't have to make sure your CUDA version matches the driver version precisely (there is no such thing).  You just have to make sure your driver is recent enough to support the CUDA you are trying to run.  I actually think this \"workaround\" might be a fully-fledged elegant solution once it's all coded up.  :smile_cat: ",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295327326|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492618334.717309",
        "date": 1492618334717
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by kcgthb on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295320477|#611: Nvidia GPU support with different driver versions?>",
                "text": "@gmkurtzer: thanks for the details, very interesting, I didn't realize the security implications. Wasn't there a plan to move away from SUID and use a narrower set of privileges (with CAPABILITIES or something)?\n\nI'm wondering about the workaround you're proposing, though: doesn't this defeats the very purpose of containerization? I mean, if we expose and use host-level libs within the container, it will potentially be a source of conflicts and mismatches, don't you think? To me, the main goal of running an application in a container is to be able to abstract from the host's software and be self-sufficient in terms of libraries. Having a mix of host-level and container-level system libraries seems orthogonal to that.\n\nPlus, it will still require that the apps and libs within the container are compatible with the host libs. For GPU applications, it means that they need to be linked against a CUDA/NVML/driver version that precisely matches what's installed on the host. Which limits the portability of such containers. \n\nIn the end, the workaround may add some convenience, but I don't think it really solves the problem of portability. Instead of having to install in the container the precise CUDA/NVML versions that match the host's, users will be able to just use what's installed on the host, but their application will still have to match those libs.\n\nI believe that NVIDIA's solution were to introduce some level of library abstraction that is supposed to relax those lib version constraints, and allow containers and hosts to have somewhat different versions installed, so containers could be portable across a wider range of host settings.\n\nSo, I'm not saying the workaround is not interesting nor useful, but I hope it won't make the need for a more generic solution (one that could relax container/host versioning constraints) less important. :)",
                "pretext": "[singularityware/singularity] New comment by kcgthb on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295320477|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492617280.394437",
        "date": 1492617280394
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/615#issuecomment-295301818|#615: Issue looking up hostname inside container>",
                "text": "Very weird... I wonder if the glibc resolver on the host is acting differently then within the container. In either case, I would recommend adding an entry for the hostname of your system (`jorgehn-x1-carbon`) to your hosts `/etc/hosts` file for the IPv4 loopback address. And try again in your container.\n\nLet me know if that helps!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/615#issuecomment-295301818|#615: Issue looking up hostname inside container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492614252.456629",
        "date": 1492614252456
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/615#issuecomment-295301019|#615: Issue looking up hostname inside container>",
                "text": "Yeah, the output is:\n```Python 2.7.13 (default, Jan 12 2017, 17:59:37) \n[GCC 6.3.1 20161221 (Red Hat 6.3.1-1)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt; &gt; &gt; import socket\n&gt; &gt; &gt; socket.getaddrinfo(socket.gethostname(), 0, 0, 0, socket.SOL_TCP)\n&gt; &gt; &gt; [(10, 1, 6, '', ('fe80::4a5b:c553:f42b:a4dc%wlp4s0', 0, 0, 4)), (2, 1, 6, '', ('193.157.181.181', 0)), (2, 1, 6, '', ('192.168.122.1', 0)), (2, 1, 6, '', ('172.17.0.1', 0))]\n&gt; &gt; &gt; \n&gt; &gt; &gt; ```",
                "pretext": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/615#issuecomment-295301019|#615: Issue looking up hostname inside container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492614117.413898",
        "date": 1492614117413
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295299850|#611: Nvidia GPU support with different driver versions?>",
                "text": "@gmkurtzer Awesome.  Yes I think this idea should work.  I tried a similar thing many months ago but I bind-mounted entire directories and not individual files.  This gave me limited success, (nvidia-smi worked) but, as you can probably guess, CUDA failed because it saw the wrong libraries on the path (I think).  Anyhow I'm pretty confident that this will work if you circumvent the overlay fs gotcha.  ",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295299850|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492613929.349780",
        "date": 1492613929349
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/615#issuecomment-295297750|#615: Issue looking up hostname inside container>",
                "text": "Does that same python snippet work directly on your host?\n\n```$ cat &lt;&lt;EOF | python\nimport socket\nsocket.getaddrinfo(socket.gethostname(), 0, 0, 0, socket.SOL_TCP)\nEOF\n```",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/615#issuecomment-295297750|#615: Issue looking up hostname inside container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492613578.238062",
        "date": 1492613578238
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-295296923|#617: ERROR: Unrecognized OSBuild type: docker>",
                "text": "Hi @inJeans \n\nCan you confirm that your Windows computer did not add an extra character at the end of the line? We have seen something like this before and it is due to Windows thinking a new line should be two characters (`\\r\\n`) instead of Unix's single `\\n`. Run the bootstrap definition file through `dos2unix` and see if that helps.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-295296923|#617: ERROR: Unrecognized OSBuild type: docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492613435.193218",
        "date": 1492613435193
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/616|#616 Update singularity.in> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/616|#616 Update singularity.in> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492613264.139361",
        "date": 1492613264139
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295295810|#611: Nvidia GPU support with different driver versions?>",
                "text": "@kcgthb: Yes, Nvidia has been working on a generic container library and their idea is to have Singularity link to that, but because Singularity by default (and to get access to all critical features) we run as SUID, which technically would open up a security vector through any external libraries we link to. Instead I am hoping to (with their help) implement the necessary features directly within Singularity proper.\n\n@GodloveD: Thanks! I will start working on moving it to C where I should be able to address your second point shortly.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295295810|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492613244.133198",
        "date": 1492613244133
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295284224|#611: Nvidia GPU support with different driver versions?>",
                "text": "This is a great idea and it should work.  But there are a few kinks to work out.  See my comment on <https://github.com/singularityware/singularity/commit/364895f664ef288307c068416eeb0467bf67be7d>.",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295284224|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492611180.496241",
        "date": 1492611180496
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/618|#618 Not save env variable> by <https://github.com/sazearte|sazearte>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/618|#618 Not save env variable> by <https://github.com/sazearte|sazearte>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492598781.995005",
        "date": 1492598781995
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by sazearte on issue <https://github.com/singularityware/singularity/issues/618#issuecomment-295213534|#618: Not save env variable>",
                "text": "a ok,\nI did not understand what was /environment\nI believed that it was /etc/environement file, not /environment\n\nthanks for your explication, it's works now !",
                "pretext": "[singularityware/singularity] New comment by sazearte on issue <https://github.com/singularityware/singularity/issues/618#issuecomment-295213534|#618: Not save env variable>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492598764.992370",
        "date": 1492598764992
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-295203260|#617: ERROR: Unrecognized OSBuild type: docker>",
                "text": "@vsoch I love how you can recognize me from a definition file :-P @injeans I've not tried running Singularity on Windows within Docker but it's a groovy idea.  What happens if you use another bootstrap agent (ie debootstrap?).  Can you try one of the definition files in the `/examples` subdir?",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-295203260|#617: ERROR: Unrecognized OSBuild type: docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492597047.728012",
        "date": 1492597047728
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/618#issuecomment-295192001|#618: Not save env variable>",
                "text": "If you are editing a (current master) container, then you would just want to add it to the `/environment` file, also at the root of the container.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/618#issuecomment-295192001|#618: Not save env variable>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492595136.400794",
        "date": 1492595136400
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/618#issuecomment-295191674|#618: Not save env variable>",
                "text": "Hey @sazearte ! If you want to add variables to your environment, for the development branch you should do this in the environment section of your bootstrap specification file:\n\n```%environment\nfoo bar\n```\n\nor if you are changing a live container (not recommended practice, it's not reproducible!) you would want to add the variable into `/environment` at the root of the container and one of the files in `/.singularity.d/env/` (likely 10-docker.sh).",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/618#issuecomment-295191674|#618: Not save env variable>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492595074.389140",
        "date": 1492595074389
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#618 Not save env variable' https://github.com/singularityware/singularity/issues/618 by sazearte",
                "text": "Hello, when i'm in the contener image, i can change env variable:\n```\nfoo=bar\necho $foo\nbar\n\n```\nand i can save my conf in the file /etc/environnement or /root/.bashrc or /etc/bashrc\nand redeploy my conf with\n`source /etc/environnement`\n\nbut when exit singulirty and re-open my variable is lost... why ?\ncan i save or change my env variable in the singularity image ?",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/sazearte|sazearte>",
                "title": "#618 Not save env variable",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/618",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492594350.261074",
        "date": 1492594350261
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/615#issuecomment-295119518|#615: Issue looking up hostname inside container>",
                "text": "Neither the container nor the host have any reference to `jorgehn-x1-carbon` in their `/etc/hosts`.\n\nContainer `/etc/hosts`:\n```bash\nSingularity test.img:~/Repos/singularity_images/dyret-map&gt; cat /etc/hosts\n127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n\n```",
                "pretext": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/615#issuecomment-295119518|#615: Issue looking up hostname inside container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492583568.569260",
        "date": 1492583568569
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by inJeans on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-295112406|#617: ERROR: Unrecognized OSBuild type: docker>",
                "text": "I will try.",
                "pretext": "[singularityware/singularity] New comment by inJeans on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-295112406|#617: ERROR: Unrecognized OSBuild type: docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492582204.430299",
        "date": 1492582204430
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-295108919|#617: ERROR: Unrecognized OSBuild type: docker>",
                "text": "Are you able to use Virtual Box (or other VM) to run linux instead of Docker?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-295108919|#617: ERROR: Unrecognized OSBuild type: docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492581601.370474",
        "date": 1492581601370
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by kcgthb on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295107038|#611: Nvidia GPU support with different driver versions?>",
                "text": "Hi @gmkurtzer!\n\nWhat's the status of the NVIDIA contribution for this? I heard they were trying to get something in sync with the 2.3 release.",
                "pretext": "[singularityware/singularity] New comment by kcgthb on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295107038|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492581238.338990",
        "date": 1492581238338
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by inJeans on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-295106962|#617: ERROR: Unrecognized OSBuild type: docker>",
                "text": "Oh yeah. That was what I wanted to try out, but I couldn't even make it to that stage. It definitely isn't the NIH stuff. I get the same error even if I just try to build the simple example in the Singularity documentation\n```Bootstrap: docker\nFrom: tensorflow/tensorflow:latest\n\n%runscript\n\n    exec /usr/bin/python \"$@\"\n\n%post\n\n    echo \"Post install stuffs!\"```",
                "pretext": "[singularityware/singularity] New comment by inJeans on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-295106962|#617: ERROR: Unrecognized OSBuild type: docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492581209.336480",
        "date": 1492581209336
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-295104723|#617: ERROR: Unrecognized OSBuild type: docker>",
                "text": "ah that's @GodloveD! Hey @GodloveD any hints on this? Did you test with Windows? @inJeans I would give a test with the support that @gmkurtzer just added: <https://github.com/singularityware/singularity/issues/611#issuecomment-295049418> on the development branch.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-295104723|#617: ERROR: Unrecognized OSBuild type: docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492580495.276013",
        "date": 1492580495276
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by inJeans on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-295104322|#617: ERROR: Unrecognized OSBuild type: docker>",
                "text": " I can `singularity create` no problem.",
                "pretext": "[singularityware/singularity] New comment by inJeans on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-295104322|#617: ERROR: Unrecognized OSBuild type: docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492580426.270343",
        "date": 1492580426270
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by inJeans on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-295103038|#617: ERROR: Unrecognized OSBuild type: docker>",
                "text": "Oh. Thanks. I am just trying to build the example on the <https://github.com/NIH-HPC/gpu4singularity|NIH repo> at the moment. \n\n`BootStrap: docker\nFrom: nvidia/cuda:8.0-cudnn5-devel\n\n%post\n```# add universe repo and install some packages\nsed -i '/xenial.*universe/s/^#//g' /etc/apt/sources.list\nlocale-gen en_US.UTF-8\napt-get -y update\napt-get -y install vim wget perl python python-pip python-dev\n\n# download and run NIH HPC NVIDIA driver installer\nwget gpu4singularity \nchmod u+rwx gpu4singularity\n./gpu4singularity --verbose\nrm gpu4singularity\n\n# install tensorflow\npip install --upgrade pip\npip install tensorflow-gpu````\nI am still inside an Ubuntu container though, so it should look to Singularity like I am running Ubuntu right?",
                "pretext": "[singularityware/singularity] New comment by inJeans on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-295103038|#617: ERROR: Unrecognized OSBuild type: docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492580191.251097",
        "date": 1492580191251
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-295101314|#617: ERROR: Unrecognized OSBuild type: docker>",
                "text": "Ack, this is a hard one because I haven't used Docker on windows or have access to a windows machine, but it is a different beast!\n\nI can say that we are no longer supporting the original docker2singularity image (it was a hack to get functionality like environment from docker into singularity that now 2.3 supports natively).\n\nIt does make sense to first make sure the definition file you are using is not out of date - the Osbuild tag isn't relevant for docker, if you are bootstrapping it should look something like:\n\n```Bootstrap: docker\nFrom:ubuntu:latest\n```\n\nSo if you spec file is a bit off, try the above. If there are still issues, share it here so I can test it (on non windows) and then we will go from there!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-295101314|#617: ERROR: Unrecognized OSBuild type: docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492579906.228225",
        "date": 1492579906228
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#617 ERROR: Unrecognized OSBuild type: docker' https://github.com/singularityware/singularity/issues/617 by inJeans",
                "text": "Why am I getting this error when I try to build from a Docker image?\n\n `ERROR: Unrecognized OSBuild type: docker`\n\nIf it makes any difference I am trying to do this inside a Docker container one a Windows 10 machine (running Docker for Windows). I get the same error when trying to use <https://hub.docker.com/r/singularityware/docker2singularity/|this> tool as well. \n\nThanks for you help team.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/inJeans|inJeans>",
                "title": "#617 ERROR: Unrecognized OSBuild type: docker",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/617",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492578464.114715",
        "date": 1492578464114
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295049418|#611: Nvidia GPU support with different driver versions?>",
                "text": "Heya guys... I wrote a quick \"hack\" that I am experimenting on what is necessary for proper GPU support inside of containers. It currently exists in the development branch, and the code is in `/etc/singularity/init` and triggered by a command line switch `--nv`.\n\nWould you mind testing that and telling me how it works for you?\n\nThank you!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-295049418|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492570496.487783",
        "date": 1492570496487
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/615#issuecomment-295045472|#615: Issue looking up hostname inside container>",
                "text": "Do you have an entry for `jorgehn-x1-carbon` in the container's (or host's) `/etc/hosts`?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/615#issuecomment-295045472|#615: Issue looking up hostname inside container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492569223.375805",
        "date": 1492569223375
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/418|#418 Build error: 'O_CLOEXEC' undeclared> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/418|#418 Build error: 'O_CLOEXEC' undeclared> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492563742.842599",
        "date": 1492563742842
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/418#issuecomment-295030840|#418: Build error: 'O_CLOEXEC' undeclared>",
                "text": "Excellent, thank you!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/418#issuecomment-295030840|#418: Build error: 'O_CLOEXEC' undeclared>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492563724.840816",
        "date": 1492563724840
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#616 Update singularity.in' https://github.com/singularityware/singularity/pull/616 by ArangoGutierrez",
                "text": "Changes proposed in this pull request\n\nâ€¢ `-vvvv` case option was repeated on line 107 to 110. so it was deleted.\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "title": "#616 Update singularity.in",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/616",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492548146.389411",
        "date": 1492548146389
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-294936884|#611: Nvidia GPU support with different driver versions?>",
                "text": "Hiya @thiell.  Until this is supported by Singularity, you might try using this script:\n\n<https://github.com/NIH-HPC/gpu4singularity>\n\nIt should update the drivers in an existing container or install drivers if none exist.  ",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-294936884|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492539862.220508",
        "date": 1492539862220
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by zyndagj on issue <https://github.com/singularityware/singularity/issues/418#issuecomment-294906629|#418: Build error: 'O_CLOEXEC' undeclared>",
                "text": "This commit works with SLES 11.3 and glibc-2.11.3-17.90.4",
                "pretext": "[singularityware/singularity] New comment by zyndagj on issue <https://github.com/singularityware/singularity/issues/418#issuecomment-294906629|#418: Build error: 'O_CLOEXEC' undeclared>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492534027.520482",
        "date": 1492534027520
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/615#issuecomment-294890695|#615: Issue looking up hostname inside container>",
                "text": "It seems to be the same as on my laptop:\n```bash\nSingularity test.img:~/Repos/singularity_images/dyret-map&gt; cat /etc/resolv.conf \n\n*Generated by NetworkManager*\n\nsearch uio.no\nnameserver 129.240.2.27\nnameserver 129.240.2.40\nnameserver 129.240.2.3\n```",
                "pretext": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/615#issuecomment-294890695|#615: Issue looking up hostname inside container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492531052.569613",
        "date": 1492531052569
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/615#issuecomment-294889736|#615: Issue looking up hostname inside container>",
                "text": "Hi @nordmoen,\n\nFrom a shell within that container image, what is in `/etc/resolv.conf`?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/615#issuecomment-294889736|#615: Issue looking up hostname inside container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492530875.507300",
        "date": 1492530875507
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by martbhell on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-294738804|#488: [Proposal] Include syslog support>",
                "text": "@gmkurtzer I most likely used master. I'll try with devel",
                "pretext": "[singularityware/singularity] New comment by martbhell on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-294738804|#488: [Proposal] Include syslog support>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492506454.144969",
        "date": 1492506454144
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#615 Network issue inside container when trying to run ROS' https://github.com/singularityware/singularity/issues/615 by nordmoen",
                "text": "After successfully creating a ROS Singularity container I'm having problem running ROS inside the container. Nodes in ROS speak over TCP connected through a <http://wiki.ros.org/Master|Master node> which orchestrates communication and it seems that this communication does not function properly inside a Singularity container.\n\nI have tested with two different images, both of which compiles fine, but neither is able to run ROS. The best traceback I have been able to produce is this:\n```Singularity test.img:/workspace&gt; roswtf\nLoaded plugin tf.tfwtf\nNo package or stack in context\nTraceback (most recent call last):\n  File \"/opt/ros/kinetic/bin/roswtf\", line 35, in &lt;module&gt;\n    roswtf.roswtf_main()\n  File \"/opt/ros/kinetic/lib/python2.7/dist-packages/roswtf/__init__.py\", line 89, in roswtf_main\n    _roswtf_main()\n  File \"/opt/ros/kinetic/lib/python2.7/dist-packages/roswtf/__init__.py\", line 175, in _roswtf_main\n    roswtf.network.wtf_check(ctx)\n  File \"/opt/ros/kinetic/lib/python2.7/dist-packages/roswtf/network.py\", line 113, in wtf_check\n    error_rule(r, r[0](ctx), ctx)\n  File \"/opt/ros/kinetic/lib/python2.7/dist-packages/roswtf/network.py\", line 51, in ip_check\n    resolved_ips = [host[4][0] for host in socket.getaddrinfo(socket.gethostname(), 0, 0, 0, socket.SOL_TCP)]\nsocket.gaierror: [Errno -2] Name or service not known\n```\nWhich comes from <http://wiki.ros.org/roswtf|`roswtf`>, but all ROS nodes exhibit this problem. When trying to run <http://wiki.ros.org/roscore|`roscore`> I get the following:\n```bash\nSingularity test.img:/workspace&gt; roscore -v\n... logging to /home/jorgehn/.ros/log/02ed15b6-240f-11e7-88b9-e4a471879cef/roslaunch-jorgehn-x1-carbon-28202.log\nChecking log directory for disk usage. This may take awhile.\nPress Ctrl-C to interrupt\nDone checking log file disk usage. Usage is &lt;1GB.\n\n... loading XML file [/opt/ros/kinetic/etc/ros/roscore.xml]\n... executing command param [rosversion roslaunch]\nAdded parameter [/rosversion]\n... executing command param [rosversion -d]\nAdded parameter [/rosdistro]\nAdded core node of type [rosout/rosout] in namespace [/]\nUnable to contact my own server at [<http://jorgehn-x1-carbon:42137/]>.\nThis usually means that the network is not configured properly.\n\nA common cause is that the machine cannot ping itself.  Please check\nfor errors by running:\n```ping jorgehn-x1-carbon```\nFor more tips, please see\n```http://www.ros.org/wiki/ROS/NetworkSetup```\nThe traceback for the exception was written to the log file\n```\n\nThe image I used to debug this is:\n```bash\nBootstrap: docker\nFrom: ros:kinetic\n\n%setup\n        # This is done before we are \"inside\" container\n```    # We first create our workspace folder\n    mkdir -p $SINGULARITY_ROOTFS/workspace/src\n    # Then copy our code into this workspace\n    cd $SINGULARITY_ROOTFS/workspace/src\n    git clone https://github.com/ros/ros_tutorials.git```\n%post\n        # This is executed inside container\n        . /opt/ros/kinetic/setup.sh\n        cd /workspace/src\n        catkin_init_workspace\n        # Then it is time to build everything\n        cd /workspace\n        catkin_make\n        catkin_make install\n\n%runscript\n        cd /workspace\n        source /workspace/devel/setup.bash\n```\n\nThe problem seem to be name resolution. I tried the following in Python inside the container:\n```Singularity test.img:/workspace&gt; python\nPython 2.7.12 (default, Nov 19 2016, 06:48:10) \n[GCC 5.4.0 20160609] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt; &gt; &gt; import socket\n&gt; &gt; &gt; socket.gethostname()\n&gt; &gt; &gt; 'jorgehn-x1-carbon'\n&gt; &gt; &gt; socket.getaddrinfo(socket.gethostname(), 0, 0, 0, socket.SOL_TCP)\n&gt; &gt; &gt; Traceback (most recent call last):\n&gt; &gt; &gt;   File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n&gt; &gt; &gt; socket.gaierror: [Errno -2] Name or service not known\n&gt; &gt; &gt; socket.getaddrinfo('127.0.0.1', 0, 0, 0, socket.SOL_TCP)\n&gt; &gt; &gt; [(2, 1, 6, '', ('127.0.0.1', 0))]\n&gt; &gt; &gt; ```",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/nordmoen|nordmoen>",
                "title": "#615 Network issue inside container when trying to run ROS",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/615",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492503959.598865",
        "date": 1492503959598
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/613#issuecomment-294602926|#613: [Development] Version needs to be encased in quotes when calling add.py for metadata>",
                "text": "yep looks good!\n\n```vanessa@vanessa-ThinkPad-T460s:~/Desktop$ ls test\nbin   dev          etc   lib    media  opt   root  sbin         srv  tmp  var\nboot  environment  home  lib64  mnt    proc  run   singularity  sys  usr\nvanessa@vanessa-ThinkPad-T460s:~/Desktop$ cat test/.singularity.d/labels.json \n{\n    \"SINGULARITY_DEFFILE_BOOTSTRAP\": \"docker\",\n    \"SINGULARITY_DEFFILE\": \"Singularity\",\n    \"SINGULARITY_DEFFILE_FROM\": \"ubuntu\",\n    \"SINGULARITY_BOOTSTRAP_VERSION\": \"2.2.99-development.gba6b907\"\n}\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/613#issuecomment-294602926|#613: [Development] Version needs to be encased in quotes when calling add.py for metadata>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492465373.004657",
        "date": 1492465373004
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/613|#613 [Development] Version needs to be encased in quotes when calling add.py for metadata> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/613|#613 [Development] Version needs to be encased in quotes when calling add.py for metadata> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492465373.004610",
        "date": 1492465373004
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/612|#612 Allow the '+' character in pathnames.> by <https://github.com/hollowec|hollowec>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/612|#612 Allow the '+' character in pathnames.> by <https://github.com/hollowec|hollowec>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492463565.659932",
        "date": 1492463565659
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hollowec on pull request <https://github.com/singularityware/singularity/pull/612#issuecomment-294594507|#612: Allow the '+' character in pathnames.>",
                "text": "OK, closing.  Thanks.",
                "pretext": "[singularityware/singularity] New comment by hollowec on pull request <https://github.com/singularityware/singularity/pull/612#issuecomment-294594507|#612: Allow the '+' character in pathnames.>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492463565.659926",
        "date": 1492463565659
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/578#issuecomment-294594428|#578: [feedback] should we save build log in metadata folder?>",
                "text": "You got it! :)",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/578#issuecomment-294594428|#578: [feedback] should we save build log in metadata folder?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492463544.655696",
        "date": 1492463544655
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/612#issuecomment-294593930|#612: Allow the '+' character in pathnames.>",
                "text": "Yep, please close this one. Thanks @hollowec!\n\n@vsoch I don't think there is a security concern with the use of the `-` or `+` characters. ",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/612#issuecomment-294593930|#612: Allow the '+' character in pathnames.>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492463410.627950",
        "date": 1492463410627
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/578#issuecomment-294593821|#578: [feedback] should we save build log in metadata folder?>",
                "text": "+1 on having bootstrap",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/578#issuecomment-294593821|#578: [feedback] should we save build log in metadata folder?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492463380.621853",
        "date": 1492463380621
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/612#issuecomment-294593670|#612: Allow the '+' character in pathnames.>",
                "text": "If `-` could be a security issue in some way we could anticipate, it should not be permitted for bind points either. @gmkurtzer what do you think? I don't have the hackerdome expertise to know.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/612#issuecomment-294593670|#612: Allow the '+' character in pathnames.>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492463334.612521",
        "date": 1492463334612
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/614#issuecomment-294593604|#614: Allow the '+' character in pathnames.>",
                "text": "Thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/614#issuecomment-294593604|#614: Allow the '+' character in pathnames.>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492463314.608720",
        "date": 1492463314608
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/614|#614 Allow the '+' character in pathnames.> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/614|#614 Allow the '+' character in pathnames.> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492463311.608087",
        "date": 1492463311608
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/578#issuecomment-294593525|#578: [feedback] should we save build log in metadata folder?>",
                "text": "I thought of that, but it might be confusing `/.singularity.d/Singularity` with `/singularity` and `/.singularity/runscript`. If you feel it won't be confusing, we can use that, or we can move it to `/.singularity.d/bootstrap/Singularity` or something?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/578#issuecomment-294593525|#578: [feedback] should we save build log in metadata folder?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492463293.604173",
        "date": 1492463293604
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hollowec on pull request <https://github.com/singularityware/singularity/pull/612#issuecomment-294593118|#612: Allow the '+' character in pathnames.>",
                "text": "Resubmitted to development.  Should I close this pull request (to master)?\n\nHi @vsoch - the '-' character is permitted already, however, and it can have special meaning in option parsing, arithmetic, and some regular expressions.",
                "pretext": "[singularityware/singularity] New comment by hollowec on pull request <https://github.com/singularityware/singularity/pull/612#issuecomment-294593118|#612: Allow the '+' character in pathnames.>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492463187.582516",
        "date": 1492463187582
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/613#issuecomment-294593114|#613: [Development] Version needs to be encased in quotes when calling add.py for metadata>",
                "text": "I've already updated the generated version, can you test again?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/613#issuecomment-294593114|#613: [Development] Version needs to be encased in quotes when calling add.py for metadata>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492463187.582290",
        "date": 1492463187582
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/612#issuecomment-294592879|#612: Allow the '+' character in pathnames.>",
                "text": "@vsoch It could, but currently doesn't.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/612#issuecomment-294592879|#612: Allow the '+' character in pathnames.>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492463127.569902",
        "date": 1492463127569
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#614 Allow the '+' character in pathnames.' https://github.com/singularityware/singularity/pull/614 by hollowec",
                "text": "We have several pathnames with '+' characters in our environment.\nSingularity doesn't allow these paths to passed as bindmounts because\nof the presence of this character. Is there a particular reason why '+'\ncharacters aren't permitted? In a cursory look at the code, I wasn't able\nto find any obvious security issues with permitting them.\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/hollowec|hollowec>",
                "title": "#614 Allow the '+' character in pathnames.",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/614",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492462213.362646",
        "date": 1492462213362
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/578#issuecomment-294587645|#578: [feedback] should we save build log in metadata folder?>",
                "text": "@gmkurtzer please call it `Singularity`. This is the name that I've used for all across Singularity Hub, in many conversations / threads with users, in the paper, and with our docs.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/578#issuecomment-294587645|#578: [feedback] should we save build log in metadata folder?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492461917.296429",
        "date": 1492461917296
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#613 [Development] Version needs to be encased in quotes when calling add.py for metadata' https://github.com/singularityware/singularity/issues/613 by vsoch",
                "text": "With the addition of the custom version, the function to add metadata during bootstrap or import is broken. For example\n\n```/usr/local/libexec/singularity/bootstrap-scripts/post.sh: eval: line 57: `/usr/local/libexec/singularity/python/helpers/json/add.py -f --key SINGULARITY_BOOTSTRAP_VERSION --value 2.2.99 (test/progressbar/388c86b) --file /var/lib/singularity/mnt/source/.singularity.d/labels.json'\n```\n\nThe fix is to escape the characters or put in parens for both --key and --value so they get properly passed as strings and not interpreted by the shell.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/vsoch|vsoch>",
                "title": "#613 [Development] Version needs to be encased in quotes when calling add.py for metadata",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/613",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492461458.194568",
        "date": 1492461458194
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/612#issuecomment-294583110|#612: Allow the '+' character in pathnames.>",
                "text": "Is it an issue that `+` can have special context? For example, <http://tldp.org/LDP/abs/html/ops.html#AROPS1|arithmetic> or as a <http://tldp.org/LDP/abs/html/x17129.html#PLUSREF|regular expression operator> or as an option:\n\n```\n+\nOption. Option flag for a command or filter.\n\nCertain commands and builtins use the + to enable certain options and the - to disable them. In parameter substitution, the + prefixes an alternate value that a variable expands to.\n```\n\n<http://tldp.org/LDP/abs/html/special-chars.html|Reference>",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/612#issuecomment-294583110|#612: Allow the '+' character in pathnames.>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492460988.087025",
        "date": 1492460988087
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/612#issuecomment-294581746|#612: Allow the '+' character in pathnames.>",
                "text": "Hi @hollowec, can you resubmit this against the 'development' branch? Thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/612#issuecomment-294581746|#612: Allow the '+' character in pathnames.>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492460732.028224",
        "date": 1492460732028
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#612 Allow the '+' character in pathnames.' https://github.com/singularityware/singularity/pull/612 by hollowec",
                "text": "We have several pathnames with '+' characters in our environment.\nSingularity doesn't allow these paths to passed as bindmounts because\nof the presence of this character.  Is there a particular reason why '+' \ncharacters aren't permitted?  In a cursory look at the code, I wasn't able \nto find any obvious security issues with permitting them.\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/hollowec|hollowec>",
                "title": "#612 Allow the '+' character in pathnames.",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/612",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492460608.000107",
        "date": 1492460608000
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/544|#544 Add --silent option for disabling print statements> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/544|#544 Add --silent option for disabling print statements> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492458489.515368",
        "date": 1492458489515
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/610#issuecomment-294570584|#610: Export not working for development>",
                "text": "I updated the command options and help output such not to include these options (these feature are now unsupported).",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/610#issuecomment-294570584|#610: Export not working for development>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492458352.483635",
        "date": 1492458352483
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/578#issuecomment-294569855|#578: [feedback] should we save build log in metadata folder?>",
                "text": "I have included the bootstrap definition file in the container at `/.singularity.d/deffile`, but I'm not sure I like that name. Thoughts?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/578#issuecomment-294569855|#578: [feedback] should we save build log in metadata folder?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492458174.443850",
        "date": 1492458174443
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by akkornel on issue <https://github.com/singularityware/singularity/issues/607#issuecomment-294536819|#607: bash syntax error at end of yum bootstrap>",
                "text": "Nope, it's OK now.",
                "pretext": "[singularityware/singularity] New comment by akkornel on issue <https://github.com/singularityware/singularity/issues/607#issuecomment-294536819|#607: bash syntax error at end of yum bootstrap>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492450540.607177",
        "date": 1492450540607
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/607|#607 bash syntax error at end of yum bootstrap> by <https://github.com/akkornel|akkornel>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/607|#607 bash syntax error at end of yum bootstrap> by <https://github.com/akkornel|akkornel>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492450540.607166",
        "date": 1492450540607
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-294522826|#611: Nvidia GPU support with different driver versions?>",
                "text": "My pleasure. Let me know how it goes for ya!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-294522826|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492446854.751568",
        "date": 1492446854751
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/581#issuecomment-294522708|#581: Should we have a `list` command for image orchestration>",
                "text": "We have the ability (in development branch) to limit the path to which containers can be executed, but not list from those paths. That wouldn't be so hard to add though, but I'm not sure yet that I am convinced. ;)",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/581#issuecomment-294522708|#581: Should we have a `list` command for image orchestration>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492446821.744449",
        "date": 1492446821744
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/610#issuecomment-294522077|#610: Export not working for development>",
                "text": "I think the issue goes in line 85 to 87 of singularity/src/export.c\n\nWhen seting the tar_cmd[x] values \n```tar_cmd = /usr/bin/tar      -cd-.             test.tar\ntar_cmd    [0]            [1][2][3]    [4]    [5] \n```\n\nWhen running this command (without singularity)\n```cd /tmp\ntar -cf-. test.tar test.img\ntar: test.tar: Cannot stat: No such file or directory\ntar: Removing leading `/' from member names\ntar: Exiting with failure status due to previous errors\n```\n\nAnd creates a tar file with name \"-.\" after the ERROR\n\n&lt;url|<https://github.com/singularityware/singularity/blob/development/src/export.c#L85>&gt;",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/610#issuecomment-294522077|#610: Export not working for development>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492446637.704194",
        "date": 1492446637704
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/445#issuecomment-294511736|#445: [idea] Make passing environment variables and mounting $HOME optional and off by default>",
                "text": "Done! But will I remember for future issues? Hopefully, but I may need reminding. ;)",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/445#issuecomment-294511736|#445: [idea] Make passing environment variables and mounting $HOME optional and off by default>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492443646.038577",
        "date": 1492443646038
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by thiell on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-294510015|#611: Nvidia GPU support with different driver versions?>",
                "text": "Thanks @gmkurtzer!",
                "pretext": "[singularityware/singularity] New comment by thiell on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-294510015|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492443126.925315",
        "date": 1492443126925
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-294507908|#611: Nvidia GPU support with different driver versions?>",
                "text": "Hi @thiell, \n\nSingularity can already support GPUs natively, but it takes doing a few custom configurations on bind paths and possibly including a custom LD_LIBRARY_PATH. It isn't as transparent as doing it automatically (which we also hope to do soon), but it does work very well (so I'm told, as I haven't done it myself).\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-294507908|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492442517.790524",
        "date": 1492442517790
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/610#issuecomment-294504497|#610: Export not working for development>",
                "text": "Ahh, yes... The docs are out of date. Good catch!\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/610#issuecomment-294504497|#610: Export not working for development>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492441489.570526",
        "date": 1492441489570
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/581#issuecomment-294494441|#581: Shouldwe have a `list` command for image orchestration>",
                "text": "I think it could be set in the singularity.conf file\n\n```bash\n\n*CONTAINER_CREATE DIR: [STRING]*\n\n*DEFAULT: /var/lib/singularity/img/*\n\n*This path specifies the location to use when creating the container.*\n\ncontainer_create dir = /var/lib/singularity/img/\n```\nThen\n\nAnd a command \n`singularity images`\n\nWould be something like e.g\n` ls -l /var/lib/singularity/img/`\n\nAlso CONTAINER_CREATE DIR can set to an nfs in order to configure a local registry.",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/581#issuecomment-294494441|#581: Shouldwe have a `list` command for image orchestration>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492438874.022994",
        "date": 1492438874022
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/601#issuecomment-294490277|#601: [development] owner issue after \"singularity copy\">",
                "text": "Sure @vsoch \nClosing issue #601 ",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/601#issuecomment-294490277|#601: [development] owner issue after \"singularity copy\">",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492437470.754840",
        "date": 1492437470754
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/601|#601 [development] owner issue after \"singularity copy\"> by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/601|#601 [development] owner issue after \"singularity copy\"> by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492437470.754808",
        "date": 1492437470754
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/445#issuecomment-294482969|#445: [idea] Make passing environment variables and mounting $HOME optional and off by default>",
                "text": "By the way, it appears that the `-e` option is already implemented, thus the status of this issue is closed, but since it is not \"officially\" released (CMIW), it would be very helpful if you guys could use Git Issues' _Milestone_ or _Label_ to advertise some useful information to people like me searching for solutions, something like _Milestone = v2.3_, so that I don't have to keep asking \"is this released?\"\n\nI appreciate all the hard work you guys put into this!",
                "pretext": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/445#issuecomment-294482969|#445: [idea] Make passing environment variables and mounting $HOME optional and off by default>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492434663.324395",
        "date": 1492434663324
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/559|#559 Unrecognized Distribution type: yum> by <https://github.com/sazearte|sazearte>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/559|#559 Unrecognized Distribution type: yum> by <https://github.com/sazearte|sazearte>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492419600.050334",
        "date": 1492419600050
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by sazearte on issue <https://github.com/singularityware/singularity/issues/559#issuecomment-294435718|#559: Unrecognized Distribution type: yum>",
                "text": "I not use Windows, but you have reason for my error, i have problem with namespace with my editor...\nthanks for your help, i resolve my problem",
                "pretext": "[singularityware/singularity] New comment by sazearte on issue <https://github.com/singularityware/singularity/issues/559#issuecomment-294435718|#559: Unrecognized Distribution type: yum>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492419592.049681",
        "date": 1492419592049
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#611 Nvidia GPU support with different driver versions?' https://github.com/singularityware/singularity/issues/611 by thiell",
                "text": "Hi,\n\nWhat is the current status of the Nvidia GPU support? I manage a GPU only cluster and I have tons of requests of DL software which has so not packaged on RHEL/CentOS that containers would be great. I would like to use singularity instead but as we update the drivers on the hosts quite frequently, the images will have different nvidia driver versions. I know that docker works well but what about singularity?\n\nThanks",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/thiell|thiell>",
                "title": "#611 Nvidia GPU support with different driver versions?",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/611",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492394963.400573",
        "date": 1492394963400
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/610#issuecomment-294384877|#610: Export not working for development>",
                "text": "It also doesn't work with `-f`\n\n```singularity export centos7.img -f test2.tar\n/bin/tar: Refusing to write archive contents to terminal (missing -f option?)\n/bin/tar: Error is not recoverable: exiting now\nERROR  : Tar did not return successful\n```\n\nor if I put it first:\n\n```\nsingularity export -f test2.tar centos7.img\n/bin/tar: Refusing to write archive contents to terminal (missing -f option?)\n/bin/tar: Error is not recoverable: exiting now\nERROR  : Tar did not return successful\n\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/610#issuecomment-294384877|#610: Export not working for development>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492390826.160007",
        "date": 1492390826160
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#610 Export not working for development' https://github.com/singularityware/singularity/issues/610 by vsoch",
                "text": "Either export isn't working for a file, or the docs are outdated. For example, here are the docs:\n\n```\nsingularity --help export\nUSAGE: singularity [...] export [export options...] &lt;container path&gt;\n\nExport will dump a tar stream of the container image contents to standard\nout (stdout). \n\nEXPORT OPTIONS:\n    -f/--file       Output to a file instead of a pipe\n       --command    Replace the tar command (DEFAULT: 'tar cf - .')\n\nEXAMPLES:\n```$ singularity export /tmp/Debian.img &gt; /tmp/Debian.tar\n$ singularity export /tmp/Debian.img | gzip -9 &gt; /tmp/Debian.tar.gz\n$ singularity export -f Debian.tar /tmp/Debian.img```\nFor additional help, please visit our public documentation pages which are\nfound at:\n```http://singularity.lbl.gov/```\n```\n\nand here is me trying that out:\n\n```singularity export centos7.img --file test.tar\n/bin/tar: Refusing to write archive contents to terminal (missing -f option?)\n/bin/tar: Error is not recoverable: exiting now\nERROR  : Tar did not return successful\n```\n\nStreaming still works ok:\n\n```singularity export centos7.img &gt; test.tar\nls -l test.tar \n-rw-rw-r-- 1 vanessa vanessa 201994240 Apr 16 20:58 test.tar\n```",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/vsoch|vsoch>",
                "title": "#610 Export not working for development",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/610",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492390716.153099",
        "date": 1492390716153
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/586#issuecomment-294384455|#586: How to use module inside singularity>",
                "text": "Could you please provide the complete code to reproduce what you are doing, and I will help you resolve?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/586#issuecomment-294384455|#586: How to use module inside singularity>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492390414.138458",
        "date": 1492390414138
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/604|#604 overlayfs errors> by <https://github.com/satra|satra>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/604|#604 overlayfs errors> by <https://github.com/satra|satra>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492388764.064403",
        "date": 1492388764064
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hfutxrg on issue <https://github.com/singularityware/singularity/issues/586#issuecomment-294382545|#586: How to use module inside singularity>",
                "text": "@vsoch I know how to extend an image, but it seems that issue was not because of insufficient space size. I just used \"-w -s /usr/bin/bash\" to solve that problem. Do you know why these flags can solve that issue?",
                "pretext": "[singularityware/singularity] New comment by hfutxrg on issue <https://github.com/singularityware/singularity/issues/586#issuecomment-294382545|#586: How to use module inside singularity>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492388229.042958",
        "date": 1492388229042
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294382272|#604: overlayfs errors>",
                "text": "Ok, cool. I believe then that is the expected behavior and the best we can do here. If you concur, please close the issue. Thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294382272|#604: overlayfs errors>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492387883.029781",
        "date": 1492387883029
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/570#issuecomment-294382217|#570: misleading error message with singularity shell and docker layers from dev version>",
                "text": "Sounds good. Thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/570#issuecomment-294382217|#570: misleading error message with singularity shell and docker layers from dev version>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492387816.027142",
        "date": 1492387816027
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294380699|#604: overlayfs errors>",
                "text": "pointing LOCALCACHEDIR to local directories works and to non-local directories generates overlayFS error.\n\nunsetting the variable also works.",
                "pretext": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294380699|#604: overlayfs errors>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492385962.957384",
        "date": 1492385962957
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/570#issuecomment-294380611|#570: misleading error message with singularity shell and docker layers from dev version>",
                "text": "@vsoch - i agree and further many recent python installs may also not have requests since it is not in stdlib. ",
                "pretext": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/570#issuecomment-294380611|#570: misleading error message with singularity shell and docker layers from dev version>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492385851.953839",
        "date": 1492385851953
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/570#issuecomment-294380540|#570: misleading error message with singularity shell and docker layers from dev version>",
                "text": "Until we have issue with downloads needing retry, I think this is an overly complicated thing to do. ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/570#issuecomment-294380540|#570: misleading error message with singularity shell and docker layers from dev version>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492385746.950245",
        "date": 1492385746950
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/607#issuecomment-294380056|#607: bash syntax error at end of yum bootstrap>",
                "text": "I've merged @satra's PR, is this still an issue on the latest development branch? Thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/607#issuecomment-294380056|#607: bash syntax error at end of yum bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492384994.923859",
        "date": 1492384994923
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/609|#609 Quote string components before doing bash eval> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/609|#609 Quote string components before doing bash eval> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492384953.922579",
        "date": 1492384953922
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/609#issuecomment-294380025|#609: Quote string components before doing bash eval>",
                "text": "Oh wow, that is a neat solution. Thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/609#issuecomment-294380025|#609: Quote string components before doing bash eval>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492384950.922462",
        "date": 1492384950922
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294379975|#604: overlayfs errors>",
                "text": "Will you give that a try please and use the SINGULARITY_LOCALCACHEDIR to influence where the container root will be cached.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294379975|#604: overlayfs errors>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492384880.920069",
        "date": 1492384880920
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294379830|#604: overlayfs errors>",
                "text": "The problem is that the container root can not exist on some non-local directories. Period. There are no work arounds aside from not doing that. So... I am not sure how best to fix this without introducing a different variable name for *local* cache directories. I suppose that is best we can do.\n\nNote: I believe version 2.2 just ignored the cache directory for the container root.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294379830|#604: overlayfs errors>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492384679.913115",
        "date": 1492384679913
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/570#issuecomment-294379312|#570: misleading error message with singularity shell and docker layers from dev version>",
                "text": "Can you do something like an `#ifdef` in Python with a check in `configure.ac` so newer Python's/distributions can receive the benefits of requests?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/570#issuecomment-294379312|#570: misleading error message with singularity shell and docker layers from dev version>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492383853.885248",
        "date": 1492383853885
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/606#issuecomment-294379253|#606: Update debian rules>",
                "text": "Looks good, thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/606#issuecomment-294379253|#606: Update debian rules>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492383742.881525",
        "date": 1492383742881
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/606|#606 Update debian rules> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/606|#606 Update debian rules> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492383708.880308",
        "date": 1492383708880
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/605|#605 Progress bar - let's do this again!> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/605|#605 Progress bar - let's do this again!> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492383679.879063",
        "date": 1492383679879
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/605#issuecomment-294379205|#605: Progress bar - let's do this again!>",
                "text": "Looks great!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/605#issuecomment-294379205|#605: Progress bar - let's do this again!>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492383667.878598",
        "date": 1492383667878
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/608|#608 fix: remove spaces from singularity version> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/608|#608 fix: remove spaces from singularity version> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492383559.873817",
        "date": 1492383559873
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/608#issuecomment-294379110|#608: fix: remove spaces from singularity version>",
                "text": "Looks good, thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/608#issuecomment-294379110|#608: fix: remove spaces from singularity version>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492383528.872912",
        "date": 1492383528872
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by akkornel on issue <https://github.com/singularityware/singularity/issues/607#issuecomment-294376991|#607: bash syntax error at end of yum bootstrap>",
                "text": "OK, my PR is in and going through CI.  Note that my PR (#609) doesn't conflict with #608; that PR could still go in, but now the discussion is changed to \"What version format should be used?\" instead of \"What version format doesn't break things?\"!",
                "pretext": "[singularityware/singularity] New comment by akkornel on issue <https://github.com/singularityware/singularity/issues/607#issuecomment-294376991|#607: bash syntax error at end of yum bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492380365.766861",
        "date": 1492380365766
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#609 Quote string components before doing bash eval' https://github.com/singularityware/singularity/pull/609 by akkornel",
                "text": "When doing a bash `eval`, we need to escape any variables that come from\nthe \"outside\".\n\nThanks to <http://stackoverflow.com/questions/2854655> for the solution!\n\nFixes #607 (though it'll need to be closed manually, because this isn't pushing to the default branch.)\n\nChanges proposed in this pull request\n\nâ€¢ Shell-quote SINGULARITY_LABELFILE, the path to `add.py` (SINGULARITY_ADD_SCRIPT), and all other values that could come in from the outside.",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/akkornel|akkornel>",
                "title": "#609 Quote string components before doing bash eval",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/609",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492380192.760872",
        "date": 1492380192760
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/607#issuecomment-294376846|#607: bash syntax error at end of yum bootstrap>",
                "text": "@akkornel - sounds good. #608 doesn't change the information - just the style of displaying that information, which imo is a bit cleaner. \n\nfeel free to close the pull request if the style doesn't need to change.",
                "pretext": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/607#issuecomment-294376846|#607: bash syntax error at end of yum bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492380144.759428",
        "date": 1492380144759
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on pull request <https://github.com/singularityware/singularity/pull/608#issuecomment-294376494|#608: fix: remove spaces from singularity version>",
                "text": "@vsoch and @akkornel - this should now be semantic versioning compliant",
                "pretext": "[singularityware/singularity] New comment by satra on pull request <https://github.com/singularityware/singularity/pull/608#issuecomment-294376494|#608: fix: remove spaces from singularity version>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492379559.739032",
        "date": 1492379559739
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/607#issuecomment-294376471|#607: bash syntax error at end of yum bootstrap>",
                "text": "ok this sounds good too.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/607#issuecomment-294376471|#607: bash syntax error at end of yum bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492379531.738220",
        "date": 1492379531738
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by akkornel on issue <https://github.com/singularityware/singularity/issues/607#issuecomment-294376361|#607: bash syntax error at end of yum bootstrap>",
                "text": "@satra The problem is actually bigger than just the version: The current bash script does not do any escaping, so this issue could easily appear some other way.\n\nI also like the current non-release version number, as it makes it so much easier to see where it came from (since it includes the local branch name).\n\nMy suggestion is, leave the version number the way it is, and update the bash script to properly escape things when needed (such as when doing `eval`s).\n\nI'm working on a pull to do exactly that.",
                "pretext": "[singularityware/singularity] New comment by akkornel on issue <https://github.com/singularityware/singularity/issues/607#issuecomment-294376361|#607: bash syntax error at end of yum bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492379371.732588",
        "date": 1492379371732
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/608#issuecomment-294376195|#608: fix: remove spaces from singularity version>",
                "text": "@akkornell, yum master, do you want to test this out?",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/608#issuecomment-294376195|#608: fix: remove spaces from singularity version>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492379158.725635",
        "date": 1492379158725
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#608 fix: remove spaces from singularity version' https://github.com/singularityware/singularity/pull/608 by satra",
                "text": "Fixes #607 \n\nChanges proposed in this pull request\n\nâ€¢ remove spaces\nâ€¢ change to semantic versioning\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/satra|satra>",
                "title": "#608 fix: remove spaces from singularity version",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/608",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492378925.717637",
        "date": 1492378925717
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/607#issuecomment-294375764|#607: bash syntax error at end of yum bootstrap>",
                "text": "@vsoch, @gmkurtzer  - perhaps we should just use semantic versioning `2.2.99-dev.g388c86b`",
                "pretext": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/607#issuecomment-294375764|#607: bash syntax error at end of yum bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492378630.707276",
        "date": 1492378630707
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/607#issuecomment-294374194|#607: bash syntax error at end of yum bootstrap>",
                "text": "you're in trouble now!!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/607#issuecomment-294374194|#607: bash syntax error at end of yum bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492376698.639822",
        "date": 1492376698639
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/607#issuecomment-294374186|#607: bash syntax error at end of yum bootstrap>",
                "text": "@satra lol",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/607#issuecomment-294374186|#607: bash syntax error at end of yum bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492376688.639502",
        "date": 1492376688639
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by akkornel on issue <https://github.com/singularityware/singularity/issues/607#issuecomment-294374137|#607: bash syntax error at end of yum bootstrap>",
                "text": "Oh, I see now.  Because the version number for non-releases now has spaces, bash is trying to parse them.\n\nGrrrrr.",
                "pretext": "[singularityware/singularity] New comment by akkornel on issue <https://github.com/singularityware/singularity/issues/607#issuecomment-294374137|#607: bash syntax error at end of yum bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492376626.637560",
        "date": 1492376626637
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#607 bash syntax error at end of yum bootstrap ' https://github.com/singularityware/singularity/issues/607 by akkornel",
                "image_url": "https://asciinema.org/a/113783.png",
                "image_width": 372,
                "image_height": 250,
                "image_bytes": 51272,
                "text": "Yo!\n\nThis happened during a yum bootstrap:\n\n```/usr/local/libexec/singularity/bootstrap-scripts/post.sh: eval: line 57: syntax error near unexpected token `('\n/usr/local/libexec/singularity/bootstrap-scripts/post.sh: eval: line 57: `/usr/local/libexec/singularity/python/helpers/json/add.py -f --key SINGULARITY_BOOTSTRAP_VERSION --value 2.2.99 (development/388c86b) --file /var/lib/singularity/mnt/source/.singularity.d/labels.json'\n```\n\nHere's the basic bootstrap file I'm using: <https://gist.github.com/akkornel/b9cd992af449f0573285f1187aabfd9d>\n\nHere's the problem appearing, right at the end of the bootstrap: <https://asciinema.org/a/113783>\n\nMy Git working copy is current to 388c86b3f612c64845aa479877f495c8fc183ea3.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/akkornel|akkornel>",
                "title": "#607 bash syntax error at end of yum bootstrap ",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/607",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492376337.626139",
        "date": 1492376337626
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294373241|#604: overlayfs errors>",
                "text": "@satra the version on our clusters is the crusty original 2.2, so I'm not able to test this :(",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294373241|#604: overlayfs errors>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492375463.595961",
        "date": 1492375463595
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/570#issuecomment-294373071|#570: misleading error message with singularity shell and docker layers from dev version>",
                "text": "I too love requests, but we can't use it to support the older versions of python.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/570#issuecomment-294373071|#570: misleading error message with singularity shell and docker layers from dev version>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492375271.589848",
        "date": 1492375271589
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/570#issuecomment-294369377|#570: misleading error message with singularity shell and docker layers from dev version>",
                "text": "@vsoch - i haven't had an issue with skipping layers or failing to download yet, so i would think yes. i will reopen if this becomes an issue again.\n\ni did implement a retry download url option here that could be of help to someone: <https://github.com/ReproNim/simple_workflow/blob/master/run_demo_workflow.py#L14>\n\nbut this uses requests, and i think you are trying to do everything with python stdlib.",
                "pretext": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/570#issuecomment-294369377|#570: misleading error message with singularity shell and docker layers from dev version>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492370804.418547",
        "date": 1492370804418
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/570|#570 misleading error message with singularity shell and docker layers from dev version> by <https://github.com/satra|satra>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/570|#570 misleading error message with singularity shell and docker layers from dev version> by <https://github.com/satra|satra>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492370804.418526",
        "date": 1492370804418
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294363394|#604: overlayfs errors>",
                "text": "No I haven't - I'm going for a quick run but I'll try when I get back to work. Hey @gmkurtzer get on this thread!! :horse: ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294363394|#604: overlayfs errors>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492363437.132988",
        "date": 1492363437132
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294363279|#604: overlayfs errors>",
                "text": "ok - the last commit on the development branch where i have successfully gotten this to work on both lustre and nfs mounts is: 380acc11 from Feb 1 and this commit doesn't work (743a592a from Feb 15). \n\nbut there have been so many changes that i think we need @gmkurtzer `sing fu` skills\n\n@vsoch - have you tried setting SINGULARITY_CACHEDIR to an NFS mount?",
                "pretext": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294363279|#604: overlayfs errors>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492363280.126923",
        "date": 1492363280126
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294359180|#604: overlayfs errors>",
                "text": "@vsoch - in the original post that both lustre and nfs file systems currently show this problem. we don't have any other filesystem to test on at this point.\n\nalso, the second post shows that importing from docker to singularity img works vs shell from docker doesn't work. so something in that difference may also provide a clue. let me see if i can run a git bisect on the dev tree.",
                "pretext": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294359180|#604: overlayfs errors>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492358431.941197",
        "date": 1492358431941
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294358901|#604: overlayfs errors>",
                "text": "ok `mount_final` is the same: /var/lib/singularity/mnt/final and so is `overlay_options`: lowerdir=/var/lib/singularity/mnt/source,upperdir=/var/lib/singularity/mnt/overlay/upper,workdir=/var/lib/singularity/mnt/overlay/work. I looked at the diff and literally the only difference is the process ID and that the buggy path is `/om/scratch/Mon/satra/` and the working is `/dev/shm/satra/`. Probably @gmkurtzer will know this right away but I'll keep investigating anyway - what is the difference between those two filesystems? It seems like there are a lot of <https://github.com/docker/docker/issues/12488|niche errors> that could return this error message.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294358901|#604: overlayfs errors>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492358098.927976",
        "date": 1492358098927
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294351914|#604: overlayfs errors>",
                "text": "debug from a working session with cachedir set to /dev/shm\n\n```\nScript started on Sun 16 Apr 2017 09:28:05 AM EDT\nsatra$[0m singularity -d shell -c docker://busybox\nEnabling debugging\nEnding argument loop\nSingularity version: 2.2.99 (development/388c86b)\nExec'ing: /cm/shared/openmind/singularity/singularity-dev-5g388c86b/libexec/singularity/cli/shell.exec -cVERBOSE2 SINGULARITY_COMMAND_ASIS found as False\nVERBOSE2 SINGULARITY_ROOTFS found as /dev/shm/satra/.singularity-runtime.zp1o4j52/container/busybox\nVERBOSE2 SINGULARITY_METADATA_FOLDER found as /dev/shm/satra/.singularity-runtime.zp1o4j52/container/busybox/.singularity.d\nVERBOSE2 SINGULARITY_DISABLE_CACHE found as False\nVERBOSE2 SINGULARITY_CACHEDIR found as /dev/shm/satra\nVERBOSE2 SINGULARITY_ENVBASE found as /dev/shm/satra/.singularity-runtime.zp1o4j52/container/busybox/.singularity.d/env\nVERBOSE2 SINGULARITY_LABELFILE found as /dev/shm/satra/.singularity-runtime.zp1o4j52/container/busybox/.singularity.d/labels.json\nVERBOSE2 SINGULARITY_INCLUDECMD found as False\nVERBOSE2 SINGULARITY_PULLFOLDER found as /dev/shm/satra\nVERBOSE2 SHUB_NAMEBYHASH not defined (None)\nVERBOSE2 SHUB_NAMEBYCOMMIT not defined (None)\nVERBOSE2 SHUB_CONTAINERNAME not defined (None)\nVERBOSE2 SINGULARITY_CONTENTS found as /tmp/.singularity-layers.F7muksHI\nVERBOSE2 SINGULARITY_CONTAINER found as docker://busybox\nDEBUG Found uri docker://\nDEBUG \n*** STARTING DOCKER IMPORT PYTHON  ****\nDEBUG Docker layers and (env,labels,runscript) will be written to: /tmp/.singularity-layers.F7muksHI\nVERBOSE2 SINGULARITY_DOCKER_USERNAME not defined (None)\nVERBOSE2 SINGULARITY_DOCKER_PASSWORD found\nDEBUG Starting Docker IMPORT, includes environment, runscript, and metadata.\nVERBOSE Docker image: busybox\nVERBOSE2 Specified Docker ENTRYPOINT as %runscript.\nDEBUG Headers found: Content-Type,Accept\nVERBOSE Registry: index.docker.io\nVERBOSE Namespace: library\nVERBOSE Repo Name: busybox\nVERBOSE Repo Tag: latest\nVERBOSE Version: None\nVERBOSE Obtaining tags: <https://index.docker.io/v2/library/busybox/tags/list>\nDEBUG GET <https://index.docker.io/v2/library/busybox/tags/list>\nDEBUG Http Error with code 401\nDEBUG GET <https://auth.docker.io/token?service=registry.docker.io&amp;expires_in=9000&amp;scope=repository:library/busybox:pull>\nDEBUG Headers found: Authorization,Content-Type,Accept\nDocker image path: index.docker.io/library/busybox:latest\nVERBOSE Obtaining manifest: <https://index.docker.io/v2/library/busybox/manifests/latest>\nDEBUG GET <https://index.docker.io/v2/library/busybox/manifests/latest>\nDEBUG Image manifest version 2.2 found.\nDEBUG Adding digest sha256:7520415ce76232cdd62ecc345cea5ea44f5b6b144dc62351f2cd2b08382532a3\nVERBOSE Obtaining manifest: <https://index.docker.io/v2/library/busybox/manifests/latest>\nDEBUG GET <https://index.docker.io/v2/library/busybox/manifests/latest>\nCache folder set to /dev/shm/satra/docker\nVERBOSE3 Found Docker command (Entrypoint) None\nVERBOSE3 Found Docker command (Cmd) sh\nVERBOSE3 Adding Docker CMD as Singularity runscript...\nDEBUG sh\nVERBOSE3 Found Docker command (Env) PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nVERBOSE3 Found Docker container environment!\nVERBOSE3 Adding Docker environment to metadata tar\nDEBUG Found template for tarinfo\nVERBOSE3 Found Docker command (Labels) {}\nVERBOSE3 Adding Docker labels to metadata tar\nDEBUG Found template for tarinfo\nVERBOSE3 Adding Docker runscript to metadata tar\nDEBUG Found template for tarinfo\nDEBUG metadata file /dev/shm/satra/metadata/sha256:add7f00f0f843c57ed65e8de2d1fcebda0818f2899fd5062c840311233cb2780.tar.gz already exists, will over-write.\nVERBOSE2 Tar file with Docker env and labels: /dev/shm/satra/metadata/sha256:add7f00f0f843c57ed65e8de2d1fcebda0818f2899fd5062c840311233cb2780.tar.gz\nVERBOSE3 Writing Docker layers files to /tmp/.singularity-layers.F7muksHI\nVERBOSE2 Writing file /tmp/.singularity-layers.F7muksHI with mode w.\nVERBOSE2 Writing file /tmp/.singularity-layers.F7muksHI with mode a.\nDEBUG *** FINISHING DOCKER IMPORT PYTHON PORTION ****\nImporting: base Singularity environment\nExploding layer: sha256:7520415ce76232cdd62ecc345cea5ea44f5b6b144dc62351f2cd2b08382532a3.tar.gz\nExploding layer: sha256:add7f00f0f843c57ed65e8de2d1fcebda0818f2899fd5062c840311233cb2780.tar.gz\nVERBOSE [U=0,P=14684]      message_init()                            Set messagelevel to: 5\nVERBOSE [U=0,P=14684]      singularity_config_parse()                Initialize configuration file: /cm/shared/openmind/singularity/singularity-dev-5g388c86b/etc/singularity/singularity.conf\nDEBUG   [U=0,P=14684]      singularity_config_parse()                Starting parse of configuration file /cm/shared/openmind/singularity/singularity-dev-5g388c86b/etc/singularity/singularity.conf\nVERBOSE [U=0,P=14684]      singularity_config_parse()                Got config key allow setuid = 'yes'\nVERBOSE [U=0,P=14684]      singularity_config_parse()                Got config key max loop devices = '256'\nVERBOSE [U=0,P=14684]      singularity_config_parse()                Got config key allow pid ns = 'yes'\nVERBOSE [U=0,P=14684]      singularity_config_parse()                Got config key config passwd = 'yes'\nVERBOSE [U=0,P=14684]      singularity_config_parse()                Got config key config group = 'yes'\nVERBOSE [U=0,P=14684]      singularity_config_parse()                Got config key config resolv_conf = 'yes'\nVERBOSE [U=0,P=14684]      singularity_config_parse()                Got config key mount proc = 'yes'\nVERBOSE [U=0,P=14684]      singularity_config_parse()                Got config key mount sys = 'yes'\nVERBOSE [U=0,P=14684]      singularity_config_parse()                Got config key mount dev = 'yes'\nVERBOSE [U=0,P=14684]      singularity_config_parse()                Got config key mount home = 'yes'\nVERBOSE [U=0,P=14684]      singularity_config_parse()                Got config key mount tmp = 'yes'\nVERBOSE [U=0,P=14684]      singularity_config_parse()                Got config key mount hostfs = 'no'\nVERBOSE [U=0,P=14684]      singularity_config_parse()                Got config key bind path = '/etc/hosts'\nVERBOSE [U=0,P=14684]      singularity_config_parse()                Got config key user bind control = 'yes'\nVERBOSE [U=0,P=14684]      singularity_config_parse()                Got config key enable overlay = 'yes'\nVERBOSE [U=0,P=14684]      singularity_config_parse()                Got config key mount slave = 'yes'\nVERBOSE [U=0,P=14684]      singularity_config_parse()                Got config key container dir = '/var/lib/singularity/mnt'\nVERBOSE [U=0,P=14684]      singularity_config_parse()                Got config key singularity user = 'singularity'\nDEBUG   [U=0,P=14684]      singularity_config_parse()                Finished parsing configuration file '/cm/shared/openmind/singularity/singularity-dev-5g388c86b/etc/singularity/singularity.conf'\nVERBOSE [U=0,P=14684]      singularity_registry_init()               Initializing Singularity Registry\nVERBOSE [U=0,P=14684]      singularity_registry_set()                Adding value to registry: 'CONTAIN' = '1'\nDEBUG   [U=0,P=14684]      singularity_registry_set()                Returning singularity_registry_set(CONTAIN, 1) = 0\nVERBOSE [U=0,P=14684]      singularity_registry_set()                Adding value to registry: 'LIBEXECDIR' = '/cm/shared/openmind/singularity/singularity-dev-5g388c86b/libexec'\nDEBUG   [U=0,P=14684]      singularity_registry_set()                Returning singularity_registry_set(libexecdir, /cm/shared/openmind/singularity/singularity-dev-5g388c86b/libexec) = 0\nVERBOSE [U=0,P=14684]      singularity_registry_set()                Adding value to registry: 'COMMAND' = 'shell'\nDEBUG   [U=0,P=14684]      singularity_registry_set()                Returning singularity_registry_set(COMMAND, shell) = 0\nVERBOSE [U=0,P=14684]      singularity_registry_set()                Adding value to registry: 'MESSAGELEVEL' = '5'\nDEBUG   [U=0,P=14684]      singularity_registry_set()               â€¦",
                "pretext": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294351914|#604: overlayfs errors>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492349431.616720",
        "date": 1492349431616
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#606 Update debian rules' https://github.com/singularityware/singularity/pull/606 by dexter2cz",
                "text": "â€¢ location of binaries has changed\nâ€¢ sexec splits to more binaries - set suid bit to all with -suid",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/dexter2cz|dexter2cz>",
                "title": "#606 Update debian rules",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/606",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492336360.237616",
        "date": 1492336360237
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/586#issuecomment-294333727|#586: How to use module inside singularity>",
                "text": "Hey @hfutxrg did you figure out how to create the larger image, and retest?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/586#issuecomment-294333727|#586: How to use module inside singularity>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492318576.772589",
        "date": 1492318576772
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/570#issuecomment-294333697|#570: misleading error message with singularity shell and docker layers from dev version>",
                "text": "@satra is this bug fixed with development?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/570#issuecomment-294333697|#570: misleading error message with singularity shell and docker layers from dev version>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492318520.771314",
        "date": 1492318520771
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/581#issuecomment-294333673|#581: Shouldwe have a `list` command for image orchestration>",
                "text": "How would you propose to implement this?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/581#issuecomment-294333673|#581: Shouldwe have a `list` command for image orchestration>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492318486.770239",
        "date": 1492318486770
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/601#issuecomment-294333662|#601: [development] owner issue after \"singularity copy\">",
                "text": "@ArangoGutierrez is this issue resolved for you?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/601#issuecomment-294333662|#601: [development] owner issue after \"singularity copy\">",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492318460.769677",
        "date": 1492318460769
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "<https://github.com/singularityware/singularity|[singularity]> The branch \"revert-591-development\" was deleted by vsoch",
                "text": "<https://github.com/singularityware/singularity|[singularity]> The branch \"revert-591-development\" was deleted by vsoch",
                "id": 1,
                "color": "4183C4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492318395.768359",
        "date": 1492318395768
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/591#issuecomment-294325634|#591: Tweaking output of progress bar>",
                "text": "see <https://github.com/singularityware/singularity/pull/605>",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/591#issuecomment-294325634|#591: Tweaking output of progress bar>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492302253.312189",
        "date": 1492302253312
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294325608|#604: overlayfs errors>",
                "text": "okay, so the bug is happening <https://github.com/singularityware/singularity/blob/development/src/lib/runtime/overlayfs/overlayfs.c#L99|here> and specifically:\n\n```        singularity_message(VERBOSE, \"Mounting overlay with options: %s\\n\", overlay_options);\n        if ( mount(\"overlay\", mount_final, \"overlay\", MS_NOSUID, overlay_options) &lt; 0 ){\n            singularity_message(ERROR, \"Could not mount overlayFS: %s\\n\", strerror(errno));\n            ABORT(255); \n        }\n```\nwhich means that ` mount(\"overlay\", mount_final, \"overlay\", MS_NOSUID, overlay_options` is &lt;0 and triggering the error message. Our variables are:\n\nâ€¢ mount_final: which we see is `/var/lib/singularity/mnt/final`\nâ€¢ overlay_options: (in this string) `Mounting overlay with options: lowerdir=/var/lib/singularity/mnt/source,upperdir=/var/lib/singularity/mnt/overlay/upper,workdir=/var/lib/singularity/mnt/overlay/work`\n\nCould you do `--debug` for the working case so we can compare how those two are different? If they aren't different then we will keep working backwards until we find the difference :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294325608|#604: overlayfs errors>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492302209.310913",
        "date": 1492302209310
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#605 Progress bar - let's do this again!' https://github.com/singularityware/singularity/pull/605 by vsoch",
                "text": "The issue with the progress bar was really stupid, and thanks to @satra for pointing me to a quick test that made me aware of it. The print output was simply too wide for the terminal. To fix, all I needed to do was make it a lot shorter. The preview of the fix is here:\n\n<https://asciinema.org/a/113644?speed=3>\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#605 Progress bar - let's do this again!",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/605",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492301383.283854",
        "date": 1492301383283
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/591#issuecomment-294324255|#591: Tweaking output of progress bar>",
                "text": "ah I think I figured it out - and it's stupid. The line is just too long, and so it makes a newline. Derpaderp! Let me see if I can redo this, tweak it a bit, and do a new PR so we can count the number of layers.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/591#issuecomment-294324255|#591: Tweaking output of progress bar>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492299785.230018",
        "date": 1492299785230
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/591#issuecomment-294323552|#591: Tweaking output of progress bar>",
                "text": "just got back to keyboard - let me test this! So the only difference is 9 vs. 10? I haven't tested this yet, but if there is some bug related to the number of layers, it must be that when I tested, I tested on an image with odd (or whatever x pattern is) number and it worked, and later tried a different number and saw the bug. Give me a few minutes, testing now.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/591#issuecomment-294323552|#591: Tweaking output of progress bar>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492298566.191313",
        "date": 1492298566191
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on pull request <https://github.com/singularityware/singularity/pull/591#issuecomment-294310976|#591: Tweaking output of progress bar>",
                "text": "@vsoch - this appears to work for me: here is a situation showing where things may break:\n\n```\nIn [14]: for i in range(9): show_progress(i + 1, 9, length=40, prefix='test-foo' ); sleep(0\n    ...: .05)\ntest-foo |========================================| 100.0%   \n\nIn [15]: for i in range(*10*): show_progress(i + 1, 9, length=40, prefix='test-foo' ); sleep(\n    ...: 0.05)\ntest-foo |========================================| 100.0%   \ntest-foo |========================================| 100.0%   \nIn [16]: \n```",
                "pretext": "[singularityware/singularity] New comment by satra on pull request <https://github.com/singularityware/singularity/pull/591#issuecomment-294310976|#591: Tweaking output of progress bar>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492281787.531317",
        "date": 1492281787531
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294310223|#604: overlayfs errors>",
                "text": "@vsoch  - this error only happens with docker images\n\n*this works*\n\n```\n$ singularity create -s 10 busybox.img\nInitializing Singularity image subsystem\nOpening image file: busybox.img\nCreating 10MiB image\nBinding image to loop\nCreating file system within image\nImage is done: busybox.img\n\n$ singularity import busybox.img docker://busybox\nDocker image path: index.docker.io/library/busybox:latest\nCache folder set to /om/scratch/Mon/satra/docker\nDownloading layer sha256:7520415ce76232cdd62ecc345cea5ea44f5b6b144dc62351f2cd2b08382532a3\nProgress |========================================| 100.0% downloading layer  \nProgress |========================================| 100.0% preparing layer  \nImporting: base Singularity environment\nImporting: /om/scratch/Mon/satra/docker/sha256:7520415ce76232cdd62ecc345cea5ea44f5b6b144dc62351f2cd2b08382532a3.tar.gz\nImporting: /om/scratch/Mon/satra/metadata/sha256:add7f00f0f843c57ed65e8de2d1fcebda0818f2899fd5062c840311233cb2780.tar.gz\n\n$ singularity shell -c busybox.img \nSingularity: Invoking an interactive shell within container...\n\nSingularity&gt; \n```\n\n*this does not work*\n\n```$ singularity shell -c docker://busybox\nDocker image path: index.docker.io/library/busybox:latest\nCache folder set to /om/scratch/Mon/satra/docker\nImporting: base Singularity environment\nExploding layer: sha256:7520415ce76232cdd62ecc345cea5ea44f5b6b144dc62351f2cd2b08382532a3.tar.gz\nExploding layer: sha256:add7f00f0f843c57ed65e8de2d1fcebda0818f2899fd5062c840311233cb2780.tar.gz\nERROR  : Could not mount overlayFS: Invalid argument\nABORT  : Retval = 255\n```",
                "pretext": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/604#issuecomment-294310223|#604: overlayfs errors>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492280962.494944",
        "date": 1492280962494
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#604 overlayfs errors' https://github.com/singularityware/singularity/issues/604 by satra",
                "text": "version: gdf5a3815 onwards at least on centos 7.2\n\n```$ export SINGULARITY_CACHEDIR=$PWD\n$ singularity shell -c docker://busybox\n```\n\nworks:\nCACHEDIR on /dev/shm\n\ndoesn't work:\nCACHEDIR on lustrefs\nCACHEDIR on nfs (tested on two separate nfs mounts)\n\nversion info in debug from lustre mount:\n\n```Enabling debugging\nEnding argument loop\nSingularity version: 2.2.99 (development/388c86b)\nExec'ing: /cm/shared/openmind/singularity/singularity-dev-5g388c86b/libexec/singularity/cli/shell.exec -cVERBOSE2 SINGULARITY_COMMAND_ASIS found as False\nVERBOSE2 SINGULARITY_ROOTFS found as /om/scratch/Mon/satra/.singularity-runtime.Z03k8Sdk/container/busybox\nVERBOSE2 SINGULARITY_METADATA_FOLDER found as /om/scratch/Mon/satra/.singularity-runtime.Z03k8Sdk/container/busybox/.singularity.d\nVERBOSE2 SINGULARITY_DISABLE_CACHE found as False\nVERBOSE2 SINGULARITY_CACHEDIR found as /om/scratch/Mon/satra\nVERBOSE2 SINGULARITY_ENVBASE found as /om/scratch/Mon/satra/.singularity-runtime.Z03k8Sdk/container/busybox/.singularity.d/env\nVERBOSE2 SINGULARITY_LABELFILE found as /om/scratch/Mon/satra/.singularity-runtime.Z03k8Sdk/container/busybox/.singularity.d/labels.json\nVERBOSE2 SINGULARITY_INCLUDECMD found as False\nVERBOSE2 SINGULARITY_PULLFOLDER found as /om/scratch/Mon/satra\nVERBOSE2 SHUB_NAMEBYHASH not defined (None)\nVERBOSE2 SHUB_NAMEBYCOMMIT not defined (None)\nVERBOSE2 SHUB_CONTAINERNAME not defined (None)\nVERBOSE2 SINGULARITY_CONTENTS found as /tmp/.singularity-layers.d8ht1AAZ\nVERBOSE2 SINGULARITY_CONTAINER found as docker://busybox\nDEBUG Found uri docker://\nDEBUG \n*** STARTING DOCKER IMPORT PYTHON  ****\nDEBUG Docker layers and (env,labels,runscript) will be written to: /tmp/.singularity-layers.d8ht1AAZ\nVERBOSE2 SINGULARITY_DOCKER_USERNAME not defined (None)\nVERBOSE2 SINGULARITY_DOCKER_PASSWORD found\nDEBUG Starting Docker IMPORT, includes environment, runscript, and metadata.\nVERBOSE Docker image: busybox\nVERBOSE2 Specified Docker ENTRYPOINT as %runscript.\nDEBUG Headers found: Content-Type,Accept\nVERBOSE Registry: index.docker.io\nVERBOSE Namespace: library\nVERBOSE Repo Name: busybox\nVERBOSE Repo Tag: latest\nVERBOSE Version: None\nVERBOSE Obtaining tags: https://index.docker.io/v2/library/busybox/tags/list\nDEBUG GET https://index.docker.io/v2/library/busybox/tags/list\nDEBUG Http Error with code 401\nDEBUG GET https://auth.docker.io/token?service=registry.docker.io&amp;expires_in=9000&amp;scope=repository:library/busybox:pull\nDEBUG Headers found: Content-Type,Authorization,Accept\nVERBOSE Obtaining manifest: https://index.docker.io/v2/library/busybox/manifests/latest\nDEBUG GET https://index.docker.io/v2/library/busybox/manifests/latest\nDEBUG Image manifest version 2.2 found.\nDEBUG Adding digest sha256:7520415ce76232cdd62ecc345cea5ea44f5b6b144dc62351f2cd2b08382532a3\nVERBOSE Obtaining manifest: https://index.docker.io/v2/library/busybox/manifests/latest\nDEBUG GET https://index.docker.io/v2/library/busybox/manifests/latest\nVERBOSE3 Found Docker command (Entrypoint) None\nVERBOSE3 Found Docker command (Cmd) sh\nVERBOSE3 Adding Docker CMD as Singularity runscript...\nDEBUG sh\nVERBOSE3 Found Docker command (Env) PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nVERBOSE3 Found Docker container environment!\nVERBOSE3 Adding Docker environment to metadata tar\nDEBUG Found template for tarinfo\nVERBOSE3 Found Docker command (Labels) {}\nVERBOSE3 Adding Docker labels to metadata tar\nDEBUG Found template for tarinfo\nVERBOSE3 Adding Docker runscript to metadata tar\nDEBUG Found template for tarinfo\nDEBUG metadata file /om/scratch/Mon/satra/metadata/sha256:add7f00f0f843c57ed65e8de2d1fcebda0818f2899fd5062c840311233cb2780.tar.gz already exists, will over-write.\nVERBOSE2 Tar file with Docker env and labels: /om/scratch/Mon/satra/metadata/sha256:add7f00f0f843c57ed65e8de2d1fcebda0818f2899fd5062c840311233cb2780.tar.gz\nVERBOSE3 Writing Docker layers files to /tmp/.singularity-layers.d8ht1AAZ\nVERBOSE2 Writing file /tmp/.singularity-layers.d8ht1AAZ with mode w.\nVERBOSE2 Writing file /tmp/.singularity-layers.d8ht1AAZ with mode a.\nDEBUG *** FINISHING DOCKER IMPORT PYTHON PORTION ****\nDocker image path: index.docker.io/library/busybox:latest\nCache folder set to /om/scratch/Mon/satra/docker\nImporting: base Singularity environment\nExploding layer: sha256:7520415ce76232cdd62ecc345cea5ea44f5b6b144dc62351f2cd2b08382532a3.tar.gz\nExploding layer: sha256:add7f00f0f843c57ed65e8de2d1fcebda0818f2899fd5062c840311233cb2780.tar.gz\nVERBOSE [U=0,P=11039]      message_init()                            Set messagelevel to: 5\nVERBOSE [U=0,P=11039]      singularity_config_parse()                Initialize configuration file: /cm/shared/openmind/singularity/singularity-dev-5g388c86b/etc/singularity/singularity.conf\nDEBUG   [U=0,P=11039]      singularity_config_parse()                Starting parse of configuration file /cm/shared/openmind/singularity/singularity-dev-5g388c86b/etc/singularity/singularity.conf\nVERBOSE [U=0,P=11039]      singularity_config_parse()                Got config key allow setuid = 'yes'\nVERBOSE [U=0,P=11039]      singularity_config_parse()                Got config key max loop devices = '256'\nVERBOSE [U=0,P=11039]      singularity_config_parse()                Got config key allow pid ns = 'yes'\nVERBOSE [U=0,P=11039]      singularity_config_parse()                Got config key config passwd = 'yes'\nVERBOSE [U=0,P=11039]      singularity_config_parse()                Got config key config group = 'yes'\nVERBOSE [U=0,P=11039]      singularity_config_parse()                Got config key config resolv_conf = 'yes'\nVERBOSE [U=0,P=11039]      singularity_config_parse()                Got config key mount proc = 'yes'\nVERBOSE [U=0,P=11039]      singularity_config_parse()                Got config key mount sys = 'yes'\nVERBOSE [U=0,P=11039]      singularity_config_parse()                Got config key mount dev = 'yes'\nVERBOSE [U=0,P=11039]      singularity_config_parse()                Got config key mount home = 'yes'\nVERBOSE [U=0,P=11039]      singularity_config_parse()                Got config key mount tmp = 'yes'\nVERBOSE [U=0,P=11039]      singularity_config_parse()                Got config key mount hostfs = 'no'\nVERBOSE [U=0,P=11039]      singularity_config_parse()                Got config key bind path = '/etc/hosts'\nVERBOSE [U=0,P=11039]      singularity_config_parse()                Got config key user bind control = 'yes'\nVERBOSE [U=0,P=11039]      singularity_config_parse()                Got config key enable overlay = 'yes'\nVERBOSE [U=0,P=11039]      singularity_config_parse()                Got config key mount slave = 'yes'\nVERBOSE [U=0,P=11039]      singularity_config_parse()                Got config key container dir = '/var/lib/singularity/mnt'\nVERBOSE [U=0,P=11039]      singularity_config_parse()                Got config key singularity user = 'singularity'\nDEBUG   [U=0,P=11039]      singularity_config_parse()                Finished parsing configuration file '/cm/shared/openmind/singularity/singularity-dev-5g388c86b/etc/singularity/singularity.conf'\nVERBOSE [U=0,P=11039]      singularity_registry_init()               Initializing Singularity Registry\nVERBOSE [U=0,P=11039]      singularity_registry_set()                Adding value to registry: 'CONTAIN' = '1'\nDEBUG   [U=0,P=11039]      singularity_registry_set()                Returning singularity_registry_set(CONTAIN, 1) = 0\nVERBOSE [U=0,P=11039]      singularity_registry_set()                Adding value to registry: 'LIBEXECDIR' = '/cm/shared/openmind/singularity/singularity-dev-5g388c86b/libexec'\nDEBUG   [U=0,P=11039]      singularity_registry_set()                Returning singularity_registry_set(libexecdir, /cm/shared/openmind/singularity/singularity-dev-5g388c86b/libexec) = 0\nVERBOSE [U=0,P=11039]      singularity_registry_set()                Adding value to registry: 'COMMAND' = 'shell'\nDEBUG   [U=0,P=11039]      singularity_registry_set()                Returning singularity_registry_set(COMMAND, shell) = 0\nVERBâ€¦",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/satra|satra>",
                "title": "#604 overlayfs errors",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/604",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492271771.067189",
        "date": 1492271771067
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/603|#603 Fix out-of-bounds writes in singularity_registry_{get,set}> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/603|#603 Fix out-of-bounds writes in singularity_registry_{get,set}> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492227887.576389",
        "date": 1492227887576
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/603#issuecomment-294269756|#603: Fix out-of-bounds writes in singularity_registry_{get,set}>",
                "text": "Great catches, thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/603#issuecomment-294269756|#603: Fix out-of-bounds writes in singularity_registry_{get,set}>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492227884.576318",
        "date": 1492227884576
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/445#issuecomment-294269711|#445: [idea] Make passing environment variables and mounting $HOME optional and off by default>",
                "text": "In that case, the use of `%environment` will make `PYTHONNOUSERSITE` available via all Singularity action commands (e.g. `shell`, `run`, `exec`). If you put it only in the `%runscript` then it will only be available to the `run` command.\n\nAlso, I stress, that not all versions of `/bin/sh` (which is what gets called by the `%runscript` and everything else, will be linked to Bash. Thus defining the `export` on the same line of the variable may not always work. Standard Bourne syntax specifies/requires these being on two separate lines:\n\n```PYTHONNOUSERSITE=\"some-arbitrary-value\"\nexport PYTHONNOUSERSITE\n```\n\nSorry about being a nag about shell pedantics, but I've already seen this mistake bite others.\n\nHope that helps!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/445#issuecomment-294269711|#445: [idea] Make passing environment variables and mounting $HOME optional and off by default>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492227824.574391",
        "date": 1492227824574
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on pull request <https://github.com/singularityware/singularity/pull/603#issuecomment-294229578|#603: Fix out-of-bounds writes in singularity_registry_{get,set}>",
                "text": "valgrind was reporting thousands of errors.",
                "pretext": "[singularityware/singularity] New comment by flx42 on pull request <https://github.com/singularityware/singularity/pull/603#issuecomment-294229578|#603: Fix out-of-bounds writes in singularity_registry_{get,set}>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492201399.471357",
        "date": 1492201399471
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#603 Fix out-of-bounds writes in singularity_registry_{get,set}' https://github.com/singularityware/singularity/pull/603 by flx42",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/flx42|flx42>",
                "title": "#603 Fix out-of-bounds writes in singularity_registry_{get,set}",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/603",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492201091.418059",
        "date": 1492201091418
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/445#issuecomment-294157741|#445: [idea] Make passing environment variables and mounting $HOME optional and off by default>",
                "text": "`%environment` is just for the separation of concerns? If not, what's the difference between:\n\n```%runscript\n    export PYTHONNOUSERSITE=\"some-arbitrary-value\"\n    python your-code.py\n```\n\nvs.\n\n```%environment\n    export PYTHONNOUSERSITE=\"some-arbitrary-value\"\n%runscript\n    python your-code.py\n```",
                "pretext": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/445#issuecomment-294157741|#445: [idea] Make passing environment variables and mounting $HOME optional and off by default>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492178171.099959",
        "date": 1492178171099
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/583|#583 /dev/urandom (or equivalent) not found when compiling ROS> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/583|#583 /dev/urandom (or equivalent) not found when compiling ROS> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492170600.182040",
        "date": 1492170600182
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-294141244|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "text": "ok great! I'll close the issue. Please re-open if necessary... and share if /when you make a cool robot! :_)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-294141244|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492170600.182009",
        "date": 1492170600182
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-294102051|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "text": "Sorry for the late reply, public holiday. Pulling in the latest development branch worked. Thanks for the help both of you!",
                "pretext": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-294102051|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492152575.564427",
        "date": 1492152575564
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/426#issuecomment-294068840|#426: Tab-complete docker:// URLs where possible.>",
                "text": "yeah let me see if I can figure out how to do this - based on the name of the folder I think he learned <http://www.shugarysweets.com/2017/04/best-carrot-cake-recipes|from here>",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/426#issuecomment-294068840|#426: Tab-complete docker:// URLs where possible.>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492136120.550627",
        "date": 1492136120550
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/426#issuecomment-294057051|#426: Tab-complete docker:// URLs where possible.>",
                "text": "Can we extend that functionality to the cli? maybe something like:\n\n```singularity shell docker://ubuntu:&lt;enter&gt;\n```\nor if you just typed a few chars, show what it matches?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/426#issuecomment-294057051|#426: Tab-complete docker:// URLs where possible.>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492130525.095258",
        "date": 1492130525095
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/426#issuecomment-294045290|#426: Tab-complete docker:// URLs where possible.>",
                "text": "it's pretty easy to get tags now, even you could do this @gmkurtzer !\n\n```cd singularity/libexec/python\npython\n```\nnow we are in python...\n\n```python\nfrom docker.api import *\nVERBOSE2 SINGULARITY_COMMAND_ASIS found as False\nVERBOSE2 SINGULARITY_ROOTFS not defined (None)\nVERBOSE2 SINGULARITY_METADATA_FOLDER found as None/.singularity.d\nVERBOSE2 SINGULARITY_DISABLE_CACHE found as False\nVERBOSE2 SINGULARITY_CACHEDIR found as /home/vanessa/.singularity\nVERBOSE2 SINGULARITY_ENVBASE found as None/.singularity.d/env\nVERBOSE2 SINGULARITY_LABELFILE found as None/.singularity.d/labels.json\nVERBOSE2 SINGULARITY_INCLUDECMD found as False\nVERBOSE2 SINGULARITY_PULLFOLDER found as /home/vanessa/Documents/Dropbox/Code/singularity/singularity/libexec/python\nVERBOSE2 SHUB_NAMEBYHASH not defined (None)\nVERBOSE2 SHUB_NAMEBYCOMMIT not defined (None)\nVERBOSE2 SHUB_CONTAINERNAME not defined (None)\nVERBOSE2 SINGULARITY_CONTENTS found as None/.singularity.d/.layers\n\nIn [2]: client = DockerApiConnection(image=\"ubuntu\")\nDEBUG Headers found: Accept,Content-Type\nVERBOSE Registry: index.docker.io\nVERBOSE Namespace: library\nVERBOSE Repo Name: ubuntu\nVERBOSE Repo Tag: latest\nVERBOSE Version: None\nVERBOSE Obtaining tags: <https://index.docker.io/v2/library/ubuntu/tags/list>\nDEBUG GET <https://index.docker.io/v2/library/ubuntu/tags/list>\nDEBUG Http Error with code 401\nDEBUG GET <https://auth.docker.io/token?service=registry.docker.io&amp;expires_in=9000&amp;scope=repository:library/ubuntu:pull>\nDEBUG Headers found: Accept,Content-Type,Authorization\n\nIn [3]: tags = client.get_tags()\nVERBOSE Obtaining tags: <https://index.docker.io/v2/library/ubuntu/tags/list>\nDEBUG GET <https://index.docker.io/v2/library/ubuntu/tags/list>\n\ntags\n['10.04',\n '12.04.5',\n '12.04',\n '12.10',\n '13.04',\n '13.10',\n '14.04.1',\n '14.04.2',\n '14.04.3',\n '14.04.4',\n '14.04.5',\n '14.04',\n '14.10',\n '15.04',\n '15.10',\n '16.04',\n '16.10',\n '17.04',\n 'devel',\n 'latest',\n 'lucid',\n 'precise-20150212',\n 'precise-20150228.11',\n 'precise-20150320',\n 'precise-20150427',\n 'precise-20150528',\n 'precise-20150612',\n 'precise-20150626',\n 'precise-20150729',\n 'precise-20150813',\n 'precise-20150924',\n 'precise-20151020',\n 'precise-20151028',\n 'precise-20151208',\n 'precise-20160108',\n 'precise-20160217',\n 'precise-20160225',\n 'precise-20160303',\n 'precise-20160311',\n 'precise-20160318',\n 'precise-20160330',\n 'precise-20160425',\n 'precise-20160503',\n 'precise-20160526',\n 'precise-20160624',\n 'precise-20160707',\n 'precise-20160819',\n 'precise-20160923.1',\n 'precise-20161102',\n 'precise-20161123',\n 'precise-20161209',\n 'precise-20170214',\n 'precise-20170331',\n 'precise',\n 'quantal',\n 'raring',\n 'rolling',\n 'saucy',\n 'trusty-20150218.1',\n 'trusty-20150228.11',\n 'trusty-20150320',\n 'trusty-20150427',\n 'trusty-20150528',\n 'trusty-20150612',\n 'trusty-20150630',\n 'trusty-20150730',\n 'trusty-20150806',\n 'trusty-20150814',\n 'trusty-20151001',\n 'trusty-20151009',\n 'trusty-20151021',\n 'trusty-20151028',\n 'trusty-20151208',\n 'trusty-20151218',\n 'trusty-20160119',\n 'trusty-20160217',\n 'trusty-20160226',\n 'trusty-20160302',\n 'trusty-20160315',\n 'trusty-20160317',\n 'trusty-20160323',\n 'trusty-20160405',\n 'trusty-20160412',\n 'trusty-20160424',\n 'trusty-20160503.1',\n 'trusty-20160526',\n 'trusty-20160624',\n 'trusty-20160711',\n 'trusty-20160802',\n 'trusty-20160819',\n 'trusty-20160914',\n 'trusty-20160923.1',\n 'trusty-20161006',\n 'trusty-20161101',\n 'trusty-20161123',\n 'trusty-20161214',\n 'trusty-20170119',\n 'trusty-20170214',\n 'trusty-20170330',\n 'trusty',\n 'utopic-20150211',\n 'utopic-20150228.11',\n 'utopic-20150319',\n 'utopic-20150418',\n 'utopic-20150427',\n 'utopic-20150528',\n 'utopic-20150612',\n 'utopic-20150625',\n 'utopic',\n 'vivid-20150218',\n 'vivid-20150309',\n 'vivid-20150319.1',\n 'vivid-20150421',\n 'vivid-20150427',\n 'vivid-20150528',\n 'vivid-20150611',\n 'vivid-20150802',\n 'vivid-20150813',\n 'vivid-20150930',\n 'vivid-20151021',\n 'vivid-20151106',\n 'vivid-20151111',\n 'vivid-20151208',\n 'vivid-20160122',\n 'vivid',\n 'wily-20150528.1',\n 'wily-20150611',\n 'wily-20150708',\n 'wily-20150731',\n 'wily-20150807',\n 'wily-20150818',\n 'wily-20150829',\n 'wily-20151006',\n 'wily-20151009',\n 'wily-20151019',\n 'wily-20151208',\n 'wily-20160121',\n 'wily-20160217',\n 'wily-20160302',\n 'wily-20160316',\n 'wily-20160329',\n 'wily-20160424',\n 'wily-20160503',\n 'wily-20160526',\n 'wily-20160602',\n 'wily-20160706',\n 'wily',\n 'xenial-20151218.1',\n 'xenial-20160119.1',\n 'xenial-20160125',\n 'xenial-20160217.2',\n 'xenial-20160226',\n 'xenial-20160303.1',\n 'xenial-20160314.4',\n 'xenial-20160317',\n 'xenial-20160331.1',\n 'xenial-20160422',\n 'xenial-20160503',\n 'xenial-20160525',\n 'xenial-20160629',\n 'xenial-20160706',\n 'xenial-20160713',\n 'xenial-20160809',\n 'xenial-20160818',\n 'xenial-20160914',\n 'xenial-20160923.1',\n 'xenial-20161010',\n 'xenial-20161114',\n 'xenial-20161121',\n 'xenial-20161213',\n 'xenial-20170119',\n 'xenial-20170214',\n 'xenial-20170410',\n 'xenial',\n 'yakkety-20160708',\n 'yakkety-20160717',\n 'yakkety-20160806.1',\n 'yakkety-20160826',\n 'yakkety-20160919',\n 'yakkety-20160923.1',\n 'yakkety-20161013',\n 'yakkety-20161104',\n 'yakkety-20161121',\n 'yakkety-20161213',\n 'yakkety-20170104',\n 'yakkety-20170224',\n 'yakkety-20170327',\n 'yakkety',\n 'zesty-20161129.1',\n 'zesty-20161212',\n 'zesty-20170118',\n 'zesty-20170224',\n 'zesty-20170411',\n 'zesty']\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/426#issuecomment-294045290|#426: Tab-complete docker:// URLs where possible.>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492125317.588234",
        "date": 1492125317588
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/596|#596 [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV> by <https://github.com/flx42|flx42>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/596|#596 [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV> by <https://github.com/flx42|flx42>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492124541.496186",
        "date": 1492124541496
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/426#issuecomment-294042043|#426: Tab-complete docker:// URLs where possible.>",
                "text": "How do we receive tags? I remember we used to be able to do that, and it was really cool!\n\nOh? tab completion is broken now? Uh-oh... What did you find, I will try and replicate.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/426#issuecomment-294042043|#426: Tab-complete docker:// URLs where possible.>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492124017.427786",
        "date": 1492124017427
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/426#issuecomment-294040418|#426: Tab-complete docker:// URLs where possible.>",
                "text": "I had done the python bits to retrieve the tags - I have no idea how the underlying bash works so I stopped and handed it back to @bbockelm. Also - I think the current development completion might be broken... :sob: ",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/426#issuecomment-294040418|#426: Tab-complete docker:// URLs where possible.>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492123409.349929",
        "date": 1492123409349
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/426#issuecomment-294039877|#426: Tab-complete docker:// URLs where possible.>",
                "text": "Heya guys, what's the status of this?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/426#issuecomment-294039877|#426: Tab-complete docker:// URLs where possible.>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492123208.323538",
        "date": 1492123208323
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/475#issuecomment-294039648|#475: Add/opensuse>",
                "text": "Ping @FlyElephant-M31! ",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/475#issuecomment-294039648|#475: Add/opensuse>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492123128.312930",
        "date": 1492123128312
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/599|#599 enh - let version reflect git short hash when configuring from a git repo> by <https://github.com/satra|satra>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/599|#599 enh - let version reflect git short hash when configuring from a git repo> by <https://github.com/satra|satra>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492122378.207950",
        "date": 1492122378207
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/602#issuecomment-294036534|#602: updating copy help>",
                "text": "Wahoo, thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/602#issuecomment-294036534|#602: updating copy help>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492121998.151957",
        "date": 1492121998151
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/602|#602 updating copy help> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/602|#602 updating copy help> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492121984.150099",
        "date": 1492121984150
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/598#issuecomment-294033612|#598: singularity help still says create requires root>",
                "text": "@vsoch  thank you checked that with the latest build as well.",
                "pretext": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/598#issuecomment-294033612|#598: singularity help still says create requires root>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492121022.003049",
        "date": 1492121022003
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/599#issuecomment-294033146|#599: enh - let version reflect git short hash when configuring from a git repo>",
                "text": "woohoo!\n```$ singularity --version\n2.2.99 (development/324d1d3)\n```",
                "pretext": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/599#issuecomment-294033146|#599: enh - let version reflect git short hash when configuring from a git repo>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492120875.977712",
        "date": 1492120875977
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-294032228|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "text": "Done. :)",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-294032228|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492120611.930287",
        "date": 1492120611930
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/599#issuecomment-294032083|#599: enh - let version reflect git short hash when configuring from a git repo>",
                "text": "Pushed, will you test the development branch now?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/599#issuecomment-294032083|#599: enh - let version reflect git short hash when configuring from a git repo>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492120565.922534",
        "date": 1492120565922
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/598#issuecomment-294030883|#598: singularity help still says create requires root>",
                "text": "Merge title says it all! :wink: ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/598#issuecomment-294030883|#598: singularity help still says create requires root>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492120190.857404",
        "date": 1492120190857
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-294030640|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "text": "ah, so beautiful, yes I agree too. I think we are likely to hit edge cases when something might break, in which case we can re-visit this discussion. The solution stated above by @flx42 sounds like it will work for the large majority.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-294030640|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492120124.845944",
        "date": 1492120124845
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-294027892|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "text": "I agree. :)",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-294027892|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492119331.702250",
        "date": 1492119331702
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/599#issuecomment-294014213|#599: enh - let version reflect git short hash when configuring from a git repo>",
                "text": "@gmkurtzer - ah in that case could we do it like git describe :)\n\n```\n\n*git describe*\n\n2.2-1122-g03a88e9\n```\n\nand if the 1122 is too complicated, i would be completely fine with just:\n\n```2.2-branchname-g03a88e9\n```",
                "pretext": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/599#issuecomment-294014213|#599: enh - let version reflect git short hash when configuring from a git repo>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492115605.899307",
        "date": 1492115605899
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-294013736|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "text": "... But actually, using `3.` for `LANG` seems suspicious for reproducibility reasons.\nSo maybe `TERM` should take the host value if it's set. And `LANG` should be hardcoded to `C`?",
                "pretext": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-294013736|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492115493.872923",
        "date": 1492115493872
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-294009876|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "text": "&gt; Question on TERM - what are the drawbacks of having it defined? What would be the reason to have it only for shell?\nIt boils down to the question of whether `singularity exec docker://ubuntu:14.04 top` ultimately makes sense?\nI feel `singularity exec` can be used in a scenario where no TTY is allocated, therefore setting `TERM` might actually cause bugs since we're basically lying ;).\nCompare:\n```\n$ ssh -t localhost env | grep TERM\nTERM=xterm\n$ ssh -t localhost top\n[works fine]\n\n$ ssh -T localhost env | grep TERM \n$ # no match\n$ ssh -T localhost top\nTERM environment variable not set.\n```\nAt least with option `3.`, we won't have this issue.",
                "pretext": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-294009876|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492114481.636461",
        "date": 1492114481636
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/599#issuecomment-294006337|#599: enh - let version reflect git short hash when configuring from a git repo>",
                "text": "I haven't committed/pushed this change yet. Wanted to know if that was what you were hoping for. :)",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/599#issuecomment-294006337|#599: enh - let version reflect git short hash when configuring from a git repo>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492113559.418764",
        "date": 1492113559418
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/601#issuecomment-294004970|#601: [development] owner issue after \"singularity copy\">",
                "text": "<https://github.com/singularityware/singularityware.github.io/blob/docs/2.3/pages/docs/user-docs/docs-content.md#mount>",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/601#issuecomment-294004970|#601: [development] owner issue after \"singularity copy\">",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492113208.335092",
        "date": 1492113208335
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/601#issuecomment-294004383|#601: [development] owner issue after \"singularity copy\">",
                "text": "This is pretty interesting, actually doing a mount with sudo and then using -p preserves everything! I'll show you in a second.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/601#issuecomment-294004383|#601: [development] owner issue after \"singularity copy\">",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492113056.299084",
        "date": 1492113056299
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-294002135|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "text": "OK, I just want/need to reiterate... option 1 would end up discarding all environment variables unconditionally _except for_ ones that are necessary for appropriate functions (so far `TERM` and `LANG` have been identified). Then the question becomes, what do we set those to. The options that I see are:\n\n1. We set them static hard coded defaults via the C source code\n2. We set them via changeable defaults via `/etc/singularity/init` or a user's environment variables (my preference)\n3. We use what is currently defined in the user's shell (I was proposing only doing this when the `-t/--tty` option is used)\n\n@flx42 I don't want to have different environmental configurations for the different actions as `TERM` and `LANG` can be necessary for programs weather they are executed via `shell` or `exec` or `run`.\n\nFor bootstrapping (as @ArangoGutierrez eluded to), we end up setting `LANG=C` to ensure that builds function appropriately. I see no reason not to continue with that here. I think the right solution is setting `SINGULARITYENV_LANG=C` in `/etc/singularity/init` (which will transpose to `LANG=C` inside the containers even if `--cleanenv` et. al. are passed) and using the same `TERM` as always defined by the environment. `TERM` would probably be best set in the same manner as `LANG` in `/etc/singularity/init`).",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-294002135|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492112461.160356",
        "date": 1492112461160
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/599#issuecomment-293999294|#599: enh - let version reflect git short hash when configuring from a git repo>",
                "text": "@gmkurtzer - just there, but did you compile it in some special way?\n\ni compiled dev branch just this morning and installed it and it says 2.2.99 without the development txt.",
                "pretext": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/599#issuecomment-293999294|#599: enh - let version reflect git short hash when configuring from a git repo>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492111808.007471",
        "date": 1492111808007
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/599#issuecomment-293998732|#599: enh - let version reflect git short hash when configuring from a git repo>",
                "text": "Something like this:\n\n```$ singularity --version\n2.2.99 (development.a9313ce)\n```\n\nWhere else do you want to see it?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/599#issuecomment-293998732|#599: enh - let version reflect git short hash when configuring from a git repo>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492111698.981420",
        "date": 1492111698981
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#602 updating copy help' https://github.com/singularityware/singularity/pull/602 by vsoch",
                "text": "Fixes #\n\nChanges proposed in this pull request\n\nâ€¢ addition of instructions to user to use -p, in both main and copy help\nâ€¢ removing that copy require sudo (it doesn't)\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#602 updating copy help",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/602",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492111646.969377",
        "date": 1492111646969
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/601#issuecomment-293998451|#601: [development] owner issue after \"singularity copy\">",
                "text": "+1 on\n\"\"use at your own risk.\" And in this case, we will provide ample documentation about the options that should be used to do the copy (eg -p).\" ",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/601#issuecomment-293998451|#601: [development] owner issue after \"singularity copy\">",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492111608.960418",
        "date": 1492111608960
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/601#issuecomment-293997770|#601: [development] owner issue after \"singularity copy\">",
                "text": "I'm updating the docs now.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/601#issuecomment-293997770|#601: [development] owner issue after \"singularity copy\">",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492111425.916844",
        "date": 1492111425916
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293997555|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "text": "There was a bug reported on #594 about not having the LANG env. \nSo i think the LANG env may go as @gmkurtzer propose.",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293997555|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492111368.903323",
        "date": 1492111368903
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/601#issuecomment-293997241|#601: [development] owner issue after \"singularity copy\">",
                "text": "I think generally we should discourage users copying stuff into containers after creation - there is no record of it and it's not reproducible. Given that using `%files` works without a hitch, I think copy should be more of \"use at your own risk.\" And in this case, we will provide ample documentation about the options that should be used to do the copy (eg -p). ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/601#issuecomment-293997241|#601: [development] owner issue after \"singularity copy\">",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492111284.883201",
        "date": 1492111284883
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/601#issuecomment-293997091|#601: [development] owner issue after \"singularity copy\">",
                "text": "Well for 1:\nâ€¢ Documentation is always important so yes to this point.\n     for 2 : \nâ€¢ add to the `-h|--help` some common options to help the users, if they don't know the native commands for cp.",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/601#issuecomment-293997091|#601: [development] owner issue after \"singularity copy\">",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492111241.872813",
        "date": 1492111241872
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293996711|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "text": "â€¢ +1 on discard all environment variables unconditionally when --contain or --cleanenv are passed\nâ€¢ Question on `TERM` - what are the drawbacks of having it defined? What would be the reason to have it only for shell? If a user's custom `TERM` is specified for the container, it would take preference, and I think there is more likely a chance that not having it defined would lead to a bug, but I'm not sure.\n     â€¢ I think we can avoid the `-t/-tty` option only given that we set `TERM`",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293996711|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492111141.848687",
        "date": 1492111141848
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293992186|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "text": "&gt; When --cleanenv, --contain or --containall is passed, discard all environment variables unconditionally.\nYes, that's fine for me.\n\n&gt; Assume some sane defaults, for exampleTERM and LANG both need to be defined to some reasonable setting for a lot of programs to work (perhaps xterm-color and C respectively?).\nAgain, I think `TERM` should only be set for `singularity shell`.\n`LANG` probably doesn't need to be set, it should default to the POSIX locale. Is there a bug with that?\n\n&gt; Add a -t/--tty option that takes the current environment setting for TERM (if defined) and pass that into the container.\nI don't think there is a strong use case for this option. For me `-t/-tty` is simply equivalent to `singularity shell`. `docker run -t` doesn't use the host `TERM` variable, it always use `xterm`.\nIf you want to use your host `TERM` variable, don't use any `contain` option with `singularity shell`.",
                "pretext": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293992186|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492110013.570297",
        "date": 1492110013570
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/601#issuecomment-293991820|#601: [development] owner issue after \"singularity copy\">",
                "text": "That is an interesting problem, and I'm open to suggestions. Basically, singularity is wrapping the default behavior of the `cp` program, and that is the expected behavior of `cp`. There are two options:\n\n1. Document proper usage of `singularity copy` such that it should incude an option like: `singularity copy myimage.img -p script.sh /usr/bin/script.sh`\n2. Include some various common options to the `cp` command by default (e.g. `-p`).\n\nNote that in both cases, this means the default behavior of `cp -p`will also copy the file's owner/group, which we also may not want.\n\nThoughts?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/601#issuecomment-293991820|#601: [development] owner issue after \"singularity copy\">",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492109935.549433",
        "date": 1492109935549
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/445#issuecomment-293989887|#445: [idea] Make passing environment variables and mounting $HOME optional and off by default>",
                "text": "@hisplan This is a very good point and additionally I want to mention that in the 2.3 development branch you can also use the `%environment` section to do your export. Just make sure (for compatibility) you don't use Bash'isms (e.g. exporting on the same line as the variable declaration).\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/445#issuecomment-293989887|#445: [idea] Make passing environment variables and mounting $HOME optional and off by default>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492109481.431529",
        "date": 1492109481431
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/598|#598 singularity help still says create requires root> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/598|#598 singularity help still says create requires root> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492109374.404138",
        "date": 1492109374404
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/598#issuecomment-293989481|#598: singularity help still says create requires root>",
                "text": "Thanks @satra, closing as @vsoch fixed this.  :)",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/598#issuecomment-293989481|#598: singularity help still says create requires root>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492109374.404114",
        "date": 1492109374404
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/600|#600 being specific about which commands require sudo to close #598> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/600|#600 being specific about which commands require sudo to close #598> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492109270.377421",
        "date": 1492109270377
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-293988930|#488: [Proposal] Include syslog support>",
                "text": "Hi @martbhell, can you confirm which branch of GitHub you are testing? If it is master, can you retest with 'development'?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-293988930|#488: [Proposal] Include syslog support>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492109235.368262",
        "date": 1492109235368
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-293988550|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "text": "A few days ago, I changed things such that the host's `/dev` file system is bound into the container during bootstrap. Can you check this and see if the latest 'development' branch just works now?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-293988550|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492109152.346994",
        "date": 1492109152346
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293988111|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "text": "Let me just confirm to make sure I am getting the requested logic correctly:\n\n1. When `--cleanenv`, `--contain` or `--containall` is passed, discard all environment variables unconditionally.\n2. Assume some sane defaults, for example`TERM` and `LANG` both need to be defined to some reasonable setting for a lot of programs to work (perhaps `xterm-color` and `C` respectively?).\n3. Add a `-t/--tty` option that takes the current environment setting for `TERM` (if defined) and pass that into the container.\n\nIt is my vote, considering that `TERM` and `LANG` are generally considered required to always take one of not both of them from the users current environment on the host. I could see setting `LANG=C` as a general rule something smart to do, but where that happens is up for discussion. Another option is to make that part of `/etc/singularity/init`, such that the default behavior is easily modifiable, and that people can always override it in their own `~/.singularity-init` files.\n\nGreg",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293988111|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492109051.320055",
        "date": 1492109051320
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/599#issuecomment-293956113|#599: enh - let version reflect git short hash when configuring from a git repo>",
                "text": "@jmstover - i think that would work - this is mostly to ensure that people don't submit issues saying we are using version 2.2.99 when using dev branches. and also allows us to run git bisect a little more optimally.",
                "pretext": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/599#issuecomment-293956113|#599: enh - let version reflect git short hash when configuring from a git repo>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492101765.394468",
        "date": 1492101765394
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/601#issuecomment-293942301|#601: [development] owner issue after \"singularity copy\">",
                "text": "A possible workaround, and I agree this should work off the bat!\n\n```vanessa@som-ctp:~$ chmod 775 script.sh\nvanessa@som-ctp:~$ sudo chown root script.sh\nvanessa@som-ctp:~$ sudo singularity copy rosdep.img -p script.sh /bin\nvanessa@som-ctp:~$ singularity exec rosdep.img ls -l /bin/script.sh\n-rwxrwxr-x 1 root vanessa 11 Apr 13 16:07 /bin/script.sh\nvanessa@som-ctp:~$ singularity exec rosdep.img /bin/script.sh\nHello\n```\nYou can also skip `chmod` and `chown` and just use -p, and then `ls -l` would show `vanessa vanessa`",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/601#issuecomment-293942301|#601: [development] owner issue after \"singularity copy\">",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492099803.886243",
        "date": 1492099803886
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by jmstover on issue <https://github.com/singularityware/singularity/issues/599#issuecomment-293933794|#599: enh - let version reflect git short hash when configuring from a git repo>",
                "text": "@satra Are you meaning only when you do a ./configure from within a structure containing a .git/ directory? Or even from tarballs built from a given git source?\n\nI've done similar by creating a .gitversion file during the autogen.sh run and using that during ./configure and replacing with that value... would a similar setup be close enough?",
                "pretext": "[singularityware/singularity] New comment by jmstover on issue <https://github.com/singularityware/singularity/issues/599#issuecomment-293933794|#599: enh - let version reflect git short hash when configuring from a git repo>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492098270.444506",
        "date": 1492098270444
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#601 owner issue after \"singularity copy\"' https://github.com/singularityware/singularity/issues/601 by ArangoGutierrez",
                "text": "*A `Permission denied` when calling a bin after copy command*\n\nAfter \n\n```$ sudo singularity copy myimage.img the.sh /usr/bin/\n```\nwhen calling it\n```$ singularity exec myimage.img the.sh\n$ /bin/sh: /usr/bin/the.sh: Permission denied\n```\nIn host \n```$ ls -l\n$ -rwx--x--x. 1 eduardo root    282 Jan 30 11:34 the.sh\n```\nInside the container \n```$ singularity shell myimage.img\n$ singularity-shell-&gt; ls /usr/bin/\n$ -rwx--x--x. 1 root root    282 Jan 30 11:34 the.sh\n```\n\nthoughts?",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "title": "#601 owner issue after \"singularity copy\"",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/601",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492097558.239830",
        "date": 1492097558239
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/445#issuecomment-293908872|#445: [idea] Make passing environment variables and mounting $HOME optional and off by default>",
                "text": "In my case, `PYTHONPATH` on the host had nothing set, but python inside my container was still searching per-user site-packages directories on the host (e.g. `~/.local/lib/pythonX.Y/site-packages`), causing weird errors.\n\nThe solution was either\n\n```%runscript\n    export PYTHONNOUSERSITE=\"some-arbitrary-value\"\n    python your-code.py\n```\n\nor\n\n```%runscript\n    python -s your-code.py\n```\n\n`-H` wasn't an option for me because I still want to mount user's home directory.",
                "pretext": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/445#issuecomment-293908872|#445: [idea] Make passing environment variables and mounting $HOME optional and off by default>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492093142.938779",
        "date": 1492093142938
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#600 being specific about which commands require sudo to close #598' https://github.com/singularityware/singularity/pull/600 by vsoch",
                "text": "Fixes #598 \n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#600 being specific about which commands require sudo to close #598",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/600",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492090637.265077",
        "date": 1492090637265
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/576|#576 Test progress bar for downloading layers> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/576|#576 Test progress bar for downloading layers> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492090588.252899",
        "date": 1492090588252
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#599 enh - let version reflect git short hash when configuring from a git repo' https://github.com/singularityware/singularity/issues/599 by satra",
                "text": "it would be nice if the git hash was injected via configure when the existing folder from which configure is run is a git repo of singularity.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/satra|satra>",
                "title": "#599 enh - let version reflect git short hash when configuring from a git repo",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/599",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492090295.178318",
        "date": 1492090295178
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#598 singularity help still says create requires root' https://github.com/singularityware/singularity/issues/598 by satra",
                "text": "title says it all :)",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/satra|satra>",
                "title": "#598 singularity help still says create requires root",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/598",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492090191.150668",
        "date": 1492090191150
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by martbhell on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-293782142|#488: [Proposal] Include syslog support>",
                "text": "Sorry for delay here.\n\nThis is on a CentOS7 machine with this kind of rsyslog.conf:\n\n&lt;pre&gt;\n$ grep -v -e ^# -e ^$ /etc/rsyslog.conf |head\n$ModLoad imuxsock # provides support for local system logging (e.g. via logger command)\n$ModLoad imjournal # provides access to the systemd journal\n$WorkDirectory /var/lib/rsyslog\n$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat\n*.*                                                /var/log/local0.log\n&lt;/pre&gt;\n\nAll the logs are written to local0.log, including if I run \"logger -p local0.info -t test test\"\n\nIf I run this: \"singularity exec -B /scratch:/mnt docker://ubuntu:latest env\"\n\nthen nothing is written to syslog (nor is it in the \"journalctl -xef\" output either).",
                "pretext": "[singularityware/singularity] New comment by martbhell on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-293782142|#488: [Proposal] Include syslog support>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492059715.809679",
        "date": 1492059715809
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-293779419|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "text": "ok this should do the trick - here is the build spec, called `Singularity`:\n\n```\nBootstrap: docker\nFrom: ros:kinetic-perception\n\n%setup\n        # This is done before we are \"inside\" container\n        # We first create our workspace folder\n        mkdir -p $SINGULARITY_ROOTFS/workspace/src\n        # Then copy our code into this workspace\n        cd $SINGULARITY_ROOTFS/workspace/src\n        git clone <https://github.com/ros/ros_tutorials.git>\n\n%post\n        apt-get update &amp;&amp; apt-get install -y vim &amp;&amp;\n        . /opt/ros/kinetic/setup.sh\n        test -L \"/etc/mtab\"  &amp;&amp; rm -f \"/etc/mtab\"\n        cd /dev &amp;&amp; /sbin/MAKEDEV std\n        cd /workspace/src\n        catkin_init_workspace\n        cd /workspace\n        catkin_make\n        catkin_make install\n\n%runscript\n        cd /workspace\n        /bin/bash /workspace/devel/setup.bash\n```\n\nand then:\n\n```singularity create --size 4096 ros.img\nsudo singularity bootstrap ros.img Singularity\n```\n\nit was a very stupid debugging. I just did an ls for `/`, and then for `/dev` and then saw the only thing there was `null`. Then I searched for how to create the junk in `/dev` and found <http://serverfault.com/questions/91675/dev-random-is-missing-after-an-upgrade|this page> with the instruction to make those files. Then it just seemed to work? Reading that post, it sounds like `/udev` is used to dynamically populate that folder. I would look closely at <http://serverfault.com/a/91739|this post> and see if you can do the same, because according to it, not using udev has some kind of future consequences? Anyway this is an ok first fix, and I would give a shot at using udev. Give it a test and let me know!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-293779419|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492058526.721391",
        "date": 1492058526721
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-293778307|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "text": "ah I got it!  Will post in a sec.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-293778307|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492058081.687520",
        "date": 1492058081687
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293762975|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "text": "`docker run -t` would be equivalent to `singularity shell`.",
                "pretext": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293762975|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492051686.181556",
        "date": 1492051686181
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-293759486|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "text": "Hey! Apologies for the delay - I had some unexpected badness happen yesterday that sent me through a spin, and I'm still catching up with stuffs.\n\nI just tested your build spec, and interestingly the first thing I noticed is that the commands work when you run them via shell (after) initially creating the image. This means that the bug is that something that happens after the `%post` scriptlet needs to be done before it. So first, to test this, I made the following spec file:\n\n```\nBootstrap: docker\nFrom: ros:kinetic-perception\n\n%setup\n        # This is done before we are \"inside\" container\n```    # We first create our workspace folder\n    mkdir -p $SINGULARITY_ROOTFS/workspace/src\n    # Then copy our code into this workspace\n    cd $SINGULARITY_ROOTFS/workspace/src\n    git clone https://github.com/ros/ros_tutorials.git```\n%post\n        # This is executed inside container\n        apt-get update &amp;&amp; apt-get install -y vim\n        . /opt/ros/kinetic/setup.sh\n\n%runscript\n        . /opt/ros/kinetic/setup.sh\n        cd /workspace/src\n        catkin_init_workspace\n        cd /workspace\n        catkin_make\n        catkin_make install\n        /bin/bash /workspace/devel/setup.bash\n```\n\nmeaning that the compilation stuffs would happen at runtime, and we would have to use sudo with writable. So first create and bootstrap:\n\n```singularity create --size 4096 ros.img\nsudo singularity bootstrap ros.img ros.def\n```\nwhere\n\n```sudo singularity run --writable ros.img\n```\n\nand that actually works to at least get it compiled. But it's not ideal, because you have this extra step (that needs sudo) that really should be done with standard bootstrap.\n\nThe better approach would be to figure out what needs to be fixed to get it working in post. The first thing that happens is <https://github.com/singularityware/singularity/blob/development/libexec/bootstrap-scripts/deffile-sections.sh#L151|here> and the final chunk of stuff is <https://github.com/singularityware/singularity/blob/development/libexec/bootstrap-scripts/post.sh#L45|here>. It it's not something there, then it's something that happens with regard to mounting at runtime, and we could likely mimic that as well during post.\n\nI have to start making dinner, but I'll keep playing around with this later and likely tomorrow morning - just wanted to share with you some progress! I definitely think we will figure out this bug, or at least a workaround.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-293759486|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492050442.073853",
        "date": 1492050442073
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293747474|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "text": "It is actually very easy to do it with `-t/--tty` thanks to `SINGULARITYENV_` in the shell wrappers. I'm happy to do that too, but I think a reasonable default `TERM` should be used.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293747474|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492044981.551593",
        "date": 1492044981551
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/597|#597 Fix misleading typo regarding uid/gid remapping> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/597|#597 Fix misleading typo regarding uid/gid remapping> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492044898.542896",
        "date": 1492044898542
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/597#issuecomment-293747304|#597: Fix misleading typo regarding uid/gid remapping>",
                "text": "Oh yeah, good catch! Thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/597#issuecomment-293747304|#597: Fix misleading typo regarding uid/gid remapping>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492044895.542650",
        "date": 1492044895542
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293744495|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "text": "hmm maybe we could have an equivalent command for terminal (the same `--tty/t`) so it's familiar, and it is sort of a weird one. @gmkurtzer would this blow up your head? lol",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293744495|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492043550.409792",
        "date": 1492043550409
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293743451|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "text": "&gt; A user that would have preference would go out of his/her way to define the variable with the image.\nI agree with that.\n\nFYI, Docker only adds this environment variable when `--tty/-t` is set:\n```\n$ docker run -t centos:7 env\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nHOSTNAME=207e7c90e20d\nTERM=xterm\nHOME=/root\n\n$ docker run centos:7 env                                                                                                                                                  \nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin                                                                                                                 \nHOSTNAME=1649c7566c70                                                                                                                                                             \nHOME=/root\n```",
                "pretext": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293743451|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492043066.359676",
        "date": 1492043066359
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/594#issuecomment-293743234|#594: [development] CMake \"make -j4\" Error>",
                "text": "Done\n\n```Install the project...\n-- Install configuration: \"\"\n-- Installing: /usr/local/bin/grive\n-- Installing: /usr/local/share/man/man1/grive.1\nFinalizing Singularity container\n```\n\nFixed with development branch April 12 2017\n\nClosing  #594 ",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/594#issuecomment-293743234|#594: [development] CMake \"make -j4\" Error>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492042974.350842",
        "date": 1492042974350
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/594|#594 [development] CMake \"make -j4\" Error> by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/594|#594 [development] CMake \"make -j4\" Error> by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492042974.350821",
        "date": 1492042974350
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#597 Fix misleading typo regarding uid/gid remapping' https://github.com/singularityware/singularity/pull/597 by flx42",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/flx42|flx42>",
                "title": "#597 Fix misleading typo regarding uid/gid remapping",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/597",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492042718.323793",
        "date": 1492042718323
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/595#issuecomment-293741078|#595: Remove the need to generate environment.tar as root>",
                "text": "Oh thank goodness, thank you @flx42 ! This gave me such pain when I didn't know it existed, and then found it by chance, haha.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/595#issuecomment-293741078|#595: Remove the need to generate environment.tar as root>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492042043.250306",
        "date": 1492042043250
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293740748|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "text": "If this were any other variable, then to stay true to  `--containall` and `--cleanenv` we would not include `TERM`. But @flx42 original example with shell is an obvious case when this is pretty stupid to do. It would be highly annoying to have to add this as a custom variable to containers just to use these commands. Here are the use cases I see:\n\n*Case 1: User just wants to contain, or clean environment*\n\nProbably the user isn't going to think much about `TERM`, and it's going to be annoying and confusing to have the error message (as @flx42 showed above). This is one of those things that is just expect it to work, and users don't have a lot of preference for. \n\n*Case 2: User has preference for term*\n\nA user that *would* have preference would go out of his/her way to define the variable with the image. In this case, whether or not we define it wouldn't matter, the container's would take preference.\n\nThe first decision I'm thinking about is the above - should we include `TERM` at all? Based on what I said above, I think yes. The second question is, to what extent? So then we have a few options. \n\nâ€¢ include `TERM` in a subset of commands for `--containenv`/`--containall`, meaning shell would work, maybe exec wouldn't. \nâ€¢ include `TERM` in all commands for `--containenv`/`--containall`.\n\nThere is complete certainty of needing it for shell, and more uncertainty about the rest. But we do know there are edge cases when it would be needed, and then not defined. On the other hand, having it defined probably wouldn't hurt. It's also easier to do it consistently across commands than have a bunch of custom logic. So my final opinion is to include it, and include with all actions as one of those \"special singularity\" variables. If we find some use case that we didn't anticipate here where this is a bad idea, then we can step back and include under some conditions.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293740748|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492041911.235308",
        "date": 1492041911235
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293738833|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "text": "I decided to do it in the singularity_runtime_environment()... Will update shortly (Internet is taking a break right now pfft...). \n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293738833|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492041154.143450",
        "date": 1492041154143
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293738494|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "text": "I don't feel strongly about it, but I feel it would be nice to have the opinion of someone else here.",
                "pretext": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293738494|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492041001.124516",
        "date": 1492041001124
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293737908|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "text": "I would argue that `TERM` should be available in all of the actions (e.g. singularity exec/run might also do something, anything, requiring TERM). \n\nWe could change this such that it only happens for the actions, but in the end, some bits of the environment are always going to be somewhat representative and needed by the calling shell.\n\nIf you feel strongly, I can do this elsewhere.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293737908|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492040742.094051",
        "date": 1492040742094
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293737036|#589: [development] file descriptor leaks inside the container>",
                "text": "Awesome, thank you!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293737036|#589: [development] file descriptor leaks inside the container>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492040386.051182",
        "date": 1492040386051
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293735849|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "text": "I'm not a big fan of b82b48ee211ecefd5135954887ad631d45a261c5 to be honest. Having exceptions kinda of defeat the purpose of `--containall`.\nAnd `TERM` should probably only be set for `singularity shell`.",
                "pretext": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293735849|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492039911.992565",
        "date": 1492039911992
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/595#issuecomment-293734760|#595: Remove the need to generate environment.tar as root>",
                "text": "Merged, thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/595#issuecomment-293734760|#595: Remove the need to generate environment.tar as root>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492039462.934609",
        "date": 1492039462934
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/595|#595 Remove the need to generate environment.tar as root> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/595|#595 Remove the need to generate environment.tar as root> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492039449.932835",
        "date": 1492039449932
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/594#issuecomment-293732622|#594: [development] CMake \"make -j4\" Error>",
                "text": "Hi @ArangoGutierrez, will you give it another shot now?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/594#issuecomment-293732622|#594: [development] CMake \"make -j4\" Error>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492038614.827400",
        "date": 1492038614827
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293732578|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "text": "Hi @flx42, can you retest please?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293732578|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492038594.824737",
        "date": 1492038594824
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/594#issuecomment-293732027|#594: [development] CMake \"make -j4\" Error>",
                "text": "Let me know when the change is done to give it a test!",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/594#issuecomment-293732027|#594: [development] CMake \"make -j4\" Error>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492038380.795759",
        "date": 1492038380795
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/594#issuecomment-293722847|#594: [development] CMake \"make -j4\" Error>",
                "text": "Hrmm... That's a good one, and it does work with 2.2!!! Very weird!!! Looking into it now...",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/594#issuecomment-293722847|#594: [development] CMake \"make -j4\" Error>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492035289.332171",
        "date": 1492035289332
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293715653|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "text": "@ArangoGutierrez what is your point?",
                "pretext": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293715653|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492033186.942485",
        "date": 1492033186942
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293714630|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "text": "I get this when doing it on my pc.\nLast pull from repo : today\n```bash\n[eduardo@sephiroth ~]$ singularity shell --cleanenv docker://centos:7\nDocker image path: index.docker.io/library/centos:7\nCache folder set to /home/eduardo/.singularity/docker\nImporting: base Singularity environment\nExploding layer: sha256:93857f76ae30d903bbdad13fbf7fad95ce1c0b52b7d5644651e01c6c7a906312.tar.gz\nExploding layer: sha256:9326ff949485e53c2403126b5422ad659cb2176bddbc511461da81c10703a50c.tar.gz\nSingularity: Invoking an interactive shell within container...\n\nSingularity centos:7:/home/eduardo&gt; exit\n```with `--containall`\n```bash\n[eduardo@sephiroth ~]$ singularity shell --containall docker://centos:7\nDocker image path: index.docker.io/library/centos:7\nCache folder set to /home/eduardo/.singularity/docker\nImporting: base Singularity environment\nExploding layer: sha256:93857f76ae30d903bbdad13fbf7fad95ce1c0b52b7d5644651e01c6c7a906312.tar.gz\nExploding layer: sha256:9326ff949485e53c2403126b5422ad659cb2176bddbc511461da81c10703a50c.tar.gz\nSingularity: Invoking an interactive shell within container...\n\nSingularity centos:7:/home/eduardo&gt; exit\n```",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/596#issuecomment-293714630|#596: [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492032918.889809",
        "date": 1492032918889
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#596 [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV' https://github.com/singularityware/singularity/issues/596 by flx42",
                "text": "```$ singularity shell --cleanenv docker://centos:7\nSingularity centos:7:/tmp&gt; top\nTERM environment variable not set.\n```\nSame with `--containall`.\n\nSetting to \"xterm\" might be a good default option, maybe in the `shell` bootstrap script?",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/flx42|flx42>",
                "title": "#596 [development] unset TERM with \"singularity shell\" and SINGULARITY_CLEANENV",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/596",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492030443.328024",
        "date": 1492030443328
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/589|#589 [development] file descriptor leaks inside the container> by <https://github.com/flx42|flx42>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/589|#589 [development] file descriptor leaks inside the container> by <https://github.com/flx42|flx42>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492027613.623206",
        "date": 1492027613623
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293692272|#589: [development] file descriptor leaks inside the container>",
                "text": "Let's close this issue since the last FD is indeed needed for the `flock`.",
                "pretext": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293692272|#589: [development] file descriptor leaks inside the container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492027611.622767",
        "date": 1492027611622
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on pull request <https://github.com/singularityware/singularity/pull/595#issuecomment-293688072|#595: Remove the need to generate environment.tar as root>",
                "text": "My autotools skills are rusty, there might be a better way to do that than  a `PHONY` rule",
                "pretext": "[singularityware/singularity] New comment by flx42 on pull request <https://github.com/singularityware/singularity/pull/595#issuecomment-293688072|#595: Remove the need to generate environment.tar as root>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492026617.361890",
        "date": 1492026617361
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#595 Remove the need to generate environment.tar as root' https://github.com/singularityware/singularity/pull/595 by flx42",
                "text": "The environment.tar archive is now generated as part of the build\nprocess, and is not checked in the repository any more.\n\nSigned-off-by: Felix Abecassis <mailto:fabecassis@nvidia.com|fabecassis@nvidia.com>",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/flx42|flx42>",
                "title": "#595 Remove the need to generate environment.tar as root",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/595",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492026380.302817",
        "date": 1492026380302
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#594 [development] CMake \"make -j4\" Error' https://github.com/singularityware/singularity/issues/594 by ArangoGutierrez",
                "text": "*ERROR: Aborting with RETVAL=255 in a \"make -j4\" step of a bootstrap process*\n\n```$singularity --version\n    2.2.99\n```\n\nThe .def file goes like this\n```bash\n\n*Google Drive client*\n\n#\n\n  Bootstrap: docker\n  From: ubuntu:latest\n  IncludeCmd: yes\n\n%post\n  apt-get update\n  apt-get install -y build-essential\n  apt-get install -y git cmake build-essential libgcrypt11-dev libyajl-dev \\\n  libcurl4-openssl-dev libexpat1-dev binutils-dev\n  apt-get update\n  apt-get install -y zlib1g-dev libncurses5-dev libssl-dev pkg-config\n  mkdir Driveclient\n  cd Driveclient\n  git clone <https://github.com/vitalif/grive2>\n  mkdir build\n  cd build\n  cmake ..\n  make -j4\n  make install\n```\n\n*Create*\n\n```sudo singularity create -s 2048 grive.img\n```\n\n*Bootstrap*\n\n```sudo singularity bootstrap grive.img grive.def\n```\n\nAfter tons of output\n\n```bash\nâ€¢ make -j4\n     CMake Error: Parse error in cache file /Driveclient/grive2/build/CMakeCache.txt on line 263. Offending entry: perl: warning: Please check that your locale settings:\n     CMake Error: Parse error in cache file /Driveclient/grive2/build/CMakeCache.txt on line 267. Offending entry: are supported and installed on your system.\n     CMake Error: Parse error in cache file /Driveclient/grive2/build/CMakeCache.txt on line 268. Offending entry: perl: warning: Falling back to the standard locale (\"C\").\n     CMake Error: Parse error in cache file /Driveclient/grive2/build/CMakeCache.txt on line 269. Offending entry: -lgcrypt;general;/usr/lib/x86_64-linux-gnu/libboost_program_options.so;general;/usr/lib/x86_64-linux-gnu/libboost_filesystem.so;general;/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so;general;/usr/lib/x86_64-linux-gnu/libboost_regex.so;general;/usr/lib/x86_64-linux-gnu/libboost_system.so;general;/usr/lib/x86_64-linux-gnu/libexpat.so;general;/usr/lib/x86_64-linux-gnu/libdl.so;general;/usr/lib/x86_64-linux-gnu/libbfd.so;general;/usr/lib/x86_64-linux-gnu/libz.so;\n     -- Found libgcrypt: perl: warning: Setting locale failed.\n     perl: warning: Please check that your locale settings:\n     LANGUAGE = (unset),\n     LC_ALL = (unset),\n     LANG = \"en_US.UTF-8\"\n     are supported and installed on your system.\n     perl: warning: Falling back to the standard locale (\"C\").\n     -lgcrypt\n     -- Boost version: 1.58.0\n     -- Found the following Boost libraries:\n     --   program_options\n     --   filesystem\n     --   unit_test_framework\n     --   regex\n     --   system\n     -- Found libbfd: /usr/lib/x86_64-linux-gnu/libbfd.so\n     -- Found CppUnit: /usr/lib/x86_64-linux-gnu/libcppunit.so\n     -- Building unitary tests along with the library and the binary\n     -- Boost version: 1.58.0\n     -- Found the following Boost libraries:\n     --   program_options\n     -- Configuring incomplete, errors occurred!\n     See also \"/Driveclient/grive2/build/CMakeFiles/CMakeOutput.log\".\n     Makefile:236: recipe for target 'cmake_check_build_system' failed\n     make: *** [cmake_check_build_system] Error 1\n     ERROR: Aborting with RETVAL=255\n     ```\n\nI have a Dockerfile with the same step of the .def and it worked.\n\nThoughts?",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "title": "#594 [development] CMake \"make -j4\" Error",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/594",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492023845.669992",
        "date": 1492023845669
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/593#issuecomment-293655305|#593: [development] RETVAL=255 in a git clone step>",
                "text": "Thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/593#issuecomment-293655305|#593: [development] RETVAL=255 in a git clone step>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492019149.356105",
        "date": 1492019149356
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/593|#593 [development] RETVAL=255 in a git clone step> by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/593|#593 [development] RETVAL=255 in a git clone step> by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492019100.342001",
        "date": 1492019100342
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/593#issuecomment-293655085|#593: [development] RETVAL=255 in a git clone step>",
                "text": "Done.\n\nIssue #593 closed with pull 12 april 2017 branch:development",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/593#issuecomment-293655085|#593: [development] RETVAL=255 in a git clone step>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492019100.341915",
        "date": 1492019100341
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/188|#188 WiP ENH: try testing under different shells (to demo #187)> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/188|#188 WiP ENH: try testing under different shells (to demo #187)> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492016761.700355",
        "date": 1492016761700
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/188#issuecomment-293644633|#188: WiP ENH: try testing under different shells (to demo #187)>",
                "text": "The shell handling is different in the 'development' branch and this does not seem to still be an error. Additionally I have scripts in `tests/` that test for custom shells, so I think it should be good.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/188#issuecomment-293644633|#188: WiP ENH: try testing under different shells (to demo #187)>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492016761.700352",
        "date": 1492016761700
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/593#issuecomment-293640388|#593: [development] RETVAL=255 in a git clone step>",
                "text": "Sure! hands on it!",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/593#issuecomment-293640388|#593: [development] RETVAL=255 in a git clone step>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492015863.452133",
        "date": 1492015863452
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/593#issuecomment-293639723|#593: [development] RETVAL=255 in a git clone step>",
                "text": "ok, I think I have that working now as of [development 893e703]. Will you give it a spin and let me know? Thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/593#issuecomment-293639723|#593: [development] RETVAL=255 in a git clone step>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492015735.417392",
        "date": 1492015735417
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/592#issuecomment-293633539|#592: Revert \"Tweaking output of progress bar\">",
                "text": "Understood, thanks for the explanation!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/592#issuecomment-293633539|#592: Revert \"Tweaking output of progress bar\">",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492014406.062581",
        "date": 1492014406062
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#593 [development] RETVAL=255 in a  git clone step   ' https://github.com/singularityware/singularity/issues/593 by ArangoGutierrez",
                "text": "*ERROR: Aborting with RETVAL=255 in a \"git clone\" step of a bootstrap process*\n\n```$singularity --version\n    2.2.99\n```\n\nThe .def file goes like this\n```bash\n\n*Google Drive client*\n\n#\n\n  Bootstrap: docker\n  From: ubuntu:latest\n  IncludeCmd: yes\n\n%post\n  apt-get update\n  apt-get install -y build-essential\n  apt-get install -y git cmake build-essential libgcrypt11-dev libyajl-dev \\\n  libcurl4-openssl-dev libexpat1-dev binutils-dev\n  apt-get update\n  apt-get install -y zlib1g-dev libncurses5-dev libssl-dev pkg-config\n  mkdir Driveclient\n  cd Driveclient\n  git clone <https://github.com/vitalif/grive2>\n  mkdir build\n  cd build\n  cmake ..\n  make -j4\n  make install\n```\n\n*Create*\n\n```sudo singularity create -s 2048 grive.img\n```\n\n*Bootstrap*\n\n```sudo singularity bootstrap grive.img grive.def\n```\nAfter tons of output\n\n```â€¢ mkdir Driveclient\nâ€¢ cd Driveclient\nâ€¢ git clone <https://github.com/vitalif/grive2>\n     Cloning into 'grive2'...\n     Error in GnuTLS initialization: Failed to acquire random data.\n     fatal: curl_global_init failed\n     ERROR: Aborting with RETVAL=255\n     ```\n\nAfter this ERROR I made a \n```bash\nsudo singularity shell -w grive.img\n```\nAnd inside the container I run the `git clone` and it worked.\n\nThoughts?",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "title": "#593 [development] RETVAL=255 in a  git clone step   ",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/593",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492012750.581919",
        "date": 1492012750581
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/592|#592 Revert \"Tweaking output of progress bar\"> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/592|#592 Revert \"Tweaking output of progress bar\"> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491984321.481764",
        "date": 1491984321481
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/592#issuecomment-293504246|#592: Revert \"Tweaking output of progress bar\">",
                "text": "ok I just tested this again - @gmkurtzer it won't hurt to revert to a version that was working - I usually check with you first on this, but this is a special case of un-doing a PR that was tiny and seems to have broken output that others might clone and be in horrible shock at, lol.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/592#issuecomment-293504246|#592: Revert \"Tweaking output of progress bar\">",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491984302.478509",
        "date": 1491984302478
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#592 Revert \"Tweaking output of progress bar\"' https://github.com/singularityware/singularity/pull/592 by vsoch",
                "text": "Reverts singularityware/singularity#591\n\nThere is some strange bug now - it's printing on every newline! I'm reverting back to the working version, in case anyone tries to use development.",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#592 Revert \"Tweaking output of progress bar\"",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/592",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491983427.333447",
        "date": 1491983427333
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "<https://github.com/singularityware/singularity|[singularity]> New branch \"<https://github.com/singularityware/singularity/tree/revert-591-development|revert-591-development>\" was pushed by vsoch",
                "text": "<https://github.com/singularityware/singularity|[singularity]> New branch \"<https://github.com/singularityware/singularity/tree/revert-591-development|revert-591-development>\" was pushed by vsoch",
                "id": 1,
                "color": "4183C4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491983372.324726",
        "date": 1491983372324
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/591|#591 Tweaking output of progress bar> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/591|#591 Tweaking output of progress bar> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491966377.685504",
        "date": 1491966377685
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/591#issuecomment-293451924|#591: Tweaking output of progress bar>",
                "text": "That is the coolest looking thing ever! You rock!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/591#issuecomment-293451924|#591: Tweaking output of progress bar>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491962978.376192",
        "date": 1491962978376
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/586#issuecomment-293451344|#586: How to use module inside singularity>",
                "text": "Hey Rengan,\n\nThe \"no space left on device\" is what you see when you run out of room in\nthe image. Did you try creating with a larger image?\n\nBest,\n\nVanessa\n\nOn Tue, Apr 11, 2017 at 3:21 PM, hfutxrg <mailto:notifications@github.com|notifications@github.com> wrote:\n\n&gt; Hi All,\n&gt; \n&gt; Based on my understanding, singularity can ensure the portability by\n&gt; compiling all software inside the container, so that when we move to\n&gt; another system we do not need to install them again. One way to manage\n&gt; those software is by using module files. So I installed \"module_files\"\n&gt; package in singularity. But it is not working. Then I run the command \"yum\n&gt; info module_files\", it has the following errors:\n&gt; \n&gt; Singularity.container.img&gt; yum info module_files\n&gt; error: db5 error(28) from dbenv-&gt;open: No space left on device\n&gt; error: cannot open Packages index using db5 - No space left on device (28)\n&gt; error: cannot open Packages database in /var/lib/rpm\n&gt; CRITICAL:yum.main:\n&gt; Error: rpmdb open failed\n&gt; \n&gt; Why did I have this error? How should we use modules within singularity?\n&gt; Thanks.\n&gt; \n&gt; Regards,\n&gt; Rengan\n&gt; \n&gt; â€”\n&gt; You are receiving this because you are subscribed to this thread.\n&gt; Reply to this email directly, view it on GitHub\n&gt; <https://github.com/singularityware/singularity/issues/586>, or mute the\n&gt; thread\n&gt; <https://github.com/notifications/unsubscribe-auth/AAxs8qL-DRX9tGhRz6HmkhG9I8LlLBlXks5ru9LIgaJpZM4M6iQh>\n&gt; .\n-- \nVanessa Villamia Sochat\nStanford University '16\n(603) 321-0676",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/586#issuecomment-293451344|#586: How to use module inside singularity>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491962727.353256",
        "date": 1491962727353
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/591#issuecomment-293451035|#591: Tweaking output of progress bar>",
                "text": "sorry for the extraneous commits - I'm testing on a server because I can't install locally, and had to do that for each time to see the output.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/591#issuecomment-293451035|#591: Tweaking output of progress bar>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491962581.339103",
        "date": 1491962581339
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#591 Tweaking output of progress bar' https://github.com/singularityware/singularity/pull/591 by vsoch",
                "text": "This will tweak the output to look like this:\n\n```singularity import test.img docker://ubuntu\nDocker image path: index.docker.io/library/ubuntu:latest\nCache folder set to /home/vanessa/.singularity/docker\n(1/5)Download |========================================| 100.0% layer d54efb8d  \n(1/5)Prepare  |========================================| 100.0% layer d54efb8d  \n(2/5)Download |========================================| 100.0% layer f8b845f4  \n(2/5)Prepare  |========================================| 100.0% layer f8b845f4  \n(3/5)Download |========================================| 100.0% layer e8db7bf7  \n(3/5)Prepare  |========================================| 100.0% layer e8db7bf7  \n(4/5)Download |========================================| 100.0% layer 9654c40e  \n(4/5)Prepare  |========================================| 100.0% layer 9654c40e  \n(5/5)Download |========================================| 100.0% layer d9ef359e  \n(5/5)Prepare  |========================================| 100.0% layer d9ef359e  \nImporting: base Singularity environment\nImporting: /home/vanessa/.singularity/docker/sha256:d54efb8db41d4ac23d29469940ec92da94c9a6c2d9e26ec060bebad1d1b0e48d.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:f8b845f45a87dc7c095b15f3d9661e640ebc86f42cd8e8ab36674846472027f7.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:e8db7bf7c39fab6fec91b1b61e3914f21e60233c9823dd57c60bc360191aaf0d.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:9654c40e9079e3d5b271ec71f6d83f8ce80cfa6f09d9737fc6bfd4d2456fed3f.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:6d9ef359eaaa311860550b478790123c4b22a2eaede8f8f46691b0b4433c08cf.tar.gz\nImporting: /home/vanessa/.singularity/metadata/sha256:fe44851d529f465f9aa107b32351c8a0a722fc0619a2a7c22b058084fac068a4.tar.gz\n```\n\nand shub images are mostly the same, because we only have one, and only one step, it doesn't add value to alert the user of a number or additional descriptors!\n\n```vanessa@som-ctp:/tmp$ singularity pull shub://vsoch/singularity-images\nDownload |========================================| 100.0% downloading image  \nDone. Container is at: ./vsoch-singularity-images-mongo.img\n```\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#591 Tweaking output of progress bar",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/591",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491962541.335012",
        "date": 1491962541335
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-293438107|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "text": "ok, back to working on this! Had a erm, slight delay, lol",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-293438107|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491956846.759212",
        "date": 1491956846759
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/590#issuecomment-293436698|#590: [development] --pwd is a no-op>",
                "text": "Looks fine :)",
                "pretext": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/590#issuecomment-293436698|#590: [development] --pwd is a no-op>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491956239.694056",
        "date": 1491956239694
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/590|#590 [development] --pwd is a no-op> by <https://github.com/flx42|flx42>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/590|#590 [development] --pwd is a no-op> by <https://github.com/flx42|flx42>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491956239.694035",
        "date": 1491956239694
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/590#issuecomment-293436431|#590: [development] --pwd is a no-op>",
                "text": "I just committed (and pushed) some fixes for this. Will you test out latest devel branch?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/590#issuecomment-293436431|#590: [development] --pwd is a no-op>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491956132.682691",
        "date": 1491956132682
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#590 [development] --pwd is a no-op' https://github.com/singularityware/singularity/issues/590 by flx42",
                "text": "`TARGET_PWD` seems to be used only in the SLURM module.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/flx42|flx42>",
                "title": "#590 [development] --pwd is a no-op",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/590",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491956093.678004",
        "date": 1491956093678
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293425019|#589: [development] file descriptor leaks inside the container>",
                "text": "Yeah, there are other factors involved I think too, but that wasn't the only issue we had with legacy support with `O_CLOEXEC` which is why I'm a bit nervous about throwing it in there unless I can get some committed testing. I still think it may have something to do with `#define _GNU_SOURCE` not being defined, but &lt;shrug&gt;...\n\nOh, I fixed the errno reference. Yeah, that wasn't pretty.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293425019|#589: [development] file descriptor leaks inside the container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491951803.140523",
        "date": 1491951803140
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293423814|#589: [development] file descriptor leaks inside the container>",
                "text": "&gt; Based on #418, because pipe2() did not seem to cause an error\nLooking at this issue, I don't think it makes sense, they only had compile-time errors, not runtime errors.\nIt's the same flag (the same `#define`), so there is no way they could have an error like\n```error: 'O_CLOEXEC' undeclared\n```\nBut only on one function call (`open`).",
                "pretext": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293423814|#589: [development] file descriptor leaks inside the container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491951372.078231",
        "date": 1491951372078
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293422934|#589: [development] file descriptor leaks inside the container>",
                "text": "Sure! While you're at it, there is a weird `errno == 16` in this code, not sure why the numeric value is hardcoded.",
                "pretext": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293422934|#589: [development] file descriptor leaks inside the container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491951053.033532",
        "date": 1491951053033
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/418#issuecomment-293422655|#418: Build error: 'O_CLOEXEC' undeclared>",
                "text": "Hi all, I made change in <https://github.com/singularityware/singularity/commit/4ce4fd38ba3d009bd17653005eb560159a204c41> that may affect this. Can you guys test the latest development branch where it was failing before due to `*_CLOEXEC` please?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/418#issuecomment-293422655|#418: Build error: 'O_CLOEXEC' undeclared>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491950949.018427",
        "date": 1491950949018
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue re-opened: <https://github.com/singularityware/singularity/issues/418|#418 Build error: 'O_CLOEXEC' undeclared> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue re-opened: <https://github.com/singularityware/singularity/issues/418|#418 Build error: 'O_CLOEXEC' undeclared> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491950949.018396",
        "date": 1491950949018
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/588|#588 Use open(2) instead of fopen(3) for /dev/loop devices> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/588|#588 Use open(2) instead of fopen(3) for /dev/loop devices> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491950862.006688",
        "date": 1491950862006
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293422103|#589: [development] file descriptor leaks inside the container>",
                "text": "Based on #418, because p`pipe2()` did not seem to cause an error, I'm keeping my fingers crossed... But, I wasn't able to find anything definitive either. I will ask them to retest with `fcntl()` when I get this pushed (including your PR).\n\nThanks @flx42!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293422103|#589: [development] file descriptor leaks inside the container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491950766.992994",
        "date": 1491950766992
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293421504|#589: [development] file descriptor leaks inside the container>",
                "text": "&gt; Actually, O_CLOEXEC in pipe2() was supported before open(). Check #418 for more history on this.\nI didn't see anything related to `pipe2`. For `fcntl`, sure.",
                "pretext": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293421504|#589: [development] file descriptor leaks inside the container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491950560.963592",
        "date": 1491950560963
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293421238|#589: [development] file descriptor leaks inside the container>",
                "text": "BTW, the loop device and the image was easy to implement `fcntl()` on, but the sessiondir, is less easy as that FD needs to remain open due to the `flock()` and the cleanup thread.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293421238|#589: [development] file descriptor leaks inside the container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491950466.950061",
        "date": 1491950466950
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293420217|#589: [development] file descriptor leaks inside the container>",
                "text": "Actually, `O_CLOEXEC` in `pipe2()` was supported before `open()`. Check #418 for more history on this.\n\nI was actually playing with just this when I was reviewing your last PR. I've added some more code already there, and can easily add the call to fcntl() too.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293420217|#589: [development] file descriptor leaks inside the container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491950134.902446",
        "date": 1491950134902
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293419778|#589: [development] file descriptor leaks inside the container>",
                "text": "`O_CLOEXEC` is actually already used in `singularity_fork()` with `pipe2`. I guess they were added at the same time, right?\n\nI haven't tried to actively exploit it (I'm not a security expert), but it should be safer to remove those leaks.\n`fcntl` is also an option.",
                "pretext": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293419778|#589: [development] file descriptor leaks inside the container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491949988.880531",
        "date": 1491949988880
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293419397|#589: [development] file descriptor leaks inside the container>",
                "text": "We might actually be able to use fcntl(fd, F_SETFD, FD_CLOEXEC) instead. I think that goes much further back.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293419397|#589: [development] file descriptor leaks inside the container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491949873.863281",
        "date": 1491949873863
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293418463|#589: [development] file descriptor leaks inside the container>",
                "text": "Actually, we can't use O_CLOEXEC. :( ... It is't supported back far enough. But, those leaked file descriptors were leaked on prpose... With the exception of /dev/loop0, well sorta. Even when it is mounted as read/write if the base image is only accessible via read only, I haven't been able to exploit it (yet).. Thoughts?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/589#issuecomment-293418463|#589: [development] file descriptor leaks inside the container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491949566.815553",
        "date": 1491949566815
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#589 [development] file descriptor leaks inside the container' https://github.com/singularityware/singularity/issues/589 by flx42",
                "text": "It looks like Singularity is currently leaking 3 file descriptors when starting a container. This could be a security risk since it can expose files from outside the container.\n```\n$ md5sum trusty.img\nf3a1e46b6ee31921c97ae9f2aacfe4bd  trusty.img\n$ singularity shell -C trusty.img \nSingularity: Invoking an interactive shell within container...\n\nSingularity trusty.img:/tmp&gt; ls -l /proc/self/fd\ntotal 0\nlrwx------ 1 fabecassis fabecassis 64 Apr 11 22:17 0 -&gt; /dev/pts/2\nlrwx------ 1 fabecassis fabecassis 64 Apr 11 22:17 1 -&gt; /dev/pts/2\nlrwx------ 1 fabecassis fabecassis 64 Apr 11 22:17 2 -&gt; /dev/pts/2\nlr-x------ 1 fabecassis fabecassis 64 Apr 11 22:17 3 -&gt; /proc/3369/fd\nlr-x------ 1 fabecassis fabecassis 64 Apr 11 22:17 4 -&gt; /tmp/.singularity-session-wXdA5mlZDc\nlr-x------ 1 fabecassis fabecassis 64 Apr 11 22:17 5 -&gt; /tmp/trusty.img\nlrwx------ 1 fabecassis fabecassis 64 Apr 11 22:17 8 -&gt; /dev/loop0\n```\nThe last 3 file descriptors are leaked.\n\nLet's see how we can \"exploit\" it:\n```Singularity trusty.img:/tmp&gt; md5sum /tmp/trusty.img\nmd5sum: /tmp/trusty.img: No such file or directory\n```\nThat's normal since we used `-C`, `/tmp` was not mounted. But with the FD leak there is a workaround:\n```Singularity trusty.img:/tmp&gt; cp /proc/self/fd/5 trusty.img\nSingularity trusty.img:/tmp&gt; md5sum trusty.img\nf3a1e46b6ee31921c97ae9f2aacfe4bd  trusty.img\n```\nWe just copied a file from outside the container.\n\nWe need a bunch of `O_CLOEXEC`, I will submit patches.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/flx42|flx42>",
                "title": "#589 [development] file descriptor leaks inside the container",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/589",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491949433.794850",
        "date": 1491949433794
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on pull request <https://github.com/singularityware/singularity/pull/588#issuecomment-293411523|#588: Use open(2) instead of fopen(3) for /dev/loop devices>",
                "text": "@gmkurtzer now on the right branch ;)",
                "pretext": "[singularityware/singularity] New comment by flx42 on pull request <https://github.com/singularityware/singularity/pull/588#issuecomment-293411523|#588: Use open(2) instead of fopen(3) for /dev/loop devices>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491947574.474165",
        "date": 1491947574474
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#588 Use open(2) instead of fopen(3) for /dev/loop devices' https://github.com/singularityware/singularity/pull/588 by flx42",
                "text": "No need to use fopen(3) on /dev/loopN, especially if you're always using fileno afterwards.",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/flx42|flx42>",
                "title": "#588 Use open(2) instead of fopen(3) for /dev/loop devices",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/588",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491946511.266293",
        "date": 1491946511266
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/587#issuecomment-293406721|#587: Fix fopen loop dev>",
                "text": "Haha, I was just noticing that! Your patch looks good though!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/587#issuecomment-293406721|#587: Fix fopen loop dev>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491946387.241736",
        "date": 1491946387241
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on pull request <https://github.com/singularityware/singularity/pull/587#issuecomment-293406610|#587: Fix fopen loop dev>",
                "text": "Sorry, wrong branch!",
                "pretext": "[singularityware/singularity] New comment by flx42 on pull request <https://github.com/singularityware/singularity/pull/587#issuecomment-293406610|#587: Fix fopen loop dev>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491946361.236529",
        "date": 1491946361236
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/587|#587 Fix fopen loop dev> by <https://github.com/flx42|flx42>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/587|#587 Fix fopen loop dev> by <https://github.com/flx42|flx42>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491946344.233051",
        "date": 1491946344233
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/586#issuecomment-293406336|#586: How to use module inside singularity>",
                "text": "&gt; Best practice Tip:\n&gt; While you can always shell into the container as writable (-w) and install, a best practice is to install and define the containers via the bootstrap definition file (recipe). \nBy following this steps I didn't get your error\n\n// create the container\n```$ sudo singularity create --size 4096 container.img\n```\n\n// install the container\n```$ sudo singularity bootstrap container.img centos.def\n```\n// install yum-utils\n```$ sudo singularity exec -w container.img yum install yum-utils\n```\n// info module_file\n```$ sudo singularity exec container.img yum info module_files\n```",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/586#issuecomment-293406336|#586: How to use module inside singularity>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491946299.224075",
        "date": 1491946299224
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#587 Fix fopen loop dev' https://github.com/singularityware/singularity/pull/587 by flx42",
                "text": "No need to use fopen(3) on /dev/loopN, especially if you're always using `fileno` afterwards.",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/flx42|flx42>",
                "title": "#587 Fix fopen loop dev",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/587",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491946163.193970",
        "date": 1491946163193
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hfutxrg on issue <https://github.com/singularityware/singularity/issues/586#issuecomment-293402528|#586: How to use module inside singularity>",
                "text": "My rhel.def is similar to the centos.def in the examples folder.\n\nI just found the reason of the error is I didn't use \"-w\" option. And we should also use \"-s /usr/bin/bash\" to use bash instead of using the default \"sh\". Now everything is normal. I will check whether we can use module inside singularity. ",
                "pretext": "[singularityware/singularity] New comment by hfutxrg on issue <https://github.com/singularityware/singularity/issues/586#issuecomment-293402528|#586: How to use module inside singularity>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491945397.030141",
        "date": 1491945397030
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-293391492|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "text": "Oh, it is only uneven because the fonts are not fixed width and I may not have hit spacebar right number of times. lol\n\nBut, yeah,... I was assuming you could make it much more better. ;)",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-293391492|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491942766.388656",
        "date": 1491942766388
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/586#issuecomment-293383668|#586: How to use module inside singularity>",
                "text": "Can you show me your rhel.def to run a test on my host",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/586#issuecomment-293383668|#586: How to use module inside singularity>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491940926.929613",
        "date": 1491940926929
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hfutxrg on issue <https://github.com/singularityware/singularity/issues/586#issuecomment-293382817|#586: How to use module inside singularity>",
                "text": "Thanks for the quick reply. I use the following steps:\n\n$ git clone <https://github.com/singularityware/singularity.git>\n$ cd singularity\n$ ./autogen.sh\n$ ./configure --prefix=/usr/local --sysconfdir=/etc\n$ make\n$ make install\n$ cd ..\n\n// create the container \n$ singularity create --size 10000 container.img\n\n// install the container\n$ singularity bootstrap container.img rhel.def\n\n// install yum-utils\n$ singularity exec -w container.img yum install yum-utils\n\nI didn't see any posts that use module files. Are you able to use module files?",
                "pretext": "[singularityware/singularity] New comment by hfutxrg on issue <https://github.com/singularityware/singularity/issues/586#issuecomment-293382817|#586: How to use module inside singularity>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491940749.880897",
        "date": 1491940749880
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/586#issuecomment-293377437|#586: How to use module inside singularity>",
                "text": "@hfutxrg Can you show how did you create the container, and then run the install process.  ",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/586#issuecomment-293377437|#586: How to use module inside singularity>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491939529.572734",
        "date": 1491939529572
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#586 How to use module inside singularity' https://github.com/singularityware/singularity/issues/586 by hfutxrg",
                "text": "Hi All,\n\nBased on my understanding, singularity can ensure the portability by compiling all software inside the container, so that when we move to another system we do not need to install them again. One way to manage those software is by using module files. So I installed \"module_files\" package in singularity. But it is not working. Then I run the command \"yum info module_files\", it has the following errors:\n\nSingularity.container.img&gt; yum info module_files\nerror: db5 error(28) from dbenv-&gt;open: No space left on device\nerror: cannot open Packages index using db5 - No space left on device (28)\nerror: cannot open Packages database in /var/lib/rpm\nCRITICAL:yum.main:\nError: rpmdb open failed\n\nWhy did I have this error? How should we use modules within singularity? Thanks.\n\nRegards,\nRengan",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/hfutxrg|hfutxrg>",
                "title": "#586 How to use module inside singularity",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/586",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491938505.317057",
        "date": 1491938505317
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/584#issuecomment-293366501|#584: Openfoam example fails to install>",
                "text": "Fixed, thank you! :)",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/584#issuecomment-293366501|#584: Openfoam example fails to install>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491937011.931432",
        "date": 1491937011931
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/584|#584 Openfoam example fails to install> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/584|#584 Openfoam example fails to install> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491937011.931426",
        "date": 1491937011931
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/585|#585 Required to download openfoam packages> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/585|#585 Required to download openfoam packages> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491937006.930184",
        "date": 1491937006930
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/585#issuecomment-293366458|#585: Required to download openfoam packages>",
                "text": "Committed on your behalf @rherban, thank you!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/585#issuecomment-293366458|#585: Required to download openfoam packages>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491937006.930174",
        "date": 1491937006930
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by rherban on pull request <https://github.com/singularityware/singularity/pull/585#issuecomment-293351518|#585: Required to download openfoam packages>",
                "text": "Not sure how best to re-point this pull request to the new branch.  Is it easier to make a new request?",
                "pretext": "[singularityware/singularity] New comment by rherban on pull request <https://github.com/singularityware/singularity/pull/585#issuecomment-293351518|#585: Required to download openfoam packages>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491934327.183895",
        "date": 1491934327183
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-293347770|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "text": "Hmm let me see what I can do - of the bat I don't like how it's unever at the beginning :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-293347770|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491933636.991645",
        "date": 1491933636991
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/585#issuecomment-293346987|#585: Required to download openfoam packages>",
                "text": "hey @rherban! Would you submit this to the development branch so we have it with the next release? Thank you!",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/585#issuecomment-293346987|#585: Required to download openfoam packages>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491933490.948536",
        "date": 1491933490948
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#585 Required to download openfoam packages' https://github.com/singularityware/singularity/pull/585 by rherban",
                "text": "Fixes #584 \n\nChanges proposed in this pull request\n\nâ€¢ Add apt-transport-https to list of prereqs before installing openfoam4.  \n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/rherban|rherban>",
                "title": "#585 Required to download openfoam packages",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/585",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491933305.895620",
        "date": 1491933305895
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#584 Openfoam example fails to install' https://github.com/singularityware/singularity/issues/584 by rherban",
                "text": "Host OS: CentOS Linux release 7.1.1503\nContainer OS: Ubuntu 14.04\nSingularity: singularity-2.2.1-0.1.el7.centos.x86_64\nUsing definition from: <https://github.com/singularityware/singularity/blob/master/examples/contrib/ubuntu-openfoam.def>\n\nApt fails to download openfoam due to missing package:\n\n`Get:3 http://archive.ubuntu.com/ubuntu/ trusty/main libgpg-error0 amd64 1.12-0.2ubuntu1 [10.9 kB]\nE: The method driver /usr/lib/apt/methods/https could not be found.\nN: Is the package apt-transport-https installed?\nERROR: Aborting with RETVAL=255`\n\nAdding the package `apt-transport-https` to the def file allows it to build properly.  ",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/rherban|rherban>",
                "title": "#584 Openfoam example fails to install",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/584",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491933235.875872",
        "date": 1491933235875
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/558#issuecomment-293328912|#558: Cannot run post scriptlet when using /bin/sh is a symlink (busybox)>",
                "text": "Excellent, thanks for letting me know!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/558#issuecomment-293328912|#558: Cannot run post scriptlet when using /bin/sh is a symlink (busybox)>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491930138.027844",
        "date": 1491930138027
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-293305563|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "text": "You mean the:\n\n```Downloading layer sha256:6d827a3ef358f4fa21ef8251f95492e667da826653fd43641cef5a877dc03a70`\n```\n\nIf so, I would say yes, and let's use a small version of that (if we can fit it reasonably) in the progress bar output? Maybe something like:\n\n```[1/7] Download |========================================| 100.0% Layer: 6d827a\n[1/7] Prepare    |========================================| 100.0% Layer: 6d827a\n[2/7] Download |========================================| 100.0% Layer: 272629\n[2/7] Prepare    |========================================| 100.0% Layer: 272629\n...\n```\n\nI think that is less then 80 chars wide, but I'll leave the design up to you. lol",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-293305563|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491925478.708047",
        "date": 1491925478708
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-293298911|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "text": "thanks for the details - I will take a look later today.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-293298911|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491924247.336696",
        "date": 1491924247336
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-293278184|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "text": "To add some context.\n\nThis is what anyone doing ROS inside Singularity would have to do. Unless you are building a full docker image (which I didn't want to do because our cluster only supports Singularity) you have to perform the compile step inside Singularity.\n\nThe steps with ROS is, <http://wiki.ros.org/ROS/Tutorials/InstallingandConfiguringROSEnvironment|create a workspace>, <http://wiki.ros.org/ROS/Tutorials/CreatingPackage|create a package>, <http://wiki.ros.org/ROS/Tutorials/BuildingPackages|build> and run. By doing the compile step during build the image is much quicker to deploy and so I found it natural to place there.",
                "pretext": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-293278184|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491920375.140430",
        "date": 1491920375140
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-293276433|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "text": "Here is a minimal example with code from the official <https://github.com/ros/ros_tutorials|ROS tutorial>\n\n```bash\nBootstrap: docker\nFrom: ros:kinetic-perception\n\n%setup\n        # This is done before we are \"inside\" container\n```    # We first create our workspace folder\n    mkdir -p $SINGULARITY_ROOTFS/workspace/src\n    # Then copy our code into this workspace\n    cd $SINGULARITY_ROOTFS/workspace/src\n    git clone https://github.com/ros/ros_tutorials.git```\n%post\n        # This is executed inside container\n        . /opt/ros/kinetic/setup.sh\n        cd /workspace/src\n        catkin_init_workspace\n        # Then it is time to build everything\n        cd /workspace\n        catkin_make\n        catkin_make install\n\n%runscript\n        cd /workspace\n        source /workspace/devel/setup.bash\n```\n\nThis exhibit the same problem as mentioned in this issue. Note that the build could probably use any of the `ros:kinetic` images, I simply copied my build from before and stripped it out.\n\nThis is also the way to compile ROS projects. E.g. this <https://github.com/ros/ros_tutorials/blob/lunar-devel/roscpp_tutorials/listener/listener.cpp|listener> is a <http://wiki.ros.org/Nodes|node> which must be compiled to run. The listener mentioned comes from <http://wiki.ros.org/ROS/Tutorials/WritingPublisherSubscriber%28c%2B%2B%29|this tutorial> which explains how some of the core concepts in ROS functions.",
                "pretext": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-293276433|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491920035.039883",
        "date": 1491920035039
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-293274481|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "text": "yes that would be fantastic! I was trying to build my own bootstrap file and then realized I had no idea what I was doing, haha. Just FYI I will likely get a chance to look later today, so no rush.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-293274481|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491919649.929014",
        "date": 1491919649929
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-293270991|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "text": "Thanks for the quick reply yet again!\n\nI am boostrapping the image from docker. The reason I am compiling is to build my own project into a Singularity image which I am then going to run to perform my experiments. I boostrap from `docker://ros:kinetic-perception` which work. Then copy my project into a <http://wiki.ros.org/catkin/Tutorials/create_a_workspace|workspace> and compile (which leads to the problem above).\n\nI realise I have given you way to little to go on in the bug description so I will try to make a small build to reproduce the issue.",
                "pretext": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-293270991|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491918972.727641",
        "date": 1491918972727
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-293268590|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "text": "Hey @nordmoen ! I was just playing around with this, and I think it has something to do with the software using chroot and then <https://superuser.com/questions/165116/mount-dev-proc-sys-in-a-chroot-environment|not having those spaces mounted>. So fix 1, you could try mounting them. Another thing I noticed is that updating mkinitrd might fix the issue, but <https://www.cyberciti.biz/faq/read_urandom-devurandom-open-failed-no-such-file-or-directory/|this is different on ubuntu>.\n\nYou probably want do compile from source, so you may not like this answer, but is there a reason to not bootstrap the ros docker image to start? Eg:\n\n```singularity create --size 4000 ros.img\nsingularity import ros.img docker://ros:latest\nsingularity shell ros.img\n```\n\nIt looks like the ros entrypoint is successfully passed to the runscript:\n\n```bash\nSingularity ros.img:/&gt; cat /.singularity.d/runscript\n#!/bin/sh\n\nexec /ros_entrypoint.sh \"$@\"\n```\nand ros is under opt:\n\n```ls /opt/ros/kinetic\nbin etc  lib         setup.sh        setup.zsh\nenv.sh  include  setup.bash  _setup_util.py  share\n```\n\nNow if only I knew how to make a robot!\n\nGranted that the Docker images are maintained, you would be able to (literally) bootstrap that work for your singularity image, and not have to maintain updates yourself. If there are bugs with configuration, you could start with this as a bootstrap base, and tweak as needed, eg here is the bootstrap file\n\n```\nBootstrap:docker\nFrom: ros:latest\n\n%post\n\napt-get update &amp;&amp; apt-get install.... [etc]\n```\n\nthen\n\n```singularity create --size 4000 ros.img\nsudo singularity bootstrap ros.img Singularity\n```\n\nI just tested this now, (note using the development branch) and it seems to start up ok, although I'm not exactly sure how to make my robot. Anyway, how about give that a start, and go from there?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/583#issuecomment-293268590|#583: /dev/urandom (or equivalent) not found when compiling ROS>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491918477.587904",
        "date": 1491918477587
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#583 /dev/urandom (or equvalent) not found when compiling ROS' https://github.com/singularityware/singularity/issues/583 by nordmoen",
                "text": "Trying to compile a <http://ros.org/|ROS> project inside a Singularity images leads to the following error message:\n```bash\nâ€¢ catkin_make\n     Traceback (most recent call last):\n     File \"/opt/ros/kinetic/bin/catkin_make\", line 14, in &lt;module&gt;\n     from catkin.builder import cmake_input_changed\n     File \"/opt/ros/kinetic/lib/python2.7/dist-packages/catkin/builder.py\", line 36, in &lt;module&gt;\n     import multiprocessing\n     File \"/usr/lib/python2.7/multiprocessing/*init*.py\", line 64, in &lt;module&gt;\n     from multiprocessing.process import Process, current_process, active_children\n     File \"/usr/lib/python2.7/multiprocessing/process.py\", line 312, in &lt;module&gt;\n     _current_process = _MainProcess()\n     File \"/usr/lib/python2.7/multiprocessing/process.py\", line 309, in *init*\n     self._authkey = AuthenticationString(os.urandom(32))\n     NotImplementedError: /dev/urandom (or equivalent) not found\n     ```",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/nordmoen|nordmoen>",
                "title": "#583 /dev/urandom (or equvalent) not found when compiling ROS",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/583",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491902780.774765",
        "date": 1491902780774
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/558|#558 Cannot run post scriptlet when using /bin/sh is a symlink (busybox)> by <https://github.com/hcraT|hcraT>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/558|#558 Cannot run post scriptlet when using /bin/sh is a symlink (busybox)> by <https://github.com/hcraT|hcraT>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491902104.653192",
        "date": 1491902104653
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hcraT on issue <https://github.com/singularityware/singularity/issues/558#issuecomment-293199335|#558: Cannot run post scriptlet when using /bin/sh is a symlink (busybox)>",
                "text": "Hi @gmkurtzer,\nI've tested the development version and it works ok.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by hcraT on issue <https://github.com/singularityware/singularity/issues/558#issuecomment-293199335|#558: Cannot run post scriptlet when using /bin/sh is a symlink (busybox)>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491902104.653142",
        "date": 1491902104653
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-293135822|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "text": ":popcorn: !! :popcorn: !! :popcorn: !!\n\n+1 entrypoint is parsed, unless you specify to IncludeCmd: yes (in bootstrap header) or define a custom runscript to override. For example, here we are running python latest:\n\n```$ singularity run docker://python\nDocker image path: index.docker.io/library/python:latest\nCache folder set to /home/vanessa/.singularity/docker\nDownloading layer sha256:6d827a3ef358f4fa21ef8251f95492e667da826653fd43641cef5a877dc03a70\nProgress |========================================| 100.0% downloading layer  \nProgress |========================================| 100.0% preparing layer  \nDownloading layer sha256:2726297beaf19be957416750338c095ae15b94adc0e8c1306cebbf113f8b9a5c\nProgress |========================================| 100.0% downloading layer  \nProgress |========================================| 100.0% preparing layer  \nDownloading layer sha256:7d27bd3d7fecb89d4028f4afa3ee866d2262c5105fc37f57aa82af918dc2f84c\nProgress |========================================| 100.0% downloading layer  \nProgress |========================================| 100.0% preparing layer  \nDownloading layer sha256:44ae682c18a31909b5b2e1c0e95d4a05cdf032e983a0e8dc36cc329fc32b53cd\nProgress |========================================| 100.0% downloading layer  \nProgress |========================================| 100.0% preparing layer  \nDownloading layer sha256:824bd01a76a3b27f2a3f1ed93100d5adde6e508babd2434c1b286602249a8e8f\nProgress |========================================| 100.0% downloading layer  \nProgress |========================================| 100.0% preparing layer  \nDownloading layer sha256:68fe59875298c7f7a1c0682bee33645011e38c715f176c5c802a8ecd6b3e73c1\nProgress |========================================| 100.0% downloading layer  \nProgress |========================================| 100.0% preparing layer  \nDownloading layer sha256:9ca1d7ae0c4bff87b01dabb6e7f35ef1d64146f90c8a665a33614f77400b137b\nProgress |========================================| 100.0% downloading layer  \nProgress |========================================| 100.0% preparing layer  \nImporting: base Singularity environment\nExploding layer: sha256:6d827a3ef358f4fa21ef8251f95492e667da826653fd43641cef5a877dc03a70.tar.gz\nExploding layer: sha256:2726297beaf19be957416750338c095ae15b94adc0e8c1306cebbf113f8b9a5c.tar.gz\nExploding layer: sha256:7d27bd3d7fecb89d4028f4afa3ee866d2262c5105fc37f57aa82af918dc2f84c.tar.gz\nExploding layer: sha256:44ae682c18a31909b5b2e1c0e95d4a05cdf032e983a0e8dc36cc329fc32b53cd.tar.gz\nExploding layer: sha256:824bd01a76a3b27f2a3f1ed93100d5adde6e508babd2434c1b286602249a8e8f.tar.gz\nExploding layer: sha256:68fe59875298c7f7a1c0682bee33645011e38c715f176c5c802a8ecd6b3e73c1.tar.gz\nExploding layer: sha256:9ca1d7ae0c4bff87b01dabb6e7f35ef1d64146f90c8a665a33614f77400b137b.tar.gz\nExploding layer: sha256:935565c46855dd50a3ef69a78deccb753acbdf41436b0c2b5a5d966eac6d95ed.tar.gz\nPython 3.6.1 (default, Mar 23 2017, 02:34:11) \n[GCC 4.9.2] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n```\nand it goes right into the python shell! We can lazily look at the runscript, which isn't the docker entrypoint, but <https://github.com/docker-library/python/blob/32e920eb13714a9aeff2e016fb467901222d17b5/3.6/Dockerfile#L84|the cmd>: \n\n```&gt; &gt; &gt; import os\n&gt; &gt; &gt; os.listdir('/.singularity.d/env')\n&gt; &gt; &gt; ['01-base.sh', '10-docker.sh']\n&gt; &gt; &gt; os.listdir('/.singularity.d')\n&gt; &gt; &gt; ['env', 'labels.json', 'actions', 'runscript']\n&gt; &gt; &gt; with open('/.singularity.d/runscript') as filey:\n&gt; &gt; &gt; ...      content=filey.readlines()\n&gt; &gt; &gt; ... \n&gt; &gt; &gt; content\n&gt; &gt; &gt; ['#!/bin/sh\\n', '\\n', 'exec python3 \"$@\"']\n&gt; &gt; &gt; ```\n&gt; &gt; &gt; and this is because there is no entrypoint, so it uses the cmd second.\n@gmkurtzer - how about getting rid of the extra print statement about downloading? It seems redundant now with the progress bar. Ok, closing issue! Thanks for the :popcorn: @satra !",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-293135822|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491879460.172754",
        "date": 1491879460172
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/572|#572 think about non sudo ways to do a \"sort of\" bootstrap> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/572|#572 think about non sudo ways to do a \"sort of\" bootstrap> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491879460.172746",
        "date": 1491879460172
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-293124139|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "text": "alright i think this boils down to the intent more than what's possible and not. (similar to the obfuscation discussion on slack).\n\nmy use case:\n\nfix something from dockerhub the lazy way. it doesn't work with singularity, so figure out the issue. a. save the runtime dir, b. fix the issues inside the runtime dir, and 3. run the modified runtime dir.\nthings that have been addressed already in singularity since i adopted this practice are:\nâ€¢ user bind points to non-existent locations in container\nâ€¢ conversion of environment variables from docker to singularity\nâ€¢ i think entrypoint is also now taken into account, but i haven't personally checked yet.\n\nso that's great - it seems that every issues i've run into has been taken care of thus far. now the latest issue had to do with the r/w mode of files #571 which was fixed by #575 \n\nso technically i don't need this anymore till i come up with a new use case! feel free to close this issue.\n\nsorry @vsoch not much drama here! but you should just eat the :popcorn: !",
                "pretext": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-293124139|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491874354.714321",
        "date": 1491874354714
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/570#issuecomment-293122941|#570: misleading error message with singularity shell and docker layers from dev version>",
                "text": "sorry this got buried. will check it out the next time i compile. ",
                "pretext": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/570#issuecomment-293122941|#570: misleading error message with singularity shell and docker layers from dev version>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491873816.661797",
        "date": 1491873816661
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/582#issuecomment-293122064|#582: Tweaks to progress bar>",
                "text": "wahooey patooey banooey! lol",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/582#issuecomment-293122064|#582: Tweaks to progress bar>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491873412.623091",
        "date": 1491873412623
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/582#issuecomment-293121909|#582: Tweaks to progress bar>",
                "text": "Wahooooey! Thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/582#issuecomment-293121909|#582: Tweaks to progress bar>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491873342.616263",
        "date": 1491873342616
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/582|#582 Tweaks to progress bar> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/582|#582 Tweaks to progress bar> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491873334.615520",
        "date": 1491873334615
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#582 Tweaks to progress bar' https://github.com/singularityware/singularity/pull/582 by vsoch",
                "text": "This quick PR will do the following:\n\nâ€¢ ensure that the percent always has a fix width of 5\nâ€¢ fix the bug of the bar changing length right at the end\nâ€¢ change text to \"preparing layer\"\n\n@gmkurtzer !\n -\n -\n -\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#582 Tweaks to progress bar",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/582",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491871767.460186",
        "date": 1491871767460
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-293116330|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "text": "Done and awesomeness! YAY!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-293116330|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491870768.360008",
        "date": 1491870768360
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/575|#575 Adding permission o+w to all in memory tars, and verbose progress bar> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/575|#575 Adding permission o+w to all in memory tars, and verbose progress bar> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491870756.358783",
        "date": 1491870756358
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/562|#562 LOGGER format needs to match C code> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/562|#562 LOGGER format needs to match C code> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491869375.213156",
        "date": 1491869375213
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/562#issuecomment-293113201|#562: LOGGER format needs to match C code>",
                "text": "This has been fixed.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/562#issuecomment-293113201|#562: LOGGER format needs to match C code>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491869374.213149",
        "date": 1491869374213
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/567|#567 Is expand functioning?> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/567|#567 Is expand functioning?> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491869355.210986",
        "date": 1491869355210
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-293113154|#567: Is expand functioning?>",
                "text": "This is fixed. We can address the bash completion in another issue (I will open)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-293113154|#567: Is expand functioning?>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491869355.210965",
        "date": 1491869355210
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-293112943|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "text": "In the Python it should be  ok - we use <https://docs.python.org/2/library/stat.html#stat.S_IRUSR|these permissions> for owner and not user. @chrisfilo can you confirm that looks ok?\n\n```    # Owner read, write (o+rw)\n    if file_permission == None:\n        file_permission = stat.S_IRUSR | stat.S_IWUSR\n```# Owner read, write execute (o+rwx)\nif folder_permission == None:\n    folder_permission = stat.S_IRUSR | stat.S_IWUSR | stat.S_IXUSR  ```\n```\n\nfrom <https://github.com/vsoch/singularity/blob/development/libexec/python/sutils.py#L311>",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-293112943|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491869266.201420",
        "date": 1491869266201
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-293112535|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "text": "PR has been updated with ascii characters for progress bar:\n\n```Downloading layer sha256:d54efb8db41d4ac23d29469940ec92da94c9a6c2d9e26ec060bebad1d1b0e48d\nProgress |========================================&gt;| 100.0% downloading layer\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-293112535|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491869090.180758",
        "date": 1491869090180
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-293105143|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "text": "@chrisfilo Haha, I make that same mistake all the time. Sorry if I did that too, I meant owner or rather \"user\".",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-293105143|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491866016.814138",
        "date": 1491866016814
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by chrisfilo on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-293104930|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "text": "I just realized that<https://ss64.com/bash/chmod.html| `o` in `o+w` stands for \"others\" not \"owner\">. `u+w` would be the owner. Not sure if this matter (I'm not even sure which issue is this PR solving, but I'm a bit out of the loop). I thought I would bring this up since it might be an indication of more confusion.",
                "pretext": "[singularityware/singularity] New comment by chrisfilo on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-293104930|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491865940.804867",
        "date": 1491865940804
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-293104395|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "text": "ok, for shub download looks like:\n\n```singularity pull shub://vsoch/singularity-images\nProgress |â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 100.0% downloading image  \nDone. Container is at: ./vsoch-singularity-images-mongo.img\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-293104395|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491865736.779528",
        "date": 1491865736779
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#581 Shouldwe have a `list` command for image orchestration' https://github.com/singularityware/singularity/issues/581 by ArangoGutierrez",
                "text": "why don`t we put all the .img on one folder. and a command like `singularity list` or `singularity images`\nFor now it could be something really raw.\n\nPutting all the .img on one folder by default, so when we do \n` singularity create myimage.img `\n\nit goes to the default `$IMAGE_PATH` \n\nand a command \n`singularity images`\n\nwould be something like\n` ls -rthl $IMAGE_PATH`\n\nWhere we can see who own each image, creation date, size.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "title": "#581 Shouldwe have a `list` command for image orchestration",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/581",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491865392.735751",
        "date": 1491865392735
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-293101544|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "text": "ok, we now have the command written next to the progress bar:\n\n```Downloading layer sha256:6d9ef359eaaa311860550b478790123c4b22a2eaede8f8f46691b0b4433c08cf\nProgress |â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 100.0% downloading layer  \nVERBOSE Fixing permission for /home/vanessa/.singularity/docker/sha256:6d9ef359eaaa311860550b478790123c4b22a2eaede8f8f46691b0b4433c08cf.tar.gz.5xtl99kh\nProgress |â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 100.0% changing permissions  \n```\n\nYou know, we don't really need the information prints before if we have the bar, what if it were just like:\n\n```Progress |â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 100.0% downloading layer  \nProgress |â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 100.0% changing permissions  \n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-293101544|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491864728.646201",
        "date": 1491864728646
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-293067457|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "text": "If there is some use case when the second message doesn't show (eg quiet) and we still want the progress bar (which it shouldn't show, actually) then we could change the icons to be something like:\n\n```Downloading layer sha256:6d9ef359eaaa311860550b478790123c4b22a2eaede8f8f46691b0b4433c08cf\nProgress |â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 100.0% download layers  \nProgress |â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 100.0% fixing permissions  \n```\n\nWhat do you think?",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-293067457|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491855748.904265",
        "date": 1491855748904
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-293066887|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "text": "The first progress bar should be the layers, and the second the permissions. Are you running that on your local computer? It should use utf-8 and print the characters correctly, but it looks like that isn't the case. The message to print layers should also be showing up, what mode are you running it in?",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-293066887|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491855615.870902",
        "date": 1491855615870
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/537#issuecomment-293061755|#537: Various additional tweaks for 2.3>",
                "text": "cool thanks! I will test this next time I bring down an updated development.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/537#issuecomment-293061755|#537: Various additional tweaks for 2.3>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491854409.575657",
        "date": 1491854409575
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/537#issuecomment-293045062|#537: Various additional tweaks for 2.3>",
                "text": "Well, it has to be `@bindir@` because if someone specifies `./configure --bindir=....` It won't necessarily be `$exec_prefix/bin`. ;)",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/537#issuecomment-293045062|#537: Various additional tweaks for 2.3>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491850519.608299",
        "date": 1491850519608
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by jmstover on issue <https://github.com/singularityware/singularity/issues/537#issuecomment-293044735|#537: Various additional tweaks for 2.3>",
                "text": "Sure... just go with @bindir@ ... You and your \"simplicity\" instead of the more convoluted way.",
                "pretext": "[singularityware/singularity] New comment by jmstover on issue <https://github.com/singularityware/singularity/issues/537#issuecomment-293044735|#537: Various additional tweaks for 2.3>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491850454.590682",
        "date": 1491850454590
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/537#issuecomment-293041583|#537: Various additional tweaks for 2.3>",
                "text": "Yeah, I totally missed that. Fixed now!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/537#issuecomment-293041583|#537: Various additional tweaks for 2.3>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491849782.413145",
        "date": 1491849782413
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/559#issuecomment-293037604|#559: Unrecognized Distribution type: yum>",
                "text": "Oh, well, that's interesting. You have an extra carriage return character at the end of the line in your bootstrap definitions (`\\r`). Did you create this bootstrap definition file on a Windows computer? \n\nCan you run that bootstrap definition file through `dos2unix` and try again?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/559#issuecomment-293037604|#559: Unrecognized Distribution type: yum>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491848947.187781",
        "date": 1491848947187
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/580|#580 Add GPG support to yum bootstrap method> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/580|#580 Add GPG support to yum bootstrap method> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491848750.134599",
        "date": 1491848750134
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/580#issuecomment-293036624|#580: Add GPG support to yum bootstrap method>",
                "text": "This looks fantastic, thanks @akkornel!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/580#issuecomment-293036624|#580: Add GPG support to yum bootstrap method>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491848747.133809",
        "date": 1491848747133
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/577|#577 Rejecting valid $TERM strings which contain a hyphen> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/577|#577 Rejecting valid $TERM strings which contain a hyphen> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491848625.100177",
        "date": 1491848625100
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/577#issuecomment-293036092|#577: Rejecting valid $TERM strings which contain a hyphen>",
                "text": "Just merged, thanks @akkornel!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/577#issuecomment-293036092|#577: Rejecting valid $TERM strings which contain a hyphen>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491848625.100169",
        "date": 1491848625100
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/579|#579 Allow hyphen in TERM environment variable> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/579|#579 Allow hyphen in TERM environment variable> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491848577.086975",
        "date": 1491848577086
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/579#issuecomment-293035840|#579: Allow hyphen in TERM environment variable>",
                "text": "Good catch!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/579#issuecomment-293035840|#579: Allow hyphen in TERM environment variable>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491848565.083941",
        "date": 1491848565083
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/578#issuecomment-293035286|#578: [feedback] should we save build log in metadata folder?>",
                "text": "Hrmm.... I could throw the bootstrap deffile in there too actually!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/578#issuecomment-293035286|#578: [feedback] should we save build log in metadata folder?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491848445.050730",
        "date": 1491848445050
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-293034887|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "text": "Oooo, I love the progress bar for downloads! I see there are two bars, Is the first the download, and the second the tarfile modification?\n\n```Downloading layer sha256:6d9ef359eaaa311860550b478790123c4b22a2eaede8f8f46691b0b4433c08cf\nProgress |â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 100.0% \\u26FE  \nProgress |â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 100.0% \\u26FE  \n```\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-293034887|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491848363.028084",
        "date": 1491848363028
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by jmstover on issue <https://github.com/singularityware/singularity/issues/537#issuecomment-293013310|#537: Various additional tweaks for 2.3>",
                "text": "In the development branch, it looks like bin/singularity.in needs to have\nsomething like:\n\nSINGULARITY_bindir=\"$exec_prefix/bin\"    # or maybe \"$prefix/bin\" ?\n\n[ ... ]\n\nexport SINGULARITY_bindir\n\nadded into it. It's missing the creation of the SINGULARIY_bindir variable.\n\n-J\n\nOn Mon, Apr 10, 2017 at 11:51 AM, dpjensen <mailto:notifications@github.com|notifications@github.com> wrote:\n\n&gt; @vsoch <https://github.com/vsoch> re, the selftest thing: I almost filed\n&gt; an issue with that, but thought I'd search through existing issues first.\n&gt; The bindir is a reference to this\n&gt; \n&gt; if [ -z \"$SINGULARITY_bindir\" ]; then\n&gt;     echo \"Could not identify the Singularity bindir\"\n&gt;     exit 1\n&gt; fi\n&gt; \n&gt; I did a quick grep, and I can't find that variable anywhere else in the\n&gt; code, so I'm not sure what it's a reference to.\n&gt; \n&gt; Later in in the same script\n&gt; <https://github.com/singularityware/singularity/blob/development/libexec/cli/selftest.exec>\n&gt; is this odd tidbit:\n&gt; \n&gt; stest 0 sh -c \"test -f $SINGULARITY_sysconfdir/singularity/bin/singularity.conf\"\n&gt; \n&gt; I'm pretty sure that that /bin/ is the result of a rogue find-replace\n&gt; operation, as none of my Singularity installs have an /etc/singularity/bin\n&gt; dir.\n&gt; \n&gt; â€”\n&gt; You are receiving this because you are subscribed to this thread.\n&gt; Reply to this email directly, view it on GitHub\n&gt; <https://github.com/singularityware/singularity/issues/537#issuecomment-293010088>,\n&gt; or mute the thread\n&gt; <https://github.com/notifications/unsubscribe-auth/AA5zojVnTWlc1Vsz2KjeXquaZdiVw66Cks5rul4TgaJpZM4Mp-zw>\n&gt; .",
                "pretext": "[singularityware/singularity] New comment by jmstover on issue <https://github.com/singularityware/singularity/issues/537#issuecomment-293013310|#537: Various additional tweaks for 2.3>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491843741.795360",
        "date": 1491843741795
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by dpjensen on issue <https://github.com/singularityware/singularity/issues/537#issuecomment-293010088|#537: Various additional tweaks for 2.3>",
                "text": "@vsoch re, the selftest thing: I almost filed an issue with that, but thought I'd search through existing issues first. \nThe bindir is a reference to this\n```if [ -z \"$SINGULARITY_bindir\" ]; then\n    echo \"Could not identify the Singularity bindir\"\n    exit 1\nfi\n```\nI did a quick grep, and I can't find that variable anywhere else in the code, so I'm not sure what it's a reference to.\n\nLater in in the <https://github.com/singularityware/singularity/blob/development/libexec/cli/selftest.exec|same script>  is this odd tidbit:\n\n```stest 0 sh -c \"test -f $SINGULARITY_sysconfdir/singularity/bin/singularity.conf\"\n```\nI'm pretty sure that that `/bin/` is the result of a rogue find-replace operation, as none of my Singularity installs have an `/etc/singularity/bin` dir.",
                "pretext": "[singularityware/singularity] New comment by dpjensen on issue <https://github.com/singularityware/singularity/issues/537#issuecomment-293010088|#537: Various additional tweaks for 2.3>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491843091.621487",
        "date": 1491843091621
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by sazearte on issue <https://github.com/singularityware/singularity/issues/559#issuecomment-292871963|#559: Unrecognized Distribution type: yum>",
                "text": "i have this result:\n```â€¢ true\nâ€¢ case ${1:-} in\nâ€¢ break\nâ€¢ '[' -z myimage.img ']'\nâ€¢ SINGULARITY_IMAGE=myimage.img\nâ€¢ DEFINITION=mycontener.def\nâ€¢ SINGULARITY_WRITABLE=1\nâ€¢ SINGULARITY_NOIMAGELOCK=1\nâ€¢ export SINGULARITY_IMAGE SINGULARITY_WRITABLE SINGULARITY_NOIMAGELOCK SINGULARITY_libexecdir\nâ€¢ shift\nâ€¢ shift\nâ€¢ exec /usr/local/libexec/singularity/image-mount /usr/local/libexec/singularity/helpers/bootstrap.sh mycontener.def\nâ€¢ '[' -x /usr/local/libexec/singularity/bootstrap/main.sh ']'\nâ€¢ exec /usr/local/libexec/singularity/bootstrap/main.sh mycontener.def\nâ€¢ SINGULARITY_BUILDDEF=mycontener.def\nâ€¢ shift\n     ++ mktemp -d /tmp/singularity-bootstrap.XXXXXXX\nâ€¢ SINGULARITY_TMPDIR=/tmp/singularity-bootstrap.9cbyYHA\nâ€¢ PATH=/bin:/sbin:/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/opt/ibutils/bin:/root/bin\nâ€¢ HOME=/root\nâ€¢ RETVAL=0\nâ€¢ export SINGULARITY_TMPDIR SINGULARITY_BUILDDEF\nâ€¢ '[' -z mycontener.def ']'\nâ€¢ '[' '!' -f mycontener.def ']'\nâ€¢ grep -q '^DistType ' mycontener.def\nâ€¢ BOOTSTRAP_VERSION=2\nâ€¢ '[' -n 2 ']'\nâ€¢ '[' -x /usr/local/libexec/singularity/bootstrap/driver-v2.sh ']'\nâ€¢ eval /usr/local/libexec/singularity/bootstrap/driver-v2.sh\n     ++ /usr/local/libexec/singularity/bootstrap/driver-v2.sh\nâ€¢ '[' -z /var/singularity/mnt/final ']'\nâ€¢ message 1 'Bootstrap initialization\\n'\nâ€¢ LEVEL=1\nâ€¢ MESSAGE='Bootstrap initialization\\n'\nâ€¢ '[' -z 'Bootstrap initialization\\n' ']'\nâ€¢ shift\nâ€¢ shift\nâ€¢ case \"$LEVEL\" in\nâ€¢ '[' 1 -le 1 ']'\nâ€¢ printf 'Bootstrap initialization\\n'\n     Bootstrap initialization\nâ€¢ return 0\nâ€¢ '[' -z '' ']'\nâ€¢ LC_ALL=C\nâ€¢ '[' -z fr_FR.UTF-8 ']'\nâ€¢ '[' -z xterm ']'\nâ€¢ DEBIAN_FRONTEND=noninteractive\nâ€¢ export LC_ALL LANG TERM DEBIAN_FRONTEND\nâ€¢ '[' -n mycontener.def ']'\nâ€¢ message 1 'Checking bootstrap definition\\n'\nâ€¢ LEVEL=1\nâ€¢ MESSAGE='Checking bootstrap definition\\n'\nâ€¢ '[' -z 'Checking bootstrap definition\\n' ']'\nâ€¢ shift\nâ€¢ shift\nâ€¢ case \"$LEVEL\" in\nâ€¢ '[' 1 -le 1 ']'\nâ€¢ printf 'Checking bootstrap definition\\n'\n     Checking bootstrap definition\nâ€¢ return 0\nâ€¢ '[' -f mycontener.def ']'\n     ++ singularity_key_get BootStrap mycontener.def\n     ++ KEY=BootStrap\n     ++ FILE=mycontener.def\n     +++ egrep -i '^BootStrap:' mycontener.def\n     '+ OUT='BootStrap: yum\n     '+ echo 'BootStrap: yum\n     ++ head -n 1\n     ++ sed -e 's@^BootStrap:\\s_@@i'\n     ++ sed -e 's@\\s_#.*@@'\n     ++ return 0\nâ€¢ SINGULARITY_OSBUILD=$'yum\\r'\nâ€¢ true\nâ€¢ export SINGULARITY_BUILDDEF SINGULARITY_OSBUILD\nâ€¢ '[' -f /usr/local/libexec/singularity/bootstrap/modules-v2/prebootstrap.sh ']'\nâ€¢ message 1 'Executing Prebootstrap module\\n'\nâ€¢ LEVEL=1\nâ€¢ MESSAGE='Executing Prebootstrap module\\n'\nâ€¢ '[' -z 'Executing Prebootstrap module\\n' ']'\nâ€¢ shift\nâ€¢ shift\nâ€¢ case \"$LEVEL\" in\nâ€¢ '[' 1 -le 1 ']'\nâ€¢ printf 'Executing Prebootstrap module\\n'\n     Executing Prebootstrap module\nâ€¢ return 0\nâ€¢ eval /usr/local/libexec/singularity/bootstrap/modules-v2/prebootstrap.sh\n     ++ /usr/local/libexec/singularity/bootstrap/modules-v2/prebootstrap.sh\nâ€¢ '[' -z /var/singularity/mnt/final ']'\nâ€¢ install -d -m 0755 /var/singularity/mnt/final\nâ€¢ '[' -f mycontener.def ']'\n     ++ singularity_section_args pre mycontener.def\n     ++ SECTION=pre\n     ++ FILE=mycontener.def\n     ++ TOGGLE=\n     ++ '[' '!' -f mycontener.def ']'\n     ++ egrep -i -- '^%pre\\W_' mycontener.def\n     ++ sed -e 's@%pre\\s_@@i'\n     ++ return 0\nâ€¢ ARGS=\nâ€¢ singularity_section_get pre mycontener.def\nâ€¢ SECTION=pre\nâ€¢ /bin/sh -e -x\nâ€¢ FILE=mycontener.def\nâ€¢ '[' '!' -x /usr/local/libexec/singularity/get-section ']'\nâ€¢ '[' '!' -f mycontener.def ']'\nâ€¢ eval /usr/local/libexec/singularity/get-section pre mycontener.def\n     ++ /usr/local/libexec/singularity/get-section pre mycontener.def\nâ€¢ return 0\nâ€¢ exit 0\nâ€¢ '[' -n $'yum\\r' ']'\nâ€¢ '[' -f $'/usr/local/libexec/singularity/bootstrap/modules-v2/build-yum\\r.sh' ']'\n     \\n'essage ERROR 'Unrecognized OSBuild type: yum\nâ€¢ LEVEL=ERROR\n     \\n'ESSAGE='Unrecognized OSBuild type: yum\n     \\n' ']'z 'Unrecognized OSBuild type: yum\nâ€¢ shift\nâ€¢ shift\nâ€¢ case \"$LEVEL\" in\nâ€¢ tput -Txterm setaf 1\n     \\n'rintf 'ERROR: Unrecognized OSBuild type: yum\n     ERROR: Unrecognized OSBuild type: yum\nâ€¢ tput -Txterm sgr0\nâ€¢ return 0\nâ€¢ exit 255\nâ€¢ RETVAL=255\nâ€¢ rm -rf /tmp/singularity-bootstrap.9cbyYHA\nâ€¢ exit 255\n\n```",
                "pretext": "[singularityware/singularity] New comment by sazearte on issue <https://github.com/singularityware/singularity/issues/559#issuecomment-292871963|#559: Unrecognized Distribution type: yum>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491809723.702855",
        "date": 1491809723702
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/580#issuecomment-292835151|#580: Add GPG support to yum bootstrap method>",
                "text": "You're a bad@ss @akkornel, these contributions and your notes are great! :memo: ",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/580#issuecomment-292835151|#580: Add GPG support to yum bootstrap method>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491791345.197373",
        "date": 1491791345197
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#580 Add GPG support to yum bootstrap method' https://github.com/singularityware/singularity/pull/580 by akkornel",
                "text": "This enhances the yum bootstrap mechanism by allowing the author to specify a GPG key to be used by the initial run of `yum` (or `dnf`).\n\nThe bootstrap author uses the \"GPG\" field to place either a path or a URL to the GPG key.  The GPG key can either be specified as a path, or as a URL.  If an HTTPS URL is used, the bootstrap will check for curl (which RPM uses), and will fail if curl is not found.  If an HTTP URL is used, the bootstrap will fail unconditionally.  Only one key may be specified.\n\nThe field's value (after checking for HTTP URLs) is passed directly to `rpm --import`.  It is not placed in `/etc/pki/rpm-gpg`; that is left to the appropriate `*-release` package (such as `centos-release`).\n\nChanges proposed in this pull request:\n\nâ€¢ In the temporary yum config file, use `gpgcheck=1` (instead of `gpgcheck=0`) if the `GPG` field is set.\nâ€¢ If the `GPG` field is set, and the field's value starts with `http://`, fail the bootstrap.\nâ€¢ If the `GPG` field is set, and the field's value starts with `https://`, check if the `curl` command is installed.  If not, fail the bootstrap.\nâ€¢ If the `GPG` field is set, and neither of the two prior conditions are met, run `rpm` to import a GPG key from [insert value of the `GPG` field here].\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/akkornel|akkornel>",
                "title": "#580 Add GPG support to yum bootstrap method",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/580",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491791043.176562",
        "date": 1491791043176
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by akkornel on pull request <https://github.com/singularityware/singularity/pull/579#issuecomment-292833244|#579: Allow hyphen in TERM environment variable>",
                "text": "Re-wrapped commit message.",
                "pretext": "[singularityware/singularity] New comment by akkornel on pull request <https://github.com/singularityware/singularity/pull/579#issuecomment-292833244|#579: Allow hyphen in TERM environment variable>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491790248.121790",
        "date": 1491790248121
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/577#issuecomment-292819372|#577: Rejecting valid $TERM strings which contain a hyphen>",
                "text": "awesome thanks @akkornel !",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/577#issuecomment-292819372|#577: Rejecting valid $TERM strings which contain a hyphen>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491778322.442218",
        "date": 1491778322442
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by akkornel on issue <https://github.com/singularityware/singularity/issues/577#issuecomment-292818833|#577: Rejecting valid $TERM strings which contain a hyphen>",
                "text": "@vsoch I just submitted a pull request that appears to fix this issue for me!",
                "pretext": "[singularityware/singularity] New comment by akkornel on issue <https://github.com/singularityware/singularity/issues/577#issuecomment-292818833|#577: Rejecting valid $TERM strings which contain a hyphen>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491777680.416060",
        "date": 1491777680416
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#579 Allow hyphen in TERM environment variable' https://github.com/singularityware/singularity/pull/579 by akkornel",
                "text": "Running `ls /lib/terminfo/* | grep \\-` on a stock Ubuntu 16.10 Desktop system\nshows 22 terminal types that use the hyphen character.  When using the Terminal\nin the Unity desktop, the terminal type is set to `xterm-256color`.\n\nA manual scan of the list shows that the hyphen is the only non-alphanum\ncharacter in the list of terminal types.\n\nFixes #577.\n\nChanges proposed in this pull request\n\nâ€¢ Add hyphen to the list of allowed non-alphanum characters in the `TERM` environment variable.\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/akkornel|akkornel>",
                "title": "#579 Allow hyphen in TERM environment variable",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/579",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491777648.414757",
        "date": 1491777648414
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/577#issuecomment-292818505|#577: Rejecting valid $TERM strings which contain a hyphen>",
                "text": "This looks like a quick fix - @gmkurtzer manages the C code so he will be able to look at it when he's back at the computer. For now, try using a different. `$TERM`.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/577#issuecomment-292818505|#577: Rejecting valid $TERM strings which contain a hyphen>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491777538.410352",
        "date": 1491777538410
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by akkornel on issue <https://github.com/singularityware/singularity/issues/577#issuecomment-292818425|#577: Rejecting valid $TERM strings which contain a hyphen>",
                "text": "I've confirmed that this problem did not exist as of 68be6fec37ce05e0881b366ed89f1cc5cfbbfe16 (the merge of my branch a while ago).  So, this is a regression.\n\nI've done a `git bisect` between 167857d5983aad17b84269666c8e48d255903d67 (the current head of the `development` branch) and 68be6fec37ce05e0881b366ed89f1cc5cfbbfe16 has narrowed things down to commit 0b697a3c6a41cbf1e42a048f9846ca0b97348c61.\n\nIf I understand the code correctly, `$TERM` is now being used in C code, but without allowing the hyphen character?",
                "pretext": "[singularityware/singularity] New comment by akkornel on issue <https://github.com/singularityware/singularity/issues/577#issuecomment-292818425|#577: Rejecting valid $TERM strings which contain a hyphen>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491777517.409695",
        "date": 1491777517409
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#578 [feedback] should we save build log in metadata folder?' https://github.com/singularityware/singularity/issues/578 by vsoch",
                "text": "If a container is a reproducible and historical thing, arguably we would want it to carry around it's history. This would also remove the burden of having to keep it somewhere from sys admins. We could have a metadata folder and different log files like:\n\n```/.singularity.d/logs\n             01-build.log\n             10-docker-[timestamp].log\n```\n\nwhere `01-build.log` is from the creation of the image / bootstrap, and then any subsequent imports are written with the prefix being the import type, followed by timestamp. Then a user could simply cat contents in this folder to see the history of a build, import, etc.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/vsoch|vsoch>",
                "title": "#578 [feedback] should we save build log in metadata folder?",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/578",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491777508.409386",
        "date": 1491777508409
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/576#issuecomment-292818264|#576: Test progress bar for downloading layers>",
                "text": "This will be closed with #575 ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/576#issuecomment-292818264|#576: Test progress bar for downloading layers>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491777440.406924",
        "date": 1491777440406
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#577 Rejecting valid $TERM strings which contain a hyphen' https://github.com/singularityware/singularity/issues/577 by akkornel",
                "text": "It seems that the latest dev. Singularity is rejecting $TERM values which include a hyphen.\n\nThis is happening in the `development` branch.  I'm at commit 167857d5983aad17b84269666c8e48d255903d67.\n\nHere's the verbose output from a bootstrap:\n\n```akkornel@blargh-yakkety-typical:~/workflow$ singularity -vv bootstrap image.img bootstrap.def\nincreasing verbosity level (3)\nExec'ing: /usr/local/libexec/singularity/cli/bootstrap.exec image.imgVERBOSE: Set messagelevel to: 3\nVERBOSE: Checking input from environment: 'LANG'\nVERBOSE: Obtained input from environment 'LANG' = 'en_US.UTF-8'\nVERBOSE: Checking input from environment: 'TERM'\nERROR  : Illegal input character '-' in: 'TERM=xterm-256color'\nABORT  : Retval = 255\n```\n\nI don't think the details of the bootstrap script matters here, because it never gets to the point of parsing the bootstrap script.\n\nLooking on a stock Ubuntu 16.10 system, I see 22 different terminal types which include a hyphen character:\n\n```akkornel@blargh-yakkety-typical:~/workflow$ ls /lib/terminfo/* | grep \\-\ncons25-debian\nEterm-color\nmach-bold\nmach-color\nmach-gnu\nmach-gnu-color\nrxvt-basic\nrxvt-m\nrxvt-unicode\nscreen-256color\nscreen-256color-bce\nscreen-bce\nscreen-s\nscreen-w\nxterm-256color\nxterm-color\nxterm-debian\nxterm-mono\nxterm-r5\nxterm-r6\nxterm-vt220\nxterm-xfree86\n```\n\nIn my case, the terminal type I'm using is `xterm-256color`.  This is the default that I got from an Ubuntu 16.10 Desktop installation.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/akkornel|akkornel>",
                "title": "#577 Rejecting valid $TERM strings which contain a hyphen",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/577",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491776008.349995",
        "date": 1491776008349
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-292815574|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "text": "one more thing I want to test - I use the stdout to test the encoding, and I want to see if it can be different from stderr!",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-292815574|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491774272.282963",
        "date": 1491774272282
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-292803887|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "text": "Updates to the PR:\n\nâ€¢ the progress bar now lives with the SingularityMessage class, as this seemed the most appropriate place for it\nâ€¢ untarring of layers from dockers changes all files (not symlinks) to o+rw and folders (not symlinks) to o+rwx. Just to make sure I did this ok:\n\n```    # Owner read, write (o+rw)\n    if file_permission == None:\n        file_permission = stat.S_IRUSR | stat.S_IWUSR\n```# Owner read, write execute (o+rwx)\nif folder_permission == None:\n    folder_permission = stat.S_IRUSR | stat.S_IWUSR | stat.S_IXUSR  ```\n```\n\nâ€¢ The progress bar has been added to downloading files, with a default verbosity to print for info (and fixing permissions still only prints for verbose). I would suggest that we print one for both, however we would need to change the statement about fixing permissions to also be info. No, we can't combine them because they are two distinct loops/processes.\nâ€¢ I estimate the size of the download from the Content-Length header of the response. and then add up chunks as I extract, updating the progress bar with the chunk sum / total content length. Given that the content length includes some extra (and it's hard to consistently estimate this) I made a small tweak to the progress bar to cap at 100%. This shouldn't be terribly misleading (thinks of Windows...) because in testing it never went over much more than 100.8 or 101.3ish. It's a trivial rounding that the user shouldn't notice, and it shouldn't mislead.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-292803887|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491763206.807586",
        "date": 1491763206807
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#576 Test progress bar for downloading layers' https://github.com/singularityware/singularity/issues/576 by vsoch",
                "text": "Can we use content length header and compare to sum of data streamed?",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/vsoch|vsoch>",
                "title": "#576 Test progress bar for downloading layers",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/576",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491752127.337893",
        "date": 1491752127337
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-292792540|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "text": "I love the progress bar so much, can we make that the normal output mode (e.g. not `--verbose`)? Of course `-q` (`SINGULARITY_MESSAGELEVEL=0`) should hide it, but that is totally awesome!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/575#issuecomment-292792540|#575: Adding permission o+w to all in memory tars, and verbose progress bar>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491751483.311127",
        "date": 1491751483311
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by oschulz on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292772293|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "text": "Actually, I think it's probably best to do the equivalent of a\n```chmod -R ugo+rX /```\ninstead of setting fixed files permissions. It's least intrusive, but will still make everything accessible.",
                "pretext": "[singularityware/singularity] New comment by oschulz on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292772293|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491726731.522929",
        "date": 1491726731522
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by oschulz on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292772086|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "text": "I'd suggest to use `0666` for files and `0755` for folder - it'll work just as well (yes, the container is read-only, but that doesn't have to be reflected in the permissions, it's a file-system property) and it's closer to the original permissions.",
                "pretext": "[singularityware/singularity] New comment by oschulz on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292772086|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491726420.513766",
        "date": 1491726420513
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#575 Adding permission o+w to all in memory tars, and verbose progress bar' https://github.com/singularityware/singularity/pull/575 by vsoch",
                "image_url": "https://asciinema.org/a/112081.png",
                "image_width": 520,
                "image_height": 250,
                "image_bytes": 92857,
                "text": "This PR will modify the in memory tar extraction to add permission \"write\" to the owner (o+w) - the function is renamed to `change_tar_permissions` from `check_tar_permissions` because we are no longer checking anything. I also went through and removed unnecessary imports, and added a progress bar for the user given a verbose or higher level. A demo is here: \n\n<https://asciinema.org/a/112081?speed=3>\n\nNote that adding the permission doesn't seem to make the images just work seamlessly, for example for the tensorflow image shown in the asciinema above, I cannot run it, because `/run/user` doesn't have execute, or something like that:\n\n```bash\nvanessa@som-ctp:/tmp$ singularity shell tensorflow.img \nSingularity: Invoking an interactive shell within container...\n\nSingularity tensorflow.img:/tmp&gt;\n```\nShould that work? Does the changing permission step need to check if the file has o+x permission, and not change those first?\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#575 Adding permission o+w to all in memory tars, and verbose progress bar",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/575",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491700227.798076",
        "date": 1491700227798
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/514|#514 default python runs now send the singularity output to STDERR> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/514|#514 default python runs now send the singularity output to STDERR> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491699697.780850",
        "date": 1491699697780
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-292756254|#514: default python runs now send the singularity output to STDERR>",
                "text": "I believe this is fixed, closing. Please re-open if needed.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-292756254|#514: default python runs now send the singularity output to STDERR>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491699696.780833",
        "date": 1491699696780
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/573|#573 name of container from singularity hub> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/573|#573 name of container from singularity hub> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491692260.536225",
        "date": 1491692260536
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292751460|#573: name of container from singularity hub>",
                "text": "PR is merged - @jokedurnez you can use the development branch, and do like:\n\n```singularity pull --hash shub://vsoch/singularity-images\nsingularity pull --commit shub://vsoch/singularity-images\nsingularity pull --name \"meatballs.img\" shub://vsoch/singularity-images\n```\nfor hash (of file), commit, and name, respectively! I'm going to close issue, please re-open if necessary!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292751460|#573: name of container from singularity hub>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491692260.536216",
        "date": 1491692260536
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292751182|#574: Give user customization of singularity hub image name>",
                "text": "Looks good, thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292751182|#574: Give user customization of singularity hub image name>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491691858.522924",
        "date": 1491691858522
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/574|#574 Give user customization of singularity hub image name> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/574|#574 Give user customization of singularity hub image name> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491691851.522709",
        "date": 1491691851522
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292734751|#574: Give user customization of singularity hub image name>",
                "text": "ok ready now, apologies about my fussing with bash :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292734751|#574: Give user customization of singularity hub image name>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491674164.773148",
        "date": 1491674164773
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292734419|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "text": "`0444` for files and `0555` for folders. This worked for .img images because the image itself had a set of permissions so even if everything was world readable inside the image you could still make the image file inaccessible to other users.\n\nI am not sure how this works with docker import. If at the end of the day you are producing a single .img file (or single squashfs file) this should not be a problem. However, if you are storing the imported image as a folder you could accidentally give read access to files that were suppose to be secret. This seems to be an edge case though because you in vast majority of the cases you will pull public images from docker hub. One could, however, imagine a case where you import an image from private secret docker registry and save it as directory of files with world readable permissions. This could be a problem. For such cases we would have to limit the permissions to the user performing the import (which unfortunately also makes the resulting container not usable by other users, so not really portable). We can also ignore this edge case for now (I don't really care about it since all of my code is public).",
                "pretext": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292734419|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491673841.757696",
        "date": 1491673841757
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/571#issuecomment-292733806|#571: guidelines for creating readonly docker containers compatible with singularity>",
                "text": "I haven't tried it, if I know the right mode to use, I can try it.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/571#issuecomment-292733806|#571: guidelines for creating readonly docker containers compatible with singularity>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491673221.728543",
        "date": 1491673221728
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292733739|#573: name of container from singularity hub>",
                "text": "lol it was a total accident! The best of my coding career, lol.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292733739|#573: name of container from singularity hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491673162.725783",
        "date": 1491673162725
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292733685|#574: Give user customization of singularity hub image name>",
                "text": "nevermind it's ok, that was because I had export one of the variables:\n\n```vanessa@som-ctp:/tmp$ singularity pull --hash shub://vsoch/singularity-imagesDone. Container is at: ./a989bc72cb154d007aa47a5034978328.img\nvanessa@som-ctp:/tmp$ singularity pull --commit shub://vsoch/singularity-imagesDone. Container is at: ./7a75cd7a32192e5d50f267982e0c30aff794076b.img\nvanessa@som-ctp:/tmp$ singularity pull --hash shub://vsoch/singularity-images\nDone. Container is at: ./a989bc72cb154d007aa47a5034978328.img\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292733685|#574: Give user customization of singularity hub image name>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491673114.723702",
        "date": 1491673114723
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292733612|#574: Give user customization of singularity hub image name>",
                "text": "oh wait the hash and commit returned the same, that's not right, one more sec.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292733612|#574: Give user customization of singularity hub image name>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491673047.720719",
        "date": 1491673047720
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292733518|#574: Give user customization of singularity hub image name>",
                "text": "hoho! I think I finally got it all figured out, lol:\n\n```singularity pull --commit shub://vsoch/singularity-imagesDone. Container is at: ./7a75cd7a32192e5d50f267982e0c30aff794076b.img\nvanessa@som-ctp:/tmp$ singularity pull --hash shub://vsoch/singularity-images\nDone. Container is at: ./7a75cd7a32192e5d50f267982e0c30aff794076b.img\nvanessa@som-ctp:/tmp$ singularity pull --name \"meatballs.img\" shub://vsoch/singularity-images\nDone. Container is at: ./meatballs.img\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292733518|#574: Give user customization of singularity hub image name>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491672955.716359",
        "date": 1491672955716
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by jokedurnez on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292733186|#573: name of container from singularity hub>",
                "text": "Wuuhuu :-)\nThanks!",
                "pretext": "[singularityware/singularity] New comment by jokedurnez on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292733186|#573: name of container from singularity hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491672644.701160",
        "date": 1491672644701
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292732334|#574: Give user customization of singularity hub image name>",
                "text": "yep there's a bug!",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292732334|#574: Give user customization of singularity hub image name>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491671853.660938",
        "date": 1491671853660
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292732229|#574: Give user customization of singularity hub image name>",
                "text": "I haven't tested this yet, need to pull it to an instance! One second...",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292732229|#574: Give user customization of singularity hub image name>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491671762.656602",
        "date": 1491671762656
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292732181|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "text": "can you translate that to mode numbers so I don't get it wrong? Eg:\n\n```In [1]: import stat\nIn [2]: stat.S_IWUSR\nOut[2]: 128\n```\n\nSo many :heart: lol",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292732181|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491671726.654867",
        "date": 1491671726654
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292732018|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "text": "Great! `a+r` for files and `a+rw` for folders is what we have been doing in docker2singularity.",
                "pretext": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292732018|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491671597.648305",
        "date": 1491671597648
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292731597|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "text": "So what do you want me to do with them layers? lol. Right now I do:\n\n```    # Check permissions for folders, not symlinks\n    for member in tar:  \n        if member.isdir() or member.isfile() and not member.issym():\n            if not has_permission(member,permission):\n                bot.verbose3(\"Fixing permission for %s\" %(member.name))\n                member.mode = permission | member.mode\n            extracted = tar.extractfile(member)        \n            fixed_tar.addfile(member, extracted)\n        else:    \n            fixed_tar.addfile(member)\n```\n\nyou know @gmkurtzer what a great idea that we could allow filters and edits to the list of the tar! I just completely thought of this now, and not related to any conversation we've had previously :wink: Hey what do you think about this @satra ?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292731597|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491671241.630558",
        "date": 1491671241630
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292731452|#574: Give user customization of singularity hub image name>",
                "text": "Yep, `-h` would interfere. I was thinking `-n/--name` and `-H/--hash` or something like that.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292731452|#574: Give user customization of singularity hub image name>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491671093.622965",
        "date": 1491671093622
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292731367|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "text": "Modifying the tars that @vsoch is doing is proving to be quite useful!\n\nGranted, I'm internally battling with my OCD's on changing the contents of containers, but considering we are working with a model that is flawed to start with (I really don't like the Docker implementation of layers), this is an elegant workaround. :)",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292731367|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491671036.620265",
        "date": 1491671036620
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292731303|#574: Give user customization of singularity hub image name>",
                "text": "How's that? Do you mean there should be something like `--commit` and `--hash` ? I think `-h/--hash` might interfere with the help command.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292731303|#574: Give user customization of singularity hub image name>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491670972.616981",
        "date": 1491670972616
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292730769|#574: Give user customization of singularity hub image name>",
                "text": "It would support both, just like all of the other options also are supported by environment variables. Are you done with this commit otherwise? I will show ya if you want.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292730769|#574: Give user customization of singularity hub image name>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491670621.599309",
        "date": 1491670621599
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292730757|#574: Give user customization of singularity hub image name>",
                "text": "ok, I'll add it. I will just assume a user that wants a hash or commit is advanced and can read the help and export appropriately.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292730757|#574: Give user customization of singularity hub image name>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491670609.598795",
        "date": 1491670609598
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292730634|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "text": "Sorry - I didn't understand at first. Yes modifying permissions withing the tarstream should solve this issue.",
                "pretext": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292730634|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491670523.594746",
        "date": 1491670523594
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292730520|#574: Give user customization of singularity hub image name>",
                "text": "why not just have them define the environment variable? How would --name specify to use the hash or commit instead?",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292730520|#574: Give user customization of singularity hub image name>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491670430.590394",
        "date": 1491670430590
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292730167|#574: Give user customization of singularity hub image name>",
                "text": "The `--name` argument would only be applicable to the `pull` subcommand if you put it in the right place (e.g. `pull.exec`). If you are unsure, I will do it.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292730167|#574: Give user customization of singularity hub image name>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491670160.577708",
        "date": 1491670160577
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292730038|#574: Give user customization of singularity hub image name>",
                "text": "I can definitely add something to the pull.exec to export the variable if it's in the environment!",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292730038|#574: Give user customization of singularity hub image name>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491670062.573115",
        "date": 1491670062573
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292729982|#574: Give user customization of singularity hub image name>",
                "text": "I think if we add a `--name` argument then it would have to carry through to all the other functions, and we aren't ready for that! Eg:\n\n```singularity create --name \"meatballs.img\" docker://ubuntu:latest\n```\n\nand eventually\n\n```singularity pull docker://ubuntu:latest --name \"meatballs.img\"\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292729982|#574: Give user customization of singularity hub image name>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491670020.571365",
        "date": 1491670020571
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292729824|#574: Give user customization of singularity hub image name>",
                "text": "It doesn't work like that - the script doesn't have a client like the helper to take command line arguments, it just finds them in the environment, akin to the pull folder, or cache, etc.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292729824|#574: Give user customization of singularity hub image name>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491669912.566368",
        "date": 1491669912566
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292729710|#574: Give user customization of singularity hub image name>",
                "text": "Yep, something like:\n\n```$ singularity pull --name kiwi.img shub://vsoch/singularity-images\n```\n\n`--name` should be parsed by `libexec/cli/pull.exec` and will export the variable `SHUB_CONTAINERNAME=\"kiwi.img\"` automatically.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292729710|#574: Give user customization of singularity hub image name>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491669805.561267",
        "date": 1491669805561
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292729466|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "text": "My question about relatedness is about the solution (modifying permissions within a tarstream) rather then the symptom.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292729466|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491669601.551534",
        "date": 1491669601551
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292729453|#574: Give user customization of singularity hub image name>",
                "text": "do you mean export given that it's defined? or something else?",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292729453|#574: Give user customization of singularity hub image name>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491669589.550992",
        "date": 1491669589550
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292726650|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "text": "No. This was a different issue and the problem was with read not write\npermissions.\n\nOn Apr 8, 2017 7:47 AM, \"Gregory M. Kurtzer\" <mailto:notifications@github.com|notifications@github.com>\nwrote:\n\nIs this now related to #571\n<https://github.com/singularityware/singularity/issues/571>?\n\nâ€”\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n<https://github.com/singularityware/singularity/issues/446#issuecomment-292722640>,\nor mute the thread\n<https://github.com/notifications/unsubscribe-auth/AAOkp9rFBcHx_-q1sHrXglj_wx2xLo7Wks5rt54cgaJpZM4LcD-Z>\n.",
                "pretext": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292726650|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491666821.412413",
        "date": 1491666821412
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-292725046|#488: [Proposal] Include syslog support>",
                "text": "Singularity is logging to LOCAL0, so it might be possible that your syslog.conf isn't persisting those?\n\nHave a good weekend!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-292725046|#488: [Proposal] Include syslog support>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491665260.337876",
        "date": 1491665260337
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by martbhell on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-292723834|#488: [Proposal] Include syslog support>",
                "text": "Okay I'll check it out on Monday @gmkurtzer . I don't recall seeing it there though so I thought I had to configure something.",
                "pretext": "[singularityware/singularity] New comment by martbhell on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-292723834|#488: [Proposal] Include syslog support>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491664093.286667",
        "date": 1491664093286
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-292723047|#488: [Proposal] Include syslog support>",
                "text": "@martbhell as @vsoch mentioned, it should be working already. Note that on RHEL based distributions the default syslog location is `/var/log/messages`.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-292723047|#488: [Proposal] Include syslog support>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491663288.249009",
        "date": 1491663288249
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292722956|#574: Give user customization of singularity hub image name>",
                "text": "Can you add an option to the CLI pull.exec to automatically set this variable and pass it down?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292722956|#574: Give user customization of singularity hub image name>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491663206.245552",
        "date": 1491663206245
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292722882|#573: name of container from singularity hub>",
                "text": "@vsoch Eatballs?! Uhmm... V?!!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292722882|#573: name of container from singularity hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491663131.242319",
        "date": 1491663131242
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/571#issuecomment-292722712|#571: guidelines for creating readonly docker containers compatible with singularity>",
                "text": "@vsoch You are already doing the iteration over large numbers of files, right? Does changing the data make it that much slower?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/571#issuecomment-292722712|#571: guidelines for creating readonly docker containers compatible with singularity>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491662948.234127",
        "date": 1491662948234
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292722640|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "text": "Is this now related to #571?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292722640|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491662877.230781",
        "date": 1491662877230
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-292697018|#488: [Proposal] Include syslog support>",
                "text": "Can you just cat --&gt; grep the syslog file? Eg:\n\n```vanessa@som-ctp:~$ cat /var/log/syslog | grep Singularity\nApr  7 22:37:57 som-ctp Singularity: action-suid (U=1002,P=22665)&gt; Could not open image ubuntu: No such file or directory\nApr  7 22:37:57 som-ctp Singularity: action-suid (U=1002,P=22665)&gt; Retval = 255\nApr  7 23:21:38 som-ctp Singularity: action-suid (U=1002,P=25686)&gt; No valid /bin/sh in container\nApr  7 23:21:38 som-ctp Singularity: action-suid (U=1002,P=25686)&gt; Retval = 255\nApr  7 23:21:54 som-ctp Singularity: action-suid (U=1002,P=25781)&gt; USER=vanessa, IMAGE='ubuntu.img', COMMAND='run'\nApr  8 05:42:52 som-ctp Singularity: action-suid (U=1002,P=2377)&gt; USER=vanessa, IMAGE='ubuntu:latest', COMMAND='run'\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-292697018|#488: [Proposal] Include syslog support>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491630250.148982",
        "date": 1491630250148
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by martbhell on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-292696019|#488: [Proposal] Include syslog support>",
                "text": "@gmkurtzer nice!  Could you point me to the documentation for how to configure syslog logging? ( I'm currently on 2.2.99 )",
                "pretext": "[singularityware/singularity] New comment by martbhell on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-292696019|#488: [Proposal] Include syslog support>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491628732.107878",
        "date": 1491628732107
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292688307|#574: Give user customization of singularity hub image name>",
                "text": "For @jokedurnez! ",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/574#issuecomment-292688307|#574: Give user customization of singularity hub image name>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491617848.744407",
        "date": 1491617848744
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292686817|#573: name of container from singularity hub>",
                "image_url": "https://cloud.githubusercontent.com/assets/814322/24824316/27ae45fe-1bd7-11e7-9d1f-42f773aa17ab.png",
                "image_width": 725,
                "image_height": 98,
                "image_bytes": 27801,
                "text": "done! See <https://github.com/singularityware/singularity/pull/574>\n\nbtw, I had a rather glorious bug when I was coding this up...\n\n<https://cloud.githubusercontent.com/assets/814322/24824316/27ae45fe-1bd7-11e7-9d1f-42f773aa17ab.png|image>",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292686817|#573: name of container from singularity hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491616138.671119",
        "date": 1491616138671
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#574 Give user customization of singularity hub image name' https://github.com/singularityware/singularity/pull/574 by vsoch",
                "text": "Fixes #573 \n\nThis PR will allow the user to specify the singularity hub image name to be pulled by way of environment variables. Essentially, the following three variables are looked for, with preference for this order:\n\nâ€¢ `SHUB_CONTAINERNAME`: will allow the user to define a custom name\nâ€¢ `SHUB_NAMEBYCOMMIT`: if found, will name the container based on it's github commit\nâ€¢ `SHUB_NAMEBYHASH`: if found, will name the container based on the hash of the file\n\nIt works as follows:\n\n```export SHUB_CONTAINERNAME=\"meatballs.img\"\nsingularity pull shub://vsoch/singularity-images\n...\nDone. Container is at: ./meatballs.img\n```\n\nSecond preference goes to naming the container by commit. If this variable is found in the environment, regardless of the value, it will be done!\n\n```unset SHUB_CONTAINERNAME\nexport SHUB_NAMEBYCOMMIT=yesplease\nsingularity pull shub://vsoch/singularity-images\nDone. Container is at: ./7a75cd7a32192e5d50f267982e0c30aff794076b.img\n```\n\nFinally, we can name the container based on the file hash.\n\n```unset SHUB_NAMEBYCOMMIT\nexport SHUB_NAMEBYHASH=yesplease\nsingularity pull shub://vsoch/singularity-images\nDone. Container is at: ./a989bc72cb154d007aa47a5034978328.img\n```\n\nIf none of the above are selected, the default is to use the username and reponame (what we have now)\n\n```unset SHUB_NAMEBYHASH\nsingularity pull shub://vsoch/singularity-images\nDone. Container is at: ./vsoch-singularity-images-mongo.img\n```\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#574 Give user customization of singularity hub image name",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/574",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491616107.669729",
        "date": 1491616107669
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292683523|#573: name of container from singularity hub>",
                "text": "Give me a few minutes :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292683523|#573: name of container from singularity hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491613001.518393",
        "date": 1491613001518
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292682560|#573: name of container from singularity hub>",
                "text": "The commit can be accessed via the manifest, which yes means we could name the images based on it.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292682560|#573: name of container from singularity hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491612195.475931",
        "date": 1491612195475
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/320#issuecomment-292682275|#320: import as non-root no longer possible>",
                "text": "Yep, but by definition it is not persistent. It is the persistency of wrong permissions that makes it intolerable to me! But ... with that said, @vsoch and I have been discussing a `pull` sub command that might do exactly what you are thinking. :)",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/320#issuecomment-292682275|#320: import as non-root no longer possible>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491612005.465614",
        "date": 1491612005465
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292682263|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "text": "FYI I just heard from a user struggling because of read access denied issues on a container imported from Docker. I know that \"fixing\" (making everything world readable) the permissions technically changes the container, but it will make people lives easier! Just saying!",
                "pretext": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/446#issuecomment-292682263|#446: Roadmap to unprivileged Docker Hub image import> (assigned to <https://github.com/vsoch|vsoch>)",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491611998.465169",
        "date": 1491611998465
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292682154|#573: name of container from singularity hub>",
                "text": "Nice features should always stay, it's just the bad features (otherwise known as bugs) that we want to squish! Heh\n\nIs it possible to download the tag too? If not, sure, we can offer an option to include a name. :)",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292682154|#573: name of container from singularity hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491611923.461094",
        "date": 1491611923461
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/320#issuecomment-292681708|#320: import as non-root no longer possible>",
                "text": "&gt; Plus, I have an OCD about writing files to the file system that have incorrect permissions (and if splatting them out as a user, every file is wrong).\nThat's what `docker shell docker://image` is already doing :), but by caching layers to `$HOME/.singularity`, and extracting them to `/tmp/.singularity-runtime.XXXXXXXX/`. This path also works for us, but it's slower since you pay the extraction cost at every container start (and we have large images).\nNow the only option is to `docker export` to a folder, then `singularity shell ~/myrootfs/`",
                "pretext": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/320#issuecomment-292681708|#320: import as non-root no longer possible>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491611633.444428",
        "date": 1491611633444
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292681624|#573: name of container from singularity hub>",
                "text": "ah, sorry. If you want, you can just use the download code and roll the pull yourself, naming the container whatever you like! @gmkurtzer what do you think about giving the user the option to specify a custom name via an environment variable, or an environment variable that if present, names based on the commit?\n\nFor reference if you want a solution asap, <https://github.com/singularityware/singularity/blob/development/libexec/python/shub/main.py#L65|here is the code>.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292681624|#573: name of container from singularity hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491611579.441108",
        "date": 1491611579441
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by jokedurnez on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292680796|#573: name of container from singularity hub>",
                "text": "Yeah, I mean it's so little effort I could rename the files myself, but I _think_ this filename structure (with hash) was implemented in docker2singularity and I miss it :-).\nWe're sharing singularity containers with a bunch of people and that was handy to quickly (1) store different versions that are used for different projects and (2) see if the latest version is on our system.\nAgain: it's easy to do this ourselves, but it was a nice feature that now has disappeared :-)",
                "pretext": "[singularityware/singularity] New comment by jokedurnez on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292680796|#573: name of container from singularity hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491610973.402621",
        "date": 1491610973402
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/571#issuecomment-292679950|#571: guidelines for creating readonly docker containers compatible with singularity>",
                "text": "Right now I'm using the same algorithm that we had talked about over slack, <https://github.com/singularityware/singularity/blob/development/libexec/python/sutils.py#L320|this section here>. I can change that to be whatever you like, although my main concern would be an operation over huge numbers of files is going to make it really slow.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/571#issuecomment-292679950|#571: guidelines for creating readonly docker containers compatible with singularity>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491610407.365916",
        "date": 1491610407365
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/320#issuecomment-292679218|#320: import as non-root no longer possible>",
                "text": "Ubuntu and Debian's implementation of user namespaces are not even equal though! I stopped putting conditionals in, so Singularity mostly works with user namespace on Ubuntu (as long as you don't use images), but not always on Debian. It is quite frustrating... Luckily, almost no big HPC centers use Debian or Ubuntu. I don't mean to alienate any of the *.deb-heads out there, but I did a check on the top500, your DGX was the only one!\n\nThe problem is that the user namespaces, even as Ubuntu implemented it, isn't quite enough for all of the HPC features most centers rely on. While, I would also prefer to discard the security baggage of SUID, it just isn't possible in the production world. :(\n\nYes, you are 100% correct about doing the import on a folder with SUID, and thus it is disabled.\n\nYou are also right about import \"should\" work without any security concern, but... import is an image specific function. Plus, I have an OCD about writing files to the file system that have incorrect permissions (and if splatting them out as a user, every file is wrong).",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/320#issuecomment-292679218|#320: import as non-root no longer possible>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491609976.337382",
        "date": 1491609976337
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/571#issuecomment-292678523|#571: guidelines for creating readonly docker containers compatible with singularity>",
                "text": "Ohhhhhhh... duhh, I totally missed that you aren't using an image. Because it is a Docker splat, yes, all of the files are owned by you.\n\n@vsoch It seems to me that all files being written from the tar stream should be readable by owner. I can't imagine any such situation where that wouldn't be the case. Perhaps we should just fix that across the board instead?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/571#issuecomment-292678523|#571: guidelines for creating readonly docker containers compatible with singularity>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491609595.307587",
        "date": 1491609595307
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/320#issuecomment-292677999|#320: import as non-root no longer possible>",
                "text": "On CentOS, don't even try, user namespaces are a preview feature and therefore largely <https://github.com/lxc/lxc/issues/842|unusable>.\n\nOn other distros (like ubuntu 16.04), it works fine, and if you remap the UID you are root in the container, which allow you to do more things without being \"real\" root from the outside.\nFrom a security standpoint, we prefer to rely on user namespaces instead of SUID binaries, no offense ;)\n\nI understand that it's not possible to create a Singularity image without privileges, and that doing a `singularity import` on a folder with SUID creates many security issues and that's why you removed this feature (right? or was there other reasons?).\nBut in a full non-SUID setting (`--disable-suid`), folder import should work without any security concern.",
                "pretext": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/320#issuecomment-292677999|#320: import as non-root no longer possible>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491609299.285496",
        "date": 1491609299285
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/571#issuecomment-292677744|#571: guidelines for creating readonly docker containers compatible with singularity>",
                "text": "```$ singularity shell -c docker://nipype/workshops:latest-nofsspm\n```\ninside container\n```\nSingularity workshops:latest-nofsspm:/home/satra&gt; nipypecli\nTraceback (most recent call last):\n...\nPermissionError: [Errno 13] Permission denied: '/opt/conda/lib/python3.5/site-packages/.wh.nilearn-0.2.5-py3.5.egg-info'\n\nSingularity workshops:latest-nofsspm:/home/satra&gt; ls -al /opt/conda/lib/python3.5/site-packages/.wh.nilearn-0.2.5-py3.5.egg-info\n--w------- 1 satra gablab 0 Mar 25 17:34 /opt/conda/lib/python3.5/site-packages/.wh.nilearn-0.2.5-py3.5.egg-info\n\nSingularity workshops:latest-nofsspm:/home/satra&gt; whoami\nsatra\n```",
                "pretext": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/571#issuecomment-292677744|#571: guidelines for creating readonly docker containers compatible with singularity>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491609159.274654",
        "date": 1491609159274
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/571#issuecomment-292676892|#571: guidelines for creating readonly docker containers compatible with singularity>",
                "text": "How are you deleting files in `/opt` as you? What are the permissions of those files and the directory? Is the container mounted as writable?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/571#issuecomment-292676892|#571: guidelines for creating readonly docker containers compatible with singularity>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491608671.236049",
        "date": 1491608671236
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/571#issuecomment-292676543|#571: guidelines for creating readonly docker containers compatible with singularity>",
                "text": "@gmkurtzer - it's the python process that tries to rewrite these files. however, docker allows rewrite without the `--read-only` flag, while in singularity i have to go and delete them, before i run anything. in some sense it's weird that it allows me to delete them.\n\n```\nSingularity workshops:latest-nofsspm:/home/satra&gt; nipypecli\nTraceback (most recent call last):\n  File \"/opt/conda/bin/nipypecli\", line 6, in &lt;module&gt;\n    from pkg_resources import load_entry_point\n  File \"&lt;frozen importlib._bootstrap&gt;\", line 969, in _find_and_load\n  File \"&lt;frozen importlib._bootstrap&gt;\", line 958, in _find_and_load_unlocked\n  File \"&lt;frozen importlib._bootstrap&gt;\", line 664, in _load_unlocked\n  File \"&lt;frozen importlib._bootstrap&gt;\", line 634, in _load_backward_compatible\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/*init*.py\", line 2985, in &lt;module&gt;\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/*init*.py\", line 2971, in _call_aside\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/*init*.py\", line 2998, in _initialize_master_working_set\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/*init*.py\", line 651, in _build_master\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/*init*.py\", line 644, in *init*\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/*init*.py\", line 700, in add_entry\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/*init*.py\", line 1990, in find_on_path\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/*init*.py\", line 2399, in from_location\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/*init*.py\", line 2740, in _reload_version\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/*init*.py\", line 2364, in _version_from_file\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/*init*.py\", line 2532, in _get_metadata\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/*init*.py\", line 1873, in get_metadata_lines\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/*init*.py\", line 1861, in get_metadata\nPermissionError: [Errno 13] Permission denied: '/opt/conda/lib/python3.5/site-packages/.wh.nilearn-0.2.5-py3.5.egg-info'\n\nSingularity workshops:latest-nofsspm:/home/satra&gt; find /opt/conda/ -name \".wh*\" | xargs rm -f\n\nSingularity workshops:latest-nofsspm:/home/satra&gt; nipypecli\nUsage: nipypecli [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  -h, --help  Show this message and exit.\n\nCommands:\n  convert  Export nipype interfaces to other formats.\n  crash    Display Nipype crash files.\n  run      Run a Nipype Interface.\n  search   Search for tracebacks content.\n  show     Print the content of Nipype node .pklz file.\n```",
                "pretext": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/571#issuecomment-292676543|#571: guidelines for creating readonly docker containers compatible with singularity>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491608473.220956",
        "date": 1491608473220
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/569#issuecomment-292676034|#569: [development] \"allow setuid = no\" doesn't drop privileges>",
                "text": "Fixed, closing!",
                "pretext": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/569#issuecomment-292676034|#569: [development] \"allow setuid = no\" doesn't drop privileges>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491608178.196644",
        "date": 1491608178196
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/569|#569 [development] \"allow setuid = no\" doesn't drop privileges> by <https://github.com/flx42|flx42>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/569|#569 [development] \"allow setuid = no\" doesn't drop privileges> by <https://github.com/flx42|flx42>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491608178.196627",
        "date": 1491608178196
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292676010|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "text": "uh-oh.... I'm preparing for the inundation of lots of brainstorming against me!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292676010|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491608168.195719",
        "date": 1491608168195
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292675927|#567: Is expand functioning?>",
                "text": "Haha, actually... It is one of the nicest completion scripts that I've seen!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292675927|#567: Is expand functioning?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491608122.191785",
        "date": 1491608122191
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/320#issuecomment-292675830|#320: import as non-root no longer possible>",
                "text": "Yeah, exactly! The user namespace doesn't provide the means to deal with loop images, so if it worked, it was because there was some SUID code doing it's job.\n\nWhy not just use the SUID code? Honestly, the user namespace is flakey at best due to the fact that it is not ubiquitous or equally implemented across different distributions. Maybe one day it will become more standardized, but for now, all I hear from large production sites is that it is an unstable headache.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/320#issuecomment-292675830|#320: import as non-root no longer possible>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491608070.187300",
        "date": 1491608070187
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292675802|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "text": "lol, you got it! \n\n:popcorn:  _puts popcorn away for tomorrow_ :popcorn: ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292675802|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491608051.185600",
        "date": 1491608051185
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292675754|#567: Is expand functioning?>",
                "text": "oh lord, @bbockelm you wrote that right? <https://github.com/singularityware/singularity/blob/development/etc/bash_completion.d/singularity|here is the hairball>",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292675754|#567: Is expand functioning?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491608021.183161",
        "date": 1491608021183
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292675632|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "text": "i'm on it - but i'll need 24 hours to come up with lame excuses!",
                "pretext": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292675632|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491607972.178717",
        "date": 1491607972178
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292675374|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "text": "hahaha... Teamwork, I love it!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292675374|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491607854.168345",
        "date": 1491607854168
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/320#issuecomment-292675289|#320: import as non-root no longer possible>",
                "text": "The bug in <https://github.com/singularityware/singularity/issues/569> probably gave the illusion that it worked ;)",
                "pretext": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/320#issuecomment-292675289|#320: import as non-root no longer possible>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491607815.164647",
        "date": 1491607815164
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292675278|#567: Is expand functioning?>",
                "text": "We do have a bash_completion script, what isn't working?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292675278|#567: Is expand functioning?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491607809.164109",
        "date": 1491607809164
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292675240|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "text": "I guess @satra it's your turn to put forward some good ideas / arguments to convince @gmkurtzer, lol. :popcorn: :popcorn: ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292675240|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491607791.162263",
        "date": 1491607791162
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/320#issuecomment-292675224|#320: import as non-root no longer possible>",
                "text": "Ok, so this isn't supported for images, I didn't understand that from your previous comment.\nfine for me.",
                "pretext": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/320#issuecomment-292675224|#320: import as non-root no longer possible>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491607782.161519",
        "date": 1491607782161
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292674997|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "text": "Nope. bootstrap's always need `sudo`. &lt;runs&gt;",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292674997|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491607666.151124",
        "date": 1491607666151
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/569#issuecomment-292674643|#569: [development] \"allow setuid = no\" doesn't drop privileges>",
                "text": "```-THIS\n+IS\n-AWESOME\n+!!!\n```\nThanks!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/569#issuecomment-292674643|#569: [development] \"allow setuid = no\" doesn't drop privileges>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491607493.135607",
        "date": 1491607493135
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292674434|#567: Is expand functioning?>",
                "text": "ok looks good! One thing I noticed too - didn't we used to have command line completion for commands line import, bootstrap - it doesn't seem to be working for me!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292674434|#567: Is expand functioning?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491607392.126313",
        "date": 1491607392126
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292674356|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "text": "So you would be open to allowing for a bootstrap file to be used in a Non sudo context to add / remove files and specify environment and labels?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292674356|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491607347.122283",
        "date": 1491607347122
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292673858|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "text": "Oh wow... that is pretty bad. I would suggest then to just do it with bootstrap. :-P",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292673858|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491607121.101399",
        "date": 1491607121101
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292673700|#573: name of container from singularity hub>",
                "text": "Hi @jokedurnez, are you thinking of the name used at the shell prompt?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292673700|#573: name of container from singularity hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491607041.094283",
        "date": 1491607041094
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/569#issuecomment-292673671|#569: [development] \"allow setuid = no\" doesn't drop privileges>",
                "text": "@vsoch <https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#code-and-syntax-highlighting>\n\nIn this case:\n ` ` ```diff\n[...]\n ` ` ```",
                "pretext": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/569#issuecomment-292673671|#569: [development] \"allow setuid = no\" doesn't drop privileges>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491607030.093171",
        "date": 1491607030093
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/568#issuecomment-292673017|#568: Fixing the fuggalicious download of Docker layers error>",
                "text": "Wahoo! Looks good to me! Thanks, that was a dooozy!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/568#issuecomment-292673017|#568: Fixing the fuggalicious download of Docker layers error>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491606729.065406",
        "date": 1491606729065
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292672991|#567: Is expand functioning?>",
                "text": "Oh gosh... sorry about that, and good catches! Fixed! Can you test again?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292672991|#567: Is expand functioning?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491606714.064065",
        "date": 1491606714064
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/568|#568 Fixing the fuggalicious download of Docker layers error> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/568|#568 Fixing the fuggalicious download of Docker layers error> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491606692.061940",
        "date": 1491606692061
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292672862|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "text": "I guess Docker lets you do something like that. I could be convinced it's not fugly.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292672862|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491606656.058508",
        "date": 1491606656058
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292672799|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "text": "Command line args would work, albeit be messy. It would be simple to have one or two things, like:\n\n```singularity import image.img docker://ubuntu:latest \\\n   --remove \"/path/to/folder,/another/path/here.txt,regexp\"\n   --add \"/path/to/file.txt\"\n   --label \"Vanessa isadinosaur spaces? Weird characters? Extra quotes and commas?\"\n```\nWe could also allow multiple of the same command line argument, so the comma / spacing thing is a litle less weird, but then you would just have to parse that instead, lol. so like:\n\n```singularity import image.img docker://ubuntu:latest \\\n   --remove \"/path/to/folder\" \\\n   --remove \"/another/path/here.txt\" \\\n   --remove \"regexp\" \\\n   --add \"/path/to/file.txt\" \\\n   --label \"Vanessa isadinosaur spaces? Weird characters? Extra quotes and commas?\" \n```\n\nEwww.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292672799|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491606626.055752",
        "date": 1491606626055
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292672083|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "text": "I like your thinking on this, but I don't like the idea of having an import spec file as then it is still very much like bootstrap. Can it be done via command line args?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292672083|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491606307.025184",
        "date": 1491606307025
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292672054|#573: name of container from singularity hub>",
                "text": "Oh, and there is also now a client for singularity python that is just for working with Singularity Hub, and it will be properly released with Singularity 2.3. Right now it lives on <https://github.com/vsoch/singularity-python/tree/add/client|this branch> of my fork. It lets you do stuff like:\n\n```python\nfrom singularity.hub.client import Client\n\nshub = Client()    # Singularity Hub Client\ncontainer_id = 60\n\n*Get container manifest*\n\nmanifest = shub.get_container(container_id)\n\nimage = shub.pull_container(manifest,\n                           download_folder=\"/home/vanessa/Desktop\",\n                           name=\"zomg-so-cool-container.img.gz\")       \n\nmetrics = shub.load_metrics(manifest)\n\n*And assess container similarity based on different hash filters*\n\nfrom singularity.reproduce import (\n    assess_differences,\n    get_levels\n)\n\nlevels = get_levels()\ncontainer1='image1.img'\ncontainer1='image2.img'\ndiffs = assess_differences(container1,container2,levels=levels)\n\n*Package Trees*\n\nfrom singularity.views.trees import make_package_tree\nfig = make_package_tree(matrix=diffs,title=\"Singularity Hub Replication Scores\")\nfig.savefig('treee.png' %base)\n\n*Interactive tree*\n\ntree = make_interactive_tree(matrix=diffs)\n```\n\nAnd a whole bunch of other stuff I haven't pushed up yet - the reproducibility metrics should be submit in a paper this weekend, they are super cool!!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292672054|#573: name of container from singularity hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491606291.023584",
        "date": 1491606291023
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/320#issuecomment-292671668|#320: import as non-root no longer possible>",
                "text": "To create a new container, it does require privileges, and it uses SUID for that which is why you are seeing this error. There is no workaround, aside from calling with sudo and allowing SUID.\n\nConsidering you need SUID in order to use Singularity images anyway, you may as well either use the SUID process flow or don't use images (just run a shell (or other action) on a docker URI):\n\n```$ singularity shell docker://centos\n```",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/320#issuecomment-292671668|#320: import as non-root no longer possible>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491606108.005030",
        "date": 1491606108005
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292671102|#573: name of container from singularity hub>",
                "text": "Hey @jokedurnez ! It's funny, because the initial version used the hash or commit id as the container name, but we changed it to be something that was more human friendly given the common use case of pull to be like \"give me this container on my Desktop so I can run it\" as opposed to \"hide this container in some folder I don't know about it and call it when I issue a command.\"\n\nI'm guessing you are working in Python? You can use the Singularity Hub API to get these metrics, and embarrassingly I don't expose the build date, oups.\n\n```python\nimport requests\n\ncontainer = \"<https://singularity-hub.org/api/container/jokedurnez/HCPPipelines>\"\nresponse = requests.get(container)\n\nmanifest = response.json()\nversion = manifest['version'] # this is the commit\n\nimport demjson\nmetrics = demjson.decode(manifest['metrics'])\n\n*To get the latest version of a collection, across all tags (branches)*\n\ncontainer = \"<https://singularity-hub.org/api/container/jokedurnez/HCPPipelines:latest>\"\n\n*What we did above for the first call is equivalent to this*\n\ncontainer = \"<https://singularity-hub.org/api/container/jokedurnez/HCPPipelines:master>\"\n\n*Or you can get a custom tag like*\n\ncontainer = \"<https://singularity-hub.org/api/container/vsoch/singularity-images:mongo>\"\nresponse = requests.get(container)\n```\n\nFor future reference, singularity hub issues can go [here] (<https://github.com/singularityhub/singularityhub.github.io/issues>)\n\nAnd I've added the request to add the date to the manifest above! The hash (of the file) is also kept, although not properly exposed.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/573#issuecomment-292671102|#573: name of container from singularity hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491605860.977680",
        "date": 1491605860977
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/571#issuecomment-292671065|#571: guidelines for creating readonly docker containers compatible with singularity>",
                "text": "I'm not positive I follow the issue, but even if the container isn't read only, I would hope the path to anywhere under `/opt/` is in fact read-only to non-root users.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/571#issuecomment-292671065|#571: guidelines for creating readonly docker containers compatible with singularity>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491605839.975505",
        "date": 1491605839975
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/559#issuecomment-292669840|#559: Unrecognized Distribution type: yum>",
                "text": "Let's try the `-x` option instead:\n\n`singularity -x bootstrap ....`",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/559#issuecomment-292669840|#559: Unrecognized Distribution type: yum>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491605302.917013",
        "date": 1491605302917
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-292669612|#488: [Proposal] Include syslog support>",
                "text": "@vsoch We can't write to the containers, as we don't mount them read-write unless specifically requested.\n\n@martbhell Actually, the `${sysconfdir}/singularity/init` is run at the right time, but the name of the variable you want to use is `${SINGULARITY_IMAGE}`. However, I would agree that \"CONTAINER\" makes more sense, but it is presently called \"IMAGE\" because of legacy reasons.\n\nBTW, I just added a `singularity_message(LOG, ....)` that describes the command running:\n\n```Apr  7 15:42:18 gmkdev2 Singularity: action (U=1000,P=12688)&gt; USER=gmk, IMAGE='centos_docker', COMMAND='shell'\nApr  7 15:44:17 gmkdev2 Singularity: action (U=1000,P=14158)&gt; USER=gmk, IMAGE='centos_docker', COMMAND='shell'\nApr  7 15:44:30 gmkdev2 Singularity: action-suid (U=1000,P=14217)&gt; USER=gmk, IMAGE='centos_docker', COMMAND='shell'\n```\n\nAnd all errors are always syslogged:\n\n```Apr  7 15:41:13 gmkdev2 Singularity: action-suid (U=0,P=11941)&gt; User info is not available\nApr  7 15:41:13 gmkdev2 Singularity: action-suid (U=0,P=11941)&gt; Retval = 255\n```",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-292669612|#488: [Proposal] Include syslog support>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491605211.906763",
        "date": 1491605211906
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/569#issuecomment-292669474|#569: [development] \"allow setuid = no\" doesn't drop privileges>",
                "text": "@flx42 ! How did you make that colorful? It's so pretty.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/569#issuecomment-292669474|#569: [development] \"allow setuid = no\" doesn't drop privileges>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491605149.899967",
        "date": 1491605149899
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292668905|#567: Is expand functioning?>",
                "text": "ok first test, creating an image, not importing anything, expanding without --size\n\n```bash\n singularity expand ubuntu.img \nInitializing Singularity image subsystem\nOpening image file: ubuntu.img\nExpanding image by 768MiB\nBinding image to loop\nChecking file system\ne2fsck 1.42.13 (17-May-2015)\nPass 1: Checking inodes, blocks, and sizes\nPass 2: Checking directory structure\nPass 3: Checking directory connectivity\nPass 4: Checking reference counts\nPass 5: Checking group summary information\n/dev/loop0: 11/49152 files (0.0% non-contiguous), 7387/196608 blocks\nResizing file system\nresize2fs 1.42.13 (17-May-2015)\nResizing the filesystem on /dev/loop0 to 393216 (4k) blocks.\nThe filesystem on /dev/loop0 is now 393216 (4k) blocks long.\n\nImage is done: ubuntu.img\n```\n\nimporting...\nrunning...\nworks!\n\nOk next I tested different derivations of creating and importing, then resizing. There are a few bugs to look at:\n\nâ€¢ the help says the default expand is 512, but it looks like it's 768MiB\nâ€¢ when I add `--size` or `-s` it totally ignores me! I wanted a super fat image, and it just got a little fatter:\n\n```vanessa@som-ctp:/tmp$ singularity expand -s 4000 ubuntu.img \nInitializing Singularity image subsystem\nOpening image file: ubuntu.img\nExpanding image by 768MiB\nBinding image to loop\nChecking file system\ne2fsck 1.42.13 (17-May-2015)\nPass 1: Checking inodes, blocks, and sizes\nPass 2: Checking directory structure\nPass 3: Checking directory connectivity\nPass 4: Checking reference counts\nPass 5: Checking group summary information\n/dev/loop0: 8055/344064 files (4.9% non-contiguous), 62443/1376256 blocks\nResizing file system\nresize2fs 1.42.13 (17-May-2015)\nResizing the filesystem on /dev/loop0 to 1572864 (4k) blocks.\nThe filesystem on /dev/loop0 is now 1572864 (4k) blocks long.\n```\n\nWhat am I going to eat for Thanksgiving dinner now?!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292668905|#567: Is expand functioning?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491604913.873880",
        "date": 1491604913873
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292667853|#567: Is expand functioning?>",
                "text": ":boom: ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292667853|#567: Is expand functioning?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491604495.826645",
        "date": 1491604495826
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292667843|#567: Is expand functioning?>",
                "text": "I mean I'll test it - I can't confirm it looks good yet, lol.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292667843|#567: Is expand functioning?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491604489.826063",
        "date": 1491604489826
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292667806|#567: Is expand functioning?>",
                "text": "yep !!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292667806|#567: Is expand functioning?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491604476.824482",
        "date": 1491604476824
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292667697|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "text": "In my mind, `.singularity.d` is like the pilot cabin of the airplane. It's important for the planes workings, the pilots communicate things back to the passengers, but the passengers don't get to go inside. I don't think I like the idea of encouraging the user to stick his/her hands in there, and that includes adding custom scripts. A con - this addition would still require having some command line or text file source to identify the scripts to add, and then adding a file to the tar, and then the result is (still) a container that has files that shouldn't be there. A pro - it gives the user more flexibility. But actually, maybe that's a con. We have a very basic need - adding or removing content from an (already existing) tarball, and the question is how to best make that happen.\n\nI agree with @gmkurtzer , now that I think of it, that we don't want to confuse bootstrap and import. Do you think it would be confusing to allow for an import also using an equivalent bootstrap file? Or should we have another interface? What we would basically be providing are tools for a user to edit a tarball. Arguably, given that the layers are local, the user could just do that him or herself. But that's kind of annoying. I (still) think we could have something that would look like:\n\n```singularity import image.img \n #or\nsingularity import image.img spec://Singularity \n```\n\nWhere `Singularity` is the definition file, even with extra sections like `%post` and `%setup` that are ignored given a non sudo import. So the C parser would do something like:\n\nâ€¢ find runscript via the spec:// uri\nâ€¢ check if From is docker. If not, stop and tell user can't do that\nâ€¢ if docker, either parse %environment, %labels, %files sections and send to python with import, or send entire file to python for python to parse\nâ€¢ %setup and %post are ignored\nâ€¢ python parser does import, filters tarball, and writes metadata (labels, env) into same tarball\nâ€¢ sends content file back to C, import finishes same as now.\n\nInstead of import with a spec:// uri, it also could be some custom flag like --filter file.txt that has simple commands like:\n\n```ADD /path/to/file.txt\nREMOVE /path/in/docker\nADD /bla/bla/*\n```\nand of course the challenge would be defining things like regular expressions. The rule would be that only the tarball content can be modified, and nothing on the actual filesystem or already in the container. I would even say we can make this more general, instead of `--filter` do something like `--edit` or `--modify` or `--usercommand` and then allow for a single text file with a list of possible COMMAND KEY VALUE pairs/trios that specify customization that can be done. For example:\n\n```REMOVE /path/to/folder/*.txt\nENV KEY VALUE\nLABEL Modified By Vanessa \n```\n\nand then the C parser could hand that whole thing to python, and python would parse it. It would look very similar to a Dockerfile, and be obviously different from the bootstrap file. ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292667697|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491604436.819786",
        "date": 1491604436819
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/569#issuecomment-292666805|#569: [development] \"allow setuid = no\" doesn't drop privileges>",
                "text": "Great catch, thanks for letting me know. This is now fixed in 'development' branch, please confirm and close if so.\n\nThanks again!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/569#issuecomment-292666805|#569: [development] \"allow setuid = no\" doesn't drop privileges>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491604102.778623",
        "date": 1491604102778
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292665699|#567: Is expand functioning?>",
                "text": "Done. Will you test and close if it looks good?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292665699|#567: Is expand functioning?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491603649.724304",
        "date": 1491603649724
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292643832|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "text": "We have to be very careful about differentiating between the functions of `import` and `bootstrap`. Import can not bootstrap, because on the backend it is just taking tar streams and throwing that into an image. It isn't making any modifications (however as @vsoch mentioned, we could modify the tarballs before or during the streaming). Bootstrapping is always the most flexible and easiest to customize, but that entire process requires root.\n\nI may have muddied the lines of what is possible by figuring out how to import as non-root, but the processes are massively different on the backend and generally not compatible with each other.\n\nNow going back to what @vsoch mentioned, we could modify the tarballs and/or tarstreams in flight. While that is possible, I don't know what that interface would look like, and because the backend mechanisms are not compatible between `import` and `bootstrap`, I don't want to do it via a definition file as that would confuse the process from the user's perspective.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292643832|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491596999.551111",
        "date": 1491596999551
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#573 name of container from singularity hub' https://github.com/singularityware/singularity/issues/573 by jokedurnez",
                "text": "Not sure if this goes here, but...\nIt would be cool when pulling from singularity hub if the name of the container would include the hash and the date of the latest commit.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/jokedurnez|jokedurnez>",
                "title": "#573 name of container from singularity hub",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/573",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491596776.502676",
        "date": 1491596776502
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292628624|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "text": "ah i see. i could achieve the same through one of these options:\n\nâ€¢ allow adding scripts to `.singularity.d` folder (could be done through `ADD`/`REMOVE`)\nâ€¢ allow modifying scripts in `.singularity.d` (e.g., `runscript`, `99-environment.sh`)",
                "pretext": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292628624|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491592830.615849",
        "date": 1491592830615
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292624579|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "text": "hmm ok, we would need to figure out how to do this with in memory tars, meaning we aren't issuing commands to a file system, but we could do regular expressions over file name paths. Can you think of other commands that go beyond the scope of \"find files that look like this and do something\" that would be wanted in this kind of setting?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292624579|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491591775.371454",
        "date": 1491591775371
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292622874|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "text": "thanks @vsoch - it seems like i can still do the following:\n\n`singularity shell -c docker://some image`\ngo to a different terminal and make a copy of the rundir\nmodify the copy and use it as an image to singularity\n\nso i'm not sure `%post` should be completely removed. in fact the command i ran was:\n\n`find /path -name \".wh*\" | xargs rm -f` \n\nthat would be a rather long list of `REMOVE` commands :) ",
                "pretext": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/572#issuecomment-292622874|#572: think about non sudo ways to do a \"sort of\" bootstrap>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491591368.268359",
        "date": 1491591368268
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#572 think about non sudo ways to do a \"sort of\" bootstrap' https://github.com/singularityware/singularity/issues/572 by vsoch",
                "text": "Given that a user wants to do operations on files, any of the following:\n\nâ€¢ add or remove files from a tar that will be added to the container\nâ€¢ add files from local host to container\nâ€¢ add files from web address to container\n\nGiven that we stay true to maintaining permissions (eg if the user can't do it outside of container, shouldn't be able to do it inside) we could have something that looks like a \"non sudo\" bootstrap, but the %post would be removed. Instead, we would just have `%files` `%labels` and `%environment`, like\n\n```bash\nBootstrap: docker\nFrom: ubuntu:latest\n\n%files[add]\n/local/file /path/in/container\n\n%files[remove]\n/path/in/container\n```\n\nWe would just need a way to distinguish the context of the files command. In the example above, I'm using the similar approach that pip does when you install a particular version of a package, eg:\n\npip install package[tag]\n\nWe could also take a Dockerish approach, and just have ADD and REMOVE\n\n```bash\nBootstrap: docker\nFrom: ubuntu:latest\n\n%files\nADD /local/file /path/in/container\nREMOVE /path/in/container\n```\n\nwhich might make sense so the user can specify an ordering, and it fits with our current schema. We would want a user to be able to use the same bootstrap file for (with sudo) which would include `%post` and without sudo, which would not. Cool request by @satra ! Thoughts?",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/vsoch|vsoch>",
                "title": "#572 think about non sudo ways to do a \"sort of\" bootstrap",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/572",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491590979.171293",
        "date": 1491590979171
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/320#issuecomment-292587737|#320: import as non-root no longer possible>",
                "text": "It doesn't seem to work on 5f5e3bc92f3d0aba07c060089585d4bb27da4cef (development branch) with the following: \n```./configure --disable-suid &amp;&amp; make &amp;&amp; sudo make install\n$ singularity create -F trusty.img\nInitializing Singularity image subsystem\nOpening image file: trusty.img\nCreating 768MiB image\nBinding image to loop\nERROR  : The feature you are requesting requires privilege you do not have\nABORT  : Retval = 255\n```\n\nWithout `--disable-suid`, it works, but probably because this path is broken (see #569):\n```$ ./configure &amp;&amp; make  &amp;&amp; sudo make install\n$ singularity create -F trusty.img\nInitializing Singularity image subsystem\nOpening image file: trusty.img\nCreating 768MiB image\nBinding image to loop\nCreating file system within image\nImage is done: trusty.img\n$ SINGULARITY_NOSUID=1 singularity create -F trusty.img\nInitializing Singularity image subsystem\nOpening image file: trusty.img\nCreating 768MiB image\nBinding image to loop\nERROR  : The feature you are requesting requires privilege you do not have\nABORT  : Retval = 255\n```",
                "pretext": "[singularityware/singularity] New comment by flx42 on issue <https://github.com/singularityware/singularity/issues/320#issuecomment-292587737|#320: import as non-root no longer possible>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491583277.220025",
        "date": 1491583277220
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/571#issuecomment-292577822|#571: guidelines for creating readonly docker containers compatible with singularity>",
                "text": "We have been using the --read-only flag for docker run to test this.\nUnfortunately, this flag is ignored on some Docker implementation (for\nexample the one on CircleCI).\n\nOn Fri, Apr 7, 2017 at 8:47 AM, Satrajit Ghosh <mailto:notifications@github.com|notifications@github.com>\nwrote:\n\n&gt; since docker has the ability to overwrite files within the container, we\n&gt; are running into weird issues that would benefit from better container\n&gt; creation. turns out certain python pieces want to write things in some\n&gt; underlying hidden files, and if those things were not cleaned up during the\n&gt; container build process, singularity runs into an error, since everything\n&gt; is read-only.\n&gt; \n&gt; are there any guidelines we can create that would support better container\n&gt; creation/testing between singularity and docker? for example, now i plan to\n&gt; go and make sure there is a line to remove these .wh files from the conda\n&gt; directory.\n&gt; \n&gt; inside singularity container derived from docker&gt; nipypecli\n&gt; Traceback (most recent call last):\n&gt;   File \"/opt/conda/bin/nipypecli\", line 6, in &lt;module&gt;\n&gt;     from pkg_resources import load_entry_point\n&gt;   File \"&lt;frozen importlib._bootstrap&gt;\", line 969, in _find_and_load\n&gt;   File \"&lt;frozen importlib._bootstrap&gt;\", line 958, in _find_and_load_unlocked\n&gt;   File \"&lt;frozen importlib._bootstrap&gt;\", line 664, in _load_unlocked\n&gt;   File \"&lt;frozen importlib._bootstrap&gt;\", line 634, in _load_backward_compatible\n&gt;   File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/_init_.py\", line 2985, in &lt;module&gt;\n&gt;   File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/_init_.py\", line 2971, in _call_aside\n&gt;   File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/_init_.py\", line 2998, in _initialize_master_working_set\n&gt;   File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/_init_.py\", line 651, in _build_master\n&gt;   File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/_init_.py\", line 644, in _init_\n&gt;   File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/_init_.py\", line 700, in add_entry\n&gt;   File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/_init_.py\", line 1990, in find_on_path\n&gt;   File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/_init_.py\", line 2399, in from_location\n&gt;   File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/_init_.py\", line 2740, in _reload_version\n&gt;   File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/_init_.py\", line 2364, in _version_from_file\n&gt;   File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/_init_.py\", line 2532, in _get_metadata\n&gt;   File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/_init_.py\", line 1873, in get_metadata_lines\n&gt;   File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/_init_.py\", line 1861, in get_metadata\n&gt; PermissionError: [Errno 13] Permission denied: '/opt/conda/lib/python3.5/site-packages/.wh.nilearn-0.2.5-py3.5.egg-info'\n&gt; \n&gt; â€”\n&gt; You are receiving this because you are subscribed to this thread.\n&gt; Reply to this email directly, view it on GitHub\n&gt; <https://github.com/singularityware/singularity/issues/571>, or mute the\n&gt; thread\n&gt; <https://github.com/notifications/unsubscribe-auth/AAOkp1MoQIcA6Ry8qfQP6yFQvFMeNnn_ks5rtlqogaJpZM4M3ERo>\n&gt; .",
                "pretext": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/571#issuecomment-292577822|#571: guidelines for creating readonly docker containers compatible with singularity>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491580987.633982",
        "date": 1491580987633
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/570#issuecomment-292577465|#570: misleading error message with singularity shell and docker layers from dev version>",
                "text": "Yeah I worked on this bug about 8 hours yesterday - I think this should fix it:\n\n<https://github.com/singularityware/singularity/pull/568>\n\nThe reason it works the second time is because the download time is shortened, so the token to pull doesn't expire. The issue was a bit of a hairball - for larger downloads we have to stream the data to a file, but we also have to write that to a temporary file that gets renamed (for atomicity). When I added the fix for permissions to go through the first tar and change files with incorrect permissions, we needed another layer of atomicity to again make sure that if it died during that step, the final file on disk wasn't mistakingly used to be finished/correct. So first what was happening (that you are seeing above) is that the token would expire, the function would try to automatically refresh, it does this correctly, but then by way of being inside the function to do the stream, the header credentials wouldn't update. On the second go it would again fail and the catch statement (what you see above) is that it failed, and the message asks about write permission because in most cases (before adding the extra step) failures were due to permissions.\n\nOnce I fixed that, I started getting a new issue, that the tar file that was getting permissions fixed was empty. This was quasi correct - it turns out that it was only partially written, the reason again being when I'm trying to stream the file and it gets interrupted by trying to refresh the token, and it bugged out when it tried to pick up again. I also had implemented it in a way that would use the client's get function to retrieve a \"Unauthorized\" response and then use the Www-Authenticate field in that header to form the response for the new token. I changed that to cache the url on the first go, removing the need for another denied response, and that seemed to fix the inability to pick up the stream. As an extra buffer, I decided to proactively refresh the token before the download of each layer, so we don't reach this case, hopefully ever.\n\nSo yeah, should be fixed. And my soul is a little black and blue from working on that one, lol.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/570#issuecomment-292577465|#570: misleading error message with singularity shell and docker layers from dev version>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491580899.608812",
        "date": 1491580899608
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#571 guidelines for creating readonly docker containers compatible with singularity' https://github.com/singularityware/singularity/issues/571 by satra",
                "text": "since docker has the ability to overwrite files within the container, we are running into weird issues that would benefit from better container creation. turns out certain python pieces want to write things in some underlying hidden files, and if those things were not cleaned up during the container build process, singularity runs into an error, since everything is read-only.\n\nare there any guidelines we can create that would support better container creation/testing between singularity and docker? for example, now i plan to go and make sure there is a line to remove these `.wh` files from the conda directory.\n\n```inside singularity container derived from docker&gt; nipypecli \nTraceback (most recent call last):\n  File \"/opt/conda/bin/nipypecli\", line 6, in &lt;module&gt;\n    from pkg_resources import load_entry_point\n  File \"&lt;frozen importlib._bootstrap&gt;\", line 969, in _find_and_load\n  File \"&lt;frozen importlib._bootstrap&gt;\", line 958, in _find_and_load_unlocked\n  File \"&lt;frozen importlib._bootstrap&gt;\", line 664, in _load_unlocked\n  File \"&lt;frozen importlib._bootstrap&gt;\", line 634, in _load_backward_compatible\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/__init__.py\", line 2985, in &lt;module&gt;\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/__init__.py\", line 2971, in _call_aside\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/__init__.py\", line 2998, in _initialize_master_working_set\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/__init__.py\", line 651, in _build_master\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/__init__.py\", line 644, in __init__\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/__init__.py\", line 700, in add_entry\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/__init__.py\", line 1990, in find_on_path\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/__init__.py\", line 2399, in from_location\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/__init__.py\", line 2740, in _reload_version\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/__init__.py\", line 2364, in _version_from_file\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/__init__.py\", line 2532, in _get_metadata\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/__init__.py\", line 1873, in get_metadata_lines\n  File \"/opt/conda/lib/python3.5/site-packages/setuptools-27.2.0-py3.5.egg/pkg_resources/__init__.py\", line 1861, in get_metadata\nPermissionError: [Errno 13] Permission denied: '/opt/conda/lib/python3.5/site-packages/.wh.nilearn-0.2.5-py3.5.egg-info'\n```",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/satra|satra>",
                "title": "#571 guidelines for creating readonly docker containers compatible with singularity",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/571",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491580072.373446",
        "date": 1491580072373
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#570 misleading error message with singularity shell and docker layers from dev version' https://github.com/singularityware/singularity/issues/570 by satra",
                "text": "seems like the python client is failing silently for some reason and giving an different error. some of these layers are quite large - 1-3G. takes 4 tries to get to a shell.\n\nsingularity version: singularityware/singularity@df5a3815\n\nwe have a ton of memory on our nodes (128G - 1TB), so `/dev/shm` should be just fine.\n\n```\n$ which singularity\n/cm/shared/openmind/singularity/singularity-dev-2gdf5a3815/bin/singularity\n\n$ singularity shell -c docker://nipype/workshops:latest-nofsspm\nINFO:python:Docker image path: index.docker.io/nipype/workshops:latest-nofsspm\nINFO:python:Cache folder set to /dev/shm/satra/test/docker\nINFO:python:Downloading layer sha256:693502eb7dfbc6b94964ae66ebc72d3e32facd981c72995b09794f1e87bac184\nINFO:python:Downloading layer sha256:a3782c2efb4188af8b56f4001efae6f76b337d21f3c1b58c73d484b1cf1f4b72\nINFO:python:Downloading layer sha256:9cb32b776a4064ce43ac5e6cc5abd317a5dba0fd5a0d842c21e73587b468d804\nINFO:python:Downloading layer sha256:e539f5722cd5086ddd1b5bf2324fe74e9e4f398cc9298b9f9d6f31ac5a7ab8bc\nINFO:python:Downloading layer sha256:b4690d4047c60224d5230518591790ef488f7b77775ce8e4dfe202bf08bca030\nINFO:python:Downloading layer sha256:121dc465f5c667aae08854250881e709b95511d9767551675da33f2801a77501\nINFO:python:Downloading layer sha256:c352772bbcfd800bdfb76ce627eb1a18b2cf5e70411ba0f74ea7672ba3d68047\nINFO:python:Downloading layer sha256:f77641ce4be4e66cce57d681e10f6081b91889c32879eb3f3d1f531623529c36\nINFO:python:Downloading layer sha256:f7049a728582f6229297ba859bb208cff4da8ff9800c8600123eb22475ebbc50\nINFO:python:Downloading layer sha256:e7eab4831b3cc3d80123b74d1e35a92917c1b3347a44b9d370bfb2d54da2f31d\nINFO:python:Downloading layer sha256:0261e4240ad93151fcc899e01463b8f88740eb009f09b57a230e1817b2c48605\nINFO:python:Downloading layer sha256:552b2ece3105d414f48729a850c116d29154cd3b26933a294912f6ddcb2df6ba\nINFO:python:Downloading layer sha256:668913b4d476a82dd4f3bbfb7d38e37bca037831ae354755860922917720e4cd\nINFO:python:Downloading layer sha256:bcfd165a9cf9cbaeca20efbee8119b3db948c9881323d7b7e69e7d0d968dbd67\nINFO:python:Downloading layer sha256:6d1eeec7f0f4532173724dba3a8223f6aaee86e2786e83f7d759cfaa5ca7b490\nINFO:python:Downloading layer sha256:122140fbe2b64a0f367bc7ca700ddaa6ae1f24623d70a64ecce9ebaeed1eeca1\nINFO:python:Downloading layer sha256:531d4f0726fbef60fcf72e77de18697451639004ab5f34d19a92598dc3885f37\nERROR:python:Error downloading <https://index.docker.io/v2/nipype/workshops/blobs/sha256:531d4f0726fbef60fcf72e77de18697451639004ab5f34d19a92598dc3885f37,> exiting.\nERROR:python:Error downloading <https://index.docker.io/v2/nipype/workshops/blobs/sha256:531d4f0726fbef60fcf72e77de18697451639004ab5f34d19a92598dc3885f37>. Do you have permission to write to /dev/shm/satra/test/docker?\n\n[10:17][7.67][28%]satra@openmind7:satra$ touch test/docker/foo\n\n[10:45][7.04][27%]satra@openmind7:satra$ singularity shell -c docker://nipype/workshops:latest-nofsspm\nINFO:python:Docker image path: index.docker.io/nipype/workshops:latest-nofsspm\nINFO:python:Cache folder set to /dev/shm/satra/test/docker\nINFO:python:Downloading layer sha256:531d4f0726fbef60fcf72e77de18697451639004ab5f34d19a92598dc3885f37\nINFO:python:Downloading layer sha256:b110a7419358978df12900ac31eb3b03f6abf5da13b37e088542aca86d16b386\nINFO:python:Downloading layer sha256:3cfe7bb717b39eef76e271aa92852ec863a60224d7d93acf3456729fc9632bad\nINFO:python:Downloading layer sha256:343ed7d1fb35152c7a8d5258b9841340ad23af632bea49906848a52c9e423510\nINFO:python:Downloading layer sha256:d06333e76d863cd2b21f5495d238b66d7ca68fdd2306327eac08568bdf99cbe0\nINFO:python:Downloading layer sha256:f9e1cdd2a1b1f8352b05d6f0304acb39d8d6e380f153b27c8252ee233703b2e3\nINFO:python:Downloading layer sha256:a37a994c1d57e1b5902234c127193fa9d307c10ea9ceeebc3e0af044480f165b\nINFO:python:Downloading layer sha256:2bcbbe8f5291fdae09111bdb20cec7421c80af321e0c535e5fd4b158369ad920\nINFO:python:Downloading layer sha256:2dcbaad6459ecec5a9d41c2b9a2c57522987c6e8ff466f5b56cd77a04e7de4e8\nERROR:python:Error downloading <https://index.docker.io/v2/nipype/workshops/blobs/sha256:2dcbaad6459ecec5a9d41c2b9a2c57522987c6e8ff466f5b56cd77a04e7de4e8,> exiting.\nERROR:python:Error downloading <https://index.docker.io/v2/nipype/workshops/blobs/sha256:2dcbaad6459ecec5a9d41c2b9a2c57522987c6e8ff466f5b56cd77a04e7de4e8>. Do you have permission to write to /dev/shm/satra/test/docker?\n\n[10:56][8.60][28%]satra@openmind7:satra$ singularity shell -c docker://nipype/workshops:latest-nofsspm\nINFO:python:Docker image path: index.docker.io/nipype/workshops:latest-nofsspm\nINFO:python:Cache folder set to /dev/shm/satra/test/docker\nINFO:python:Downloading layer sha256:2dcbaad6459ecec5a9d41c2b9a2c57522987c6e8ff466f5b56cd77a04e7de4e8\nINFO:python:Downloading layer sha256:6957c1f954587fb755ee5761584f74928907b0917fabd628db619ff0500ab4b7\nINFO:python:Downloading layer sha256:c0736cf2aeb66bd0122d4f50cebf8e3d171a9321e27b6b890eabf35121a9c423\nINFO:python:Downloading layer sha256:a0a7b46acb3bb219e207d6345fc0711631c0770d5543f47647d11c6b7a912c5d\nERROR:python:Error downloading <https://index.docker.io/v2/nipype/workshops/blobs/sha256:a0a7b46acb3bb219e207d6345fc0711631c0770d5543f47647d11c6b7a912c5d,> exiting.\nERROR:python:Error downloading <https://index.docker.io/v2/nipype/workshops/blobs/sha256:a0a7b46acb3bb219e207d6345fc0711631c0770d5543f47647d11c6b7a912c5d>. Do you have permission to write to /dev/shm/satra/test/docker?\n\n[11:24][7.42][26%]satra@openmind7:satra$ singularity shell -c docker://nipype/workshops:latest-nofsspm\nINFO:python:Docker image path: index.docker.io/nipype/workshops:latest-nofsspm\nINFO:python:Cache folder set to /dev/shm/satra/test/docker\nINFO:python:Downloading layer sha256:a0a7b46acb3bb219e207d6345fc0711631c0770d5543f47647d11c6b7a912c5d\nINFO:python:Downloading layer sha256:20b490bfcc2eed2e1c1fe0db8687cd02e7f2501b28f995bf3e6b944883d32585\nINFO:python:Downloading layer sha256:bf5ac7135667870e9c8747703bdf537fc83379bd5b75fccccb4be66f4086a5ac\nINFO:python:Downloading layer sha256:972ce5ee8d62cdf41383445ac5025bc8085bd2b22543ca3c84d1f4e407b0ad6a\nImporting: base Singularity environment\nExploding layer: sha256:693502eb7dfbc6b94964ae66ebc72d3e32facd981c72995b09794f1e87bac184.tar.gz\nExploding layer: sha256:a3782c2efb4188af8b56f4001efae6f76b337d21f3c1b58c73d484b1cf1f4b72.tar.gz\nExploding layer: sha256:9cb32b776a4064ce43ac5e6cc5abd317a5dba0fd5a0d842c21e73587b468d804.tar.gz\nExploding layer: sha256:e539f5722cd5086ddd1b5bf2324fe74e9e4f398cc9298b9f9d6f31ac5a7ab8bc.tar.gz\nExploding layer: sha256:b4690d4047c60224d5230518591790ef488f7b77775ce8e4dfe202bf08bca030.tar.gz\nExploding layer: sha256:121dc465f5c667aae08854250881e709b95511d9767551675da33f2801a77501.tar.gz\nExploding layer: sha256:c352772bbcfd800bdfb76ce627eb1a18b2cf5e70411ba0f74ea7672ba3d68047.tar.gz\nExploding layer: sha256:f77641ce4be4e66cce57d681e10f6081b91889c32879eb3f3d1f531623529c36.tar.gz\nExploding layer: sha256:f7049a728582f6229297ba859bb208cff4da8ff9800c8600123eb22475ebbc50.tar.gz\nExploding layer: sha256:e7eab4831b3cc3d80123b74d1e35a92917c1b3347a44b9d370bfb2d54da2f31d.tar.gz\nExploding layer: sha256:0261e4240ad93151fcc899e01463b8f88740eb009f09b57a230e1817b2c48605.tar.gz\nExploding layer: sha256:552b2ece3105d414f48729a850c116d29154cd3b26933a294912f6ddcb2df6ba.tar.gz\nExploding layer: sha256:668913b4d476a82dd4f3bbfb7d38e37bca037831ae354755860922917720e4cd.tar.gz\nExploding layer: sha256:bcfd165a9cf9cbaeca20efbee8119b3db948c9881323d7b7e69e7d0d968dbd67.tar.gz\nExploding layer: sha256:6d1eeec7f0f4532173724dba3a8223f6aaee86e2786e83f7d759cfaa5ca7b490.tar.gz\nExploding layer: sha256:122140fbe2b64a0f367bc7ca700ddaa6ae1f24623d70a64ecce9ebaeed1eeca1.tar.gz\nExploding layer: sha256:531d4f0726fbef60fcf72e77de18697451639004ab5f34d19a92598dc3885f37.tar.gz\nExploding layer: sha256:b110a7419358978df12900ac31eb3b03f6abf5da13b37e088542aca86d16b386.tar.gz\nExploding layer: sha256:3cfe7bb717b39eef76e271aa92852ec863a60224d7d93acf3456729fc9632bad.tar.gz\nExploding layer: sha256:343ed7d1fb35152c7a8d5258b9841340ad23af632bea49906848a52c9e423510.tar.gz\nExplodiâ€¦",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/satra|satra>",
                "title": "#570 misleading error message with singularity shell and docker layers from dev version",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/570",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491579799.296032",
        "date": 1491579799296
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by sazearte on issue <https://github.com/singularityware/singularity/issues/559#issuecomment-292472294|#559: Unrecognized Distribution type: yum>",
                "text": "i not see problem, this is my debug result:\n`\nenabling debugging\nending argument loop\nExec'ing: /usr/local/libexec/singularity/cli/bootstrap.exec myimage.imgVERBOSE [U=0,P=17473]      message.c:52:init()                        : Set messagelevel to: 5\nVERBOSE [U=0,P=17473]      image-mount.c:53:main()                    : Obtaining container name from environment variable\nDEBUG   [U=0,P=17473]      util/util.c:102:envar_path()               : Checking environment variable is valid path: 'SINGULARITY_IMAGE'\nVERBOSE [U=0,P=17473]      util/util.c:50:envar()                     : Checking input from environment: 'SINGULARITY_IMAGE'\nDEBUG   [U=0,P=17473]      util/util.c:52:envar()                     : Checking environment variable is defined: SINGULARITY_IMAGE\nDEBUG   [U=0,P=17473]      util/util.c:58:envar()                     : Checking environment variable length (&lt;= 4096): SINGULARITY_IMAGE\nDEBUG   [U=0,P=17473]      util/util.c:64:envar()                     : Checking environment variable has allowed characters: SINGULARITY_IMAGE\nVERBOSE [U=0,P=17473]      util/util.c:87:envar()                     : Obtained input from environment 'SINGULARITY_IMAGE' = 'myimage.img'\nDEBUG   [U=0,P=17473]      privilege.c:66:singularity_priv_init()     : Called singularity_priv_init(void)\nVERBOSE [U=0,P=17473]      util/util.c:50:envar()                     : Checking input from environment: 'SINGULARITY_TARGET_UID'\nDEBUG   [U=0,P=17473]      util/util.c:52:envar()                     : Checking environment variable is defined: SINGULARITY_TARGET_UID\nVERBOSE [U=0,P=17473]      util/util.c:54:envar()                     : Environment variable is NULL: SINGULARITY_TARGET_UID\nVERBOSE [U=0,P=17473]      util/util.c:50:envar()                     : Checking input from environment: 'SINGULARITY_TARGET_GID'\nDEBUG   [U=0,P=17473]      util/util.c:52:envar()                     : Checking environment variable is defined: SINGULARITY_TARGET_GID\nVERBOSE [U=0,P=17473]      util/util.c:54:envar()                     : Environment variable is NULL: SINGULARITY_TARGET_GID\nDEBUG   [U=0,P=17473]      privilege.c:131:singularity_priv_init()    : Returning singularity_priv_init(void)\nVERBOSE [U=0,P=17473]      config_parser.c:43:singularity_config_open(): Opening configuration file: /usr/local/etc/singularity/singularity.conf\nDEBUG   [U=0,P=17473]      sessiondir.c:61:singularity_sessiondir_init(): Checking Singularity configuration for 'sessiondir prefix'\nDEBUG   [U=0,P=17473]      config_parser.c:62:singularity_config_rewind(): Rewinding configuration file\nDEBUG   [U=0,P=17473]      util/util.c:102:envar_path()               : Checking environment variable is valid path: 'SINGULARITY_SESSIONDIR'\nVERBOSE [U=0,P=17473]      util/util.c:50:envar()                     : Checking input from environment: 'SINGULARITY_SESSIONDIR'\nDEBUG   [U=0,P=17473]      util/util.c:52:envar()                     : Checking environment variable is defined: SINGULARITY_SESSIONDIR\nVERBOSE [U=0,P=17473]      util/util.c:54:envar()                     : Environment variable is NULL: SINGULARITY_SESSIONDIR\nDEBUG   [U=0,P=17473]      config_parser.c:80:singularity_config_get_value(): Called singularity_config_get_value(sessiondir prefix)\nDEBUG   [U=0,P=17473]      config_parser.c:96:singularity_config_get_value(): No configuration file entry found for 'sessiondir prefix'\nDEBUG   [U=0,P=17473]      sessiondir.c:82:singularity_sessiondir_init(): Set sessiondir to: /tmp/.singularity-session-0.64768.872420579\nDEBUG   [U=0,P=17473]      util/file.c:245:s_mkpath()                 : Creating directory: /tmp/.singularity-session-0.64768.872420579\nDEBUG   [U=0,P=17473]      sessiondir.c:98:singularity_sessiondir_init(): Opening sessiondir file descriptor\nDEBUG   [U=0,P=17473]      sessiondir.c:104:singularity_sessiondir_init(): Setting shared flock() on session directory\nDEBUG   [U=0,P=17473]      util/util.c:92:envar_defined()             : Checking if environment variable is defined: SINGULARITY_NOSESSIONCLEANUP\nVERBOSE [U=0,P=17473]      util/util.c:94:envar_defined()             : Environment variable is undefined: SINGULARITY_NOSESSIONCLEANUP\nDEBUG   [U=0,P=17473]      util/util.c:92:envar_defined()             : Checking if environment variable is defined: SINGULARITY_NOCLEANUP\nVERBOSE [U=0,P=17473]      util/util.c:94:envar_defined()             : Environment variable is undefined: SINGULARITY_NOCLEANUP\nVERBOSE [U=0,P=17473]      fork.c:74:singularity_fork()               : Forking child process\nVERBOSE [U=0,P=17473]      fork.c:90:singularity_fork()               : Hello from parent process\nDEBUG   [U=0,P=17473]      fork.c:109:singularity_fork()              : Assigning sigaction()s\nDEBUG   [U=0,P=17473]      fork.c:140:singularity_fork()              : Creating generic signal pipes\nDEBUG   [U=0,P=17473]      fork.c:148:singularity_fork()              : Creating sigcld signal pipes\nDEBUG   [U=0,P=17473]      fork.c:170:singularity_fork()              : Waiting on signal from watchdog\nVERBOSE [U=0,P=17474]      fork.c:78:singularity_fork()               : Hello from child process\nDEBUG   [U=0,P=17474]      fork.c:81:singularity_fork()               : Closing watchdog write pipe\nDEBUG   [U=0,P=17474]      fork.c:86:singularity_fork()               : Child process is returning control to process thread\nVERBOSE [U=0,P=17474]      user.c:66:singularity_ns_user_unshare()    : Not virtualizing USER namespace: running as root\nDEBUG   [U=0,P=17474]      config_parser.c:62:singularity_config_rewind(): Rewinding configuration file\nDEBUG   [U=0,P=17474]      config_parser.c:104:singularity_config_get_bool(): Called singularity_config_get_bool(mount slave, 1)\nDEBUG   [U=0,P=17474]      config_parser.c:80:singularity_config_get_value(): Called singularity_config_get_value(mount slave)\nVERBOSE [U=0,P=17474]      config_parser.c:88:singularity_config_get_value(): Got config key mount slave (= 'yes')\nDEBUG   [U=0,P=17474]      config_parser.c:110:singularity_config_get_bool(): Return singularity_config_get_bool(mount slave, 1) = 1\nDEBUG   [U=0,P=17474]      privilege.c:147:singularity_priv_escalate(): Running as root, not changing privileges\nDEBUG   [U=0,P=17474]      mnt.c:54:singularity_ns_mnt_unshare()      : Virtualizing FS namespace\nDEBUG   [U=0,P=17474]      mnt.c:61:singularity_ns_mnt_unshare()      : Virtualizing mount namespace\nDEBUG   [U=0,P=17474]      mnt.c:70:singularity_ns_mnt_unshare()      : Making mounts slave\nDEBUG   [U=0,P=17474]      privilege.c:174:singularity_priv_drop()    : Running as root, not changing privileges\nDEBUG   [U=0,P=17474]      rootfs.c:71:singularity_rootfs_init()      : Checking on container source type\nDEBUG   [U=0,P=17474]      config_parser.c:62:singularity_config_rewind(): Rewinding configuration file\nDEBUG   [U=0,P=17474]      rootfs.c:80:singularity_rootfs_init()      : Figuring out where to mount Singularity container\nDEBUG   [U=0,P=17474]      config_parser.c:80:singularity_config_get_value(): Called singularity_config_get_value(container dir)\nVERBOSE [U=0,P=17474]      config_parser.c:88:singularity_config_get_value(): Got config key container dir (= '/var/singularity/mnt')\nVERBOSE [U=0,P=17474]      rootfs.c:86:singularity_rootfs_init()      : Set image mount path to: /var/singularity/mnt\nDEBUG   [U=0,P=17474]      image.c:53:rootfs_image_init()             : Inializing container rootfs image subsystem\nDEBUG   [U=0,P=17474]      util/util.c:92:envar_defined()             : Checking if environment variable is defined: SINGULARITY_WRITABLE\nVERBOSE [U=0,P=17474]      util/util.c:97:envar_defined()             : Environment variable is defined: SINGULARITY_WRITABLE\nDEBUG   [U=0,P=17474]      util/util.c:92:envar_defined()             : Checking if environment variable is defined: SINGULARITY_NOIMAGELOCK\nVERBOSE [U=0,P=17474]      util/util.c:97:envar_defined()             : Environment variable is defined: SINGULARITY_NOIMAGELOCK\nDEBUG   [U=0,P=17474]      image.c:76:rootfsâ€¦",
                "pretext": "[singularityware/singularity] New comment by sazearte on issue <https://github.com/singularityware/singularity/issues/559#issuecomment-292472294|#559: Unrecognized Distribution type: yum>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491552946.966651",
        "date": 1491552946966
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by martbhell on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-292448572|#488: [Proposal] Include syslog support>",
                "text": "Yep. I'd like to track who runs what :)",
                "pretext": "[singularityware/singularity] New comment by martbhell on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-292448572|#488: [Proposal] Include syslog support>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491544737.964437",
        "date": 1491544737964
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#569 [development] \"allow setuid = no\" doesn't drop privileges' https://github.com/singularityware/singularity/issues/569 by flx42",
                "text": "With 5f5e3bc92f3d0aba07c060089585d4bb27da4cef  (development branch) and a small change in the configuration file:\n```-#define ALLOW_SETUID_DEFAULT 1\n+#define ALLOW_SETUID_DEFAULT 0\n```\nCompiled with `./autogen.sh &amp;&amp; ./configure &amp;&amp; make -j12 &amp;&amp; sudo make install`.\n\nLaunching a container doesn't work (log shorten to highlight the interesting parts):\n```$ singularity -vvv shell docker://ubuntu:16.04\n[...]\nVERBOSE: Running SUID program workflow\nVERBOSE: Checking program has appropriate permissions\nVERBOSE: Checking configuration file is properly owned by root\nVERBOSE: Checking if singularity.conf allows us to run as suid\nVERBOSE: Invoking non-SUID program flow: /usr/local/libexec/singularity/bin/action\nVERBOSE: Set messagelevel to: 4\nVERBOSE: Initialize configuration file: /usr/local/etc/singularity/singularity.conf\nVERBOSE: Got config key allow setuid = 'no'\n[...]\nVERBOSE: Running NON-SUID program workflow\n[...]\nVERBOSE: Invoking the user namespace\nERROR  : Failed to write to UID map /proc/3433/uid_map: Operation not permitted\nABORT  : Retval = 255\n```\nThe SUID Singularity binary is calling the non-SUID binary.\nI found that the effective UID is 0 before the `unshare(CLONE_NEWUSER)`, so probably the SUID program didn't drop privileges before calling the non-SUID program.\n\nThen, my guess is that it fails because you are trying to set a mapping with a UID (1000) that is different from the parent user namespace UID (0), and we don't have CAP_SETUID, from man user_namespaces:\n```The data written to uid_map (gid_map) must consist of a\nsingle line that maps the writing process's effective user\nID (group ID) in the parent user namespace to a user ID\n(group ID) in the user namespace.\n```\n\nNote that the following works:\n```SINGULARITY_NOSUID=1 singularity shell docker://ubuntu:16.04\n```\nIn this case, the `shell.exec` script dispatches immediately to the non-SUID binary. It's quite unfortunate that we have two different code paths for essentially the same option.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/flx42|flx42>",
                "title": "#569 [development] \"allow setuid = no\" doesn't drop privileges",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/569",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491540855.676743",
        "date": 1491540855676
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-292418472|#488: [Proposal] Include syslog support>",
                "text": "Not sure if this is related, but we could easily add to our logger to write to some log file in the container, so at least we'd have a log for its generation. I'm thinking you are looking for a log for when it's running? I'll think about this too :) Although I'm sure @gmkurtzer already knows the answer!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-292418472|#488: [Proposal] Include syslog support>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491535409.271979",
        "date": 1491535409271
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by martbhell on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-292416865|#488: [Proposal] Include syslog support>",
                "text": "I'm assuming it's because the init script runs before those variables are set.",
                "pretext": "[singularityware/singularity] New comment by martbhell on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-292416865|#488: [Proposal] Include syslog support>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491534975.238420",
        "date": 1491534975238
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#568 Fixing the fuggalicious download of Docker layers error' https://github.com/singularityware/singularity/pull/568 by vsoch",
                "text": "```vanessa@som-ctp:/tmp$ sudo singularity import /tmp/openfoam4.img docker://openfoam/openfoam-dev-paraview50\nDocker image path: index.docker.io/openfoam/openfoam-dev-paraview50:latest\nCache folder set to /root/.singularity/docker\nDownloading layer sha256:b3e1c725a85f0953e81815b7c7aabfad9ebfd90af53f99248981282b8045d787\nDownloading layer sha256:4daad8bdde31f5969d6a44800e993a911bed25853b2f89417b07ce7f0ac67714\nDownloading layer sha256:63fe8c0068a811103c702452985368fc99014f83b5f0151cf631644f13f383b2\nDownloading layer sha256:4a70713c436f2350e8a9f1c1e6c823290f331254c6c21d5657056499d8575608\nDownloading layer sha256:bd842a2105a862f62ba4ad726531029be49046c290307e9c07a688c89f4606e6\nDownloading layer sha256:d271dea99f9b0c0d7ca4ec42dab72940b8453553e2b6d6cbd51f6f37c8fbba54\nDownloading layer sha256:51b80fb05456d18b3d955641d6d659af650bf0216a87ecdcefe646f154335f50\nDownloading layer sha256:10d5df1b73290bd989a8b34ed09ecbe9537f6b550729966dedbd8e63a2efe665\nDownloading layer sha256:4158a614fb31630fe911ac9aa5979064f40a0004bd919ac4253ba329e0615328\nDownloading layer sha256:10054fe93947726471d66cc05253305711853377be5b31a20be04105f1056c04\nDownloading layer sha256:6093007892f8f7661ab5df2c86a797fd1e08b92bebe6a497341b7b1792b89c7c\nDownloading layer sha256:cbce082dc035445d122f8d0b73f4533368bce0129641813c905f1e283daaf48e\nDownloading layer sha256:0c4fc6999932fa578550feeb9ac65cd737b9b35a0c881f546c014c550b0d519d\nDownloading layer sha256:f283712222243f31a88c07a7a70508e5d0a3b10945a27de3be3032e45c522871\nDownloading layer sha256:f0da97081c343959c534c9a8387b39da0faf262c8c099243cc6f385e3223a70b\nDownloading layer sha256:6cdd45f2c27a15ba0908b59c1cbc108ccf07d3491890d6c8499818b8ceb681cc\nDownloading layer sha256:ac7dd6dc394819d1b06249cce04c098f2f65dcb952b056383fe421be28a4b820\nImporting: base Singularity environment\nImporting: /root/.singularity/docker/sha256:b3e1c725a85f0953e81815b7c7aabfad9ebfd90af53f99248981282b8045d787.tar.gz\nImporting: /root/.singularity/docker/sha256:4daad8bdde31f5969d6a44800e993a911bed25853b2f89417b07ce7f0ac67714.tar.gz\nImporting: /root/.singularity/docker/sha256:63fe8c0068a811103c702452985368fc99014f83b5f0151cf631644f13f383b2.tar.gz\nImporting: /root/.singularity/docker/sha256:4a70713c436f2350e8a9f1c1e6c823290f331254c6c21d5657056499d8575608.tar.gz\nImporting: /root/.singularity/docker/sha256:bd842a2105a862f62ba4ad726531029be49046c290307e9c07a688c89f4606e6.tar.gz\nImporting: /root/.singularity/docker/sha256:d271dea99f9b0c0d7ca4ec42dab72940b8453553e2b6d6cbd51f6f37c8fbba54.tar.gz\nImporting: /root/.singularity/docker/sha256:51b80fb05456d18b3d955641d6d659af650bf0216a87ecdcefe646f154335f50.tar.gz\nImporting: /root/.singularity/docker/sha256:10d5df1b73290bd989a8b34ed09ecbe9537f6b550729966dedbd8e63a2efe665.tar.gz\nImporting: /root/.singularity/docker/sha256:4158a614fb31630fe911ac9aa5979064f40a0004bd919ac4253ba329e0615328.tar.gz\nImporting: /root/.singularity/docker/sha256:10054fe93947726471d66cc05253305711853377be5b31a20be04105f1056c04.tar.gz\nImporting: /root/.singularity/docker/sha256:6093007892f8f7661ab5df2c86a797fd1e08b92bebe6a497341b7b1792b89c7c.tar.gz\nImporting: /root/.singularity/docker/sha256:cbce082dc035445d122f8d0b73f4533368bce0129641813c905f1e283daaf48e.tar.gz\nImporting: /root/.singularity/docker/sha256:0c4fc6999932fa578550feeb9ac65cd737b9b35a0c881f546c014c550b0d519d.tar.gz\nImporting: /root/.singularity/docker/sha256:f283712222243f31a88c07a7a70508e5d0a3b10945a27de3be3032e45c522871.tar.gz\nImporting: /root/.singularity/docker/sha256:f0da97081c343959c534c9a8387b39da0faf262c8c099243cc6f385e3223a70b.tar.gz\nImporting: /root/.singularity/docker/sha256:6cdd45f2c27a15ba0908b59c1cbc108ccf07d3491890d6c8499818b8ceb681cc.tar.gz\nImporting: /root/.singularity/docker/sha256:ac7dd6dc394819d1b06249cce04c098f2f65dcb952b056383fe421be28a4b820.tar.gz\nImporting: /root/.singularity/metadata/sha256:872dc4128a26099f44ec4c35a37efe8cbc035554e2b73be798044558e5355d93.tar.gz\n```\n\nso fat.\n\nI need to start heading home, will check the PR when I get there!\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#568 Fixing the fuggalicious download of Docker layers error",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/568",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491533196.094092",
        "date": 1491533196094
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292398982|#567: Is expand functioning?>",
                "text": "ok! Still super speedy!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292398982|#567: Is expand functioning?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491530511.856182",
        "date": 1491530511856
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292398738|#567: Is expand functioning?>",
                "text": "I think this is fixed, but I rushed through it. Will test and write a test for it tomorrow.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292398738|#567: Is expand functioning?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491530446.849983",
        "date": 1491530446849
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292393243|#567: Is expand functioning?>",
                "text": "Ahh, good catch. Adding that to my list!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/567#issuecomment-292393243|#567: Is expand functioning?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491529162.727357",
        "date": 1491529162727
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#567 Is expand functioning?' https://github.com/singularityware/singularity/issues/567 by vsoch",
                "text": "I made need to update my version (something I can't do as I have something actively running that would be bad to lose) but with a quick test, expand doesn't seem to be working - isn't this an old file that we don't have anymore, or it is located elsewhere?\n\n```sudo singularity expand ubuntu.img \nExpanding existing image with a size of 512MiB...\n/usr/local/libexec/singularity/cli/expand.exec: line 94: /usr/local/libexec/singularity/bin/simage: No such file or directory\n```",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/vsoch|vsoch>",
                "title": "#567 Is expand functioning?",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/567",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491522321.033406",
        "date": 1491522321033
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/548|#548 gpg command works in 2.2.1 but fails in latest development (94446cc)> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/548|#548 gpg command works in 2.2.1 but fails in latest development (94446cc)> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491514970.949635",
        "date": 1491514970949
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-292332800|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "text": "FANTASTIC! Thanks @GodloveD! :)",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-292332800|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491514970.949628",
        "date": 1491514970949
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/566|#566 bind instruction missing from main singularity.help> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/566|#566 bind instruction missing from main singularity.help> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491510962.034090",
        "date": 1491510962034
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/566#issuecomment-292310126|#566: bind instruction missing from main singularity.help>",
                "text": "ok this is fixed up! It was correct to not be there! and we removed the CONTAINER OPTIONS from the main singularity.help",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/566#issuecomment-292310126|#566: bind instruction missing from main singularity.help>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491510962.034059",
        "date": 1491510962034
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-292305784|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "text": "That is so much better than the way it looks in Chrome (happy cat skull thing)!",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-292305784|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491510254.851903",
        "date": 1491510254851
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-292302756|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "image_url": "https://cloud.githubusercontent.com/assets/814322/24773693/256927da-1ae4-11e7-96ff-bba2def52ad3.png",
                "image_width": 87,
                "image_height": 50,
                "image_bytes": 1683,
                "text": "this emoticon rendered amazing in my email :) \n<https://cloud.githubusercontent.com/assets/814322/24773693/256927da-1ae4-11e7-96ff-bba2def52ad3.png|image>",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-292302756|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491509689.709463",
        "date": 1491509689709
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-292294366|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "text": "I tested the latest as of 15 minutes ago, but now I'm behind by 5 commits!   :smile_cat: \n\nAnyway, I can confirm that this issue is fixed in <https://github.com/singularityware/singularity/commit/f4cd773cac7475827dca00c1b7df8328f7590f92> .  Thanks very much and feel free to close!",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-292294366|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491508164.317776",
        "date": 1491508164317
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/565|#565 Simplification of logger> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/565|#565 Simplification of logger> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491507373.125321",
        "date": 1491507373125
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/565#issuecomment-292289796|#565: Simplification of logger>",
                "text": "This is working great, I'm merging it! Thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/565#issuecomment-292289796|#565: Simplification of logger>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491507367.124184",
        "date": 1491507367124
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/556#issuecomment-292287896|#556: `singularity shell` Segfault in action.c in development branch 10f8821>",
                "text": "Excellent, thanks for the help!\n\nGreg",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/556#issuecomment-292287896|#556: `singularity shell` Segfault in action.c in development branch 10f8821>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491507033.040510",
        "date": 1491507033040
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/559#issuecomment-292287698|#559: Unrecognized Distribution type: yum>",
                "text": "Can you rerun the bootstrap with the debug flag (e.g. `singularity -d bootstrap ...`) and send the output?\n\nI think there is an installation error, that should be working.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/559#issuecomment-292287698|#559: Unrecognized Distribution type: yum>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491506994.029823",
        "date": 1491506994029
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/558#issuecomment-292286973|#558: Cannot run post scriptlet when using /bin/sh is a symlink (busybox)>",
                "text": "Can you test with the development github branch? I think this is fixed, but I would feel better with your confirmation.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/558#issuecomment-292286973|#558: Cannot run post scriptlet when using /bin/sh is a symlink (busybox)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491506870.997810",
        "date": 1491506870997
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-292286653|#488: [Proposal] Include syslog support>",
                "text": "Hi @martbhell \n\nCan you elaborate on that?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-292286653|#488: [Proposal] Include syslog support>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491506830.987267",
        "date": 1491506830987
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-292284212|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "text": "OK, now I really think I fixed it. Can you retest the latest development branch?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-292284212|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491506397.878107",
        "date": 1491506397878
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/565#issuecomment-292260656|#565: Simplification of logger>",
                "text": "@gmkurtzer ready for review!",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/565#issuecomment-292260656|#565: Simplification of logger>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491502321.776086",
        "date": 1491502321776
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#566 bind instruction missing from main singularity.help' https://github.com/singularityware/singularity/issues/566 by vsoch",
                "text": "It's probably wanted commonly enough to be there, eg:\n\n```    -b  --bind     bind a local path $HOST:$CONTAINER\n```\nand the args added to the main might also need to be added to the other command specific sections.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/vsoch|vsoch>",
                "title": "#566 bind instruction missing from main singularity.help",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/566",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491499691.045055",
        "date": 1491499691045
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/565#issuecomment-292221335|#565: Simplification of logger>",
                "text": "you know, we could potentially do some cool other stuff - a logger is essentially the image's voice / speaking when it's being built, and we could send that to different places where the image might want to communicate (eg, as a post to some http based endpoint if the user has an API, to a socket of some kind, or as a communication at the end of a build or run to trigger the start of another process). We could also save the build log in the metadata folder, so there is a record of how it's built, and you could use a similar function to write to it as is done for the json labels in C. @gmkurtzer thoughts?",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/565#issuecomment-292221335|#565: Simplification of logger>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491494421.576625",
        "date": 1491494421576
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/565#issuecomment-292219661|#565: Simplification of logger>",
                "text": "ah yes, this is also updating singularity.help, and making the metadata write to a different folder in cache! This should close #561  and #562 \n\n```Importing: /home/vanessa/.singularity/metadata/sha256:e80c0a66921eec6dd79953e0a070d6e3aaba56ed01a002d7d53c3ac48913813b.tar.gz\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/565#issuecomment-292219661|#565: Simplification of logger>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491494109.481119",
        "date": 1491494109481
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/556|#556 `singularity shell` Segfault in action.c in development branch 10f8821> by <https://github.com/dpjensen|dpjensen>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/556|#556 `singularity shell` Segfault in action.c in development branch 10f8821> by <https://github.com/dpjensen|dpjensen>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491494000.448627",
        "date": 1491494000448
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by dpjensen on issue <https://github.com/singularityware/singularity/issues/556#issuecomment-292219074|#556: `singularity shell` Segfault in action.c in development branch 10f8821>",
                "text": "Tested against libc 2.23 and 2.24, just to be sure. All Working. Thanks a bunch! ",
                "pretext": "[singularityware/singularity] New comment by dpjensen on issue <https://github.com/singularityware/singularity/issues/556#issuecomment-292219074|#556: `singularity shell` Segfault in action.c in development branch 10f8821>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491494000.448527",
        "date": 1491494000448
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#565 Simplification of logger' https://github.com/singularityware/singularity/pull/565 by vsoch",
                "text": "This is a simplification of the logger, to not use python's and to match the Singularity C code, allowing for a bit more flexibility in functionality.  It works as follows:\n\nHere is the standard, regular verbosity:\n\n```vanessa@som-ctp:/tmp$ singularity import ubuntu.img  docker://ubuntu:latest\nDocker image path: index.docker.io/library/ubuntu:latest\nCache folder set to /home/vanessa/.singularity/docker\nImporting: base Singularity environment\nImporting: /home/vanessa/.singularity/docker/sha256:d54efb8db41d4ac23d29469940ec92da94c9a6c2d9e26ec060bebad1d1b0e48d.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:f8b845f45a87dc7c095b15f3d9661e640ebc86f42cd8e8ab36674846472027f7.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:e8db7bf7c39fab6fec91b1b61e3914f21e60233c9823dd57c60bc360191aaf0d.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:9654c40e9079e3d5b271ec71f6d83f8ce80cfa6f09d9737fc6bfd4d2456fed3f.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:6d9ef359eaaa311860550b478790123c4b22a2eaede8f8f46691b0b4433c08cf.tar.gz\nImporting: /home/vanessa/.singularity/metadata/sha256:fe44851d529f465f9aa107b32351c8a0a722fc0619a2a7c22b058084fac068a4.tar.gz\n```\n\nNotice the difference now is that INFO statements (previously printed like INFO:python Hello! are now just printed without the prefix. Here is quiet mode:\n\n```bash\nvanessa@som-ctp:/tmp$ singularity -q import ubuntu.img  docker://ubuntu:latest\n\n```\n\nand here is debug, notice that I've changed a lot of the levels to be more specific (verbose vs. debug, we weren't using any verbose levels before). The one issue I see is that some of my prints follow some of yours and there isn't a newline - eg:\n\n```Exec'ing: /usr/local/libexec/singularity/cli/import.exec ubuntu.imgVERBOSE2 SINGULARITY_COMMAND_ASIS found as False\n```\n\nI added my newline after - is there a good way to make this consistent?\n\n```vanessa@som-ctp:/tmp$ singularity --debug import ubuntu.img  docker://ubuntu:latest\nenabling debugging\nending argument loop\nExec'ing: /usr/local/libexec/singularity/cli/import.exec ubuntu.imgVERBOSE2 SINGULARITY_COMMAND_ASIS found as False\nVERBOSE2 SINGULARITY_ROOTFS not defined (None)\nVERBOSE2 SINGULARITY_METADATA_FOLDER found as None/.singularity.d\nVERBOSE2 SINGULARITY_DISABLE_CACHE found as False\nVERBOSE2 SINGULARITY_CACHEDIR found as /home/vanessa/.singularity\nVERBOSE2 SINGULARITY_ENVBASE found as None/.singularity.d/env\nVERBOSE2 SINGULARITY_LABELFILE found as None/.singularity.d/labels.json\nVERBOSE2 SINGULARITY_INCLUDECMD found as False\nVERBOSE2 SINGULARITY_PULLFOLDER found as /tmp\nVERBOSE2 SINGULARITY_CONTENTS found as /tmp/.singularity-layers.FBK2rXJD\nVERBOSE2 SINGULARITY_CONTAINER found as docker://ubuntu:latest\nDEBUG Found uri docker://\nDEBUG \n*** STARTING DOCKER IMPORT PYTHON  ****\nDEBUG Docker layers and (env,labels,runscript) will be written to: /tmp/.singularity-layers.FBK2rXJD\nVERBOSE2 SINGULARITY_DOCKER_USERNAME not defined (None)\nVERBOSE2 SINGULARITY_DOCKER_PASSWORD found\nDEBUG Starting Docker IMPORT, includes environment, runscript, and metadata.\nVERBOSE Docker image: ubuntu:latest\nVERBOSE2 Specified Docker ENTRYPOINT as %runscript.\nDEBUG Headers found: Accept,Content-Type\nVERBOSE Registry: index.docker.io\nVERBOSE Namespace: library\nVERBOSE Repo Name: ubuntu\nVERBOSE Repo Tag: latest\nVERBOSE Version: None\nVERBOSE Obtaining tags: https://index.docker.io/v2/library/ubuntu/tags/list\nDEBUG GET https://index.docker.io/v2/library/ubuntu/tags/list\nDEBUG GET https://auth.docker.io/token?service=registry.docker.io&amp;scope=repository:library/ubuntu:pull\nDEBUG Headers found: Accept,Authorization,Content-Type\nDEBUG GET https://auth.docker.io/token?service=registry.docker.io&amp;scope=repository:library/ubuntu:pull\nDEBUG Headers found: Accept,Authorization,Content-Type\nDocker image path: index.docker.io/library/ubuntu:latest\nVERBOSE Obtaining manifest: https://index.docker.io/v2/library/ubuntu/manifests/latest\nDEBUG GET https://index.docker.io/v2/library/ubuntu/manifests/latest\nDEBUG Image manifest version 2.2 found.\nDEBUG Adding digest sha256:d54efb8db41d4ac23d29469940ec92da94c9a6c2d9e26ec060bebad1d1b0e48d\nDEBUG Adding digest sha256:f8b845f45a87dc7c095b15f3d9661e640ebc86f42cd8e8ab36674846472027f7\nDEBUG Adding digest sha256:e8db7bf7c39fab6fec91b1b61e3914f21e60233c9823dd57c60bc360191aaf0d\nDEBUG Adding digest sha256:9654c40e9079e3d5b271ec71f6d83f8ce80cfa6f09d9737fc6bfd4d2456fed3f\nDEBUG Adding digest sha256:6d9ef359eaaa311860550b478790123c4b22a2eaede8f8f46691b0b4433c08cf\nVERBOSE Obtaining manifest: https://index.docker.io/v2/library/ubuntu/manifests/latest\nDEBUG GET https://index.docker.io/v2/library/ubuntu/manifests/latest\nCache folder set to /home/vanessa/.singularity/docker\nVERBOSE3 Found Docker command (Entrypoint) None\nVERBOSE3 Found Docker command (Cmd) /bin/bash\nVERBOSE3 Adding Docker CMD as Singularity runscript...\nDEBUG /bin/bash\nVERBOSE3 Found Docker command (Env) PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nVERBOSE3 Found Docker container environment!\nVERBOSE3 Adding Docker environment to metadata tar\nDEBUG Found template for tarinfo\nVERBOSE3 Found Docker command (Labels) {}\nVERBOSE3 Adding Docker labels to metadata tar\nDEBUG Found template for tarinfo\nVERBOSE3 Adding Docker runscript to metadata tar\nDEBUG Found template for tarinfo\nDEBUG metadata file /home/vanessa/.singularity/metadata/sha256:fe44851d529f465f9aa107b32351c8a0a722fc0619a2a7c22b058084fac068a4.tar.gz already exists, will over-write.\nVERBOSE2 Tar file with Docker env and labels: /home/vanessa/.singularity/metadata/sha256:fe44851d529f465f9aa107b32351c8a0a722fc0619a2a7c22b058084fac068a4.tar.gz\nVERBOSE3 Writing Docker layers files to /tmp/.singularity-layers.FBK2rXJD\nVERBOSE2 Writing file /tmp/.singularity-layers.FBK2rXJD with mode w.\nVERBOSE2 Writing file /tmp/.singularity-layers.FBK2rXJD with mode a.\nDEBUG *** FINISHING DOCKER IMPORT PYTHON PORTION ****\nImporting: base Singularity environment\n.\n.\n.\n```\nFor the logger newline, it seems to work ok when I test locally:\n\n```bash\nIn [1]: from message import bot\n\nIn [2]: bot.debug('hello!')\nDEBUG hello!\n```\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#565 Simplification of logger",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/565",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491493960.437016",
        "date": 1491493960437
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/564|#564 'universe' repository Commented when doing singularity import> by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/564|#564 'universe' repository Commented when doing singularity import> by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491492455.978389",
        "date": 1491492455978
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/564#issuecomment-292210371|#564: 'universe' repository Commented when doing singularity import>",
                "text": "Done with development branch from 06/april/2017\n\nClosing ....",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/564#issuecomment-292210371|#564: 'universe' repository Commented when doing singularity import>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491492451.977146",
        "date": 1491492451977
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/564#issuecomment-292205128|#564: 'universe' repository Commented when doing singularity import>",
                "text": "Hey @ArangoGutierrez ! Can you please try this with the current development branch? We just updated a bug last night with regard to order layers - I just tested with it locally and see the following for ubuntu 16.04:\n\n```bash\nvanessa@som-ctp:/tmp$ cat /etc/apt/sources.list\n\n*See <http://help.ubuntu.com/community/UpgradeNotes> for how to upgrade to*\n\n*newer versions of the distribution.*\n\ndeb <http://archive.ubuntu.com/ubuntu/> xenial main restricted\ndeb-src <http://archive.ubuntu.com/ubuntu/> xenial main restricted\n\n*Major bug fix updates produced after the final release of the*\n\n*distribution.*\n\ndeb <http://archive.ubuntu.com/ubuntu/> xenial-updates main restricted\ndeb-src <http://archive.ubuntu.com/ubuntu/> xenial-updates main restricted\n\n*Uncomment the following two lines to add software from the 'universe'*\n\n*repository.*\n\n*N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu*\n\n*team. Also, please note that software in universe WILL NOT receive any*\n\n*review or updates from the Ubuntu security team.*\n\ndeb <http://archive.ubuntu.com/ubuntu/> xenial universe\ndeb-src <http://archive.ubuntu.com/ubuntu/> xenial universe\ndeb <http://archive.ubuntu.com/ubuntu/> xenial-updates universe\ndeb-src <http://archive.ubuntu.com/ubuntu/> xenial-updates universe\n\n*N.B. software from this repository may not have been tested as*\n\n*extensively as that contained in the main release, although it includes*\n\n*newer versions of some applications which may provide useful features.*\n\n*Also, please note that software in backports WILL NOT receive any review*\n\n*or updates from the Ubuntu security team.*\n\n*deb <http://archive.ubuntu.com/ubuntu/> xenial-backports main restricted*\n\n*deb-src <http://archive.ubuntu.com/ubuntu/> xenial-backports main restricted*\n\ndeb <http://archive.ubuntu.com/ubuntu/> xenial-security main restricted\ndeb-src <http://archive.ubuntu.com/ubuntu/> xenial-security main restricted\ndeb <http://archive.ubuntu.com/ubuntu/> xenial-security universe\ndeb-src <http://archive.ubuntu.com/ubuntu/> xenial-security universe\n\n*deb <http://archive.ubuntu.com/ubuntu/> xenial-security multiverse*\n\n*deb-src <http://archive.ubuntu.com/ubuntu/> xenial-security multiverse*\n\nvanessa@som-ctp:/tmp$ ls /\nbin   dev          etc   lib    media  opt   root  sbin         srv  tmp  var\nboot  environment  home  lib64  mnt    proc  run   singularity  sys  usr\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/564#issuecomment-292205128|#564: 'universe' repository Commented when doing singularity import>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491491433.662099",
        "date": 1491491433662
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by sazearte on issue <https://github.com/singularityware/singularity/issues/559#issuecomment-292183504|#559: Unrecognized Distribution type: Centos>",
                "text": "i recompiled with ollder version and it's work.\n\nbut i have new error:\n`No such file or directorylibexec/singularity/bootstrap/modules-v2/build-yum` can you have solution ?",
                "pretext": "[singularityware/singularity] New comment by sazearte on issue <https://github.com/singularityware/singularity/issues/559#issuecomment-292183504|#559: Unrecognized Distribution type: Centos>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491487244.380278",
        "date": 1491487244380
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#564 'universe' repository Commented when doing singularity import' https://github.com/singularityware/singularity/issues/564 by ArangoGutierrez",
                "text": "After \n`sudo singularity import myimage.img docker://ubuntu:16.04`\n\nchecking for sources.list on both images\n`cat /etc/apt/sources.list`\nThere is a diff between the Singularity image and the docker image\nWhich follows the error\n`E: Unable to locate package XXX`\n\n*For the docker image ubuntu:16.04*\n\n```\n\n*Uncomment the following two lines to add software from the 'universe'*\n\n*repository.*\n\n*N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu*\n\n*team. Also, please note that software in universe WILL NOT receive any*\n\n*review or updates from the Ubuntu security team.*\n\ndeb <http://archive.ubuntu.com/ubuntu/> xenial universe\ndeb-src <http://archive.ubuntu.com/ubuntu/> xenial universe\ndeb <http://archive.ubuntu.com/ubuntu/> xenial-updates universe\ndeb-src <http://archive.ubuntu.com/ubuntu/> xenial-updates universe\n\n*N.B. software from this repository may not have been tested as*\n\n*extensively as that contained in the main release, although it includes*\n\n*newer versions of some applications which may provide useful features.*\n\n*Also, please note that software in backports WILL NOT receive any review*\n\n*or updates from the Ubuntu security team.*\n\n*deb <http://archive.ubuntu.com/ubuntu/> xenial-backports main restricted*\n\n*deb-src <http://archive.ubuntu.com/ubuntu/> xenial-backports main restricted*\n\ndeb <http://archive.ubuntu.com/ubuntu/> xenial-security main restricted\ndeb-src <http://archive.ubuntu.com/ubuntu/> xenial-security main restricted\ndeb <http://archive.ubuntu.com/ubuntu/> xenial-security universe\ndeb-src <http://archive.ubuntu.com/ubuntu/> xenial-security universe\n\n*deb <http://archive.ubuntu.com/ubuntu/> xenial-security multiverse*\n\n*deb-src <http://archive.ubuntu.com/ubuntu/> xenial-security multiverse*\n\n```\n\n*For singularity*\n\n```\n\n*Uncomment the following two lines to add software from the 'universe'*\n\n*repository.*\n\n*N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu*\n\n*team. Also, please note that software in universe WILL NOT receive any*\n\n*review or updates from the Ubuntu security team.*\n\n*deb <http://archive.ubuntu.com/ubuntu/> xenial universe*\n\n*deb-src <http://archive.ubuntu.com/ubuntu/> xenial universe*\n\n*deb <http://archive.ubuntu.com/ubuntu/> xenial-updates universe*\n\n*deb-src <http://archive.ubuntu.com/ubuntu/> xenial-updates universe*\n\n*N.B. software from this repository may not have been tested as*\n\n*extensively as that contained in the main release, although it includes*\n\n*newer versions of some applications which may provide useful features.*\n\n*Also, please note that software in backports WILL NOT receive any review*\n\n*or updates from the Ubuntu security team.*\n\n*deb <http://archive.ubuntu.com/ubuntu/> xenial-backports main restricted*\n\n*deb-src <http://archive.ubuntu.com/ubuntu/> xenial-backports main restricted*\n\ndeb <http://archive.ubuntu.com/ubuntu/> xenial-security main restricted\ndeb-src <http://archive.ubuntu.com/ubuntu/> xenial-security main restricted\n\n*deb <http://archive.ubuntu.com/ubuntu/> xenial-security universe*\n\n*deb-src <http://archive.ubuntu.com/ubuntu/> xenial-security universe*\n\n*deb <http://archive.ubuntu.com/ubuntu/> xenial-security multiverse*\n\n*deb-src <http://archive.ubuntu.com/ubuntu/> xenial-security multiverse*\n\n```",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "title": "#564 'universe' repository Commented when doing singularity import",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/564",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491484963.759391",
        "date": 1491484963759
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by sazearte on issue <https://github.com/singularityware/singularity/issues/559#issuecomment-292146494|#559: Unrecognized Distribution type: Centos>",
                "text": "i see this tutorial: <http://singularity.lbl.gov/docs-bootstrap>\n1) i create image:\n`singularity create --size 2048 /tmp/Centos7-ompi.img`\n2) i create def file:\n```\n\n*Copyright (c) 2015-2016, Gregory M. Kurtzer. All rights reserved.*\n\n# \n\n*\"Singularity\" Copyright (c) 2016, The Regents of the University of California,*\n\n*through Lawrence Berkeley National Laboratory (subject to receipt of any*\n\n*required approvals from the U.S. Dept. of Energy).  All rights reserved.*\n\nBootStrap: yum\nOSVersion: 7\nMirrorURL: <http://mirror.centos.org/centos-%>{OSVERSION}/%{OSVERSION}/os/$basearch/\nInclude: yum\n\n*If you want the updates (available at the bootstrap date) to be installed*\n\n*inside the container during the bootstrap instead of the General Availability*\n\n*point release (7.x) then uncomment the following line*\n\n#UpdateURL: <http://mirror.centos.org/centos-%>{OSVERSION}/%{OSVERSION}/updates/$basearch/\n\n%runscript\n    echo \"This is what happens when you run the container...\"\n\n%post\n    echo \"Hello from inside the container\"\n    yum -y install vim-minimal\n```\n3) i create contenair but i have my error !\n`singularity bootstrap /tmp/Centos7-ompi.img centos7-ompi_master.def `\n`ERROR: Unrecognized OSBuild type: yum`",
                "pretext": "[singularityware/singularity] New comment by sazearte on issue <https://github.com/singularityware/singularity/issues/559#issuecomment-292146494|#559: Unrecognized Distribution type: Centos>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491478456.546510",
        "date": 1491478456546
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hcraT on issue <https://github.com/singularityware/singularity/issues/558#issuecomment-292122712|#558: Cannot run post scriptlet when using /bin/sh is a symlink (busybox)>",
                "text": "Hi @gmkurtzer,\nthe version is 2.2.1",
                "pretext": "[singularityware/singularity] New comment by hcraT on issue <https://github.com/singularityware/singularity/issues/558#issuecomment-292122712|#558: Cannot run post scriptlet when using /bin/sh is a symlink (busybox)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491471770.518754",
        "date": 1491471770518
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by martbhell on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-292103305|#488: [Proposal] Include syslog support>",
                "text": "In addition to @boegel's comments I would be interested to know also about containers and rundirs.\n\n&lt;pre&gt;container=${SINGULARITY_CONTAINER:-} rundir=${SINGULARITY_RUNDIR:-}&lt;/pre&gt;",
                "pretext": "[singularityware/singularity] New comment by martbhell on issue <https://github.com/singularityware/singularity/issues/488#issuecomment-292103305|#488: [Proposal] Include syslog support>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491466892.652051",
        "date": 1491466892652
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by sazearte on issue <https://github.com/singularityware/singularity/issues/559#issuecomment-292089324|#559: Unrecognized Distribution type: Centos>",
                "text": "i have same error with your example:\nERROR: Unrecognized OSBuild type: yum\n\ni use last stable version : 2.2.1",
                "pretext": "[singularityware/singularity] New comment by sazearte on issue <https://github.com/singularityware/singularity/issues/559#issuecomment-292089324|#559: Unrecognized Distribution type: Centos>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491462909.055769",
        "date": 1491462909055
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/563#issuecomment-292081046|#563: Symlink Persists>",
                "text": "Cool! I mean, maybe not, haha. Just curious - the symlink is created between two directories (/mnt and a home folder) that are mounted to the image, correct? I think symbolic links are sort of like metadata stored with these <https://en.wikipedia.org/wiki/Inode|inode> things. So if you are creating a link between two files that are mounted on the host, it wouldn't be such a crazy idea that the inode of the host is storing the link, and the image mount is simply reading that. I bet you it's possible to keep this inode entry even when the mount goes away, although I'd need to read more about it. Did you check if the symlink persists on the host? ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/563#issuecomment-292081046|#563: Symlink Persists>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491460105.734503",
        "date": 1491460105734
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#563 Symlink Persists' https://github.com/singularityware/singularity/issues/563 by sachnk",
                "text": "Hi --\n\nWe're using Singularity in Penguin's POD cluster with Cent OS 7. We ran into a bizarre problem as described below.\n\nFor legacy reasons, we require the symlink  /home/myuser -&gt; /mnt to exist in our Singularity container.\n\nThe following works as expected:\n\n`singularity shell -B /path/to/data:/mnt myimage.img`\n`$ ln -s /mnt /home/myuser`\n\nIn other words, when I `ls /home/myuser`, I see the contents of /path/to/data indirectly via /mnt.\n\nThis works as expected; every time I bring up the Singularity image, I always create the symlink -- it will _not_ persist across Singularity restarts.\n\nTo run our jobs on the cluster, we wrap our job in a bootstrap script that first always creates the symlink as described above. Bizarrely enough, we notice that after we schedule these jobs to run and let them all finish, the symlink /home/myuser is now always available whenever we shell into our image.\n\nIn other words, the symlink now persists across singularity restarts.\n\nIt's actually okay for us if this is expected behavior, but I suspect it's not. Just want to understand what might be going on here?\n\nThanks!",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/sachnk|sachnk>",
                "title": "#563 Symlink Persists",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/563",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491457897.530076",
        "date": 1491457897530
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-292055266|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "text": "Bummer.  I'm still seeing the same problem. (`Country of origin for the keyboard:`)   Just tested <https://github.com/singularityware/singularity/commit/67a8d663d02f4c1e03d7050acc60a395c2896150>.  I spun up a Ubuntu 16.04 VM on AWS.  My history appears at the bottom of this comment.  \n\nI'm confused because I think the `LANG` variable should be set by this line in my .def file:\n```locale-gen en_US.UTF-8\n```\nSo everything should be good to go by the time I try to install xorg.  Right? \n\nAnyway, here's what I did to create the error.  \n``` \n    1  sudo apt-get update &amp;&amp; sudo apt-get -y install python dh-autoreconf debootstrap build-essential\n    2  git clone <https://github.com/singularityware/singularity.git>\n    3  cd singularity/\n    4  git fetch \n    5  git checkout development \n    6  ./autogen.sh \n    7  ./configure \n    8  sudo make install\n    9  cd\n   10  cat &gt; rstudio.def &lt;&lt; 'EOF'\nBootStrap: debootstrap\nOSVersion: xenial\nMirrorURL: <http://us.archive.ubuntu.com/ubuntu/>\n\n%post\n    locale-gen en_US.UTF-8\necho ===========\nenv | grep LANG\necho ===========\n    sed -i 's/$/ universe/' /etc/apt/sources.list\n    echo \"deb <http://cran.rstudio.com/bin/linux/ubuntu> xenial/\" | tee -a /etc/apt/sources.list\n    gpg --keyserver keyserver.ubuntu.com --recv-key E084DAB9\n    gpg -a --export E084DAB9 | apt-key add -\n    apt-get -y update\n    apt-get -y --force-yes install vim r-base r-base-dev wget xorg gdebi-core libxslt1.1\n    wget <https://download1.rstudio.org/rstudio-0.99.896-amd64.deb>\n    gdebi -n rstudio-0.99.896-amd64.deb\n    rm rstudio-0.99.896-amd64.deb\nEOF\n\n   11  singularity create -s 2000 rstudio.img\n   12  sudo singularity bootstrap rstudio.img rstudio.def \n   13  clc\n   14  clear\n   15  history\n```",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-292055266|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491447414.729376",
        "date": 1491447414729
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/471#issuecomment-292045762|#471: exec leads to Failed to mount image in (read only): Invalid argument>",
                "text": "\"continuous deployment\" is old news and doesn't depict the bleeding aspect ;)  \nnote that \"continuous deployment\" term is primarily used for online services where users have no chance by \"to upgrade\", so introduced issues are discovered more rapidly and everyone suffers either they want it or not. With tools situation is a bit different -- usually it takes some dedication and sacrifice to step on the bleeding edge making a fully conscious decision.",
                "pretext": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/471#issuecomment-292045762|#471: exec leads to Failed to mount image in (read only): Invalid argument>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491443128.357855",
        "date": 1491443128357
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/471#issuecomment-292036137|#471: exec leads to Failed to mount image in (read only): Invalid argument>",
                "text": "Gotta be true to continuous deployment @yarikoptic ! :octopus: ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/471#issuecomment-292036137|#471: exec leads to Failed to mount image in (read only): Invalid argument>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491438958.941739",
        "date": 1491438958941
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/471#issuecomment-292036018|#471: exec leads to Failed to mount image in (read only): Invalid argument>",
                "text": "Ha ha... We should coin the term \"continuous(ly) bleeding development\" :-)",
                "pretext": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/471#issuecomment-292036018|#471: exec leads to Failed to mount image in (read only): Invalid argument>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491438907.936515",
        "date": 1491438907936
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292029652|#499: Support ENTRYPOINT exec form?>",
                "text": "ok great! Please post again if you want to run anything by. ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292029652|#499: Support ENTRYPOINT exec form?>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491436243.640920",
        "date": 1491436243640
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292028864|#499: Support ENTRYPOINT exec form?>",
                "text": "I have a user-facing program that always calls \"singularity run\" for different images, so I'd have to see if I want to make an exception and use \"singularirty exec\" just for this image or keep using \"singularity run\" but use case statement inside %runscript. But one of them should work. Thanks! ",
                "pretext": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292028864|#499: Support ENTRYPOINT exec form?>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491435938.606329",
        "date": 1491435938606
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292026693|#499: Support ENTRYPOINT exec form?>",
                "text": "ok, great! Does exec meet your need then? I'll be sure to be clear about this in the updated docs.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292026693|#499: Support ENTRYPOINT exec form?>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491435105.505327",
        "date": 1491435105505
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292026295|#499: Support ENTRYPOINT exec form?>",
                "text": "I believe so. That's why I didn't even consider \"singularity exec\" and look for --entrypoint alike for \"singularity run\"",
                "pretext": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292026295|#499: Support ENTRYPOINT exec form?>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491434973.488131",
        "date": 1491434973488
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292025701|#499: Support ENTRYPOINT exec form?>",
                "text": "docker exec assumes a running container, singularity exec does not. I think that might be the main difference?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292025701|#499: Support ENTRYPOINT exec form?>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491434745.459145",
        "date": 1491434745459
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292022440|#499: Support ENTRYPOINT exec form?>",
                "text": "I see. I thought `singularity exec` was more like `docker exec`, but I guess not.",
                "pretext": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292022440|#499: Support ENTRYPOINT exec form?>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491433575.305535",
        "date": 1491433575305
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "<https://github.com/singularityware/singularity|[singularity]> The branch \"vsoch-patch-1\" was deleted by gmkurtzer",
                "text": "<https://github.com/singularityware/singularity|[singularity]> The branch \"vsoch-patch-1\" was deleted by gmkurtzer",
                "id": 1,
                "color": "4183C4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491433505.295870",
        "date": 1491433505295
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/507|#507 Lib refactor> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/507|#507 Lib refactor> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491433304.267841",
        "date": 1491433304267
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "<https://github.com/singularityware/singularity|[singularity]> The branch \"lib-refactor\" was deleted by gmkurtzer",
                "text": "<https://github.com/singularityware/singularity|[singularity]> The branch \"lib-refactor\" was deleted by gmkurtzer",
                "id": 1,
                "color": "4183C4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491433304.267793",
        "date": 1491433304267
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "<https://github.com/singularityware/singularity|[singularity]> The branch \"nonpriv-bootstrap\" was deleted by gmkurtzer",
                "text": "<https://github.com/singularityware/singularity|[singularity]> The branch \"nonpriv-bootstrap\" was deleted by gmkurtzer",
                "id": 1,
                "color": "4183C4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491433204.252889",
        "date": 1491433204252
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292021354|#499: Support ENTRYPOINT exec form?>",
                "text": "Yes, a runscript that handles a custom use case is another way to support a custom command to `singularity run` !",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292021354|#499: Support ENTRYPOINT exec form?>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491433202.252478",
        "date": 1491433202252
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "<https://github.com/singularityware/singularity|[singularity]> The branch \"test-python-analysis\" was deleted by gmkurtzer",
                "text": "<https://github.com/singularityware/singularity|[singularity]> The branch \"test-python-analysis\" was deleted by gmkurtzer",
                "id": 1,
                "color": "4183C4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491433197.251602",
        "date": 1491433197251
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "<https://github.com/singularityware/singularity|[singularity]> The branch \"slave-mount-by-default\" was deleted by gmkurtzer",
                "text": "<https://github.com/singularityware/singularity|[singularity]> The branch \"slave-mount-by-default\" was deleted by gmkurtzer",
                "id": 1,
                "color": "4183C4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491433192.250926",
        "date": 1491433192250
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/557#issuecomment-292021121|#557: Problems installing programs inside container>",
                "text": "For Docker, it's just been confusing because they changed the ordering of the layers between manifest versions. As long as it remains, and we always are careful to check that the docker command lists layers the same as us, I think we should be ok? I think we are good for the issue, and I'll go ahead and close! Please ping and reopen if there is something additional.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/557#issuecomment-292021121|#557: Problems installing programs inside container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491433119.240573",
        "date": 1491433119240
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/560|#560 /etc/ld.so.conf docker import> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/560|#560 /etc/ld.so.conf docker import> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491433025.227035",
        "date": 1491433025227
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/560#issuecomment-292020820|#560: /etc/ld.so.conf docker import>",
                "text": "Awesome! Thanks everyone, closing the issue.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/560#issuecomment-292020820|#560: /etc/ld.so.conf docker import>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491433025.227029",
        "date": 1491433025227
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292020816|#499: Support ENTRYPOINT exec form?>",
                "text": "You can also define in your %runscript what you want it to do via a shell `case` argument on `$1`.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292020816|#499: Support ENTRYPOINT exec form?>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491433024.226949",
        "date": 1491433024226
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292020689|#499: Support ENTRYPOINT exec form?>",
                "text": "When you define the runscript, this sets the containers default behavior when you do:\n\n```singularity run mycontainer.img\n```\n\nThis is the use case when you could define the bootstrap runscript to override Docker `ENTRYPOINT` and `CMD`. For your use case, you want to send a custom command to the container to run, at run time, and this is where you would want to use exec. Exec will let you override whatever is specified in runscript, and send whatever command you want to the container. So you can do whatever you like!\n\n```singularity exec container.img echo \"Hello World!\"\nsingularity exec container.img ls /\nsingularity exec container.img /usr/bin/python runme.py\n```\nIf your use case is not met by the above, could you please give a specific example and I can help walk through the command?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292020689|#499: Support ENTRYPOINT exec form?>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491432984.221343",
        "date": 1491432984221
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/560#issuecomment-292020421|#560: /etc/ld.so.conf docker import>",
                "text": "The development branch of Singularity at this point is more stable then master, so you have my blessing on that!\n\nAs soon as 2.3 gets released, the master branch will be maitnained as the latest stable.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/560#issuecomment-292020421|#560: /etc/ld.so.conf docker import>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491432897.209006",
        "date": 1491432897209
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-292020138|#514: default python runs now send the singularity output to STDERR>",
                "text": "@alanhoyle could you give it another try? You can disable all output with the -q tag.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-292020138|#514: default python runs now send the singularity output to STDERR>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491432802.195733",
        "date": 1491432802195
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/556#issuecomment-292019955|#556: `singularity shell` Segfault in action.c in development branch 10f8821>",
                "text": "Yeah... I suppose that is also allowed as it is an undefined behavior according to:\n\n<http://pubs.opengroup.org/onlinepubs/9699919799/functions/setenv.html>\n\nBut I wouldn't have considered a segfault being a graceful catch... Anyway, I think I fixed it, can you test and close if you are satisfied with it?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/556#issuecomment-292019955|#556: `singularity shell` Segfault in action.c in development branch 10f8821>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491432734.185765",
        "date": 1491432734185
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-292019441|#514: default python runs now send the singularity output to STDERR>",
                "text": "I did now! :)",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-292019441|#514: default python runs now send the singularity output to STDERR>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491432549.159234",
        "date": 1491432549159
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/471#issuecomment-292019000|#471: exec leads to Failed to mount image in (read only): Invalid argument>",
                "text": "Hi @vjkumar1 If you are testing anything but the latest development branch (as of 2 hours ago), this might be wrong. It seems that `/etc/mtab` was being updated when it shouldn't have been, and not being cleaned. In practice, the mounts were not persistent, but commands like `df` and `mount` would give false positives.\n\nCan you retest with latest development branch?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/471#issuecomment-292019000|#471: exec leads to Failed to mount image in (read only): Invalid argument>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491432386.136338",
        "date": 1491432386136
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292018934|#499: Support ENTRYPOINT exec form?>",
                "text": "I'm aware of the exec command, but my use case is I have a default main tool which is specified in %runscript, and I'd like give users an option to override this. Correct me if I'm wrong, but I don't thunk exec let me do this. ",
                "pretext": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292018934|#499: Support ENTRYPOINT exec form?>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491432363.132829",
        "date": 1491432363132
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/559#issuecomment-292018167|#559: Unrecognized Distribution type: Centos>",
                "text": "Hi @sazearte,\n\nWhat version of Singularity are you using?\n\nYou are using the legacy bootstrap definition file syntax. You can see an example of the current format in the examples directory (e.g.: <https://github.com/singularityware/singularity/blob/master/examples/centos.def>).\n\nWhere did you find that definition file syntax? If it is on the online documentation, we need to fix.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/559#issuecomment-292018167|#559: Unrecognized Distribution type: Centos>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491432114.096315",
        "date": 1491432114096
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292017833|#499: Support ENTRYPOINT exec form?>",
                "text": "oh, if you want to do that, then you should use `exec` eg\n\n```singularity exec container.img /path/to/script.sh arg1\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292017833|#499: Support ENTRYPOINT exec form?>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491431999.079280",
        "date": 1491431999079
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/557#issuecomment-292016859|#557: Problems installing programs inside container>",
                "text": "I've noticed the issue with the apt sources list. I don't know what causes that, but we should review more.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/557#issuecomment-292016859|#557: Problems installing programs inside container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491431693.033717",
        "date": 1491431693033
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by sachnk on issue <https://github.com/singularityware/singularity/issues/560#issuecomment-292016621|#560: /etc/ld.so.conf docker import>",
                "text": "Hi @vsoch,\n\nYep, I pulled development and created an image with a new singularity binary. The new image seems to work correctly -- I see the right contents in /etc/ld.so.conf.\n\nIt also corrects some other issues I found after posting the ld.so.conf issue -- namely, missing packages from pip installs even though the Docker image has them.\n\nUnless you advise otherwise, I'm going to go ahead and use this development version of singularity.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by sachnk on issue <https://github.com/singularityware/singularity/issues/560#issuecomment-292016621|#560: /etc/ld.so.conf docker import>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491431614.021179",
        "date": 1491431614021
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292016568|#499: Support ENTRYPOINT exec form?>",
                "text": "Was looking for a command-line flag just like Docker's `--entrypoint`. I have two executables inside a container and I want to choose one at runtime. It would be great if I could do something like: `singularity run --entrypoint xyz tool.img`",
                "pretext": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292016568|#499: Support ENTRYPOINT exec form?>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491431596.018220",
        "date": 1491431596018
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/560#issuecomment-292015093|#560: /etc/ld.so.conf docker import>",
                "text": "you can do:\n\n```git clone https://github.com/singularityware/singularity\ncd singularity\ncheckout -b development\ngit pull origin development\n```\n\nthen install per usual\n\n```./autogen.sh\n./configure --prefix=/use/local\nmake\nsudo make install\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/560#issuecomment-292015093|#560: /etc/ld.so.conf docker import>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491431115.941585",
        "date": 1491431115941
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/560#issuecomment-292010628|#560: /etc/ld.so.conf docker import>",
                "text": "It's in development now if you want to test out!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/560#issuecomment-292010628|#560: /etc/ld.so.conf docker import>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491429793.724253",
        "date": 1491429793724
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292009508|#499: Support ENTRYPOINT exec form?>",
                "text": "The fix is in development branch. Entrypoint is used by default and you can specify a runscript section in your bootstrap file to overwrite it. Are you looking for more of a command line flag to specify a runscript command?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-292009508|#499: Support ENTRYPOINT exec form?>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491429487.667383",
        "date": 1491429487667
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by sachnk on issue <https://github.com/singularityware/singularity/issues/560#issuecomment-291992623|#560: /etc/ld.so.conf docker import>",
                "text": "@vsoch @gmkurtzer Is there a time line when PR #553 might make it into master / release tag? ",
                "pretext": "[singularityware/singularity] New comment by sachnk on issue <https://github.com/singularityware/singularity/issues/560#issuecomment-291992623|#560: /etc/ld.so.conf docker import>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491425423.781466",
        "date": 1491425423781
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-291990239|#499: Support ENTRYPOINT exec form?>",
                "text": "Also, is there a way to override entrypoint like in Docker by specifying `docker run --entrypoint`?",
                "pretext": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-291990239|#499: Support ENTRYPOINT exec form?>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491424872.643359",
        "date": 1491424872643
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-291988730|#499: Support ENTRYPOINT exec form?>",
                "text": "Hi guys, I'm only using the stable version 2.2.1, is this fix already included in the official release or is this going to be included in &gt;2.2.1?",
                "pretext": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/499#issuecomment-291988730|#499: Support ENTRYPOINT exec form?>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491424519.554881",
        "date": 1491424519554
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by dpjensen on issue <https://github.com/singularityware/singularity/issues/556#issuecomment-291986566|#556: `singularity shell` Segfault in action.c in development branch 10f8821>",
                "text": "@gmkurtzer It would appear that this is deliberate behavior: \nFrom the glibc changelogs for <https://raw.githubusercontent.com/bminor/glibc/glibc-2.22/ChangeLog|2.22> :\n```2015-04-19  Paul Eggert  &lt;eggert@cs.ucla.edu&gt;\n```* stdlib/setenv.c (__add_to_environ):\nDump core quickly if setenv (..., NULL, ...) is called.\nThis time, do it the right way, and pacify GCC with a pragma.```\n```\n\nCode is <https://github.com/bminor/glibc/blob/glibc-2.22/stdlib/setenv.c#L129|here> .",
                "pretext": "[singularityware/singularity] New comment by dpjensen on issue <https://github.com/singularityware/singularity/issues/556#issuecomment-291986566|#556: `singularity shell` Segfault in action.c in development branch 10f8821>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491424014.426009",
        "date": 1491424014426
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by dpjensen on issue <https://github.com/singularityware/singularity/issues/556#issuecomment-291979866|#556: `singularity shell` Segfault in action.c in development branch 10f8821>",
                "text": "@gmkurtzer You're right:\n\nOn the F25 VM:\n```\n[vagrant@localhost ~]$ /lib64/libc.so.6 --version\nGNU C Library (GNU libc) stable release version 2.24, by Roland McGrath et al.\n[cut]\n[vagrant@localhost ~]$ cat test.c \n#include &lt;stdlib.h&gt;\n#include &lt;stdio.h&gt;\nint main(){\n    printf(\"Doing a non-null setenv...\\n\");\n    int g_rc = setenv(\"good_test\", \"1\", 1);\n    printf(\"non-null setenv returned: %d\\n\", g_rc);\n    printf(\"Doing a NULL setenv...\\n\");\n    int b_rc = setenv(\"env_test\", NULL, 1);\n    printf(\"NULL setenv returned: %d\\n\", b_rc);\n    return 0;\n\n}\n[vagrant@localhost ~]$ gcc test.c \n[vagrant@localhost ~]$ ./a.out \nDoing a non-null setenv...\nnon-null setenv returned: 0\nDoing a NULL setenv...\nSegmentation fault (core dumped)\n```\n\nOn a SLES12 box:\n```~&gt; /lib64/libc.so.6 --version\nGNU C Library (GNU libc) stable release version 2.19 (git 9a869d822025), by Roland McGrath et al.\n[cut]\n~&gt; gcc test.c         \n~&gt; ./a.out \nDoing a non-null setenv...\nnon-null setenv returned: 0\nDoing a NULL setenv...\nNULL setenv returned: 0\n```\n\nIn all cases, gcc will return some kind of warning:\n```gcc -Wall envtest.c \nenvtest.c: In function 'main':\nenvtest.c:8:5: warning: null argument where non-null required (argument 2) [-Wnonnull]\n     int b_rc = setenv(\"env_test\", NULL, 1);\n     ^\n```\nTried on a RHEL box running glibc 2.12, also no segfault.\nNot sure if this is a bug or a \"feature\" on libc's part, or what should be done on singularity's part",
                "pretext": "[singularityware/singularity] New comment by dpjensen on issue <https://github.com/singularityware/singularity/issues/556#issuecomment-291979866|#556: `singularity shell` Segfault in action.c in development branch 10f8821>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491422472.038036",
        "date": 1491422472038
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-291978666|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "text": "Woo hoo. I'll test and let you know this evening.\n\nOn Apr 5, 2017 3:47 PM, \"Gregory M. Kurtzer\" <mailto:notifications@github.com|notifications@github.com>\nwrote:\n\n&gt; Haha, figured it out! The freakin' LANG variable needs to be shared.\n&gt; figures... Pfft!\n&gt; \n&gt; Ok, fixes have been pushed up. Thanks for finding this and holding out on\n&gt; the fix!\n&gt; \n&gt; â€”\n&gt; You are receiving this because you authored the thread.\n&gt; Reply to this email directly, view it on GitHub\n&gt; <https://github.com/singularityware/singularity/issues/548#issuecomment-291975913>,\n&gt; or mute the thread\n&gt; <https://github.com/notifications/unsubscribe-auth/AHUUXK_OfO6Pf0jmSmIxavs33GUprdSyks5rs-_AgaJpZM4Mu7gB>\n&gt; .",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-291978666|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491422196.964619",
        "date": 1491422196964
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/558#issuecomment-291976382|#558: Cannot run post scriptlet when using /bin/sh is a symlink (busybox)>",
                "text": "hi @hcraT,\n\nWhat version of Singularity are you testing with?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/558#issuecomment-291976382|#558: Cannot run post scriptlet when using /bin/sh is a symlink (busybox)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491421729.847677",
        "date": 1491421729847
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-291975913|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "text": "Haha, figured it out! The freakin' `LANG` variable needs to be shared. figures... Pfft!\n\nOk, fixes have been pushed up. Thanks for finding this and holding out on the fix!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-291975913|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491421631.823386",
        "date": 1491421631823
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-291955888|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "text": "So I just did a test between the shell environments produced with the two different versions during bootstrap, and I found this:\n\nSingularity-2.2:\n```SUDO_GID=1000\nMAIL=/var/mail/root\nUSER=root\nNEW_HOME=\nSINGULARITY_localstatedir=/usr/local/singularity-2.2/var\nSINGULARITY_OSBUILD=docker\nSHLVL=3\nHOME=/root\nSINGULARITY_NOIMAGELOCK=1\nSINGULARITY_BUILDDEF=/tmp/docker.def\nSUDO_UID=1000\nCHANGE_HOME=NO\nLOGNAME=root\nSINGULARITY_TMPDIR=/tmp/singularity-bootstrap.fBATByg\n_=/usr/sbin/chroot\nTERM=screen\nSINGULARITY_libexecdir=/usr/local/singularity-2.2/libexec\nUSERNAME=root\nMESSAGELEVEL=1\nRETVAL=0\nSINGULARITY_sysconfdir=/usr/local/singularity-2.2/etc\nPATH=/bin:/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nSINGULARITY_COMMAND=bootstrap\nLANG=en_US.UTF-8\nSINGULARITY_IMAGE=/tmp/test.img\nLS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:\nSUDO_COMMAND=/usr/local/singularity-2.2/bin/singularity bootstrap /tmp/test.img /tmp/docker.def\nDEBIAN_FRONTEND=noninteractive\nSHELL=/bin/bash\nSUDO_USER=gmk\nSINGULARITY_ROOTFS=/var/singularity/mnt/final\nSINGULARITY_CONTAINER=test.img\nLC_ALL=C\nPWD=/\nSINGULARITY_WRITABLE=1\n```\n\nand Singularity-development:\n```SINGULARITY_DEFFILE_From=ubuntu:latest\nUSER=root\nBOOTSTRAP=docker\nSHLVL=2\nHOME=/root\nSINGULARITY_BUILDDEF=/tmp/docker.def\nSINGULARITY_version=2.2.99\nSINGULARITY_DEFFILE_BootStrap=docker\nSINGULARITY_MESSAGELEVEL=1\n_=/usr/sbin/chroot\nSINGULARITY_libexecdir=/usr/local/libexec\nPATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin\nINCLUDECMD=yes\nFROM=ubuntu:latest\nSINGULARITY_IMAGE=/tmp/test.img\nSINGULARITY_ROOTFS=/var/lib/singularity/mnt/source\nPWD=/\nSINGULARITY_DEFFILE_IncludeCmd=yes\n```\n\nThe development environment is much leaner, but I don't see anything in there that might cause a package to take a different route. Do you?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-291955888|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491417521.744929",
        "date": 1491417521744
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#562 LOGGER format needs to match C code' https://github.com/singularityware/singularity/issues/562 by vsoch",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/vsoch|vsoch>",
                "title": "#562 LOGGER format needs to match C code",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/562",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491416430.434995",
        "date": 1491416430434
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#561 metadata for docker (and other images) should be in separate cache folder' https://github.com/singularityware/singularity/issues/561 by vsoch",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/vsoch|vsoch> (assigned to <https://github.com/vsoch|vsoch>)",
                "title": "#561 metadata for docker (and other images) should be in separate cache folder",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/561",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491416406.428411",
        "date": 1491416406428
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-291950431|#553: Updating logger to be class with functions for mapping and level information>",
                "text": "Looks great, thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-291950431|#553: Updating logger to be class with functions for mapping and level information>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491416371.418617",
        "date": 1491416371418
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/553|#553 Updating logger to be class with functions for mapping and level information> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/553|#553 Updating logger to be class with functions for mapping and level information> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491416359.415165",
        "date": 1491416359415
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by sachnk on issue <https://github.com/singularityware/singularity/issues/560#issuecomment-291947592|#560: /etc/ld.so.conf docker import>",
                "text": "Understood, thanks. Point taken regarding the docker:// endpoint using\nDocker Hub -- we publish to Docker Hub first before converting to\nsingularity.\n\nI've worked around this by manually modifying the singularity image for\nnow, but definitely look forward to the fix so our conversions from Docker\nare seamless.\n\nThanks!\n\nOn Wed, Apr 5, 2017 at 2:05 PM, Vanessa Sochat <mailto:notifications@github.com|notifications@github.com>\nwrote:\n\n&gt; We need to try this when @gmkurtzer <https://github.com/gmkurtzer> merges\n&gt; the PR #553 <https://github.com/singularityware/singularity/pull/553>, as\n&gt; there was an issue with Docker layers. Then we can further debug. Just to\n&gt; be clear, the docker:// endpoint pulls from Docker hub so making changes to\n&gt; a local image will not show up when you import!\n&gt; \n&gt; â€”\n&gt; You are receiving this because you authored the thread.\n&gt; Reply to this email directly, view it on GitHub\n&gt; <https://github.com/singularityware/singularity/issues/560#issuecomment-291946485>,\n&gt; or mute the thread\n&gt; <https://github.com/notifications/unsubscribe-auth/AFP7yTazKazXDmnZM7cPjwCzdhn0txCiks5rs9f5gaJpZM4M0mAi>\n&gt; .",
                "pretext": "[singularityware/singularity] New comment by sachnk on issue <https://github.com/singularityware/singularity/issues/560#issuecomment-291947592|#560: /etc/ld.so.conf docker import>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491415788.254002",
        "date": 1491415788254
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/560#issuecomment-291946485|#560: /etc/ld.so.conf docker import>",
                "text": "We need to try this when @gmkurtzer merges the PR #553, as there was an issue with Docker layers. Then we can further debug. Just to be clear, the docker:// endpoint pulls from Docker hub so making changes to a local image will not show up when you import!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/560#issuecomment-291946485|#560: /etc/ld.so.conf docker import>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491415544.187090",
        "date": 1491415544187
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/556#issuecomment-291946168|#556: `singularity shell` Segfault in action.c in development branch 10f8821>",
                "text": "@dpjensen While it is definitely a good catch, and not desired behavior, passing a NULL value to `setenv()` should not result in a seg fault and I would say that is an error in your system's C library. for example, it works fine on Centos7:\n\n```...\nDEBUG   [U=1000,P=30884]   singularity_priv_drop_perm()              Finished dropping privileges\nDEBUG   [U=1000,P=30884]   singularity_registry_get()                Returning NULL on 'SHELL'\nDEBUG   [U=1000,P=30884]   singularity_registry_get()                Returning value from registry: 'COMMAND' = 'shell'\n...\n```\n\nBut... with that said, I just wrapped `setenv()` to be sure it doesn't called with a NULL pointer. Now we get this:\n\n```...\nDEBUG   [U=1000,P=6140]    singularity_priv_drop_perm()              Finished dropping privileges\nDEBUG   [U=1000,P=6140]    envar_set()                               Setting environment variable: 'SINGULARITY_CONTAINER' = 'centos.img'\nDEBUG   [U=1000,P=6140]    envar_set()                               Setting environment variable: 'SINGULARITY_NAME' = 'centos.img'\nDEBUG   [U=1000,P=6140]    singularity_registry_get()                Returning NULL on 'SHELL'\nVERBOSE [U=1000,P=6140]    envar_set()                               Not setting envar, null value: SINGULARITY_SHELL\nDEBUG   [U=1000,P=6140]    singularity_registry_get()                Returning value from registry: 'COMMAND' = 'shell'\n...\n```",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/556#issuecomment-291946168|#556: `singularity shell` Segfault in action.c in development branch 10f8821>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491415468.165932",
        "date": 1491415468165
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#560 /etc/ld.so.conf docker import' https://github.com/singularityware/singularity/issues/560 by sachnk",
                "text": "I'm creating a CentOS7 based singularity image from an existing docker image using:\n\n`singularity import myimage.img docker://&lt;xyz&gt;/&lt;abc&gt;:latest`\n\nThe Dockerfile that created &lt;xyz&gt;/&lt;abc&gt;:latest modifies the /etc/ld.so.conf so that it contains /usr/local/lib and also runs ldconfig. If I run a shell in the docker image, I see:\n\n`\n\n*cat /etc/ld.so.conf*\n\ninclude ld.so.conf.d/*.conf\n/usr/local/lib`\n\nHowever, when I import the docker image into a new singularity image, the changes I made to /etc/ld.so.conf are not there:\n\n`\n\n*cat /etc/ld.so.conf*\n\ninclude ld.so.conf.d/*.conf`\n\nWhy aren't my changes propagated into singularity? Any ideas?\n\nThanks",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/sachnk|sachnk>",
                "title": "#560 /etc/ld.so.conf docker import",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/560",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491414793.974114",
        "date": 1491414793974
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-291928949|#514: default python runs now send the singularity output to STDERR>",
                "text": "yeah, he hasn't merged it yet.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-291928949|#514: default python runs now send the singularity output to STDERR>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491411929.197147",
        "date": 1491411929197
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by alanhoyle on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-291927922|#514: default python runs now send the singularity output to STDERR>",
                "text": "I tried compiling the development branch and kept getting segfaults when I tried to run the samtools.   ",
                "pretext": "[singularityware/singularity] New comment by alanhoyle on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-291927922|#514: default python runs now send the singularity output to STDERR>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491411724.138975",
        "date": 1491411724138
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vjkumar1 on issue <https://github.com/singularityware/singularity/issues/471#issuecomment-291893246|#471: exec leads to Failed to mount image in (read only): Invalid argument>",
                "text": "@yarikoptic &amp; @gmkurtzer  -- Were you able to digup anything more on this?  I ran into the same issue while tinkering with some test jobs in the container.  Don't have a set of steps to reproduce it on demand yet but this raises a bit of concern on our go forward plans.  Thanks,\n\n-Vijay",
                "pretext": "[singularityware/singularity] New comment by vjkumar1 on issue <https://github.com/singularityware/singularity/issues/471#issuecomment-291893246|#471: exec leads to Failed to mount image in (read only): Invalid argument>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491405127.194345",
        "date": 1491405127194
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#559 Unrecognized Distribution type: Centos' https://github.com/singularityware/singularity/issues/559 by sazearte",
                "text": "hello, i started with singularity but i have bug with def file :+1: \n`DistType \"Centos\"\nMirrorURL  \"http://mirror.centos.org/centos-7/7/os/x86_64/\"\nSetup\nBootstrap\nMirrorURL \"http://winswitch.org/dists/CentOS/7Server/x86_64/\"\nInstallPkgs python\nCleanup\n`\n\nDistType: Unrecognized Distribution type: Centos\ni have same problem with other name, Redhat, Debian... why ?\nMy Operating system is centos 7 x64",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/sazearte|sazearte>",
                "title": "#559 Unrecognized Distribution type: Centos",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/559",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491404081.856537",
        "date": 1491404081856
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/557#issuecomment-291873926|#557: Problems installing programs inside container>",
                "text": "We can wait until @gmkurtzer merges the PR into development.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/557#issuecomment-291873926|#557: Problems installing programs inside container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491401535.065614",
        "date": 1491401535065
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#558 Cannot run post scriptlet when using /bin/sh symlinked to busybox' https://github.com/singularityware/singularity/issues/558 by hcraT",
                "text": "Hi,\nwhen I try to use a boootstrap post script in an image based on alpine that have `/bin/sh` symlinked to `/bin/busybox`.\n\nThe error is this:\n```ERROR: Could not run post scriptlet, /bin/sh not found in container\n```\n\nI've digged a bit and pinned down the problem due to <https://github.com/singularityware/singularity/blob/master/libexec/bootstrap/modules-v2/postbootstrap.sh#L203|line 203 in postbootstrap.sh>:\n```if [ -x \"$SINGULARITY_ROOTFS/bin/sh\" ]; then\n```\n\nIf the line could be changed to:\n```if [ -x \"$SINGULARITY_ROOTFS/bin/sh\" -o -L \"$SINGULARITY_ROOTFS/bin/sh\" ]; then\n```\nthis could be fixed.\n\nFor the record I was able to correctly bootstrap the image anyway with this script:\n```\nBootstrap: docker\nFrom: alpine:3.5\n\n%setup\nrm $SINGULARITY_ROOTFS/bin/sh\ncat &gt; \"$SINGULARITY_ROOTFS/bin/sh\" &lt;&lt; EOF\n#!/bin/busybox sh\nexec /bin/busybox sh \"\\$@\"\nEOF\nchmod 0755 \"$SINGULARITY_ROOTFS/bin/sh\"\n\n%post\necho \"hello world\"\n```",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/hcraT|hcraT>",
                "title": "#558 Cannot run post scriptlet when using /bin/sh symlinked to busybox",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/558",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491401001.909682",
        "date": 1491401001909
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/557#issuecomment-291828934|#557: Problems installing programs inside container>",
                "text": "Then I believe this issue is closed (should I close it?)",
                "pretext": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/557#issuecomment-291828934|#557: Problems installing programs inside container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491390634.804820",
        "date": 1491390634804
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/557#issuecomment-291828508|#557: Problems installing programs inside container>",
                "text": "np! I think this should resolve the issue:\n\n<https://github.com/singularityware/singularity/pull/553#issuecomment-291827493>\n\nthese layers are a rather sticky peanut butter and jelly sandwhich, it seems! We thought that they were out of order and reversed, but the real bug was that we were using chunky instead of smooth PB (permissions). Put them in upside down and it's just weird, lol. Hopefully we got it right this time :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/557#issuecomment-291828508|#557: Problems installing programs inside container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491390514.787993",
        "date": 1491390514787
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-291827493|#553: Updating logger to be class with functions for mapping and level information>",
                "text": "@gmkurtzer just to be clear, the issue at #557 was fixed by reversing the layers dump back to how we originally had it, which we thought was a fix for the original docker permissions issue, but it wasn't. To verify the (old) bug is still fixed with changing the layers back, I re-tested the original command:\n\n```bash\nvanessa@vanessa-ThinkPad-T450s:~$ singularity shell docker://blacklabelops/centos   \nINFO:python:Docker image path: index.docker.io/blacklabelops/centos:latest\nINFO:python:Cache folder set to /home/vanessa/.singularity/docker\nImporting: base Singularity environment\nExploding layer: sha256:45a2e645736c4c66ef34acce2407ded21f7a9b231199d3b92d6c9776df264729.tar.gz\nExploding layer: sha256:9b1c42aabd4ab6bc9f1d5b9adc09373129d740829435a6272c9b15b1f57eb9bd.tar.gz\nExploding layer: sha256:31ed0535b3812c1058299c63d15e1c838f80900d0d269cde4f0f933a5886c782.tar.gz\nSingularity: Invoking an interactive shell within container...\n\nSingularity centos:~&gt; \n```\n\nand note with `--debug` there were a ton of print lines about changing permissions. So I think this is the correct thing to do.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-291827493|#553: Updating logger to be class with functions for mapping and level information>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491390204.742745",
        "date": 1491390204742
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/557#issuecomment-291826427|#557: Problems installing programs inside container>",
                "text": "Thank you for the incredible response (both in time and in breadth)!\n\nIf there is anything I can do to help in resolving this further do not hesitate to ping me.",
                "pretext": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/557#issuecomment-291826427|#557: Problems installing programs inside container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491389895.694804",
        "date": 1491389895694
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/557#issuecomment-291825736|#557: Problems installing programs inside container>",
                "text": "heya @nordmoen ! I was able to reproduce your error - first I tried the above commands with Docker (it worked ok) and then via a Singularity bootstrap (with development branch) and I got the same error.\n\nI'm not totally sure about the cause - but methinks it has to do with some bug related to the package lists. Here is a hack I was able to do to get a working version:\n\n```bash\nBootstrap: docker\nFrom: ros:kinetic\n\n%post\nmv /etc/apt/sources.list /etc/apt/sources.list.bak\n\necho \"deb <http://us.archive.ubuntu.com/ubuntu/> xenial main restricted universe multiverse \ndeb-src <http://us.archive.ubuntu.com/ubuntu/> xenial main restricted universe multiverse\ndeb <http://us.archive.ubuntu.com/ubuntu/> xenial-security main restricted universe multiverse \ndeb <http://us.archive.ubuntu.com/ubuntu/> xenial-updates main restricted universe multiverse \ndeb <http://us.archive.ubuntu.com/ubuntu/> xenial-proposed main restricted universe multiverse \ndeb <http://us.archive.ubuntu.com/ubuntu/> xenial-backports main restricted universe multiverse \ndeb-src <http://us.archive.ubuntu.com/ubuntu/> xenial-security main restricted universe multiverse \ndeb-src <http://us.archive.ubuntu.com/ubuntu/> xenial-updates main restricted universe multiverse \ndeb-src <http://us.archive.ubuntu.com/ubuntu/> xenial-proposed main restricted universe multiverse \ndeb-src <http://us.archive.ubuntu.com/ubuntu/> xenial-backports main restricted universe multiverse\" &gt;&gt; /etc/apt/sources.list\n\napt-key adv --keyserver keyserver.ubuntu.com --recv-keys 5523BAEEB01FA116\napt-get update\napt-get install --no-install-recommends -y\\\n   libgazebo7-dev \\\n    ros-kinetic-gazebo-ros-pkgs \\\n    ros-kinetic-gazebo-ros-control\napt-get autoremove -y\napt-get clean\n```\n\nbasically, I reset the lists, add a missing key, and then do the same commands, and it seems to work.  I also compared the docker layers list to the order that we extract:\n\n```Exploding layer: sha256:fe56bbca99ef0d01cfd0a1cd244d502d2bc4a9ff1644c57f90430ef3dccfff2b.tar.gz\nExploding layer: sha256:c4753b19db0ec26e7b3d18884d900e5827878528783ee5ac92d1695a4ccec137.tar.gz\nExploding layer: sha256:ea91dbe33db172402ef57a520781bef17085c0f26a42a7b2066880b922c93583.tar.gz\nExploding layer: sha256:e5003b0d605e2203c3e9ba8c867e714e20f8ae0eaba37475a09972699a884149.tar.gz\nExploding layer: sha256:16bb9a4db6811f43eded43ebc997ba4e6927c971a977bbb862cec8da5e2336c8.tar.gz\nExploding layer: sha256:93dc4092c5d90c1607a121e316eb47bd297ce7e777ea026dcd7839ed18b14adb.tar.gz\nExploding layer: sha256:a0e02147b7fbec400f0f9749bbbe7062a4528576d55099323013ea9d97770a0e.tar.gz\nExploding layer: sha256:13ddfb9aebdf97ec2fada9528c63adccc3dac5b78d475e96196462d9c3f8d988.tar.gz\nExploding layer: sha256:6d9ef359eaaa311860550b478790123c4b22a2eaede8f8f46691b0b4433c08cf.tar.gz\nExploding layer: sha256:9654c40e9079e3d5b271ec71f6d83f8ce80cfa6f09d9737fc6bfd4d2456fed3f.tar.gz\nExploding layer: sha256:e8db7bf7c39fab6fec91b1b61e3914f21e60233c9823dd57c60bc360191aaf0d.tar.gz\nExploding layer: sha256:f8b845f45a87dc7c095b15f3d9661e640ebc86f42cd8e8ab36674846472027f7.tar.gz\nExploding layer: sha256:d54efb8db41d4ac23d29469940ec92da94c9a6c2d9e26ec060bebad1d1b0e48d.tar.gz\nExploding layer: sha256:f4fc4a53278bd2bb689e95f52c60b277eddc750457a2fa5e85b48983f9526964.tar.gz\n```\n\nand docker\n\n```Unable to find image 'ros:kinetic' locally\nkinetic: Pulling from library/ros\nd54efb8db41d: Already exists \nf8b845f45a87: Already exists \ne8db7bf7c39f: Already exists \n9654c40e9079: Already exists \n6d9ef359eaaa: Already exists \n13ddfb9aebdf: Already exists \na0e02147b7fb: Already exists \n93dc4092c5d9: Already exists \n16bb9a4db681: Already exists \ne5003b0d605e: Already exists \nea91dbe33db1: Already exists \nc4753b19db0e: Already exists \nfe56bbca99ef: Already exists \n```\n\nthe discrepancy of us having 14 \"layers\", and Docker only 13 is because the last is our metadata file:\n\n```sha256:f4fc4a53278bd2bb689e95f52c60b277eddc750457a2fa5e85b48983f9526964.tar.gz\n```\n\nso it might come down to this ordering issue again - I wonder if we goofed with regard to the order of extracting the layers? I did a quick test to undo the previous reverse that we had added, and it works:\n\n```bash\nsudo singularity bootstrap test.img Singularity \nSanitizing environment\nSetting envar: 'HOME' = '/root'\nBuilding from bootstrap definition recipe\nAdding base Singularity environment to container\nINFO:python:Docker image path: index.docker.io/library/ros:kinetic\nINFO:python:Cache folder set to /root/.singularity/docker\nExploding layer: sha256:d54efb8db41d4ac23d29469940ec92da94c9a6c2d9e26ec060bebad1d1b0e48d.tar.gz\nExploding layer: sha256:f8b845f45a87dc7c095b15f3d9661e640ebc86f42cd8e8ab36674846472027f7.tar.gz\nExploding layer: sha256:e8db7bf7c39fab6fec91b1b61e3914f21e60233c9823dd57c60bc360191aaf0d.tar.gz\nExploding layer: sha256:9654c40e9079e3d5b271ec71f6d83f8ce80cfa6f09d9737fc6bfd4d2456fed3f.tar.gz\nExploding layer: sha256:6d9ef359eaaa311860550b478790123c4b22a2eaede8f8f46691b0b4433c08cf.tar.gz\nExploding layer: sha256:13ddfb9aebdf97ec2fada9528c63adccc3dac5b78d475e96196462d9c3f8d988.tar.gz\nExploding layer: sha256:a0e02147b7fbec400f0f9749bbbe7062a4528576d55099323013ea9d97770a0e.tar.gz\nExploding layer: sha256:93dc4092c5d90c1607a121e316eb47bd297ce7e777ea026dcd7839ed18b14adb.tar.gz\nExploding layer: sha256:16bb9a4db6811f43eded43ebc997ba4e6927c971a977bbb862cec8da5e2336c8.tar.gz\nExploding layer: sha256:e5003b0d605e2203c3e9ba8c867e714e20f8ae0eaba37475a09972699a884149.tar.gz\nExploding layer: sha256:ea91dbe33db172402ef57a520781bef17085c0f26a42a7b2066880b922c93583.tar.gz\nExploding layer: sha256:c4753b19db0ec26e7b3d18884d900e5827878528783ee5ac92d1695a4ccec137.tar.gz\nExploding layer: sha256:fe56bbca99ef0d01cfd0a1cd244d502d2bc4a9ff1644c57f90430ef3dccfff2b.tar.gz\nExploding layer: sha256:f4fc4a53278bd2bb689e95f52c60b277eddc750457a2fa5e85b48983f9526964.tar.gz\nRunning post scriptlet\nâ€¢ apt-get update\n     Get:1 <http://packages.ros.org/ros/ubuntu> xenial InRelease [4037 B]\n     0% [1 InRelease gpgv 4037 B] [Waiting for headers]gpgv: Signature made Wed Mar 29 01:12:32 2017 UTC using DSA key ID B01FA116\n     gpgv: Good signature from \"ROS Builder <mailto:rosbuild@ros.org|rosbuild@ros.org>\"\n     Hit:2 <http://archive.ubuntu.com/ubuntu> xenial InRelease\n     ```\n\nso I think the bug is that we had it right, attributed a permissions issue to this and reversed, and now it's broken. But I think we would want testing of the old error to make sure this is it. ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/557#issuecomment-291825736|#557: Problems installing programs inside container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491389705.667290",
        "date": 1491389705667
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#557 Problems installing programs inside container' https://github.com/singularityware/singularity/issues/557 by nordmoen",
                "text": "Hi.\n\nI'm trying to create a Singularity container with ROS from a docker image (<https://hub.docker.com/r/library/ros/tags/|ros:kinetic>). Importing the image works fine, but when I try to install programs in `%post` the Ubuntu container can't find the program. I'm trying to install <http://packages.ubuntu.com/xenial/libgazebo7-dev|libgazebo7-dev> which works fine in a docker build and local Ubuntu install, but doesn't work in `%post`.\n\nI'm running Fedora 25 on my machine and have tried the build on the master branch and the latest developer branch, but neither are working.\n\nMy `Singularity` file (simplified) is as follows:\n```\nBootstrap: docker\nFrom: ros:kinetic\n\n%post\n    apt-get update\n    apt-get install --no-install-recommends -y\\\n       libgazebo7-dev \\\n       ros-kinetic-gazebo-ros-pkgs \\\n       ros-kinetic-gazebo-ros-control\n    apt-get autoremove -y\n    apt-get clean\n```The error message from the container is:\n```\nâ€¢ apt-get install --no-install-recommends -y libgazebo7-dev ros-kinetic-gazebo-ros-pkgs ros-kinetic-gazebo-ros-control\n     Reading package lists... Done\n     Building dependency tree       \n     Reading state information... Done\n     Package libgazebo7-dev is not available, but is referred to by another package.\n     This may mean that the package is missing, has been obsoleted, or\n     is only available from another source\n\nE: Package 'libgazebo7-dev' has no installation candidate\n```",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/nordmoen|nordmoen>",
                "title": "#557 Problems installing programs inside container",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/557",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491382090.377495",
        "date": 1491382090377
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/369|#369 Use environment of imported Docker images> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/369|#369 Use environment of imported Docker images> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491360101.014224",
        "date": 1491360101014
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/369#issuecomment-291726227|#369: Use environment of imported Docker images>",
                "text": "I'm also going to close this legacy PR  - please reopen if we missed something!",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/369#issuecomment-291726227|#369: Use environment of imported Docker images>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491360101.014196",
        "date": 1491360101014
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/376|#376 Flx42 docker image environment> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/376|#376 Flx42 docker image environment> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491360068.011375",
        "date": 1491360068011
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/376#issuecomment-291726079|#376: Flx42 docker image environment>",
                "text": "I think we have this taken care of now with development - I'm going to close, please ping and reopen if needed!",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/376#issuecomment-291726079|#376: Flx42 docker image environment>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491360068.011367",
        "date": 1491360068011
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by dpjensen on issue <https://github.com/singularityware/singularity/issues/556#issuecomment-291615341|#556: `singularity shell` Segfault in action.c in development branch 10f8821>",
                "text": "Yah, the current `shell.exec` script in the master branch has this:\n```if [ -n \"${SINGULARITY_SHELL:-}\" ]; then\n    SHELL=\"$SINGULARITY_SHELL\"\nelse\n    SHELL=\"/bin/sh\"\nfi\n```\nI don't see anything similar in the development version. ",
                "pretext": "[singularityware/singularity] New comment by dpjensen on issue <https://github.com/singularityware/singularity/issues/556#issuecomment-291615341|#556: `singularity shell` Segfault in action.c in development branch 10f8821>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491336125.346063",
        "date": 1491336125346
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/556#issuecomment-291610326|#556: `singularity shell` Segfault in action.c in development branch 10f8821>",
                "text": "ah great! We did just tweak the shell, I think it should be pretty easy for @gmkurtzer to add that variable to the shell.exec.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/556#issuecomment-291610326|#556: `singularity shell` Segfault in action.c in development branch 10f8821>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491334956.039648",
        "date": 1491334956039
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by dpjensen on issue <https://github.com/singularityware/singularity/issues/556#issuecomment-291597802|#556: `singularity shell` Segfault in action.c in development branch 10f8821>",
                "text": "The VM is Fedora-25 running in Vagrant backed by libvirt. I can't find any combination of sudo/non-sudo operations that doesn't result in a segfault. However, I did some more poking around, and it appears the bug is caused by  `shell.exec` script not setting the `SINGULARITY_SHELL` environment variable. I can get it to run by explicitly passing a shell path:\n\n```\nsingularity shell -s /usr/bin/bash test2.img \nSingularity: Invoking an interactive shell within container...\n\nSingularity test2.img:~&gt; exit\nexit\n[vagrant@localhost ~]$ singularity shell test2.img \nSegmentation fault (core dumped)\n```",
                "pretext": "[singularityware/singularity] New comment by dpjensen on issue <https://github.com/singularityware/singularity/issues/556#issuecomment-291597802|#556: `singularity shell` Segfault in action.c in development branch 10f8821>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491332091.711549",
        "date": 1491332091711
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-291590498|#553: Updating logger to be class with functions for mapping and level information>",
                "text": "@gmkurtzer ready for merge!",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-291590498|#553: Updating logger to be class with functions for mapping and level information>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491330510.274066",
        "date": 1491330510274
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/556#issuecomment-291590422|#556: `singularity shell` Segfault in action.c in development branch 10f8821>",
                "text": "A bug I can trigger is to create the image with sudo and then try to import, maybe this is along the same lines of what you are seeing:\n\n```vanessa@vanessa-ThinkPad-T450s:~/Desktop$ singularity import test2.img docker://ubuntu\nINFO:python:Docker image path: index.docker.io/library/ubuntu:latest\nINFO:python:Cache folder set to /home/vanessa/.singularity/docker\nImporting: base Singularity environment\nERROR  : Could not open image test2.img: Permission denied\nABORT  : Retval = 255\n```\n\nbut this makes sense given that the image permission was created with sudo. But it works fine with sudo import:\n\n```bash\n sudo singularity import test2.img docker://ubuntu\nINFO:python:Docker image path: index.docker.io/library/ubuntu:latest\nINFO:python:Cache folder set to /root/.singularity/docker\nImporting: base Singularity environment\nImporting: /root/.singularity/docker/sha256:6d9ef359eaaa311860550b478790123c4b22a2eaede8f8f46691b0b4433c08cf.tar.gz\nImporting: /root/.singularity/docker/sha256:9654c40e9079e3d5b271ec71f6d83f8ce80cfa6f09d9737fc6bfd4d2456fed3f.tar.gz\nImporting: /root/.singularity/docker/sha256:e8db7bf7c39fab6fec91b1b61e3914f21e60233c9823dd57c60bc360191aaf0d.tar.gz\nImporting: /root/.singularity/docker/sha256:f8b845f45a87dc7c095b15f3d9661e640ebc86f42cd8e8ab36674846472027f7.tar.gz\nImporting: /root/.singularity/docker/sha256:d54efb8db41d4ac23d29469940ec92da94c9a6c2d9e26ec060bebad1d1b0e48d.tar.gz\nImporting: /root/.singularity/docker/sha256:fe44851d529f465f9aa107b32351c8a0a722fc0619a2a7c22b058084fac068a4.tar.gz\n singularity shell test2.img \nSingularity: Invoking an interactive shell within container...\n\nSingularity test2.img:~/Desktop&gt;\n```\n\nJust curious - you get the same result if you do sudo/sudo and non sudo / non sudo?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/556#issuecomment-291590422|#556: `singularity shell` Segfault in action.c in development branch 10f8821>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491330497.270130",
        "date": 1491330497270
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/556#issuecomment-291589457|#556: `singularity shell` Segfault in action.c in development branch 10f8821>",
                "text": "Could you give information about the VM so I can reproduce? Locally (on Ubuntu 16.04) it works ok (I tried below for run first...)\n\n``` singularity run docker://ubuntu\nINFO:python:Docker image path: index.docker.io/library/ubuntu:latest\nINFO:python:Cache folder set to /home/vanessa/.singularity/docker\nImporting: base Singularity environment\nExploding layer: sha256:6d9ef359eaaa311860550b478790123c4b22a2eaede8f8f46691b0b4433c08cf.tar.gz\nExploding layer: sha256:9654c40e9079e3d5b271ec71f6d83f8ce80cfa6f09d9737fc6bfd4d2456fed3f.tar.gz\nExploding layer: sha256:e8db7bf7c39fab6fec91b1b61e3914f21e60233c9823dd57c60bc360191aaf0d.tar.gz\nExploding layer: sha256:f8b845f45a87dc7c095b15f3d9661e640ebc86f42cd8e8ab36674846472027f7.tar.gz\nExploding layer: sha256:d54efb8db41d4ac23d29469940ec92da94c9a6c2d9e26ec060bebad1d1b0e48d.tar.gz\nExploding layer: sha256:fe44851d529f465f9aa107b32351c8a0a722fc0619a2a7c22b058084fac068a4.tar.gz\n```\n\nand then import without sudo\n\n```vanessa@vanessa-ThinkPad-T450s:~/Desktop$ singularity create test2.img\nInitializing Singularity image subsystem\nOpening image file: test2.img\nCreating 768MiB image\nBinding image to loop\nCreating file system within image\nImage is done: test2.img\nvanessa@vanessa-ThinkPad-T450s:~/Desktop$ singularity import test2.img docker://ubuntu\nINFO:python:Docker image path: index.docker.io/library/ubuntu:latest\nINFO:python:Cache folder set to /home/vanessa/.singularity/docker\nImporting: base Singularity environment\nImporting: /home/vanessa/.singularity/docker/sha256:6d9ef359eaaa311860550b478790123c4b22a2eaede8f8f46691b0b4433c08cf.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:9654c40e9079e3d5b271ec71f6d83f8ce80cfa6f09d9737fc6bfd4d2456fed3f.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:e8db7bf7c39fab6fec91b1b61e3914f21e60233c9823dd57c60bc360191aaf0d.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:f8b845f45a87dc7c095b15f3d9661e640ebc86f42cd8e8ab36674846472027f7.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:d54efb8db41d4ac23d29469940ec92da94c9a6c2d9e26ec060bebad1d1b0e48d.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:fe44851d529f465f9aa107b32351c8a0a722fc0619a2a7c22b058084fac068a4.tar.gz\nvanessa@vanessa-ThinkPad-T450s:~/Desktop$ \n```\n\nso I'm thinking it might be related to the VM?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/556#issuecomment-291589457|#556: `singularity shell` Segfault in action.c in development branch 10f8821>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491330291.213973",
        "date": 1491330291213
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#556 `singularity shell` Segfault in action.c in development branch 10f8821' https://github.com/singularityware/singularity/issues/556 by dpjensen",
                "text": "On my test VM,  in the development branch (10f8821f341e3e2ff9d9454573a32d944527e7f4), `singularity shell` results in a segfault:\n```$ sudo singularity create test2.img\nInitializing Singularity image subsystem\nOpening image file: test2.img\nCreating 768MiB image\nBinding image to loop\nCreating file system within image\nImage is done: test2.img\n$ sudo singularity import test2.img docker://ubuntu\nCache folder set to /root/.singularity/docker\nImporting: base Singularity environment\nImporting: /root/.singularity/docker/sha256:6d9ef359eaaa311860550b478790123c4b22a2eaede8f8f46691b0b4433c08cf.tar.gz\nImporting: /root/.singularity/docker/sha256:9654c40e9079e3d5b271ec71f6d83f8ce80cfa6f09d9737fc6bfd4d2456fed3f.tar.gz\nImporting: /root/.singularity/docker/sha256:e8db7bf7c39fab6fec91b1b61e3914f21e60233c9823dd57c60bc360191aaf0d.tar.gz\nImporting: /root/.singularity/docker/sha256:f8b845f45a87dc7c095b15f3d9661e640ebc86f42cd8e8ab36674846472027f7.tar.gz\nImporting: /root/.singularity/docker/sha256:d54efb8db41d4ac23d29469940ec92da94c9a6c2d9e26ec060bebad1d1b0e48d.tar.gz\nImporting: /root/.singularity/docker/sha256:fe44851d529f465f9aa107b32351c8a0a722fc0619a2a7c22b058084fac068a4.tar.gz\n$ singularity shell test2.img \nSegmentation fault (core dumped)\n```\nThe resulting core dump looks like this:\n\n```(gdb) bt\n#0  0x00007f2ffe336046 in strlen () from /lib64/libc.so.6\n#1  0x00007f2ffe2e2fe1 in __add_to_environ () from /lib64/libc.so.6\n#2  0x00000000004027be in main (argc=1, argv=0x7ffeb1dbf5d8) at action.c:105\n```\n\nI did a little hunting around, and it appears that  <https://github.com/singularityware/singularity/blob/development/src/util/registry.c#L101|this> is returning a NULL. \n\nI added a debug statement to the above function:\n```    if ( hsearch_r(keypair(upperkey, NULL), FIND, &amp;found, &amp;htab) == 0 ) {\n```    singularity_message(DEBUG, \"About to return NULL: '%s'\\n\", upperkey);\n    return(NULL);\n\n}```\n```\nAnd ran with `--debug` , and sure enough...\n```DEBUG   [U=1001,P=31887]   singularity_priv_drop_perm()              Finished dropping privileges\nDEBUG   [U=1001,P=31887]   singularity_registry_get()                About to return NULL: 'SHELL'\nSegmentation fault (core dumped)\n```\nIt would appear that `setenv()` is getting passed a NULL value, resulting in the segfault.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/dpjensen|dpjensen>",
                "title": "#556 `singularity shell` Segfault in action.c in development branch 10f8821",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/556",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491329986.129084",
        "date": 1491329986129
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-291574943|#553: Updating logger to be class with functions for mapping and level information>",
                "text": "it looks like there are issues with getting dependency packages on travis, and the build is likely to fail. It passed previously and should be ready to go if you want to merge, if you don't trust me you can wait for travis, rebuild, and then merge.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-291574943|#553: Updating logger to be class with functions for mapping and level information>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491327315.378456",
        "date": 1491327315378
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-291574436|#553: Updating logger to be class with functions for mapping and level information>",
                "text": "travis failed with an `apt-get` ?? /facepalm",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-291574436|#553: Updating logger to be class with functions for mapping and level information>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491327205.347855",
        "date": 1491327205347
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/552|#552 cannot find group id error on run> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/552|#552 cannot find group id error on run> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491327116.322816",
        "date": 1491327116322
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/552#issuecomment-291573867|#552: cannot find group id error on run>",
                "text": "ok with latest push to #553 this works now as follows:\n\n```bash\nsingularity run docker://ubuntu:latest\nINFO:python:Docker image path: index.docker.io/library/ubuntu:latest\nINFO:python:Cache folder set to /home/vanessa/.singularity/docker\nImporting: base Singularity environment\nExploding layer: sha256:6d9ef359eaaa311860550b478790123c4b22a2eaede8f8f46691b0b4433c08cf.tar.gz\nExploding layer: sha256:9654c40e9079e3d5b271ec71f6d83f8ce80cfa6f09d9737fc6bfd4d2456fed3f.tar.gz\nExploding layer: sha256:e8db7bf7c39fab6fec91b1b61e3914f21e60233c9823dd57c60bc360191aaf0d.tar.gz\nExploding layer: sha256:f8b845f45a87dc7c095b15f3d9661e640ebc86f42cd8e8ab36674846472027f7.tar.gz\nExploding layer: sha256:d54efb8db41d4ac23d29469940ec92da94c9a6c2d9e26ec060bebad1d1b0e48d.tar.gz\nExploding layer: sha256:fe44851d529f465f9aa107b32351c8a0a722fc0619a2a7c22b058084fac068a4.tar.gz\n\n```\nLooks good? I'm happy with the fix and level of verbosity! :D ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/552#issuecomment-291573867|#552: cannot find group id error on run>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491327095.316810",
        "date": 1491327095316
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-291573298|#553: Updating logger to be class with functions for mapping and level information>",
                "text": "I'm going to change one more \"info\" to \"debug\" but the PR should still pass.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-291573298|#553: Updating logger to be class with functions for mapping and level information>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491326976.282604",
        "date": 1491326976282
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-291572842|#553: Updating logger to be class with functions for mapping and level information>",
                "text": "@gmkurtzer ready for merge.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-291572842|#553: Updating logger to be class with functions for mapping and level information>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491326878.255151",
        "date": 1491326878255
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/552#issuecomment-291568261|#552: cannot find group id error on run>",
                "text": "It looks like these printings as infos:\n\n````bash\nINFO:python:\n*** STARTING DOCKER IMPORT PYTHON  ****\nINFO:python:Docker layers and (env,labels,runscript) will be written to: /tmp/.singularity-layers.gsK23d0e\nINFO:python:Starting Docker IMPORT, includes environment, runscript, and metadata.\nINFO:python:Docker image: ubuntu:latest\nINFO:python:Specified Docker ENTRYPOINT as %runscript.\nINFO:python:Registry: index.docker.io\nINFO:python:Namespace: library\nINFO:python:Repo Name: ubuntu\nINFO:python:Repo Tag: latest\nINFO:python:Version: None\nINFO:python:Docker image path: index.docker.io/library/ubuntu:latest\nINFO:python:Image manifest version 2.2 found.\nINFO:python:Adding digest sha256:d54efb8db41d4ac23d29469940ec92da94c9a6c2d9e26ec060bebad1d1b0e48d\nINFO:python:Adding digest sha256:f8b845f45a87dc7c095b15f3d9661e640ebc86f42cd8e8ab36674846472027f7\nINFO:python:Adding digest sha256:e8db7bf7c39fab6fec91b1b61e3914f21e60233c9823dd57c60bc360191aaf0d\nINFO:python:Adding digest sha256:9654c40e9079e3d5b271ec71f6d83f8ce80cfa6f09d9737fc6bfd4d2456fed3f\nINFO:python:Adding digest sha256:6d9ef359eaaa311860550b478790123c4b22a2eaede8f8f46691b0b4433c08cf\nINFO:python:Cache folder set to /home/vanessa/.singularity/docker\nINFO:python:Found Docker command (Entrypoint) None\nINFO:python:Found Docker command (Cmd) /bin/bash\nINFO:python:Found Docker command (Env) PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nINFO:python:Found Docker command (Labels) {}\nINFO:python:*** FINISHING DOCKER IMPORT PYTHON PORTION ****\n```\n\nShould probably just be changed to debug and not shown.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/552#issuecomment-291568261|#552: cannot find group id error on run>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491325905.985267",
        "date": 1491325905985
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/552#issuecomment-291566210|#552: cannot find group id error on run>",
                "text": "That issue seems fixed - but did you change the message level variable? It seems to be broken.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/552#issuecomment-291566210|#552: cannot find group id error on run>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491325464.863848",
        "date": 1491325464863
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-291561224|#553: Updating logger to be class with functions for mapping and level information>",
                "text": "@gmkurtzer the logman has been that way already, he's not new lol. You are going to hold off merging for that!?",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-291561224|#553: Updating logger to be class with functions for mapping and level information>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491324449.581817",
        "date": 1491324449581
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-291554944|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "text": ":confused: I don't think so.  I spun up a virtual machine and did a side-by-side install of 2.2.1 and <https://github.com/singularityware/singularity/commit/c8906782b91bd42f786be4c59e15eea640de18c6> .  Then I used both to bootstrap `rstudio.def` from above.  2.2.1 bootstraps without assistance, while the development branch wants input.  Very weird.  Here is the history.\n```\n    1  sudo apt-get update &amp;&amp; sudo apt-get -y install dh-autoreconf python debootstrap build-essential\n    2  cat &gt; rstudio.def &lt;&lt; 'EOF'\nBootStrap: debootstrap\nOSVersion: xenial\nMirrorURL: <http://us.archive.ubuntu.com/ubuntu/>\n\n%post\n    locale-gen en_US.UTF-8\n    sed -i 's/$/ universe/' /etc/apt/sources.list\n    echo \"deb <http://cran.rstudio.com/bin/linux/ubuntu> xenial/\" | tee -a /etc/apt/sources.list\n    gpg --keyserver keyserver.ubuntu.com --recv-key E084DAB9\n    gpg -a --export E084DAB9 | apt-key add -\n    apt-get -y update\n    apt-get -y --force-yes install vim r-base r-base-dev wget xorg gdebi-core libxslt1.1\n    wget <https://download1.rstudio.org/rstudio-0.99.896-amd64.deb>\n    gdebi -n rstudio-0.99.896-amd64.deb\n    rm rstudio-0.99.896-amd64.deb\nEOF\n```3  wget https://github.com/singularityware/singularity/releases/download/2.2.1/singularity-2.2.1.tar.gz\n4  tar xvf singularity-2.2.1.tar.gz\n5  rm singularity-2.2.1.tar.gz\n6  cd singularity-2.2.1/\n7  ./configure --prefix /home/ubuntu/sing-2.2.1\n8  sudo make install\n9  cd```\n   10  git clone <https://github.com/singularityware/singularity.git>\n   11  cd singularity\n   12  git fetch\n   13  git checkout development\n   14  ./autogen.sh\n   15  ./configure --prefix=/home/ubuntu/sing-dev\n   16  sudo make install\n   17  cd\n   18  /home/ubuntu/sing-dev/bin/singularity\n   19  sudo /home/ubuntu/sing-dev/bin/singularity create -s 2000 rstudio.img\n   20  sudo /home/ubuntu/sing-dev/bin/singularity boostrap rstudio.img rstudio.def # error\n   21  sudo /home/ubuntu/sing-dev/bin/singularity bootstrap rstudio.img rstudio.def\n   22  clear\n   23  ll\n   24  rm rstudio.img\n   25  sudo /home/ubuntu/sing-2.2.1/bin/singularity create -s 2000 rstudio.img\n   26  sudo /home/ubuntu/sing-2.2.1/bin/singularity bootstrap rstudio.img rstudio.def\n   27  history\n```I did see the following warning, so maybe if I update the .def file, thing will be different:\n```\n --force-yes is deprecated, use one of the options starting with --allow instead.\n```\nBut I still don't understand why I'm seeing different behavior from the two versions.  ",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-291554944|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491323176.228634",
        "date": 1491323176228
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on pull request <https://github.com/singularityware/singularity/pull/554#issuecomment-291547105|#554: added CI legacy tests (new image with old singularity)>",
                "text": ":smile_cat: ",
                "pretext": "[singularityware/singularity] New comment by GodloveD on pull request <https://github.com/singularityware/singularity/pull/554#issuecomment-291547105|#554: added CI legacy tests (new image with old singularity)>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491321651.787934",
        "date": 1491321651787
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/554|#554 added CI legacy tests (new image with old singularity)> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/554|#554 added CI legacy tests (new image with old singularity)> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491317996.648151",
        "date": 1491317996648
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/554#issuecomment-291527374|#554: added CI legacy tests (new image with old singularity)>",
                "text": "Looks great, thanks @GodloveD!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/554#issuecomment-291527374|#554: added CI legacy tests (new image with old singularity)>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491317986.644954",
        "date": 1491317986644
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/495#issuecomment-291523221|#495: HOME=/ and nobody user problem>",
                "text": "Fantastic, thanks for confirming @rynge! I'm closing the issue... I love closing issues. haha.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/495#issuecomment-291523221|#495: HOME=/ and nobody user problem>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491317215.407249",
        "date": 1491317215407
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/495|#495 HOME=/ and nobody user problem> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/495|#495 HOME=/ and nobody user problem> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491317215.407200",
        "date": 1491317215407
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-291523029|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "text": "I love being right,.. well sometimes, when I can control it. Maybe it is a different version of the Xorg package?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-291523029|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491317178.395997",
        "date": 1491317178395
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-291522205|#553: Updating logger to be class with functions for mapping and level information>",
                "text": "This looks good to me. The only thing I would add is that it might make sense to use the same nomenclature that we have for the shell and C interfaces (e.g. message/singularity_message, instead of logman), but other then the pedantics of nomenclature, this looks awesome! :-D",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-291522205|#553: Updating logger to be class with functions for mapping and level information>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491317022.348517",
        "date": 1491317022348
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/552#issuecomment-291520530|#552: cannot find group id error on run>",
                "text": "I just committed a change that includes system groups (GIDs &lt; 500) to be included in the container's groups. Can you test latest development branch, and close if satisfactory?\n\nThank you!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/552#issuecomment-291520530|#552: cannot find group id error on run>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491316705.253190",
        "date": 1491316705253
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/555|#555 Add files via upload> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/555|#555 Add files via upload> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491316555.207938",
        "date": 1491316555207
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#555 Add files via upload' https://github.com/singularityware/singularity/pull/555 by paulo7777",
                "text": "Fixes #\n\nChanges proposed in this pull request\nâ€¢ Added a sample file for CentOS, CUDA, CUDA-Aware OpenMPI\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/paulo7777|paulo7777>",
                "title": "#555 Add files via upload",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/555",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491304626.602316",
        "date": 1491304626602
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#554 added CI legacy tests (new image with old singularity)' https://github.com/singularityware/singularity/pull/554 by GodloveD",
                "text": "Tests for regression pertinent to #529 \n\nChanges proposed in this pull request\n\nâ€¢ .travis.yml will now download and install Singularity 2.2.1\nâ€¢ A new set of tests will create a container with latest singularity and test functionality with 2.2.1\nâ€¢ These tests will not run if `/usr/local/singularity-2.2.1-legacytests`does not exist.  So they will be skipped if `make test` is run outside of Travis CI environment.\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/GodloveD|GodloveD>",
                "title": "#554 added CI legacy tests (new image with old singularity)",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/554",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491304343.561860",
        "date": 1491304343561
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/542|#542 Python namespace collision on Cray XC40 SMW for `make dist`> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/542|#542 Python namespace collision on Cray XC40 SMW for `make dist`> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491236260.390724",
        "date": 1491236260390
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/542#issuecomment-291193490|#542: Python namespace collision on Cray XC40 SMW for `make dist`>",
                "text": "Awesome! Thanks for checking, closing issue.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/542#issuecomment-291193490|#542: Python namespace collision on Cray XC40 SMW for `make dist`>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491236259.390647",
        "date": 1491236259390
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by dpjensen on issue <https://github.com/singularityware/singularity/issues/542#issuecomment-291188611|#542: Python namespace collision on Cray XC40 SMW for `make dist`>",
                "text": "@vsoch pulled down the dev branch, `make dist` and building completed without problems.",
                "pretext": "[singularityware/singularity] New comment by dpjensen on issue <https://github.com/singularityware/singularity/issues/542#issuecomment-291188611|#542: Python namespace collision on Cray XC40 SMW for `make dist`>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491235309.122726",
        "date": 1491235309122
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hra0031 on pull request <https://github.com/singularityware/singularity/pull/547#issuecomment-291081522|#547: Check/permissions fix!>",
                "text": "@vsoch If it is downloaded and not checked, the sha256 will be the same as is the name of the file. If it is checked, the sha256 will differ. Or we can run check_tar_permissions() every time. Both will decrease performance, but controlling sha256 of archives can be good for security.",
                "pretext": "[singularityware/singularity] New comment by hra0031 on pull request <https://github.com/singularityware/singularity/pull/547#issuecomment-291081522|#547: Check/permissions fix!>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491208640.499305",
        "date": 1491208640499
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by afif-elghraoui on issue <https://github.com/singularityware/singularity/issues/545#issuecomment-291006590|#545: support for rinse as a bootstrap agent for red hat and opensuse variants>",
                "text": "Sure, I think I can give it a go.",
                "pretext": "[singularityware/singularity] New comment by afif-elghraoui on issue <https://github.com/singularityware/singularity/issues/545#issuecomment-291006590|#545: support for rinse as a bootstrap agent for red hat and opensuse variants>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491159222.084537",
        "date": 1491159222084
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/544#issuecomment-290980809|#544: Add --silent option for disabling print statements>",
                "text": "This issue will close when #553 is merged.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/544#issuecomment-290980809|#544: Add --silent option for disabling print statements>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491132946.010791",
        "date": 1491132946010
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-290954153|#514: default python runs now send the singularity output to STDERR>",
                "text": "Yes, of course I knew this! The python logger was made matched to those levels, and as I showed in #553 now there is a function get_mapping that makes the mapping explicitly clear. When that PR is merged, we can close this issue.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-290954153|#514: default python runs now send the singularity output to STDERR>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491089513.796069",
        "date": 1491089513796
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by rynge on issue <https://github.com/singularityware/singularity/issues/495#issuecomment-290951837|#495: HOME=/ and nobody user problem>",
                "text": "That fixed the issue. I tried with my regular user, and user nobody, and it works as expected.\n\nThank you @gmkurtzer !",
                "pretext": "[singularityware/singularity] New comment by rynge on issue <https://github.com/singularityware/singularity/issues/495#issuecomment-290951837|#495: HOME=/ and nobody user problem>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491086387.690908",
        "date": 1491086387690
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-290948575|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "text": "You were right.  Version <https://github.com/singularityware/singularity/commit/94446cc6178563e4d4b86d957dc57d7b79484f45> thinks that `HOME=/home/ubuntu`.  And the latest version correctly sees `HOME=/root`.  But you are also correct that `xorg` should install silently.  I don't know why it isn't.  It does so in 2.2.1... ",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-290948575|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491082399.541933",
        "date": 1491082399541
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-290948573|#553: Updating logger to be class with functions for mapping and level information>",
                "text": "Hey @gmkurtzer ! Check out these changes. What I've done is updated the logger to be a class (`Logman`) instead of a variable imported from a file (which is a class, but one that doesn't have our own functions). It works similarity, except you import the logger class instead of the logger (now associated with the class):\n\n```python\n\n*Old way*\n\nfrom logman import logger\nlogger.debug(\"Oh no's!\")\n\n*New way*\n\nfrom logman import bot\nbot.logger.debug(\"Oh no's!\")\n```\n\nWhat this means is that I can add functions that made it easy to determine the level, and make it easy to understand the mapping between the Singularity C code and python. For example, to check if I should silent a (usually default) print statement, that is print exclusively for the user information and aesthetic, I can do:\n\n```if not bot.is_quiet():\n    print(\"The logger is not quiet.\")\n```\n\nI can also produce a data structure that gives information about the mappings:\n\n```python\nfrom logman import bot\n\nbot.is_quiet()\nFalse\n\nbot.get_mapping()\n\n{'ABRT': {'flags': ['--quiet', '-q'],\n  'python_effective_level': 50,\n  'python_level': 'logging.CRITICAL',\n  'singularity_levels': [-4]},\n 'DEFAULT': {'python_effective_level': 50,\n  'python_level': 'logging.FATAL',\n  'singularity_levels': [0]},\n 'ERROR': {'python_effective_level': 40,\n  'python_level': 'logging.ERROR',\n  'singularity_levels': [-3]},\n 'INFO': {'python_effective_level': 20,\n  'python_level': 'logging.INFO',\n  'singularity_levels': [1]},\n 'LOG': {'python_effective_level': 20,\n  'python_level': 'logging.INFO',\n  'singularity_levels': [1]},\n 'VERBOSE': {'python_effective_level': 10,\n  'python_level': 'logging.DEBUG',\n  'singularity_levels': [4]},\n 'VERBOSE1': {'python_effective_level': 10,\n  'python_level': 'logging.DEBUG',\n  'singularity_levels': [4]},\n 'VERBOSE2': {'python_effective_level': 10,\n  'python_level': 'logging.DEBUG',\n  'singularity_levels': [4]},\n 'VERBOSE3': {'python_effective_level': 10,\n  'python_level': 'logging.DEBUG',\n  'singularity_levels': [4]},\n 'WARNING': {'python_effective_level': 30,\n  'python_level': 'logging.WARNING',\n  'singularity_levels': [-2]}}\n```\n\nI think this is a good change because it will fix #544 and open up the door for future functionality for a user to spit a lot somewhere else, or even programatically post it to some more web based endpoint. Or do anything advanced with the logger, period. Let me know your thoughts.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-290948573|#553: Updating logger to be class with functions for mapping and level information>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491082395.541718",
        "date": 1491082395541
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/552#issuecomment-290941568|#552: cannot find group id error on run>",
                "text": "ok cool. By the way, having bash as the default shell is amazingly better - up to this point I've had no shell completion, and it's totally black and white (err, purple and white) instead of having any formatting. Now it looks beautiful, and works much better. Here are the groups:\n\n```lpadmin:x:108:vanessa\nsambashare:x:124:vanessa\nkvm:x:129:vanessa\nlibvirtd:x:130:vanessa\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/552#issuecomment-290941568|#552: cannot find group id error on run>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491074681.211865",
        "date": 1491074681211
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-290941381|#553: Making all prints logger infos>",
                "text": "hmm, not sure about that error in post.sh, I haven't seen it before. I want to try something different with the logger anyway , will update the PR.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-290941381|#553: Making all prints logger infos>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491074479.202242",
        "date": 1491074479202
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-290940861|#553: Making all prints logger infos>",
                "text": "So in the C and shell code, the default logging level is 1 and quiet is 0. INFO messages (e.g. `singularity_message(INFO, \"...\")` are at level 1, so they will get printed on the default log level or anything greater then 1. But when --quiet is requested and the messagelevel is set to 0, only warning and error messages will be displayed.\n\nDoes that fit with what you have? (Haven't looked at code yet, will do on keyboard shortly). ",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/553#issuecomment-290940861|#553: Making all prints logger infos>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491073928.177141",
        "date": 1491073928177
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/552#issuecomment-290940684|#552: cannot find group id error on run>",
                "text": "Yep, that means that groups are assigned that are not inside the container, and bash is whining about it (as of this morning, default shell for even ubuntu is bash if it exists in container).\n\nI will see if there is a good way of resolving this. Singularity will normally bring over any group declarations into the temporary group file at invocation that are over 500 (less then 500 are system groups). On the host, what groups are those?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/552#issuecomment-290940684|#552: cannot find group id error on run>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491073756.169643",
        "date": 1491073756169
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/551#issuecomment-290940569|#551: weird error on configure --&gt; make>",
                "text": "Whoa.. that looked ugly! Glad it wasn't persistent! ",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/551#issuecomment-290940569|#551: weird error on configure --&gt; make>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491073632.163629",
        "date": 1491073632163
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/544#issuecomment-290940541|#544: Add --silent option for disabling print statements>",
                "text": "That is a good question. Im not sure as I don't have enough experience with how the python logging/messaging is done. I leave it in your best judgement, but if possible, at some point I think it would be good if it works the same as the C and shell code (if it already does then awesome!). :)\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/544#issuecomment-290940541|#544: Add --silent option for disabling print statements>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491073593.161993",
        "date": 1491073593161
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#553 Making all prints logger infos' https://github.com/singularityware/singularity/pull/553 by vsoch",
                "text": "@gmkurtzer try out this alternative - it would fit the current print statements into our current workflow, but really just make the default behavior to silence most when the user runs. I'm not sure if I like it, but it's what (I think) you were more in support of given your comment, so let me know what you think.",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#553 Making all prints logger infos",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/553",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491070572.017592",
        "date": 1491070572017
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-290936920|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "text": "Will do.\n\nOn Apr 1, 2017 1:59 PM, \"Gregory M. Kurtzer\" <mailto:notifications@github.com|notifications@github.com>\nwrote:\n\n&gt; I am just adding some code now to sanitize the bootstrap environment. When\n&gt; you retest, can you check with the latest push to the development branch?\n&gt; \n&gt; Thanks!\n&gt; \n&gt; â€”\n&gt; You are receiving this because you authored the thread.\n&gt; Reply to this email directly, view it on GitHub\n&gt; <https://github.com/singularityware/singularity/issues/548#issuecomment-290936572>,\n&gt; or mute the thread\n&gt; <https://github.com/notifications/unsubscribe-auth/AHUUXOPtKSP81UVR0ZXfBfVK1qmOeFIeks5rrpCTgaJpZM4Mu7gB>\n&gt; .",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-290936920|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491069928.984372",
        "date": 1491069928984
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-290936572|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "text": "I am just adding some code now to sanitize the bootstrap environment. When you retest, can you check with the latest push to the development branch?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-290936572|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491069586.965418",
        "date": 1491069586965
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/551#issuecomment-290936010|#551: weird error on configure --&gt; make>",
                "text": "ok I just did everything from fresh again - seems to be fixed.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/551#issuecomment-290936010|#551: weird error on configure --&gt; make>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491069019.937074",
        "date": 1491069019937
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/551|#551 weird error on configure --&gt; make> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/551|#551 weird error on configure --&gt; make> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491069018.937061",
        "date": 1491069018937
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-290935533|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "text": "Sounds good. I'll try to get back to you this evening.\n\nOn Apr 1, 2017 1:38 PM, \"Gregory M. Kurtzer\" <mailto:notifications@github.com|notifications@github.com>\nwrote:\n\n&gt; I removed a bind mount of the /dev tree, and I am able to get past the\n&gt; keyboard config (granted, it is still prompting me for the keyboard config,\n&gt; but it accepts my input now) and it has finished the bootstrap.\n&gt; \n&gt; Let's go back to trying to identify the issue you found with gpg and\n&gt; start first by looking in the environment for $HOME.\n&gt; \n&gt; Thanks!\n&gt; \n&gt; â€”\n&gt; You are receiving this because you authored the thread.\n&gt; Reply to this email directly, view it on GitHub\n&gt; <https://github.com/singularityware/singularity/issues/548#issuecomment-290935256>,\n&gt; or mute the thread\n&gt; <https://github.com/notifications/unsubscribe-auth/AHUUXDeOA5LgOZkZCnugwCB-G-96cH9cks5rrot_gaJpZM4Mu7gB>\n&gt; .",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-290935533|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491068589.915366",
        "date": 1491068589915
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/552#issuecomment-290935508|#552: cannot find group id error on run>",
                "text": "It seems to still work ok in that the image runs (I shell into it) but the printing of the message is concerning. ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/552#issuecomment-290935508|#552: cannot find group id error on run>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491068572.914604",
        "date": 1491068572914
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#552 cannot find group id error on run' https://github.com/singularityware/singularity/issues/552 by vsoch",
                "text": "with current development, when I do run, I am seeing another new error about finding group id:\n\n```vanessa@vanessa-ThinkPad-T450s:~/Documents/Dropbox/Code/singularity/singularity$ singularity run docker://ubuntu:latest\nImporting: base Singularity environment\nCache folder set to /home/vanessa/.singularity/docker\nExploding layer: sha256:6d9ef359eaaa311860550b478790123c4b22a2eaede8f8f46691b0b4433c08cf.tar.gz\nExploding layer: sha256:9654c40e9079e3d5b271ec71f6d83f8ce80cfa6f09d9737fc6bfd4d2456fed3f.tar.gz\nExploding layer: sha256:e8db7bf7c39fab6fec91b1b61e3914f21e60233c9823dd57c60bc360191aaf0d.tar.gz\nExploding layer: sha256:f8b845f45a87dc7c095b15f3d9661e640ebc86f42cd8e8ab36674846472027f7.tar.gz\nExploding layer: sha256:d54efb8db41d4ac23d29469940ec92da94c9a6c2d9e26ec060bebad1d1b0e48d.tar.gz\nExploding layer: sha256:fe44851d529f465f9aa107b32351c8a0a722fc0619a2a7c22b058084fac068a4.tar.gz\ngroups: cannot find name for group ID 108\ngroups: cannot find name for group ID 124\ngroups: cannot find name for group ID 129\ngroups: cannot find name for group ID 130\n```",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/vsoch|vsoch>",
                "title": "#552 cannot find group id error on run",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/552",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491068507.911300",
        "date": 1491068507911
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#551 weird error on connfigure --&gt; make' https://github.com/singularityware/singularity/issues/551 by vsoch",
                "text": "I started seeing this recently:\n\n```config.status: src/config.h is unchanged\n./config.status: line 1362: `$as_dirname -- \"$_am_arg\" ||\n$as_expr X\"$_am_arg\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\|   X\"$_am_arg\" : 'X\\(//\\)[^/]' \\|      X\"$_am_arg\" : 'X\\(//\\)$' \\|     X\"$_am_arg\" : 'X\\(/\\)' \\| . 2&gt;/dev/null ||\n$as_echo X\"$_am_arg\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n        s//\\1/\n        q\n      }\n      /^X\\(\\/\\/\\)[^/].*/{\n        s//\\1/\n        q\n      }\n      /^X\\(\\/\\/\\)$/{\n        s//\\1/\n        q\n      }\n      /^X\\(\\/\\).*/{\n        s//\\1/\n        q\n      }\n      s/.*/./; q'`/stamp-h1: Permission denied\n```\n\nIs this specific to my computer or something changed in the configure.ac?",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/vsoch|vsoch>",
                "title": "#551 weird error on connfigure --&gt; make",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/551",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491068401.905829",
        "date": 1491068401905
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/544#issuecomment-290935266|#544: Add --silent option for disabling print statements>",
                "text": "@gmkurtzer the difference would be totally aesthetic - given that the logger is used instead of print, it would be like:\n\n```INFO:python:Found image vsoch/singularity-images\nINFO:python:Decompressing image...\n```\n\nvs. just having a printed statement:\n\n```Found image vsoch/singularity-images\nDecompressing image...\n```\n\nWhat about if we used the logger level to determine the print statement? Like:\n\n```if logger.level &gt; 0:\n    print(\"Decompressing image...\")\n```\n\nThat way we have the control done by same logging function and levels, but the user experience isn't \"debuggy\" Thoughts?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/544#issuecomment-290935266|#544: Add --silent option for disabling print statements>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491068292.900379",
        "date": 1491068292900
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-290935256|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "text": "I removed a bind mount of the `/dev` tree, and I am able to get past the keyboard config (granted, it is still prompting me for the keyboard config, but it accepts my input now) and it has finished the bootstrap.\n\nLet's go back to trying to identify the issue you found with `gpg` and start first by looking in the environment for $HOME.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-290935256|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491068286.900052",
        "date": 1491068286900
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/513#issuecomment-290934888|#513: future singularity runs fail if the download or Decompress steps are interrupted.> (assigned to <https://github.com/vsoch|vsoch>)",
                "text": "@alanhoyle +1 - could you test again with development? This looks like it should be fixed up :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/513#issuecomment-290934888|#513: future singularity runs fail if the download or Decompress steps are interrupted.> (assigned to <https://github.com/vsoch|vsoch>)",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491067923.881959",
        "date": 1491067923881
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/528|#528 renaming of metadata folder for development branch> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/528|#528 renaming of metadata folder for development branch> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491067876.879493",
        "date": 1491067876879
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/528#issuecomment-290934836|#528: renaming of metadata folder for development branch>",
                "text": "I think we are good on this now, folder is called `/.singularity.d` closing!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/528#issuecomment-290934836|#528: renaming of metadata folder for development branch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491067876.879490",
        "date": 1491067876879
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/542#issuecomment-290934804|#542: Python namespace collision on Cray XC40 SMW for `make dist`>",
                "text": "Hi @dpjensen we've changed the name of utils - would you mind testing again with latest development branch?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/542#issuecomment-290934804|#542: Python namespace collision on Cray XC40 SMW for `make dist`>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491067838.877561",
        "date": 1491067838877
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/549|#549 configure.ac should check for python library dependencies (modules)> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/549|#549 configure.ac should check for python library dependencies (modules)> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491067798.875094",
        "date": 1491067798875
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/532#issuecomment-290931408|#532: Bootstrap fails when using a Docker sha256 image digest> (assigned to <https://github.com/vsoch|vsoch>)",
                "text": "The same function should be parsing the uri, so yes! If you try it out and this is not the case, please alert immediately and we will look into it.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/532#issuecomment-290931408|#532: Bootstrap fails when using a Docker sha256 image digest> (assigned to <https://github.com/vsoch|vsoch>)",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491064726.715511",
        "date": 1491064726715
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/539|#539 Fix permissions docker> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/539|#539 Fix permissions docker> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491064625.710608",
        "date": 1491064625710
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290931299|#539: Fix permissions docker>",
                "text": "Yes this should have been closed, my bad!",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290931299|#539: Fix permissions docker>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491064625.710599",
        "date": 1491064625710
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/550#issuecomment-290928459|#550: adding start of checking for python modules>",
                "text": "Looks great, thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/550#issuecomment-290928459|#550: adding start of checking for python modules>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491061836.569683",
        "date": 1491061836569
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/550|#550 adding start of checking for python modules> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/550|#550 adding start of checking for python modules> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491061829.569407",
        "date": 1491061829569
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-290928245|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "text": "When I try to run your bootstrap deffile, I can get past the gpg:\n\n```\nâ€¢ gpg --keyserver keyserver.ubuntu.com --recv-key E084DAB9\n     gpg: directory `/root/.gnupg' created\n     gpg: new configuration file `/root/.gnupg/gpg.conf' created\n     gpg: WARNING: options in `/root/.gnupg/gpg.conf' are not yet active during this run\n     gpg: keyring `/root/.gnupg/secring.gpg' created\n     gpg: keyring `/root/.gnupg/pubring.gpg' created\n     gpg: requesting key E084DAB9 from hkp server keyserver.ubuntu.com\n     gpg: /root/.gnupg/trustdb.gpg: trustdb created\n     gpg: key E084DAB9: public key \"Michael Rutter <mailto:marutter@gmail.com|marutter@gmail.com>\" imported\n     gpg: Total number processed: 1\n     gpg:               imported: 1  (RSA: 1)\nâ€¢ gpg -a --export E084DAB9\n     ```\n\nBut it tries to configure my keyboard and won't let me get past that for some reason:\n\n```\nSetting up keyboard-configuration (1.108ubuntu15) ...\ndebconf: unable to initialize frontend: Dialog\ndebconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 76.)\ndebconf: falling back to frontend: Readline\n\n*Configuring keyboard-configuration*\n\nThe layout of keyboards varies per country, with some countries having multiple\ncommon layouts. Please select the country of origin for the keyboard of this\ncomputer.\n\n1. Afghani                                     48. Irish\n2. Albanian                                    49. Italian\n     ...\n3. Icelandic                                  92. Vietnamese\n4. Indian                                     93. Wolof\n5. Iraqi\n     Country of origin for the keyboard: 29\n\n```\n\nAnd even after typing an answer (it should be running non-interactively), it just hangs there. I am trying to bootstrap this from a RHEL7 system with `debootstrap` installed from EPEL.\n\nGoing back to your gpg error, can you try to print the environment `env` command at the beginning of %post, and let me know what is there? I am wondering if your $HOME somehow got through and that is why gpg is trying to use that directory.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/548#issuecomment-290928245|#548: gpg command works in 2.2.1 but fails in latest development (94446cc)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491061634.560475",
        "date": 1491061634560
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290926561|#539: Fix permissions docker>",
                "text": "Hiya guys... This is resolved at this point now via a different PR, correct?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290926561|#539: Fix permissions docker>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491059944.479829",
        "date": 1491059944479
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/418#issuecomment-290926460|#418: Build error: 'O_CLOEXEC' undeclared>",
                "text": "Fantastic, thanks for letting us know @ak-80!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/418#issuecomment-290926460|#418: Build error: 'O_CLOEXEC' undeclared>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491059848.475567",
        "date": 1491059848475
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/495#issuecomment-290926396|#495: HOME=/ and nobody user problem>",
                "text": "I came up with a workaround which avoids mounting the home directory if it is not owned by the calling user. That seems like a reasonable assumption to make and works for this particular issue.\n\nCheck it out and let me know what you think. Thanks!\n\nGreg",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/495#issuecomment-290926396|#495: HOME=/ and nobody user problem>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491059781.472411",
        "date": 1491059781472
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/545#issuecomment-290925411|#545: support for rinse as a bootstrap agent for red hat and opensuse variants>",
                "text": "This is a great idea! Are you interested in taking a stab at this and helping us out? If so, you will find the bootstrap drivers are basically shell scripts and pretty easy to follow. please work in the development GitHub branch, and let us know if you have any questions (here or in Slack).\n\nIf not, I think it is a good idea, and will take a look at it as time permits.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/545#issuecomment-290925411|#545: support for rinse as a bootstrap agent for red hat and opensuse variants>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491058902.429087",
        "date": 1491058902429
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/544#issuecomment-290925265|#544: Add --silent option for disabling print statements>",
                "text": "I think the comment I wrote at <https://github.com/singularityware/singularity/pull/514#issuecomment-290925032> may have bee better suited here.\n\nI do not agree with a `--silent` option that has a different code pathway then how we are currently doing messaging throughout the rest of the code.\n\nOn the other hand, using the existing messaging interface, I could see `--silent` simply making the `SINGULARITY_MESSAGELEVEL` a negative number such that even warnings/errors aren't printed.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/544#issuecomment-290925265|#544: Add --silent option for disabling print statements>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491058755.420479",
        "date": 1491058755420
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by pditommaso on issue <https://github.com/singularityware/singularity/issues/532#issuecomment-290925112|#532: Bootstrap fails when using a Docker sha256 image digest> (assigned to <https://github.com/vsoch|vsoch>)",
                "text": "Great! would this applied also to image names specified in the Singularity bootstrap file  ?",
                "pretext": "[singularityware/singularity] New comment by pditommaso on issue <https://github.com/singularityware/singularity/issues/532#issuecomment-290925112|#532: Bootstrap fails when using a Docker sha256 image digest> (assigned to <https://github.com/vsoch|vsoch>)",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491058612.414273",
        "date": 1491058612414
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-290925032|#514: default python runs now send the singularity output to STDERR>",
                "text": "&gt; --silent would JUST be for these print statements that, right now, are not associated with a logger level. Given an error, the logger would not be silenced.\nYou may already know this but I don't think I ever wrote it down... The rest of the code uses a messaging function that has a level indicator. The level indicator indicates how, when and where the message should be printed. This includes standard info based messages, logging, errors, debugging, etc. Problems (warnings and errors) are negative messages, and info are positive, increasing with debugging.The `SINGULARITY_MESSAGELEVEL` is what defines what level message should be printed (any level indicators equal or less then the messagelevel will be printed). So this means `--quiet` simply sets the `SINGULARITY_MESSAGELEVEL` to 0 (zero), when the default is 1, and 2-4 are different levels of verbosity with 5 entering debug.\n\n&gt; Github is great! Even @gmkurtzer is starting to like it, haha.\nLOL, yep! It is quite amazing how it changes the development paradigm from CVS/SVN. I am/was very slow on the uptake, but it has proven to be a worthy investment!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-290925032|#514: default python runs now send the singularity output to STDERR>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491058518.410334",
        "date": 1491058518410
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-290924417|#39: strange mount/unmount behavior>",
                "text": "Hi @kellyrowland,\n\nI believe the issue happened when a container was run, executed or shelled into, the container would be seen on the desktop operating system as a mount. To reproduce, can you grab the development branch build and install it, and then create a new container and see if it produces a mount on your ubuntu system? I think this should do it:\n\n```$ singularity create /tmp/test.img\n$ singularity import /tmp/test.img docker://centos\n$ singularity shell /tmp/test.img\n```\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-290924417|#39: strange mount/unmount behavior>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491057894.382284",
        "date": 1491057894382
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#550 adding start of checking for python modules' https://github.com/singularityware/singularity/pull/550 by vsoch",
                "text": "Fixes #549 \n\nThis is a test PR to see if my configure.ac changes function as they should to check for python module dependencies. If this works, then next I'll want to figure out how to do a check for version specific packages (eg, urllib, urllib2, etc)\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#550 adding start of checking for python modules",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/550",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491048045.984016",
        "date": 1491048045984
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#549 configure.ac should check for python library dependencies (modules)' https://github.com/singularityware/singularity/issues/549 by vsoch",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/vsoch|vsoch> (assigned to <https://github.com/vsoch|vsoch>)",
                "title": "#549 configure.ac should check for python library dependencies (modules)",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/549",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491004558.343797",
        "date": 1491004558343
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/532#issuecomment-290871172|#532: Bootstrap fails when using a Docker sha256 image digest> (assigned to <https://github.com/vsoch|vsoch>)",
                "text": "This is all set I believe!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/532#issuecomment-290871172|#532: Bootstrap fails when using a Docker sha256 image digest> (assigned to <https://github.com/vsoch|vsoch>)",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491004532.341723",
        "date": 1491004532341
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/532|#532 Bootstrap fails when using a Docker sha256 image digest> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/532|#532 Bootstrap fails when using a Docker sha256 image digest> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491004531.341711",
        "date": 1491004531341
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290870986|#538: Fix permissions docker>",
                "text": "This should be good !",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290870986|#538: Fix permissions docker>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491004502.339279",
        "date": 1491004502339
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/538|#538 Fix permissions docker> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/538|#538 Fix permissions docker> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491004502.339278",
        "date": 1491004502339
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/546|#546 Docker environment extraction needs to be compiled> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/546|#546 Docker environment extraction needs to be compiled> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491004476.337144",
        "date": 1491004476337
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/546#issuecomment-290870847|#546: Docker environment extraction needs to be compiled>",
                "text": "This is good :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/546#issuecomment-290870847|#546: Docker environment extraction needs to be compiled>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491004476.337127",
        "date": 1491004476337
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/547#issuecomment-290867211|#547: Check/permissions fix!>",
                "text": "woot! Thanks @gmkurtzer !",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/547#issuecomment-290867211|#547: Check/permissions fix!>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491003813.281849",
        "date": 1491003813281
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/547#issuecomment-290866348|#547: Check/permissions fix!>",
                "text": "This looks like a good approach, well done!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/547#issuecomment-290866348|#547: Check/permissions fix!>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491003640.267024",
        "date": 1491003640267
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/543|#543 Development: Fixing name conflict, and adding size function> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/543|#543 Development: Fixing name conflict, and adding size function> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491003619.265128",
        "date": 1491003619265
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/547|#547 Check/permissions fix!> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/547|#547 Check/permissions fix!> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1491003619.264967",
        "date": 1491003619264
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/547#issuecomment-290827293|#547: Check/permissions fix!>",
                "text": "hey @gmkurtzer and @hra0031 please take a look! I removed the blind `chmod` and instead wrote a little modified check_tar_permissions function that will go through the members, and if it's a folder, file, or (not) symlink, check the permission and change to the one we want given it's not set, or below, eg:\n\n```def check_tar_permissions(tar_file,permission=None):\n    '''check_tar_permissions changes a permission if \n    any member in a tarfile file does not have it\n    :param file_path the path to the file\n    :param permission: the stat permission to use\n    '''\n    tar = tarfile.open(tar_file, \"r:gz\")\n```# Add all content objects to file\nfd, tmp_tar = tempfile.mkstemp(prefix=(\"%s.tmp.\" % tar_file))\nos.close(fd)\nfixed_tar = tarfile.open(tmp_tar, \"w:gz\")\n\nif permission == None:\n    permission = stat.S_IWUSR\n\n# Check permissions for folders, not symlinks\nfor member in tar:  \n    if member.isdir() or member.isfile() and not member.issym():\n        if not has_permission(member,permission):\n            logger.debug(\"Fixing permission for %s\" %(member.name))\n            member.mode = permission | member.mode\n        extracted = tar.extractfile(member)        \n        fixed_tar.addfile(member, extracted)\n    else:    \n        fixed_tar.addfile(member)\n\nfixed_tar.close()\ntar.close()\n\n# Rename the fixed tar to be the old name\nos.rename(tmp_tar, tar_file)\nreturn tar_file        ```\n```\n\nThe \"fixed tar\" is originally a tmp file so we can be sure we don't write and replace until it's done being written. This should hopefully avoid the situation of an operation bugging out / being canceled, as the temporary fixed tar will not be found and assumed to be the finished real one. The one potential bug could come in if the user breaks an operation between the finish of a download, but before the permissions have been checked, here:\n\n```        targz = \"%s/%s.tar.gz\" %(cache_base,image_id)\n        if not os.path.exists(targz):\n            targz = client.get_layer(image_id=image_id,\n                                     download_folder=cache_base)\n            targz = check_tar_permissions(targz)\n        layers.append(targz)\n```\n\nIf the targz doesn't exist, then we are ok, it is downloaded and then checked. The issue would be that it gets downloaded, NOT checked, and then found and not checked. Ack, there could be some weird issues in here, let me see if I can fix this.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/547#issuecomment-290827293|#547: Check/permissions fix!>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490993669.864661",
        "date": 1490993669864
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/455|#455 Crash when using Python multiprocessing.pool> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/455|#455 Crash when using Python multiprocessing.pool> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490988219.647777",
        "date": 1490988219647
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/455#issuecomment-290805542|#455: Crash when using Python multiprocessing.pool>",
                "text": "Awesome! I'm going to close then. Is it just me, or in the time I flew from E --&gt; W Github changed their default font back to something that looks like Ubuntu? :scream: ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/455#issuecomment-290805542|#455: Crash when using Python multiprocessing.pool>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490988219.647745",
        "date": 1490988219647
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by fmorency on issue <https://github.com/singularityware/singularity/issues/455#issuecomment-290759633|#455: Crash when using Python multiprocessing.pool>",
                "text": "Solved using fix above!\n\nOn Sat, Mar 25, 2017 at 10:13 PM, Gregory M. Kurtzer &lt;\nnotifications@github.com&gt; wrote:\n\n&gt; What is the current status of this?\n&gt; \n&gt; â€”\n&gt; You are receiving this because you authored the thread.\n&gt; Reply to this email directly, view it on GitHub\n&gt; <https://github.com/singularityware/singularity/issues/455#issuecomment-289253065>,\n&gt; or mute the thread\n&gt; <https://github.com/notifications/unsubscribe-auth/ABDUFMusvTGRCSNzPiVydjV32bF4eve1ks5rpcm8gaJpZM4Lk7i7>\n&gt; .",
                "pretext": "[singularityware/singularity] New comment by fmorency on issue <https://github.com/singularityware/singularity/issues/455#issuecomment-290759633|#455: Crash when using Python multiprocessing.pool>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490977294.871467",
        "date": 1490977294871
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290664183|#538: Fix permissions docker>",
                "text": "When I have time to fly from east to west coast, get home, write the node code, do a PR, have @gmkurtzer  review, and then merge :) So aim for tomorrow to be safe!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290664183|#538: Fix permissions docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490952335.642545",
        "date": 1490952335642
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by abdulrahmanazab on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290639868|#538: Fix permissions docker>",
                "text": "@vsoch Great! thanks :)\nI see that you are using the `mriqc` image for tests ;)\nWhen would it be merged?",
                "pretext": "[singularityware/singularity] New comment by abdulrahmanazab on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290639868|#538: Fix permissions docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490945884.592403",
        "date": 1490945884592
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hra0031 on pull request <https://github.com/singularityware/singularity/pull/547#issuecomment-290631760|#547: Check/permissions fix!>",
                "text": "I absolutely agree that this is not a solution. In fact, we need only to change permission on folders, which is contained in more archives. After extraction of all archives can be the permissions restored. But in another hand, this could be a problem for some provisioning scripts too (limited access to some folders).",
                "pretext": "[singularityware/singularity] New comment by hra0031 on pull request <https://github.com/singularityware/singularity/pull/547#issuecomment-290631760|#547: Check/permissions fix!>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490943077.242712",
        "date": 1490943077242
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/547#issuecomment-290588368|#547: Check/permissions fix!>",
                "text": "hey @hra0031 I chat with @gmkurtzer and we discussed the issue with the above is that it is applying the command globally to all of the image,and we really just want to target files in the tar. It can't all be done in python because it needs to be done with a certain level of permission by the caller. But I think we can get this to work, because I think I can actually do the change of permissions to an in memory tar first in python, and then write and hand the fixed files equivalently to the calling function! This is actually sort of how we are doing the metadata folder.\n\nI'm going to bed soon and traveling a big chunk of tomorrow (yuckers!) but I'll be on this definitely by tomorrow and we will get the fix in soon. Thanks again for helping with this!",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/547#issuecomment-290588368|#547: Check/permissions fix!>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490922676.574344",
        "date": 1490922676574
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#548 gpg command works in 2.2.1 but fails in latest development (94446cc)' https://github.com/singularityware/singularity/issues/548 by GodloveD",
                "text": "Consider this file called `rstudio.def`\n```\nBootStrap: debootstrap\nOSVersion: xenial\nMirrorURL: <http://us.archive.ubuntu.com/ubuntu/>\n\n%post\n    locale-gen en_US.UTF-8\n    sed -i 's/$/ universe/' /etc/apt/sources.list\n    echo \"deb <http://cran.rstudio.com/bin/linux/ubuntu> xenial/\" | tee -a /etc/apt/sources.list\n    gpg --keyserver keyserver.ubuntu.com --recv-key E084DAB9\n    gpg -a --export E084DAB9 | apt-key add -\n    apt-get -y update\n    apt-get -y --force-yes install vim r-base r-base-dev wget xorg gdebi-core libxslt1.1\n    wget <https://download1.rstudio.org/rstudio-0.99.896-amd64.deb>\n    gdebi -n rstudio-0.99.896-amd64.deb\n    rm rstudio-0.99.896-amd64.deb\n```bootsrap it like so\n```\nsudo singularity create -s 1800 rstudio.img &amp;&amp; sudo singularity bootstrap rstudio.img rstudio.def\n```Works great in 2.2.1, but fails with the following error in 94446cc .\n```\n[...snip...]\nI: Base system installed successfully.\nRunning post scriptlet\nâ€¢ locale-gen en_US.UTF-8\n     Generating locales (this might take a while)...\n     en_US.UTF-8... done\n     Generation complete.\nâ€¢ sed -i s/$/ universe/ /etc/apt/sources.list\nâ€¢ tee -a /etc/apt/sources.list\nâ€¢ echo deb <http://cran.rstudio.com/bin/linux/ubuntu> xenial/\n     deb <http://cran.rstudio.com/bin/linux/ubuntu> xenial/\nâ€¢ gpg --keyserver keyserver.ubuntu.com --recv-key E084DAB9\n     gpg: fatal: can't create directory `/home/ubuntu/.gnupg': No such file or directory\n     secmem usage: 0/0 bytes in 0/0 blocks of pool 0/65536\n     ERROR: Aborting with RETVAL=255\n     ``` ",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/GodloveD|GodloveD>",
                "title": "#548 gpg command works in 2.2.1 but fails in latest development (94446cc)",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/548",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490908352.523400",
        "date": 1490908352523
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/547#issuecomment-290421258|#547: Check/permissions fix!>",
                "text": "sweeet! And here is the command that wasn't working before:\n\n```bash\nsingularity shell docker://blacklabelops/centos \nImporting: base Singularity environment\nCache folder set to /home/vanessa/.singularity/docker\nExploding layer: sha256:32acb9e864dfc5f21a59231e8f87b239a2584a4b354f9f6fd35d55def4384055.tar.gz\nExploding layer: sha256:45a2e645736c4c66ef34acce2407ded21f7a9b231199d3b92d6c9776df264729.tar.gz\nExploding layer: sha256:965814b5d3438f511d6e9fcfeb2ec09dd720053d9925946cac9fe92a516cb2ec.tar.gz\nSingularity: Invoking an interactive shell within container...\n\nSingularity centos:~/Desktop&gt; \n\n```\n\nare there others we can test?",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/547#issuecomment-290421258|#547: Check/permissions fix!>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490882797.415626",
        "date": 1490882797415
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#547 Check/permissions fix!' https://github.com/singularityware/singularity/pull/547 by vsoch",
                "text": "Fixes #539 \n\nThis is to test the fix by @hra0031 for docker permissions, also includes the other tweaks to development to make sure nothing breaks. We would want to see if this works for non sudo functions.\n\nChanges proposed in this pull request\n\nâ€¢ adding chmod +x after image extraction in handler.\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#547 Check/permissions fix!",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/547",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490882323.274119",
        "date": 1490882323274
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290418320|#539: Fix permissions docker>",
                "text": "wicked!! Let me do a separate PR to test this out against all the different tests.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290418320|#539: Fix permissions docker>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490882183.234507",
        "date": 1490882183234
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hra0031 on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290415184|#539: Fix permissions docker>",
                "text": "Bingo! It's working...\n```...\nExploding layer: sha256:987a379c753bed9e668c9d572ea981813db45a19f8495dcb3e95c2135d8271b5.tar.gz\nFixing permissions...\nExploding layer: sha256:17385548ba54dd00b2b73dc106749019fcc0cc5641317c97766f14647d06ad6e.tar.gz\nFixing permissions...\nExploding layer: sha256:160bc4292c4667f07a3e3ae30d0ac7ccc02c122e6813172b9149e96a658b4b0a.tar.gz\nFixing permissions...\nVERBOSE [U=4573,P=2235]    message_init()                            Set messagelevel to: 5\n...\n```\nIn my case the extraction of archive is here: <https://github.com/singularityware/singularity/blob/development/libexec/image-handler.sh#L83>\n\nSo i made a little change:\n```diff\n--- a/libexec/image-handler.sh\n+++ b/libexec/image-handler.sh\n@@ -84,9 +84,11 @@ case \"$SINGULARITY_IMAGE\" in\n             name=`basename \"$i\"`\n             message 1 \"Exploding layer: $name\\n\"\n             zcat \"$i\" | (cd \"$SINGULARITY_ROOTFS\"; tar --exclude=dev/* -xf -) || exit $?\nâ€¢ message 1 \"Fixing permissions...\\n\"\nâ€¢ chmod -R +w \"$SINGULARITY_ROOTFS\"\n          done\n     ```\n     I've tried it on machine, where a haven't root privileges.",
                "pretext": "[singularityware/singularity] New comment by hra0031 on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290415184|#539: Fix permissions docker>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490881544.058131",
        "date": 1490881544058
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290404831|#539: Fix permissions docker>",
                "text": "I haven't tried it! My thinking was that many docker layers come with root owned files, so a user on a system extracting wouldn't be able to do that. I'm going for a run quickly and then have a meeting before work - if you have some moments do you want to give it a try? We would want that fix to pass all tests for sudo/non sudo, and resolve your issue! If not I can try later today. It would be great if the fix were that easy!",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290404831|#539: Fix permissions docker>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490879194.473833",
        "date": 1490879194473
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hra0031 on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290403833|#539: Fix permissions docker>",
                "text": "But all files are extracted under the user, and user is the owner of this files. So ```bash chmod -R +w \"$CONTAINER_DIR\" ``` should work.",
                "pretext": "[singularityware/singularity] New comment by hra0031 on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290403833|#539: Fix permissions docker>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490878959.419536",
        "date": 1490878959419
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290401988|#539: Fix permissions docker>",
                "text": "so to explicitly answer - I don't think we can do that because a user doing it on a file with higher up permissions would return denied.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290401988|#539: Fix permissions docker>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490878531.323271",
        "date": 1490878531323
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290401613|#539: Fix permissions docker>",
                "text": "We used to have two pathways for import - one supported sudo (the python extraction and changing permissions, and this was sudo import / bootstrap) and the other not (returning a layerfile and having the bash do it, not touching anything). I think the detail comes down to that change - we can't do it just as the user, but let's wait for @gmkurtzer to chime in. I'm hopeful that we can figure out a non sudo way to essentially do the same thing, and be consistent across functions to not need to maintain multiple \"version\" the same thing.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290401613|#539: Fix permissions docker>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490878439.304023",
        "date": 1490878439304
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hra0031 on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290398783|#539: Fix permissions docker>",
                "text": "@vsoch Why can not we do that like in version 2.2.1?\n<https://github.com/singularityware/singularity/blob/master/libexec/image-handler.sh#L231>",
                "pretext": "[singularityware/singularity] New comment by hra0031 on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290398783|#539: Fix permissions docker>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490877750.166351",
        "date": 1490877750166
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290395830|#539: Fix permissions docker>",
                "text": "Let's keep it open until we are sure that your fix isn't needed! It's actually done in bash (I misspoke) and here is the link for you!\n\n<https://github.com/singularityware/singularity/blob/development/libexec/bootstrap-scripts/main-dockerhub.sh#L49>\n\nDo you have any ideas about how to fix permissions? Here is how we used to do it:\n\n<https://github.com/singularityware/singularity/blob/master/libexec/python/utils.py#L248>\n\nBasically looking at every file, and fixing those that were missing set permissions. I still think we might need to do something like this in python, which is why I want to keep this thread alive until @gmkurtzer has a chance to look (he's busy this week!)",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290395830|#539: Fix permissions docker>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490876957.021098",
        "date": 1490876957021
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hra0031 on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290372466|#539: Fix permissions docker>",
                "text": "Thank you for all information. We need this functionality currently, so we stay at current development build for now. Can you point me, where in the C code is the extraction done? Maybe we can write some temporary fix for our purposes.\nThis PR can be therefore closed.\n\nPS: Sorry for the 3fbae8d commit, it was a mistake...",
                "pretext": "[singularityware/singularity] New comment by hra0031 on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290372466|#539: Fix permissions docker>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490870216.997400",
        "date": 1490870216997
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290324994|#539: Fix permissions docker>",
                "text": "@gmkurtzer to give this some context - we no longer have the fix_permissions functions because it is assumed this is done in the C code. However, if you are unable to do this, then we need to consider moving this back to python, and somehow dealing with this wrt the content file, etc. Let us know how things look on the C end! This PR will be un-broken given that those functions are added back. If you get it working with C, then this PR will be fixed by removing the fix_permissions command. @hra0031  - if we do go this route, it will be desired to not have fix_permissions happen on the level of run_command (because as  you can imagine, there are many commands for which we wouldn't need/want to run it) but on the level of the import/pull etc. function that would be extracting the layers. Right now, since the python isn't extracting anything, adding it anywhere would not do anything.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/539#issuecomment-290324994|#539: Fix permissions docker>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490858654.046312",
        "date": 1490858654046
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290324268|#538: Fix permissions docker>",
                "text": "hey @abdulrahmanazab apologies for delay - you found a bug! I just fixed it - <https://github.com/singularityware/singularity/pull/543> the issue was using the last in the list of history for the environment (or other config) and we needed to use the first. So the path that you see was the first (original) that didn't have the miniconda export. With this fix, it should be equivalent. Good catch! :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290324268|#538: Fix permissions docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490858430.017239",
        "date": 1490858430017
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/543#issuecomment-290322420|#543: Development: Fixing name conflict, and adding size function>",
                "text": "@gmkurtzer this is (still) ready :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/543#issuecomment-290322420|#543: Development: Fixing name conflict, and adding size function>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490857850.943174",
        "date": 1490857850943
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/546#issuecomment-290322326|#546: Docker environment extraction needs to be compiled>",
                "text": "This will be closed when <https://github.com/singularityware/singularity/pull/543> is merged.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/546#issuecomment-290322326|#546: Docker environment extraction needs to be compiled>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490857816.938682",
        "date": 1490857816938
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/418|#418 Build error: 'O_CLOEXEC' undeclared> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/418|#418 Build error: 'O_CLOEXEC' undeclared> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490857772.932882",
        "date": 1490857772932
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/418#issuecomment-290322201|#418: Build error: 'O_CLOEXEC' undeclared>",
                "text": "Awesome! I'm going to close this issue, let us know if anything else buggy emerges!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/418#issuecomment-290322201|#418: Build error: 'O_CLOEXEC' undeclared>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490857772.932865",
        "date": 1490857772932
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/543#issuecomment-290321667|#543: Development: Fixing name conflict, and adding size function>",
                "text": "I just added to this PR a fix for an observation that a single variable was missing in the Docker environment - the reason was because we were using the LAST of the layers extracted from version 1 of the manifest, and we should have used the first in the list (the top layer). I've simply added a break to the loop to stop once it's found. If there is some issue with previous layers having environmental variables that should be included (and for some reason is not in the top) we can further parse and use a dictionary as a lookup, but I think this should be sufficient for now.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/543#issuecomment-290321667|#543: Development: Fixing name conflict, and adding size function>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490857624.914432",
        "date": 1490857624914
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ak-80 on issue <https://github.com/singularityware/singularity/issues/418#issuecomment-290318784|#418: Build error: 'O_CLOEXEC' undeclared>",
                "text": "@gmkurtzer \n\nYou were right. Due to some unclear reason, I had very old (last commit on 19th of December 2016) version of development branch. After the update to the newest version, everything compiles fine. \n\nThank you.",
                "pretext": "[singularityware/singularity] New comment by ak-80 on issue <https://github.com/singularityware/singularity/issues/418#issuecomment-290318784|#418: Build error: 'O_CLOEXEC' undeclared>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490856678.801634",
        "date": 1490856678801
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#546 Docker environment extraction needs to be compiled' https://github.com/singularityware/singularity/issues/546 by vsoch",
                "text": "currently, we iterate through the layers and take the last entry for environment, but we actually need to either take the first, or combine them in a logical way so the top layer exports override the lower ones. I think I know how to go about this, and will fix up tomorrow.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/vsoch|vsoch>",
                "title": "#546 Docker environment extraction needs to be compiled",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/546",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490841943.568311",
        "date": 1490841943568
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by rynge on issue <https://github.com/singularityware/singularity/issues/495#issuecomment-290259758|#495: HOME=/ and nobody user problem>",
                "text": "Things works for my regular user, but user nobody, with HOME=/ still has the basedir problem described when I opened the ticket:\n\nsingularity exec --bind $PWD:/srv --pwd /srv /tmp/OSGVO-EL7-latest.img echo \"Hello World\"\nERROR  : Could not identify basedir for home directory path: /\nABORT  : Retval = 255\n\nIt does work if I use --home instead of --bind in the above command.\n\nFull debug log:\n\n<https://github.com/singularityware/singularity/files/880659/singularity-home-3.txt|singularity-home-3.txt>",
                "pretext": "[singularityware/singularity] New comment by rynge on issue <https://github.com/singularityware/singularity/issues/495#issuecomment-290259758|#495: HOME=/ and nobody user problem>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490831113.491043",
        "date": 1490831113491
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#545 support for rinse as a bootstrap agent for red hat and opensuse variants' https://github.com/singularityware/singularity/issues/545 by afif-elghraoui",
                "text": "I just wanted to make this suggestion. `rinse` is analogous to `debootstrap` and might be worth supporting as a singularity boostrap agent for rpm-based distributions.\n\n<https://anonscm.debian.org/cgit/collab-maint/rinse.git/tree/README>",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/afif-elghraoui|afif-elghraoui>",
                "title": "#545 support for rinse as a bootstrap agent for red hat and opensuse variants",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/545",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490820797.671582",
        "date": 1490820797671
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#544 Add --silent option for disabling print statements' https://github.com/singularityware/singularity/issues/544 by vsoch",
                "text": "We currently have different levels to control logging of errors, however this doesn't map cleanly to print statements that we (usually) want to show \"no matter what.\" For example, if a user wants to run a container and pipe the result somewhere, this breaks (see issue example here <https://github.com/singularityware/singularity/pull/514>). Thus, we should add a `--silent` option that triggers a boolean variable to not print any extraenous things. This is different (I think) from --quiet, which doesn't totally disable absolutely every print statement (specifically those not tied to the <https://github.com/singularityware/singularity/blob/development/libexec/python/logman.py|bot.logger> dude.)",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/vsoch|vsoch>",
                "title": "#544 Add --silent option for disabling print statements",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/544",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490817510.828081",
        "date": 1490817510828
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-290198425|#514: default python runs now send the singularity output to STDERR>",
                "text": "`--silent` would JUST be for these print statements that, right now, are not associated with a logger level. Given an error, the logger would not be silenced.\n\nHere is development!\n\n<https://github.com/singularityware/singularity/tree/development>\n\nWhat you would want to do is, from your fork, checkout a development branch, and then pull the upstream from it. So first make sure you have the right links to each in your git config:\n\n```cd singularity\nvim .git/config\n```\n\nIt should/might look something like this:\n\n```[core]\n        repositoryformatversion = 0\n        filemode = true\n        bare = false\n        logallrefupdates = true\n[remote \"upstream\"]\n        url = git@github.com:singularityware/singularity.git\n        fetch = +refs/heads/*:refs/remotes/origin/*\n[remote \"origin\"]\n        url = git@github.com:alanhoyle/singularity.git\n        fetch = +refs/heads/*:refs/remotes/origin/*\n[branch \"master\"]\n        remote = origin\n        merge = refs/heads/master\n```\nThen you can checkout a new branch called development. By default it will checkout a clone of the master, so you might want to start fresh unless you want the changes in this PR to persist.\n\n```git checkout -b development\n```\n\nThen you would want to pull the upstream development into it.\n\n```git pull upstream development\n```\nYou then will write the merge commit, and see a bunch of files added/deleted etc. You then will be on a development branch, with the development version! This is where you can start to make changes and stuff, and you can push to your forked development (origin):\n\n```\ngit commit -a\n\n*:i  message bla bla :w ESC :q*\n\ngit push origin development\n```\nand then when you PR, you would go from `alanhoyle/development` --&gt; `singularityware/development`\n\nGithub is great! Even @gmkurtzer is starting to like it, haha.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-290198425|#514: default python runs now send the singularity output to STDERR>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490815518.316785",
        "date": 1490815518316
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by alanhoyle on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-290192140|#514: default python runs now send the singularity output to STDERR>",
                "text": "what you describe for --silent would work, but I wonder how that would be different from -q/--quiet?  \n\nIf there's an error from singularity, it probably shouldn't just fail silently.",
                "pretext": "[singularityware/singularity] New comment by alanhoyle on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-290192140|#514: default python runs now send the singularity output to STDERR>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490814091.948843",
        "date": 1490814091948
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-290186596|#514: default python runs now send the singularity output to STDERR>",
                "text": "If this sounds terrible to do, I'm happy to slowly make the changes as I tweak the development branch. The print statements are in there because, for most cases, the user wants to see the image found, and that something is happening. But you are correct that this doesn't map well to a use case where you want to run and pipe the standard out somewhere for further stuffs. I think what we would actually want is a `--silent` option that disables all output - would that fit the use case? So you would do like:\n\n```singularity --silent run shub://researchapps/samtools view -h tumor.bam  |head \n@HD VN:1.4  SO:coordinate\n@SQ SN:chr1 LN:249250621\n@SQ SN:chr2 LN:243199373\n@SQ SN:chr3 LN:198022430\n@SQ SN:chr4 LN:191154276\n@SQ SN:chr5 LN:180915260\n$\n```\nWould that work?",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-290186596|#514: default python runs now send the singularity output to STDERR>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490813018.646807",
        "date": 1490813018646
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-290184291|#514: default python runs now send the singularity output to STDERR>",
                "text": "haha, ok. Maybe you could do a PR to development to change the prints to `bot.logger[level]` equivalent? That would be hugely helpful!",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-290184291|#514: default python runs now send the singularity output to STDERR>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490812560.519472",
        "date": 1490812560519
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by alanhoyle on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-290183053|#514: default python runs now send the singularity output to STDERR>",
                "text": "That sounds like an appropriate fix.  My pull request is just a quick-and-dirty update to fix issues that we had with the master version.  ",
                "pretext": "[singularityware/singularity] New comment by alanhoyle on pull request <https://github.com/singularityware/singularity/pull/514#issuecomment-290183053|#514: default python runs now send the singularity output to STDERR>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490812309.448273",
        "date": 1490812309448
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by kellyrowland on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-290163192|#39: strange mount/unmount behavior>",
                "text": "I have no idea, honestly. I could try to reproduce whatever the error was if given a series of instructions on mounting and unmounting an image to test.",
                "pretext": "[singularityware/singularity] New comment by kellyrowland on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-290163192|#39: strange mount/unmount behavior>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490808588.392683",
        "date": 1490808588392
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by abdulrahmanazab on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290149076|#538: Fix permissions docker>",
                "text": "@vsoch Thanks :)\nAnother thing to investigate. I noticed  that `$PATH` is not the same. See:\n```\n[azab@invivo singularity-img]$ singularity shell poldracklab-mriqc4.img\nSingularity: Invoking an interactive shell within container...\n\nbash: /software/etc/profile/bashrc: No such file or directory\nazab@invivo:~/singularity-img$ echo $PATH\n/opt/c3d:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/ants:/usr/lib/fsl/5.0:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\n```Now when I run docker:\n```\n[azab@invivo singularity-img]$ docker run -u 238869:173131 --rm -it --entrypoint=/bin/bash poldracklab/mriqc\nI have no name!@ac75c3605b48:/scratch$ echo $PATH\n/usr/local/miniconda/bin:/opt/c3d:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/ants:/usr/lib/fsl/5.0:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n```",
                "pretext": "[singularityware/singularity] New comment by abdulrahmanazab on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290149076|#538: Fix permissions docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490805707.605246",
        "date": 1490805707605
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290143448|#538: Fix permissions docker>",
                "text": "haha, well what looks sort of similar / the same has different underlying things going on. Anything that doesn't require sudo is just obtaining layers and dumping them into the image, with their permissions as is. If you look in the <https://github.com/singularityware/singularity/tree/development/libexec/bootstrap-scripts|bootstraps scripts folder>, there is often a lot of functionality that goes beyond just dumping layers into an image, like stuff that happens on the host in setup, or things that would require sudo in any section, and I think the idea of bootstrap is to fit that use case. But I think you are right that we could have a subset / kind of bootstrap that doesn't require the extra bits (probably one using Docker and just defining environment vars and not much else), and basically fulfills the same kind of things as the current import (without sudo). \n\n I think our first idea is to wrap the above two commands into one \"pull\" which will create an image and dump layers into it, in one go. We will definitely think more about the \"non sudo\" bootstrap version, and how to best integrate it though.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290143448|#538: Fix permissions docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490804531.279825",
        "date": 1490804531279
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by abdulrahmanazab on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290140109|#538: Fix permissions docker>",
                "text": "@vsoch  Yeah, it works! So `singularity import` doesn't need sudo? cool!\n\nBut why `singularity bootstrap` still need it then?",
                "pretext": "[singularityware/singularity] New comment by abdulrahmanazab on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290140109|#538: Fix permissions docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490803838.086092",
        "date": 1490803838086
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290112552|#538: Fix permissions docker>",
                "text": "Yes I got the same error when my hard drive was running out of space (because this image is so fat!) Is there a reason you can't use create then import instead of shell? We will eventually be combining these two functionalities into a \"pull\" command, but for now it's like:\n\n```bash\nvanessa@vanessa-ThinkPad-T450s:~/Desktop$ singularity create -s 6000 cafe.img\nInitializing Singularity image subsystem\nOpening image file: cafe.img\nCreating 6000MiB image\nBinding image to loop\nCreating file system within image\nImage is done: cafe.img\nvanessa@vanessa-ThinkPad-T450s:~/Desktop$ singularity import cafe.img docker://poldracklab/mriqc:latest\nCache folder set to /home/vanessa/.singularity/docker\nImporting: base Singularity environment\nImporting: /home/vanessa/.singularity/docker/sha256:357ea8c3d80bc25792e010facfc98aee5972ebc47e290eb0d5aea3671a901cab.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:fb95ab5480340193a679f58c726e208ce0a14a881cc48f3ec6b68490ca768abe.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:dfc27603e46bd3d4ee9b3e08f58b6a6b577c6cb5a6cb31ddc38937117f8d847f.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:f7e997984e865e5dc9a44099240240b68e5315cfe2fa33fe0536c4a69bb384a9.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:d16185ca875cfc73da65eb0621e3cb38544a728079f7b6aa3f9c0cc2eaf05ef2.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:ebf965b3a12075202089704d5dbdcbad376142df41a3c9e0e52a2ce3c205cb93.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:1b1839d10fc8ed13ebedae248e8dfec1ff9ab0dabe0ef66407daff379781d9bb.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:cdb4d5376bdead059bc547128992c4a4e2f601a606acbe1447fb00ebeb725fe4.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:397afeac127195ad688c8217771a958b5314d37b9950c23e5bf3ec11fd617383.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:21ffec20c4fbca9ec0da6443ecb6ee19532cf6bad67e718ba731ac907f994d6b.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:349f16732898335edd78342081fdc86ffbe53399383594151478fde06a51772d.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:02975f5cac2a64faa614c07688abb109ed205f992f7b4524ca564f8a54e3352d.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:62fb7fa8a829f91dfba3457433485a3e93f574e1702d9be2089fc11a3845ca6d.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:1d25a9af101b25f769c0c613b0806404d96e3fc7787cb9caf1e89053695fa922.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:01b45f97a2d05cade617aa710fcbf373c0758964432d99bec5e30d077936c0bb.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:c251c4d6043b7ddea5ffacc1329fd2ea72988ae17ecbb387f9344d0ee750cc68.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:8a822fbd478b67df01840494313cb0eaf7a0e788a46b91f9e7e8d31e99636f06.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:e40ec34eb96f67941b012f19f8a6cd9e788e099e16db61ebf650fc59b7668373.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:42f53768bf1b0d14d6e0d53b24e5f5d51c618816ec5e279c4e7090186717193c.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4.tar.gz\nImporting: /home/vanessa/.singularity/docker/sha256:e8474564357be0bc18d544bb729a337c8313a29308901349ead0e8ae98466f82.tar.gz\nvanessa@vanessa-ThinkPad-T450s:~/Desktop$ singularity shell cafe.img \nSingularity: Invoking an interactive shell within container...\n\n$ ls -l /usr/bin/run*\n-rwxr-xr-x 1 root root 17975 Dec 28  2014 /usr/bin/run-mailcap\n-rwxrwxr-x 1 root root    22 Mar 22 04:06 /usr/bin/run_dfcheck\n-rwxrwxr-x 1 root root    70 Mar 22 04:06 /usr/bin/run_mriqc\n-rwxrwxr-x 1 root root    26 Mar 22 04:06 /usr/bin/run_mriqc_plot\n-rwxrwxr-x 1 root root    86 Mar 22 04:06 /usr/bin/run_tests\n-rwxr-xr-x 1 root root 31336 Mar 14  2015 /usr/bin/runcon\n```\n\nNo sudo required for the above :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290112552|#538: Fix permissions docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490798635.459920",
        "date": 1490798635459
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by abdulrahmanazab on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290096322|#538: Fix permissions docker>",
                "text": "@vsoch It works now after I tried it somewhere else with a bigger `/root`. But the use of `/root/.singularity/docker` to store layers even when you specify a target image is not nice. \n\nAnyways, would this be fixable without `sudo` and the `--writable` option?",
                "pretext": "[singularityware/singularity] New comment by abdulrahmanazab on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290096322|#538: Fix permissions docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490795517.519993",
        "date": 1490795517519
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by abdulrahmanazab on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290075671|#538: Fix permissions docker>",
                "text": "@vsoch Yeah, I was trying 2.2.1. Now with the dev (2.2.99) I get: \n`ERROR:python:Cannot write to /root/.singularity/docker/sha256:cdb4d5376bdead059bc547128992c4a4e2f601a606acbe1447fb00ebeb725fe4.tar.gz.tmp._wVM2l, exiting`\n`ERROR:python:Error downloading https://index.docker.io/v2/poldracklab/mriqc/blobs/sha256:cdb4d5376bdead059bc547128992c4a4e2f601a606acbe1447fb00ebeb725fe4. Do you have permission to write to /root/.singularity/docker?`\n\nwhen I run:\n`singularity --debug import poldracklab-mriqc.img docker://poldracklab/mriqc:lates`\n\nThis is probably because I have a very little space on `/root` but why in the world does it try to pull the layers inside `/root/.singularity/docker` when I already specify an image to write in?",
                "pretext": "[singularityware/singularity] New comment by abdulrahmanazab on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290075671|#538: Fix permissions docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490790827.408949",
        "date": 1490790827408
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290061683|#538: Fix permissions docker>",
                "text": "Are you using latest development? I can't reproduce:\n\n```root@vanessa-ThinkPad-T450s:/root# ls -l /usr/bin/run*\n-rwxr-xr-x 1 root root 17975 Dec 28  2014 /usr/bin/run-mailcap\n-rwxrwxr-x 1 root root    22 Mar 22 04:06 /usr/bin/run_dfcheck\n-rwxrwxr-x 1 root root    70 Mar 22 04:06 /usr/bin/run_mriqc\n-rwxrwxr-x 1 root root    26 Mar 22 04:06 /usr/bin/run_mriqc_plot\n-rwxrwxr-x 1 root root    86 Mar 22 04:06 /usr/bin/run_tests\n-rwxr-xr-x 1 root root 31336 Mar 14  2015 /usr/bin/runcon\n```\n\nThat is one FAT image!! He needs a Docker diet, pronto!!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290061683|#538: Fix permissions docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490786913.781073",
        "date": 1490786913781
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by abdulrahmanazab on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290059310|#538: Fix permissions docker>",
                "text": "@vsoch @gmkurtzer a case to reproduce:\n`sudo singularity --debug shell -w docker://poldracklab/mriqc:latest`\nThose files should be executable, but they are not:\n`-rw-rw-r-- 1 root root    22 Mar 22 04:06 /usr/bin/run_dfcheck\n-rw-rw-r-- 1 root root    70 Mar 22 04:06 /usr/bin/run_mriqc\n-rw-rw-r-- 1 root root    26 Mar 22 04:06 /usr/bin/run_mriqc_plot\n-rw-rw-r-- 1 root root    86 Mar 22 04:06 /usr/bin/run_tests\n`",
                "pretext": "[singularityware/singularity] New comment by abdulrahmanazab on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-290059310|#538: Fix permissions docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490786190.677654",
        "date": 1490786190677
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/540#issuecomment-289979101|#540: Could not create /dev/loop : File exists on OpenMPI jobs>",
                "text": "Excellent news, thank you!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/540#issuecomment-289979101|#540: Could not create /dev/loop : File exists on OpenMPI jobs>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490761774.454303",
        "date": 1490761774454
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/495#issuecomment-289978844|#495: HOME=/ and nobody user problem>",
                "text": "Hi @rynge,\n\nI think I tracked it down and fixed in the latest development branch. Can you give that a whirl and let me know?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/495#issuecomment-289978844|#495: HOME=/ and nobody user problem>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490761636.444189",
        "date": 1490761636444
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/543#issuecomment-289911918|#543: Development: Fixing name conflict, and adding size function>",
                "text": "@gmkurtzer ready for review!",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/543#issuecomment-289911918|#543: Development: Fixing name conflict, and adding size function>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490736881.627412",
        "date": 1490736881627
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#543 Development: Fixing name conflict, and adding size function' https://github.com/singularityware/singularity/pull/543 by vsoch",
                "text": "Fixes #542 \n\nChanges proposed in this pull request\n\nâ€¢ renaming the utils to sutils to deal with a naming conflict on some crusty version of cray\nâ€¢ adding size function to write to the CONTENTFILE the size of a singularity hub or docker image, by way of using the Docker version 2 manifest, or singularity hub manifest. @gmkurtzer - we can use this for pull! We must have a pull, lol.\nâ€¢ added tests for size, each for docker and shub\nâ€¢ adding a \"quiet\" command to several functions that might be called once during an import/pull etc, so the debug is not printed twice.\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#543 Development: Fixing name conflict, and adding size function",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/543",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490732555.586861",
        "date": 1490732555586
    },
    {
        "user": "mrdwyer",
        "text": "<@U4QV9855Z|mrdwyer> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1490732500.572930",
        "date": 1490732500572
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/542#issuecomment-289865423|#542: Python namespace collision on Cray XC40 SMW for `make dist`>",
                "text": "That's... cray cray :)\n\nThe change will still be good to fix this conflict - I'll let you know when it's ready for testing.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/542#issuecomment-289865423|#542: Python namespace collision on Cray XC40 SMW for `make dist`>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490726459.001305",
        "date": 1490726459001
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by dpjensen on issue <https://github.com/singularityware/singularity/issues/542#issuecomment-289863997|#542: Python namespace collision on Cray XC40 SMW for `make dist`>",
                "text": "@vsoch Cray's packages add things from all over to `$PYTHONPATH` so it's a tad hard to anticipate weird edge cases. However, aside from that, the build process completed without issues. ",
                "pretext": "[singularityware/singularity] New comment by dpjensen on issue <https://github.com/singularityware/singularity/issues/542#issuecomment-289863997|#542: Python namespace collision on Cray XC40 SMW for `make dist`>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490726154.918764",
        "date": 1490726154918
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/542#issuecomment-289861549|#542: Python namespace collision on Cray XC40 SMW for `make dist`>",
                "text": "ok, I'm renaming to `sutils.py` (singularity utils) please poke me if there is a potential sutils conflict! I know about psutil, shutil, and (now) utils, and google searching I didn't find any obvious system packages called sutils.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/542#issuecomment-289861549|#542: Python namespace collision on Cray XC40 SMW for `make dist`>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490725656.779849",
        "date": 1490725656779
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/542#issuecomment-289857422|#542: Python namespace collision on Cray XC40 SMW for `make dist`>",
                "text": "How nuts! This should be relatively easy to fix by renaming the function. I'll do this right away and then we will be able to test. Do you know/predict/see any other name conflicts?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/542#issuecomment-289857422|#542: Python namespace collision on Cray XC40 SMW for `make dist`>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490724790.543644",
        "date": 1490724790543
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-289853688|#538: Fix permissions docker>",
                "text": "ok, and just confirmed that it works with `sudo` and `--writable`\n\n```bash\nsudo singularity --debug shell --writable docker://blacklabelops/centos\n[sudo] password for vanessa: \nenabling debugging\nending argument loop\nExec'ing: /usr/local/libexec/singularity/cli/shell.exec --writableImporting: base Singularity environment\nDEBUG:python:SINGULARITY_COMMAND_ASIS found as False\nDEBUG:python:SINGULARITY_ROOTFS found as /tmp/.singularity-runtime.cZQkGQt7/container/blacklabelops/centos\nDEBUG:python:SINGULARITY_METADATA_FOLDER found as /tmp/.singularity-runtime.cZQkGQt7/container/blacklabelops/centos/.singularity.d\nDEBUG:python:SINGULARITY_DISABLE_CACHE found as False\nDEBUG:python:SINGULARITY_CACHEDIR found as /root/.singularity\nDEBUG:python:SINGULARITY_ENVBASE found as /tmp/.singularity-runtime.cZQkGQt7/container/blacklabelops/centos/.singularity.d/env\nDEBUG:python:SINGULARITY_LABELFILE found as /tmp/.singularity-runtime.cZQkGQt7/container/blacklabelops/centos/.singularity.d/labels.json\nDEBUG:python:SINGULARITY_INCLUDECMD found as False\nDEBUG:python:SINGULARITY_PULLFOLDER found as /home/vanessa\nDEBUG:python:SINGULARITY_CONTENTS found as /tmp/.singularity-layers.c1DXDRgy\nDEBUG:python:SINGULARITY_CONTAINER found as docker://blacklabelops/centos\nDEBUG:python:Found uri docker://\nDEBUG:python:Found uri docker://\nINFO:python:\n*** STARTING DOCKER IMPORT PYTHON  ****\nINFO:python:Docker layers and (env,labels,runscript) will be written to: /tmp/.singularity-layers.c1DXDRgy\nDEBUG:python:SINGULARITY_DOCKER_USERNAME not defined (None)\nDEBUG:python:SINGULARITY_DOCKER_PASSWORD found\nDEBUG:python:Starting Docker IMPORT, includes environment, runscript, and metadata.\nINFO:python:Docker image: blacklabelops/centos\nINFO:python:Specified Docker ENTRYPOINT as %runscript.\nINFO:python:Registry: index.docker.io\nINFO:python:Namespace: blacklabelops\nINFO:python:Repo Name: centos\nINFO:python:Repo Tag: latest\nINFO:python:Version: None\nDEBUG:python:Headers found: Content-Type,Accept\nINFO:python:Obtaining tags: <https://index.docker.io/v2/blacklabelops/centos/tags/list>\nDEBUG:python:GET <https://index.docker.io/v2/blacklabelops/centos/tags/list>\nDEBUG:python:GET <https://auth.docker.io/token?service=registry.docker.io&amp;scope=repository:blacklabelops/centos:pull>\nDEBUG:python:Headers found: Content-Type,Authorization,Accept\nDEBUG:python:GET <https://auth.docker.io/token?service=registry.docker.io&amp;scope=repository:blacklabelops/centos:pull>\nDEBUG:python:Headers found: Content-Type,Authorization,Accept\nINFO:python:Docker image path: index.docker.io/blacklabelops/centos:latest\nINFO:python:Obtaining manifest: <https://index.docker.io/v2/blacklabelops/centos/manifests/latest>\nDEBUG:python:GET <https://index.docker.io/v2/blacklabelops/centos/manifests/latest>\nINFO:python:Image manifest version 2.2 found.\nINFO:python:Adding digest sha256:45a2e645736c4c66ef34acce2407ded21f7a9b231199d3b92d6c9776df264729\nINFO:python:Adding digest sha256:ad1a736aa04951e504861c84b577c102f3950fcd329bbda7347bb2d88d2300d7\nINFO:python:Obtaining manifest: <https://index.docker.io/v2/blacklabelops/centos/manifests/latest>\nDEBUG:python:GET <https://index.docker.io/v2/blacklabelops/centos/manifests/latest>\nCache folder set to /root/.singularity/docker\nINFO:python:Downloading layers from <https://index.docker.io/v2/blacklabelops/centos/blobs/sha256:45a2e645736c4c66ef34acce2407ded21f7a9b231199d3b92d6c9776df264729>\nDownloading layer sha256:45a2e645736c4c66ef34acce2407ded21f7a9b231199d3b92d6c9776df264729\nDEBUG:python:GET <https://index.docker.io/v2/blacklabelops/centos/blobs/sha256:45a2e645736c4c66ef34acce2407ded21f7a9b231199d3b92d6c9776df264729>\ncd INFO:python:Downloading layers from <https://index.docker.io/v2/blacklabelops/centos/blobs/sha256:ad1a736aa04951e504861c84b577c102f3950fcd329bbda7347bb2d88d2300d7>\nDownloading layer sha256:ad1a736aa04951e504861c84b577c102f3950fcd329bbda7347bb2d88d2300d7\nDEBUG:python:GET <https://index.docker.io/v2/blacklabelops/centos/blobs/sha256:ad1a736aa04951e504861c84b577c102f3950fcd329bbda7347bb2d88d2300d7>\nINFO:python:Found Docker command (Entrypoint) None\nINFO:python:Found Docker command (Cmd) /bin/bash\nDEBUG:python:Adding Docker CMD as Singularity runscript...\nDEBUG:python:/bin/bash\nINFO:python:Found Docker command (Env) PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nDEBUG:python:Found Docker container environment!\nDEBUG:python:Adding Docker environment to metadata tar\nINFO:python:Found Docker command (Labels) {u'com.blacklabelops.image.os': u'centos', u'maintainer': u'Steffen Bleul <mailto:sbl@blacklabelops.com|sbl@blacklabelops.com>', u'com.blacklabelops.image.osversion': u'7.2.1511', u'license': u'GPLv2', u'com.blacklabelops.image.name.centos': u'centos-base-image', u'com.blacklabelops.image.builddate.centos': u'28/03/2017-01:05+0200', u'com.blacklabelops.maintainer.name': u'Steffen Bleul', u'com.blacklabelops.maintainer.email': u'sbl@blacklabelops.com', u'vendor': u'CentOS', u'build-date': u'20161214', u'com.blacklabelops.support': u'<http://support.blacklabelops.com/',> u'name': u'CentOS Base Image'}\nDEBUG:python:Found Docker container labels!\nDEBUG:python:Adding Docker labels to metadata tar\nDEBUG:python:Adding Docker runscript to metadata tar\nDEBUG:python:Tar file with Docker env and labels: /root/.singularity/docker/sha256:cebfcb455b0f307f2cc86b3c54677c4a78279699e5a6735aae6bc296f48b1463.tar.gz\nDEBUG:python:Writing Docker layers files to /tmp/.singularity-layers.c1DXDRgy\nINFO:python:Writing file /tmp/.singularity-layers.c1DXDRgy with mode w.\nINFO:python:Writing file /tmp/.singularity-layers.c1DXDRgy with mode a.\nINFO:python:*** FINISHING DOCKER IMPORT PYTHON PORTION ****\n\nExploding layer: sha256:ad1a736aa04951e504861c84b577c102f3950fcd329bbda7347bb2d88d2300d7.tar.gz\nExploding layer: sha256:45a2e645736c4c66ef34acce2407ded21f7a9b231199d3b92d6c9776df264729.tar.gz\nExploding layer: sha256:cebfcb455b0f307f2cc86b3c54677c4a78279699e5a6735aae6bc296f48b1463.tar.gz\nVERBOSE [U=0,P=21484]      message_init()                            Set messagelevel to: 5\nVERBOSE [U=0,P=21484]      singularity_config_parse()                Initialize configuration file: /usr/local/etc/singularity/singularity.conf\nDEBUG   [U=0,P=21484]      singularity_config_parse()                Starting parse of configuration file /usr/local/etc/singularity/singularity.conf\nVERBOSE [U=0,P=21484]      singularity_config_parse()                Got config key allow setuid = 'yes'\nVERBOSE [U=0,P=21484]      singularity_config_parse()                Got config key max loop devices = '256'\nVERBOSE [U=0,P=21484]      singularity_config_parse()                Got config key allow pid ns = 'yes'\nVERBOSE [U=0,P=21484]      singularity_config_parse()                Got config key config passwd = 'yes'\nVERBOSE [U=0,P=21484]      singularity_config_parse()                Got config key config group = 'yes'\nVERBOSE [U=0,P=21484]      singularity_config_parse()                Got config key config resolv_conf = 'yes'\nVERBOSE [U=0,P=21484]      singularity_config_parse()                Got config key mount proc = 'yes'\nVERBOSE [U=0,P=21484]      singularity_config_parse()                Got config key mount sys = 'yes'\nVERBOSE [U=0,P=21484]      singularity_config_parse()                Got config key mount dev = 'yes'\nVERBOSE [U=0,P=21484]      singularity_config_parse()                Got config key mount home = 'yes'\nVERBOSE [U=0,P=21484]      singularity_config_parse()                Got config key mount tmp = 'yes'\nVERBOSE [U=0,P=21484]      singularity_config_parse()                Got config key mount hostfs = 'no'\nVERBOSE [U=0,P=21484]      singularity_config_parse()                Got config key bind path = '/etc/hosts'\nVERBOSE [U=0,P=21484]      singularity_config_parse()                Got config key user bind control = 'yes'\nVERBOSE [U=0,P=21484]      singularity_config_parse()                Got config key enable overlay = 'yes'\nVERBOSE [U=0,P=21484]      singularity_config_parse()                Got â€¦",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-289853688|#538: Fix permissions docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490724039.333725",
        "date": 1490724039333
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#542 Python namespace collision on Cray XC40 SMW for `make dist`' https://github.com/singularityware/singularity/issues/542 by dpjensen",
                "text": "So, `make dist` will run the script `configure_transform.py` script, which does this:\n\n```\nsys.path.append('../libexec/python')\n\nfrom utils import (\n    get_fullpath,\n    read_file,\n    write_file\n)\n```On a cray XC40 SMW, `utils` aready exists:\n```\n&gt; &gt; &gt; import utils\n&gt; &gt; &gt; help(utils)\nNAME\n    utils\n\nFILE\n    /opt/cray/install-support/3.3.2568-2.8/utils/*init*.py\n```\n\nObviously, this results in an import error:\n\n```Traceback (most recent call last):\n  File \"./configure_transform.py\", line 8, in &lt;module&gt;\n    from utils import (\nImportError: cannot import name get_fullpath\n```\n\nWe developed a temporary workaround by adding `sys.path.remove('/opt/cray/install-support/3.3.2568-2.8'` but this is obviously not a good long-term solution; path.insert() may work as well, to put `../libexec/python` at the beginning of the path.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/dpjensen|dpjensen>",
                "title": "#542 Python namespace collision on Cray XC40 SMW for `make dist`",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/542",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490723636.217671",
        "date": 1490723636217
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-289850944|#538: Fix permissions docker>",
                "text": "just tested this with the old version - @truatpasteurdotfr +1 I think this is a special case, because the same error is present with our previous version!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-289850944|#538: Fix permissions docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490723512.181316",
        "date": 1490723512181
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/527|#527 Bootstrap from an image> by <https://github.com/DeepHorizons|DeepHorizons>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/527|#527 Bootstrap from an image> by <https://github.com/DeepHorizons|DeepHorizons>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490718840.888578",
        "date": 1490718840888
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by markeganfuller on issue <https://github.com/singularityware/singularity/issues/540#issuecomment-289770634|#540: Could not create /dev/loop : File exists on OpenMPI jobs>",
                "text": "Just tested with eedc890c36cb92af96c8f1678bbae5137c5715a0 and I can't reproduce anymore, seems like you that's the fix, thanks @gmkurtzer ",
                "pretext": "[singularityware/singularity] New comment by markeganfuller on issue <https://github.com/singularityware/singularity/issues/540#issuecomment-289770634|#540: Could not create /dev/loop : File exists on OpenMPI jobs>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490707986.650834",
        "date": 1490707986650
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/540|#540 Could not create /dev/loop : File exists on OpenMPI jobs> by <https://github.com/markeganfuller|markeganfuller>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/540|#540 Could not create /dev/loop : File exists on OpenMPI jobs> by <https://github.com/markeganfuller|markeganfuller>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490707986.650820",
        "date": 1490707986650
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-289735833|#538: Fix permissions docker>",
                "text": "We used to find files with missing permissions and fix them - @gmkurtzer can we do this equivalently with your extraction? If not we can go back to python. What are the cons of having the python portion extract the layers that would make it not suitable for a non sudo import?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-289735833|#538: Fix permissions docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490699033.038675",
        "date": 1490699033038
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by remyd1 on issue <https://github.com/singularityware/singularity/issues/500#issuecomment-289718979|#500: Mount does not change directory to the directory mounted>",
                "text": "Thanks  ! :+1:",
                "pretext": "[singularityware/singularity] New comment by remyd1 on issue <https://github.com/singularityware/singularity/issues/500#issuecomment-289718979|#500: Mount does not change directory to the directory mounted>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490694416.320738",
        "date": 1490694416320
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hra0031 on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-289673691|#538: Fix permissions docker>",
                "text": "I've try it right now with develop version and public repository:\n```hra0031@login4:~$ singularity --debug shell docker://blacklabelops/centos                                                                                                                                                        [6124/28968]\nenabling debugging\nending argument loop\nExecing: /home/hra0031/.local/easybuild/software/Singularity/2.2.99-GCC-6.3.0-2.27-develop2/libexec/singularity/cli/shell.exec docker://blacklabelops/centos\nImporting: base Singularity environment\nDEBUG:python:SINGULARITY_COMMAND_ASIS found as False\nDEBUG:python:SINGULARITY_ROOTFS found as /tmp/.singularity-runtime.1dgMnlAV/container/blacklabelops/centos\nDEBUG:python:SINGULARITY_METADATA_FOLDER found as /tmp/.singularity-runtime.1dgMnlAV/container/blacklabelops/centos/.singularity.d\nDEBUG:python:SINGULARITY_DISABLE_CACHE found as False\nDEBUG:python:SINGULARITY_CACHEDIR found as /home/hra0031/.singularity\nDEBUG:python:SINGULARITY_ENVBASE found as /tmp/.singularity-runtime.1dgMnlAV/container/blacklabelops/centos/.singularity.d/env\nDEBUG:python:SINGULARITY_LABELFILE found as /tmp/.singularity-runtime.1dgMnlAV/container/blacklabelops/centos/.singularity.d/labels.json\nDEBUG:python:SINGULARITY_INCLUDECMD found as False\nDEBUG:python:SINGULARITY_PULLFOLDER found as /home/hra0031\nDEBUG:python:SINGULARITY_CONTENTS found as /tmp/.singularity-layers.FVVHYWmq\nDEBUG:python:SINGULARITY_CONTAINER found as docker://blacklabelops/centos\nDEBUG:python:Found uri docker://\nDEBUG:python:Found uri docker://\nINFO:python:\n*** STARTING DOCKER IMPORT PYTHON  ****\nINFO:python:Docker layers and (env,labels,runscript) will be written to: /tmp/.singularity-layers.FVVHYWmq\nDEBUG:python:SINGULARITY_DOCKER_USERNAME not defined (None)\nDEBUG:python:SINGULARITY_DOCKER_PASSWORD found\nDEBUG:python:Starting Docker IMPORT, includes environment, runscript, and metadata.\nINFO:python:Docker image: blacklabelops/centos\nINFO:python:Specified Docker ENTRYPOINT as %runscript.\nINFO:python:Registry: index.docker.io\nINFO:python:Namespace: blacklabelops\nINFO:python:Repo Name: centos\nINFO:python:Repo Tag: latest\nINFO:python:Version: None\nDEBUG:python:Headers found: Content-Type,Accept\nINFO:python:Obtaining tags: https://index.docker.io/v2/blacklabelops/centos/tags/list\nDEBUG:python:GET https://index.docker.io/v2/blacklabelops/centos/tags/list\nDEBUG:python:GET https://auth.docker.io/token?service=registry.docker.io&amp;scope=repository:blacklabelops/centos:pull\nDEBUG:python:Headers found: Authorization,Content-Type,Accept\nDEBUG:python:GET https://auth.docker.io/token?service=registry.docker.io&amp;scope=repository:blacklabelops/centos:pull\nDEBUG:python:Headers found: Authorization,Content-Type,Accept\nINFO:python:Docker image path: index.docker.io/blacklabelops/centos:latest\nINFO:python:Obtaining manifest: https://index.docker.io/v2/blacklabelops/centos/manifests/latest\nDEBUG:python:GET https://index.docker.io/v2/blacklabelops/centos/manifests/latest\nINFO:python:Image manifest version 2.2 found.\nINFO:python:Adding digest sha256:45a2e645736c4c66ef34acce2407ded21f7a9b231199d3b92d6c9776df264729\nINFO:python:Adding digest sha256:ad1a736aa04951e504861c84b577c102f3950fcd329bbda7347bb2d88d2300d7\nINFO:python:Obtaining manifest: https://index.docker.io/v2/blacklabelops/centos/manifests/latest\nDEBUG:python:GET https://index.docker.io/v2/blacklabelops/centos/manifests/latest\nCache folder set to /home/hra0031/.singularity/docker\nINFO:python:Downloading layers from https://index.docker.io/v2/blacklabelops/centos/blobs/sha256:45a2e645736c4c66ef34acce2407ded21f7a9b231199d3b92d6c9776df264729\nDownloading layer sha256:45a2e645736c4c66ef34acce2407ded21f7a9b231199d3b92d6c9776df264729\nDEBUG:python:GET https://index.docker.io/v2/blacklabelops/centos/blobs/sha256:45a2e645736c4c66ef34acce2407ded21f7a9b231199d3b92d6c9776df264729\nINFO:python:Downloading layers from https://index.docker.io/v2/blacklabelops/centos/blobs/sha256:ad1a736aa04951e504861c84b577c102f3950fcd329bbda7347bb2d88d2300d7\nDownloading layer sha256:ad1a736aa04951e504861c84b577c102f3950fcd329bbda7347bb2d88d2300d7\nDEBUG:python:GET https://index.docker.io/v2/blacklabelops/centos/blobs/sha256:ad1a736aa04951e504861c84b577c102f3950fcd329bbda7347bb2d88d2300d7\nINFO:python:Found Docker command (Entrypoint) None\nINFO:python:Found Docker command (Cmd) /bin/bash\nDEBUG:python:Adding Docker CMD as Singularity runscript...\nDEBUG:python:/bin/bash\nINFO:python:Found Docker command (Env) PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nDEBUG:python:Found Docker container environment!\nDEBUG:python:Adding Docker environment to metadata tar\nINFO:python:Found Docker command (Labels) {'com.blacklabelops.maintainer.email': 'sbl@blacklabelops.com', 'maintainer': 'Steffen Bleul &lt;sbl@blacklabelops.com&gt;', 'com.blacklabelops.support': 'http://support.blacklabelops.com/', 'com.black\nlabelops.image.osversion': '7.2.1511', 'vendor': 'CentOS', 'name': 'CentOS Base Image', 'build-date': '20161214', 'com.blacklabelops.image.os': 'centos', 'com.blacklabelops.maintainer.name': 'Steffen Bleul', 'com.blacklabelops.image.buil\nddate.centos': '28/03/2017-01:05+0200', 'com.blacklabelops.image.name.centos': 'centos-base-image', 'license': 'GPLv2'}\nDEBUG:python:Found Docker container labels!\nDEBUG:python:Adding Docker labels to metadata tar\nDEBUG:python:Adding Docker runscript to metadata tar\nDEBUG:python:Tar file with Docker env and labels: /home/hra0031/.singularity/docker/sha256:3ddc4df119adfe8d1889183c268fb1289481da8b1a62731390925d09b8851d7a.tar.gz\nDEBUG:python:Writing Docker layers files to /tmp/.singularity-layers.FVVHYWmq\nINFO:python:Writing file /tmp/.singularity-layers.FVVHYWmq with mode w.\nINFO:python:Writing file /tmp/.singularity-layers.FVVHYWmq with mode a.\nINFO:python:*** FINISHING DOCKER IMPORT PYTHON PORTION ****\nExploding layer: sha256:ad1a736aa04951e504861c84b577c102f3950fcd329bbda7347bb2d88d2300d7.tar.gz\nExploding layer: sha256:45a2e645736c4c66ef34acce2407ded21f7a9b231199d3b92d6c9776df264729.tar.gz\ntar: usr/bin/[: Cannot open: Permission denied\ntar: usr/bin/addr2line: Cannot open: Permission denied\ntar: usr/bin/alias: Cannot open: Permission denied\ntar: usr/bin/ar: Cannot open: Permission denied\ntar: usr/bin/arch: Cannot open: Permission denied\ntar: usr/bin/as: Cannot open: Permission denied\ntar: usr/bin/awk: Cannot create symlink to gawk: Permission denied\ntar: usr/bin/base64: Cannot open: Permission denied\ntar: usr/bin/basename: Cannot open: Permission denied\n...\n```\n@truatpasteurdotfr I think this could be right, because I've try the Ubuntu image right now and it's workink OK",
                "pretext": "[singularityware/singularity] New comment by hra0031 on issue <https://github.com/singularityware/singularity/issues/538#issuecomment-289673691|#538: Fix permissions docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490681656.444798",
        "date": 1490681656444
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by rynge on issue <https://github.com/singularityware/singularity/issues/495#issuecomment-289653024|#495: HOME=/ and nobody user problem>",
                "text": "Thank you for spending time on this issue. I have attached the log for the command:\n\nsingularity --debug exec --home $PWD:/srv --pwd /srv --scratch /var/tmp --scratch /tmp /tmp/OSGVO-EL7-latest.img echo \"Hello World\"\n\n<https://github.com/singularityware/singularity/files/874417/singularity-home-2.txt|singularity-home-2.txt>",
                "pretext": "[singularityware/singularity] New comment by rynge on issue <https://github.com/singularityware/singularity/issues/495#issuecomment-289653024|#495: HOME=/ and nobody user problem>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490671981.726675",
        "date": 1490671981726
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/354|#354 Strange bind behavior on cluster> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/354|#354 Strange bind behavior on cluster> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490670224.590683",
        "date": 1490670224590
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/354#issuecomment-289649021|#354: Strange bind behavior on cluster>",
                "text": "Oh, awesome! Fantastic news!\n\nI'm gonna close this issue, but if you find otherwise, please go ahead and reopen.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/354#issuecomment-289649021|#354: Strange bind behavior on cluster>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1490670224.590676",
        "date": 1490670224590
    }
]
