[
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-306327584|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "text": "hey @yarikoptic where was your build located again? If you are going to reliably be building for each new release, I'd like to put instructions for using your build in the singularity docs proper.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-306327584|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496701428.161240",
        "date": 1496701428161
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#723 Allow mount point to have SETGID/SETUID bits set' https://github.com/singularityware/singularity/pull/723 by bauerm97",
                "text": "*Description of the Pull Request (PR):*\n\nAllow `mount_point` in `singularity_image_mount()` to mount in locations with 2755, 4755, and 6755 permissions, instead of just 0755 permissions. If there is a better way to do this than the dumb way I've implemented it here, I'm all ears. Perhaps a better solution would be to have `chk_mode()` instead have arguments `int chk_mode(char *path, mode_t *mode)` where mode is instead an array of modes, however I believe that this isn't really necessary.\n\n*This fixes or addresses the following GitHub issues:*\n\n• Ref: #707 \n\n*Checkoff for all PRs:*\n\n• [x] I have read the <https://github.com/singularityware/singularity/blob/master/CONTRIBUTING.md|Guidelines for Contributing>, and this PR conforms to the stated requirements.\n• [x] I have tested this PR locally with a `make test`\n• [x] This PR is NOT against the project's master branch\n• [x] I have added myself as a contributor to the <https://github.com/singularityware/singularity/blob/master/AUTHORS.md|Author's file>\n• [x] This PR is ready for review and/or merge\n\nAttn: @singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/bauerm97|bauerm97>",
                "title": "#723 Allow mount point to have SETGID/SETUID bits set",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/723",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496690611.916635",
        "date": 1496690611916
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/714#issuecomment-306274188|#714: Singularity not preventing unmounts of mounted image directory>",
                "text": "I see the same behavior on an EL6 host as well.",
                "pretext": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/714#issuecomment-306274188|#714: Singularity not preventing unmounts of mounted image directory>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496689222.421828",
        "date": 1496689222421
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/714#issuecomment-306273839|#714: Singularity not preventing unmounts of mounted image directory>",
                "text": "No, the behavior is the same without --containall.  Can you reproduce it?",
                "pretext": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/714#issuecomment-306273839|#714: Singularity not preventing unmounts of mounted image directory>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496689142.391321",
        "date": 1496689142391
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by kcgthb on issue <https://github.com/singularityware/singularity/issues/707#issuecomment-306249811|#707: Error if container directory is setgid>",
                "text": "Fine by me. If there's no specific reason to make sure that this directory is _not_ SETUID/SETGID, then yes, checking for 755 should be sufficient.",
                "pretext": "[singularityware/singularity] New comment by kcgthb on issue <https://github.com/singularityware/singularity/issues/707#issuecomment-306249811|#707: Error if container directory is setgid>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496683425.301406",
        "date": 1496683425301
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by kcgthb on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-306249102|#611: Nvidia GPU support with different driver versions?>",
                "text": "Hi Greg, \n\nNope, it's dynamically linked:\n```$ ldd `which nvidia-smi`\n        linux-vdso.so.1 =&gt;  (0x00007ffd32fae000)\n        libpthread.so.0 =&gt; /usr/lib64/libpthread.so.0 (0x00007f84af507000)\n        libdl.so.2 =&gt; /usr/lib64/libdl.so.2 (0x00007f84af302000)\n        libc.so.6 =&gt; /usr/lib64/libc.so.6 (0x00007f84aef41000)\n        librt.so.1 =&gt; /usr/lib64/librt.so.1 (0x00007f84aed39000)\n        /lib64/ld-linux-x86-64.so.2 (0x00007f84af730000)\n$ objdump -T `which nvidia-smi` | grep GLIBC_ | sed -e 's/^.*\\(GLIBC_[^ ]*\\).*$/\\1/' | sort | uniq\nGLIBC_2.2.5\n```\nSo yes, portability may not be great, but as you said, it's already the case for libraries.\n\nAnd binding the binary with -B does work:\n```$ singularity exec -B /usr/bin/nvidia-smi --nv cuda.img nvidia-smi -L\nGPU 0: Tesla P40 (UUID: GPU-0e07a660-2201-322e-1456-18a213fc2983)\nGPU 1: Tesla P40 (UUID: GPU-42b925fd-0dee-ec3c-627e-3024d9376024)\n```",
                "pretext": "[singularityware/singularity] New comment by kcgthb on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-306249102|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496683269.246532",
        "date": 1496683269246
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by mvdoc on issue <https://github.com/singularityware/singularity/issues/721#issuecomment-306226934|#721: Could not mount Singularity overlay: No such device>",
                "text": "Yeah, that was it—disabling overlay in `/etc/singularity/singularity.conf` for debian build makes it work again.",
                "pretext": "[singularityware/singularity] New comment by mvdoc on issue <https://github.com/singularityware/singularity/issues/721#issuecomment-306226934|#721: Could not mount Singularity overlay: No such device>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496678320.508704",
        "date": 1496678320508
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/721#issuecomment-306204738|#721: Could not mount Singularity overlay: No such device>",
                "text": "and the 2nd part of the mystery is that on that stretch box, with 3.16.0 kernel there is no overlayfs.ko, i.e. there is no overlay support\n```mvdoc@euclid ~/singularity/hauntedhouse $ find /lib/modules -iname '*overlay*'\nmvdoc@euclid ~/singularity/hauntedhouse $ lsmod | grep overlay\n```\nso you would either need to install some backported kernel or just tune singularity.conf to not use overlays on that box... \nin my case on smaug server I have newer kernel and overlayfs.ko is available and loaded, that is why it worked just fine\n\non singularity side it would be nice if error message in this case was a bit more descriptive -- e.g. if it could say \"failed to mount OverlayFS file system.  Your kernel seems to lack support for it\" or alike",
                "pretext": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/721#issuecomment-306204738|#721: Could not mount Singularity overlay: No such device>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496673593.795763",
        "date": 1496673593795
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/721#issuecomment-306202523|#721: Could not mount Singularity overlay: No such device>",
                "text": "ok -- at least the mystery of diverging behavior is now clear:\n\n```mvdoc@euclid ~/singularity/hauntedhouse $ grep 'OverlayFS.*host.*build' debian-d.log compiled-d.log \ndebian-d.log:DEBUG   [U=1000,P=71887]   singularity_runtime_overlayfs()           OverlayFS enabled by host build\ncompiled-d.log:VERBOSE [U=1000,P=71877]   singularity_runtime_overlayfs()           OverlayFS not supported by host build\n```\nso the pre-compiled one has no OverlayFS, thus it didn't \"fail\" since it didn't try (silently, even though .conf was instructing to \"use\" it). ",
                "pretext": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/721#issuecomment-306202523|#721: Could not mount Singularity overlay: No such device>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496673082.617503",
        "date": 1496673082617
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by truatpasteurdotfr on issue <https://github.com/singularityware/singularity/issues/722#issuecomment-306196788|#722: GLOB_TILDE (glibc) required from released 2.3 version: non musl compatible yet>",
                "text": "<http://www.openwall.com/lists/musl/2017/01/20/4> from IRC discussion on #alpine-devel",
                "pretext": "[singularityware/singularity] New comment by truatpasteurdotfr on issue <https://github.com/singularityware/singularity/issues/722#issuecomment-306196788|#722: GLOB_TILDE (glibc) required from released 2.3 version: non musl compatible yet>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496671745.164220",
        "date": 1496671745164
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by truatpasteurdotfr on issue <https://github.com/singularityware/singularity/issues/722#issuecomment-306176546|#722: GLOB_TILDE (glibc) required from released 2.3 version: non musl compatible yet>",
                "text": "<https://bugs.alpinelinux.org/issues/5078> provide a workaround for i3. What is the best course of action ?",
                "pretext": "[singularityware/singularity] New comment by truatpasteurdotfr on issue <https://github.com/singularityware/singularity/issues/722#issuecomment-306176546|#722: GLOB_TILDE (glibc) required from released 2.3 version: non musl compatible yet>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496666021.660243",
        "date": 1496666021660
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#722 GLOB_TILDE (glibc) required from released 2.3 version: non musl compatible yet' https://github.com/singularityware/singularity/issues/722 by truatpasteurdotfr",
                "text": "*Version of Singularity:*\n\n2.3\n\n*Expected behavior*\n\n*Actual behavior*\n\n```\n/bin/bash ../../../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../../src  -DSYSCONFDIR=\\\"/etc\\\" -DLOCALSTATEDIR=\\\"/var\\\" -DLIBEXECDIR=\\\"/usr/libexec\\\" -DNS_CLONE_NEWPID -DNS_CLONE_FS -DNS_CLONE_NEWNS -DNS_CLONE_NEWUSER -DNS_CLONE_NEWIPC -DSINGULARITY_NO_NEW_PRIVS -DSINGULARITY_MS_SLAVE -DSINGULARITY_OVERLAYFS  -Os -fomit-frame-pointer -Wall -fpie -fPIC  -Os -fomit-frame-pointer -MT ../../util/libinternal_la-config_parser.lo -MD -MP -MF ../../util/.deps/libinternal_la-config_parser.Tpo -c -o ../../util/libinternal_la-config_parser.lo `test -f '../../util/config_parser.c' || echo './'`../../util/config_parser.c\nlibtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../../src -DSYSCONFDIR=\\\"/etc\\\" -DLOCALSTATEDIR=\\\"/var\\\" -DLIBEXECDIR=\\\"/usr/libexec\\\" -DNS_CLONE_NEWPID -DNS_CLONE_FS -DNS_CLONE_NEWNS -DNS_CLONE_NEWUSER -DNS_CLONE_NEWIPC -DSINGULARITY_NO_NEW_PRIVS -DSINGULARITY_MS_SLAVE -DSINGULARITY_OVERLAYFS -Os -fomit-frame-pointer -Wall -fPIC -Os -fomit-frame-pointer -MT ../../util/libinternal_la-config_parser.lo -MD -MP -MF ../../util/.deps/libinternal_la-config_parser.Tpo -c ../../util/config_parser.c  -fPIC -DPIC -o ../../util/.libs/libinternal_la-config_parser.o\n../../util/config_parser.c: In function 'singularity_config_parse':\n../../util/config_parser.c:145:44: error: 'GLOB_TILDE' undeclared (first use in this function)\n                 int err = glob(fname_glob, GLOB_TILDE, log_glob_error, &amp;glob_results);\n                                            ^~~~~~~~~~\n../../util/config_parser.c:145:44: note: each undeclared identifier is reported only once for each function it appears in\nmake[5]: *** [Makefile:588: ../../util/libinternal_la-config_parser.lo] Error 1\nmake[5]: Leaving directory '/home/tru/singularity-build/2.3/src/singularity-2.3/src/lib/runtime'\nmake[4]: *** [Makefile:650: all-recursive] Error 1\nmake[4]: Leaving directory '/home/tru/singularity-build/2.3/src/singularity-2.3/src/lib/runtime'\nmake[3]: *** [Makefile:376: all-recursive] Error 1\nmake[3]: Leaving directory '/home/tru/singularity-build/2.3/src/singularity-2.3/src/lib'\nmake[2]: *** [Makefile:2866: all-recursive] Error 1\nmake[2]: Leaving directory '/home/tru/singularity-build/2.3/src/singularity-2.3/src'\nmake[1]: *** [Makefile:591: all] Error 2\nmake[1]: Leaving directory '/home/tru/singularity-build/2.3/src/singularity-2.3/src'\nmake: *** [Makefile:390: all-recursive] Error 1\n\n```\n\n*Steps to reproduce behavior*\n\nalpine linux 3.6 x86_64:\n\n<https://github.com/singularityware/singularity/files/1051954/APKBUILD.txt|APKBUILD.txt>\n$ abuild -r\n\nref: alpine upstream musl <http://www.openwall.com/lists/musl/2017/01/17/3>",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/truatpasteurdotfr|truatpasteurdotfr>",
                "title": "#722 GLOB_TILDE (glibc) required from released 2.3 version: non musl compatible yet",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/722",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496664538.399841",
        "date": 1496664538399
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/454#issuecomment-306092468|#454: arch definition needs to be updated?>",
                "text": "The deffile has been updated to what you have current in your branch. Sorry this got missed and thanks for the pointer.\n\nAs I've stated, I can't test any other aspects of the Arch bootstrap code because I'm not running Arch, and `pacstrap` is not packaged for Debian/Ubuntu. Please test and if you find that anything else is broken, open a new issue or better yet, submit a PR.\n\nAnd since I don't like being accused of skewing facts, your last commit to this project was 8 months, 22 days ago and as I mentioned, the underlying bootstrap code has changed considerably since then.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/454#issuecomment-306092468|#454: arch definition needs to be updated?>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496631764.924636",
        "date": 1496631764924
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/454|#454 arch definition needs to be updated?> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/454|#454 arch definition needs to be updated?> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496631764.924631",
        "date": 1496631764924
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/720|#720 Does anyone use run-singularity?> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/720|#720 Does anyone use run-singularity?> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496628954.663124",
        "date": 1496628954663
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/720#issuecomment-306087412|#720: Does anyone use run-singularity?>",
                "text": "This was fun, I'm glad I asked! Closing issue.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/720#issuecomment-306087412|#720: Does anyone use run-singularity?>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496628954.663123",
        "date": 1496628954663
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/720#issuecomment-306086565|#720: Does anyone use run-singularity?>",
                "text": "Yep, exactly. I wish there was better magic to it, and one day there might be if we populate the image with an ELF binary header... But for now this method works fine. :)",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/720#issuecomment-306086565|#720: Does anyone use run-singularity?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496628462.617850",
        "date": 1496628462617
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/720#issuecomment-306084340|#720: Does anyone use run-singularity?>",
                "text": "ahh look at that! It is!\n\n```\nstrace ./container.img \nexecve(\"./container.img\", [\"./container.img\"], [/* 65 vars */]) = 0\n\n...\n\nexecve(\"/home/vanessa/Packages/google-cloud-sdk/bin/run-singularity\", [\"run-singularity\", \"./container.img\"], [/* 65 vars _/]) = -1 ENOENT (No such file or directory)\nexecve(\"/home/vanessa/.rbenv/plugins/ruby-build/bin/run-singularity\", [\"run-singularity\", \"./container.img\"], [/_ 65 vars _/]) = -1 ENOENT (No such file or directory)\nexecve(\"/home/vanessa/.rbenv/shims/run-singularity\", [\"run-singularity\", \"./container.img\"], [/_ 65 vars _/]) = -1 ENOENT (No such file or directory)\nexecve(\"/home/vanessa/.rbenv/bin/run-singularity\", [\"run-singularity\", \"./container.img\"], [/_ 65 vars _/]) = -1 ENOENT (No such file or directory)\nexecve(\"/home/vanessa/anaconda3/bin/run-singularity\", [\"run-singularity\", \"./container.img\"], [/_ 65 vars _/]) = -1 ENOENT (No such file or directory)\nexecve(\"/home/vanessa/bin/run-singularity\", [\"run-singularity\", \"./container.img\"], [/_ 65 vars _/]) = -1 ENOENT (No such file or directory)\nexecve(\"/home/vanessa/.local/bin/run-singularity\", [\"run-singularity\", \"./container.img\"], [/_ 65 vars _/]) = -1 ENOENT (No such file or directory)\nexecve(\"/usr/local/sbin/run-singularity\", [\"run-singularity\", \"./container.img\"], [/_ 65 vars _/]) = -1 ENOENT (No such file or directory)\nexecve(\"/usr/local/bin/run-singularity\", [\"run-singularity\", \"./container.img\"], [/_ 65 vars */]) = 0\nbrk(NULL)                               = 0x55b794664000\n```\n\nI wonder how that works - does it find some header indicating the right executable (eg, like `!#/bin/bash`) and then it literally just looks across all folders on the path for it (until it finds it).",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/720#issuecomment-306084340|#720: Does anyone use run-singularity?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496627164.497537",
        "date": 1496627164497
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/720#issuecomment-306080277|#720: Does anyone use run-singularity?>",
                "text": "the `run-singularity` wrapper is necessary for direct execution of images. :)",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/720#issuecomment-306080277|#720: Does anyone use run-singularity?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496624566.274918",
        "date": 1496624566274
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/721#issuecomment-306078459|#721: Could not mount Singularity overlay: No such device>",
                "text": "grr.. the beast works ok on my box with debian version of the package:\n```smaug:~/repronim/singularity\n$&gt; /usr/bin/singularity exec hauntedhouse.img echo \"Hello world\\!\" \nHello world!\n1 11554.....................................:Sun 04 Jun 2017 08:35:40 PM EDT:.\nsmaug:~/repronim/singularity\n$&gt; singularity --version                                             \n2.3-dist\n```",
                "pretext": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/721#issuecomment-306078459|#721: Could not mount Singularity overlay: No such device>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496622960.155782",
        "date": 1496622960155
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by mvdoc on issue <https://github.com/singularityware/singularity/issues/721#issuecomment-306071327|#721: Could not mount Singularity overlay: No such device>",
                "text": "I'm the student, hello! :-) \nso there were some old libraries hanging around. I removed them, and performed a clean install from neurodebian package. Then I re-created the image, just to be sure, but it still gives the same error. If  I build from source it works fine. \n\ndebian:\n```mvdoc@euclid ~/singularity/hauntedhouse $ /usr/bin/singularity exec hauntedhouse2.img echo \"Hello world\\!\"\nERROR  : Could not mount Singularity overlay: No such device\nABORT  : Retval = 255\n```\n\nCompiled:\n```mvdoc@euclid ~/singularity/hauntedhouse $ /usr/local/bin/singularity exec hauntedhouse2.img echo \"Hello world\\!\"\nHello world!\n```",
                "pretext": "[singularityware/singularity] New comment by mvdoc on issue <https://github.com/singularityware/singularity/issues/721#issuecomment-306071327|#721: Could not mount Singularity overlay: No such device>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496615042.706686",
        "date": 1496615042706
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/721#issuecomment-306069919|#721: Could not mount Singularity overlay: No such device>",
                "text": "is there any chance of old libraries still hanging around?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/721#issuecomment-306069919|#721: Could not mount Singularity overlay: No such device>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496613400.622884",
        "date": 1496613400622
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#721 Could not mount Singularity overlay: No such device' https://github.com/singularityware/singularity/issues/721 by yarikoptic",
                "text": "*Version of Singularity:*\n\nNeuroDebian backport build of 2.3 for jessie\n\nOne of the students reported that image fails to run using my (Neuro)Debian build but works using \"upstream\" build (installed under /usr/local)... local installation is N/A ATM so can't verify but here is the trail of output from singularity.  I wonder if any clue what could lead to such failure?\n```mvdoc@euclid ~/singularity/hauntedhouse $ singularity -d run hauntedhouse.img\n...\nDEBUG   [U=1000,P=34675]   singularity_registry_get()                Returning NULL on 'DISABLE_OVERLAYFS'\nDEBUG   [U=1000,P=34675]   singularity_registry_get()                Returning NULL on 'WRITABLE'\nDEBUG   [U=1000,P=34675]   singularity_runtime_overlayfs()           OverlayFS enabled by host build\nDEBUG   [U=1000,P=34675]   singularity_runtime_overlayfs()           Setting up overlay mount options\nDEBUG   [U=1000,P=34675]   singularity_runtime_overlayfs()           Checking for existance of overlay directory: /var/lib/singularity/mnt/overlay\nDEBUG   [U=1000,P=34675]   singularity_priv_escalate()               Temporarily escalating privileges (U=1000)\nDEBUG   [U=0,P=34675]      singularity_priv_escalate()               Clearing supplementary GIDs.\nDEBUG   [U=0,P=34675]      singularity_runtime_overlayfs()           Mounting overlay tmpfs: /var/lib/singularity/mnt/overlay\nDEBUG   [U=0,P=34675]      singularity_runtime_overlayfs()           Creating upper overlay directory: /var/lib/singularity/mnt/overlay/upper\nDEBUG   [U=0,P=34675]      s_mkpath()                                Creating directory: /var/lib/singularity/mnt/overlay/upper\nDEBUG   [U=0,P=34675]      singularity_runtime_overlayfs()           Creating overlay work directory: /var/lib/singularity/mnt/overlay/work\nDEBUG   [U=0,P=34675]      s_mkpath()                                Creating directory: /var/lib/singularity/mnt/overlay/work\nDEBUG   [U=0,P=34675]      singularity_runtime_overlayfs()           Creating overlay_final directory: /var/lib/singularity/mnt/overlay/final\nDEBUG   [U=0,P=34675]      s_mkpath()                                Creating directory: /var/lib/singularity/mnt/overlay/final\nVERBOSE [U=0,P=34675]      singularity_runtime_overlayfs()           Mounting overlay with options: lowerdir=/var/lib/singularity/mnt/container,upperdir=/var/lib/singularity/mnt/overlay/upper,workdir=/var/lib/singularity/mnt/overlay/work\nERROR   [U=0,P=34675]      singularity_runtime_overlayfs()           Could not mount Singularity overlay: No such device\nABORT   [U=0,P=34675]      singularity_runtime_overlayfs()           Retval = 255\n```\noverlay is enabled:\n```\nmvdoc@euclid ~/singularity/hauntedhouse $ grep overlay /etc/singularity/singularity.conf \nenable overlay = yes\n``",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/yarikoptic|yarikoptic>",
                "title": "#721 Could not mount Singularity overlay: No such device",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/721",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496613084.607863",
        "date": 1496613084607
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#720 Does anyone use run-singularity?' https://github.com/singularityware/singularity/issues/720 by vsoch",
                "text": "Just wondering... it's a lonely little executable still produced in the install \"bin\":\n\n```/usr/local/bin\n├── run-singularity\n└── singularity\n```\n\nI had forgotten that it existed entirely :)",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/vsoch|vsoch>",
                "title": "#720 Does anyone use run-singularity?",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/720",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496611536.530306",
        "date": 1496611536530
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306064897|#719: bad variable name with singularity import>",
                "text": "Maybe we could try double quotes for the Dockerfile?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306064897|#719: bad variable name with singularity import>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496608208.347551",
        "date": 1496608208347
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306064885|#719: bad variable name with singularity import>",
                "text": "I found this in the docs, although it is for exec:\n\n&gt; &gt; Note: The exec form is parsed as a JSON array, which means that you must use double-quotes (“) around words not single-quotes (‘).\nIt looks like the section with the ENV variables (History) might also be parsed as a json array? --&gt; <https://github.com/docker/distribution/blob/master/manifest/schema1/config_builder.go#L82>",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306064885|#719: bad variable name with singularity import>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496608194.346545",
        "date": 1496608194346
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306064535|#719: bad variable name with singularity import>",
                "text": "@satra it's actually on Docker's end - the variable that is provided in the manifest does not have any quotes!\n\n```\n\n   u'MATLABCMD=/opt/mcr/v85/toolbox/matlab',\n   u'SPMMCRCMD=/opt/spm12/run_spm12.sh /opt/mcr/v85/ script',\n\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306064535|#719: bad variable name with singularity import>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496607828.325864",
        "date": 1496607828325
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306060275|#719: bad variable name with singularity import>",
                "text": "in the docker shell those are completely valid environment variables because they are in \"quotes\"",
                "pretext": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306060275|#719: bad variable name with singularity import>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496603264.069067",
        "date": 1496603264069
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306060246|#719: bad variable name with singularity import>",
                "text": "@vsoch and @gmkurtzer - it seems like the environment variable extractor doesn't respect spaces in the string.",
                "pretext": "[singularityware/singularity] New comment by satra on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306060246|#719: bad variable name with singularity import>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496603230.067190",
        "date": 1496603230067
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by jokedurnez on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306060239|#719: bad variable name with singularity import>",
                "text": "Thanks for figuring this out Vanessa !\nAlthough in the original docker file, it's a command with \".\n```ENV MATLABCMD=\"/opt/mcr/v85/toolbox/matlab\" \\\n    SPMMCRCMD=\"/opt/spm12/run_spm12.sh /opt/mcr/v85/ script\" \\\n    FORCE_SPMMCR=1\n```\n\nAnd it's the fatty nipype image :-p .  I don't know what to do with this, I linked it to an issue with nipype.",
                "pretext": "[singularityware/singularity] New comment by jokedurnez on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306060239|#719: bad variable name with singularity import>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496603222.066665",
        "date": 1496603222066
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by czka on issue <https://github.com/singularityware/singularity/issues/454#issuecomment-306057550|#454: arch definition needs to be updated?>",
                "text": "I'm not blaming but stating a fact. Please don't take it personal, don't skew the facts and please don't lecture me. That's not encouraging.",
                "pretext": "[singularityware/singularity] New comment by czka on issue <https://github.com/singularityware/singularity/issues/454#issuecomment-306057550|#454: arch definition needs to be updated?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496600605.916490",
        "date": 1496600605916
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/454#issuecomment-306055877|#454: arch definition needs to be updated?>",
                "text": "It does not help to continuously blame me for a merging error, what does help is a PR. Since your last commit (8'ish months ago), we have had significant changes to the underlying bootstrap architecture, and neither @vsoch nor myself have the means or necessity to test or debug running Arch Linux on the host side, so until we get help, it will remain untested and broken.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/454#issuecomment-306055877|#454: arch definition needs to be updated?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496598909.819997",
        "date": 1496598909819
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by czka on issue <https://github.com/singularityware/singularity/issues/454#issuecomment-306051804|#454: arch definition needs to be updated?>",
                "text": "@gmkurtzer No, it was just a merge error on your side. I explained it twice at least. Sure I don't think it was intentional. But I expected you would finally fix it. That did not happen. Too bad.",
                "pretext": "[singularityware/singularity] New comment by czka on issue <https://github.com/singularityware/singularity/issues/454#issuecomment-306051804|#454: arch definition needs to be updated?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496594837.589697",
        "date": 1496594837589
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "<https://github.com/singularityware/singularity|[singularity]> The branch \"2.x\" was deleted by gmkurtzer",
                "text": "<https://github.com/singularityware/singularity|[singularity]> The branch \"2.x\" was deleted by gmkurtzer",
                "id": 1,
                "color": "4183C4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496593687.524155",
        "date": 1496593687524
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/454#issuecomment-306049865|#454: arch definition needs to be updated?>",
                "text": "@czka I can not promise that I, or anyone else, won't break pieces of this code with updates or reorganizations, that is why we need help to move forward! But it won't happen intentionally.\n\nAgain, I think the cause of much of this was that you had it fixed in the 'master' branch, but the master branch was an unfortunate dead end. It is fixed now, but nobody should be submitting PR's against master anyway.\n\nThanks and I look forward to having this fixed!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/454#issuecomment-306049865|#454: arch definition needs to be updated?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496592922.480287",
        "date": 1496592922480
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue re-opened: <https://github.com/singularityware/singularity/issues/454|#454 arch definition needs to be updated?> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue re-opened: <https://github.com/singularityware/singularity/issues/454|#454 arch definition needs to be updated?> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496592827.474779",
        "date": 1496592827474
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/454#issuecomment-306049777|#454: arch definition needs to be updated?>",
                "text": "will (or won't :P) do! Reopening issue.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/454#issuecomment-306049777|#454: arch definition needs to be updated?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496592827.474764",
        "date": 1496592827474
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by czka on issue <https://github.com/singularityware/singularity/issues/454#issuecomment-306049042|#454: arch definition needs to be updated?>",
                "text": "@vsoch \nArch example is still broken, both on <https://github.com/singularityware/singularity/blob/master/examples/arch/Singularity|master> and the latest <https://github.com/singularityware/singularity/blob/2.3/examples/arch/Singularity|2.3 release>. Still a mix of the old and the new format, which originates from @gmkurtzer merge error months ago, as explained above. This ticket should be re-opened.\n\nI will fix this and update it for the current Arch Linux install process. Next weekend or the following, maybe. Just please promise you won't break my balls again ;).",
                "pretext": "[singularityware/singularity] New comment by czka on issue <https://github.com/singularityware/singularity/issues/454#issuecomment-306049042|#454: arch definition needs to be updated?>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496592090.432351",
        "date": 1496592090432
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-306037465|#718: AWESOME JOB!>",
                "text": "@singularityware/singularity-maintainers  alarm alarm\nThat was a test ;-)",
                "pretext": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-306037465|#718: AWESOME JOB!>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496579760.790960",
        "date": 1496579760790
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-306017290|#718: AWESOME JOB!>",
                "text": "okay I added both of you, let me know who else (or just add them at willy nilly!)\n\n...if only everything in the world were as awesome as Github :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-306017290|#718: AWESOME JOB!>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496550086.685100",
        "date": 1496550086685
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-306015733|#718: AWESOME JOB!>",
                "text": "Yep! Those are the only kind of ideas @yarikoptic has. ;)",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-306015733|#718: AWESOME JOB!>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496547228.576735",
        "date": 1496547228576
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-306014956|#718: AWESOME JOB!>",
                "text": "oh that's a great idea!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-306014956|#718: AWESOME JOB!>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496545903.528779",
        "date": 1496545903528
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-306013964|#718: AWESOME JOB!>",
                "text": "we did something like that for fail2ban, further segmenting into OSes etc: <https://github.com/orgs/fail2ban/teams> , comes handy at times to address specific ppl",
                "pretext": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-306013964|#718: AWESOME JOB!>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496544110.461562",
        "date": 1496544110461
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-306013939|#718: AWESOME JOB!>",
                "text": "just add a team \"Maintainers\" here, and then post a new issue prior to release addressing the team -- here would be your \"mailing list\" ;)",
                "pretext": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-306013939|#718: AWESOME JOB!>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496544057.459630",
        "date": 1496544057459
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306013788|#719: bad variable name with singularity import>",
                "text": "Sorry, I'm on an issue closing rampage! ",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306013788|#719: bad variable name with singularity import>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496543793.450230",
        "date": 1496543793450
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306013758|#719: bad variable name with singularity import>",
                "text": "OK, as you wish! :)",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306013758|#719: bad variable name with singularity import>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496543756.449055",
        "date": 1496543756449
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-306013723|#718: AWESOME JOB!>",
                "text": "Yeah, groups.io I think was also free, but that one didn't seem perfect either. Maybe I'm just so old school that I compare everything to the awesomeness that was Mailman. ;)",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-306013723|#718: AWESOME JOB!>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496543706.447176",
        "date": 1496543706447
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue re-opened: <https://github.com/singularityware/singularity/issues/719|#719 bad variable name with singularity import> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue re-opened: <https://github.com/singularityware/singularity/issues/719|#719 bad variable name with singularity import> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496543699.446805",
        "date": 1496543699446
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306013721|#719: bad variable name with singularity import>",
                "text": "Heeeey @gmkurtzer you can't close an issue until @jokedurnez has been resolved! The lines that are written to generate that file live in our python code, so there could be something we need to fix here. I'll just reopen this :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306013721|#719: bad variable name with singularity import>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496543699.446793",
        "date": 1496543699446
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/705|#705 mount network home directory> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/705|#705 mount network home directory> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496543645.445102",
        "date": 1496543645445
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/705#issuecomment-306013685|#705: mount network home directory>",
                "text": "Our pleasure! Closing the issue. Let us know (by commenting) if any additional attention is required.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/705#issuecomment-306013685|#705: mount network home directory>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496543645.445085",
        "date": 1496543645445
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-306013675|#718: AWESOME JOB!>",
                "text": "They are out there, you just gotta pay for them! Or use the one that I found that is free... but I don't think you liked it. :/",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-306013675|#718: AWESOME JOB!>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496543623.444407",
        "date": 1496543623444
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/719|#719 bad variable name with singularity import> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/719|#719 bad variable name with singularity import> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496543590.443314",
        "date": 1496543590443
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306013651|#719: bad variable name with singularity import>",
                "text": "This doesn't sound like a bug with Singularity. :)",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306013651|#719: bad variable name with singularity import>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496543589.443310",
        "date": 1496543589443
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/704#issuecomment-306013518|#704: SESSIONDIR_PREFIX in 2.3>",
                "text": "Heyas.\n\nThe reason for this change was to remove the necessity for a cleanup process/daemon with every run. Now the session directory is a volatile mounted tmpfs at the defined location. Once the mount namespace goes away via the foreground process, this location magically goes away. Also, because it is within the mount namespace, multiple Singularity processes, each within their own namespaces, will not collide with a shared location.\n\nNow, where this does end up being an issue is because items being within the `/var` file system as you pointed out (`localstatedir`) should always be local. So when Singularity is built, it should be managed such that this location is local. Will it work if over NFS, yes, as long as `root_squash` is not enabled via NFS options.\n\nHope that helps!\n\nGreg",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/704#issuecomment-306013518|#704: SESSIONDIR_PREFIX in 2.3>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496543333.433867",
        "date": 1496543333433
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306013406|#719: bad variable name with singularity import>",
                "text": "ok, I found the issue. In one of your Docker environment files you have this:\n\n```cat .singularity.d/env/10-docker.sh \nexport PATH=/usr/local/miniconda/bin:/usr/lib/ruby/gems/2.3/bin:/bin::/usr/lib/fsl/5.0:/usr/lib/afni/bin:/opt/freesurfer/bin:/opt/freesurfer/tktools:/opt/freesurfer/mni/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nexport DEBIAN_FRONTEND=noninteractive\nexport FS_OVERRIDE=0\nexport OS=Linux\nexport FSF_OUTPUT_FORMAT=nii.gz\nexport FIX_VERTEX_AREA=\nexport FREESURFER_HOME=/opt/freesurfer\nexport MNI_DIR=/opt/freesurfer/mni\nexport SUBJECTS_DIR=/opt/freesurfer/subjects\nexport PERL5LIB=/opt/freesurfer/mni/share/perl5\nexport MNI_PERL5LIB=/opt/freesurfer/mni/share/perl5\nexport MINC_BIN_DIR=/opt/freesurfer/mni/bin\nexport MINC_LIB_DIR=/opt/freesurfer/mni/lib\nexport MNI_DATAPATH=/opt/freesurfer/mni/data\nexport FSL_DIR=/usr/share/fsl/5.0\nexport FSLDIR=/usr/share/fsl/5.0\nexport FSLOUTPUTTYPE=NIFTI_GZ\nexport FSLMULTIFILEQUIT=TRUE\nexport POSSUMDIR=/usr/share/fsl/5.0\nexport LD_LIBRARY_PATH=/usr/lib/fsl/5.0:\nexport FSLTCLSH=/usr/bin/tclsh\nexport FSLWISH=/usr/bin/wish\nexport AFNI_MODELPATH=/usr/lib/afni/models\nexport AFNI_IMSAVE_WARNINGS=NO\nexport AFNI_TTATLAS_DATASET=/usr/share/afni/atlases\nexport AFNI_PLUGINPATH=/usr/lib/afni/plugins\nexport ANTSPATH=/opt/ants\nexport C3DPATH=/opt/c3d/\nexport GEM_HOME=/usr/lib/ruby/gems/2.3\nexport BUNDLE_PATH=/usr/lib/ruby/gems/2.3\nexport BUNDLE_BIN=/usr/lib/ruby/gems/2.3/bin\nexport BUNDLE_SILENCE_ROOT_WARNING=1\nexport BUNDLE_APP_CONFIG=/usr/lib/ruby/gems/2.3\nexport MATLABCMD=/opt/mcr/v85/toolbox/matlab\nexport SPMMCRCMD=/opt/spm12/run_spm12.sh /opt/mcr/v85/ script\nexport FORCE_SPMMCR=1\nexport LANG=C.UTF-8\nexport LC_ALL=C.UTF-8\nexport ACCEPT_INTEL_PYTHON_EULA=yes\nexport MKL_NUM_THREADS=1\nexport OMP_NUM_THREADS=1\n```\n\nand specifically, this line is the bug:\n\n```export SPMMCRCMD=/opt/spm12/run_spm12.sh /opt/mcr/v85/ script\n```\n\nHaving the export on the same line, and that entire thing without any \" I think is tripping it up.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306013406|#719: bad variable name with singularity import>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496543125.426814",
        "date": 1496543125426
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/699|#699 latest release 2.3 FTBS when building deb> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/699|#699 latest release 2.3 FTBS when building deb> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496542891.418503",
        "date": 1496542891418
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-306013268|#699: latest release 2.3 FTBS when building deb>",
                "text": "Excellent. Closing the issue, but feel free to comment to let me know if I missed something.\n\n(I love closing issues!) lol",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-306013268|#699: latest release 2.3 FTBS when building deb>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496542890.418500",
        "date": 1496542890418
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-306013218|#718: AWESOME JOB!>",
                "text": "Yes. I think we should have a 'devel' or a 'prerelease' email list, where we give everyone the heads up and emphasis the coming release such that distribution packagers can all be notified and releases can be coordinated.\n\nI really wish we had a great email list solution... :(",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-306013218|#718: AWESOME JOB!>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496542806.415331",
        "date": 1496542806415
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by yarikoptic on pull request <https://github.com/singularityware/singularity/pull/712#issuecomment-306013040|#712: Fix debian package>",
                "text": "FWIW -- current state of the \"official\" Debian packaging could be found in this repository <https://anonscm.debian.org/git/collab-maint/singularity-container.git>\n\nCheers,",
                "pretext": "[singularityware/singularity] New comment by yarikoptic on pull request <https://github.com/singularityware/singularity/pull/712#issuecomment-306013040|#712: Fix debian package>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496542480.403448",
        "date": 1496542480403
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by tamn2017 on issue <https://github.com/singularityware/singularity/issues/705#issuecomment-306011173|#705: mount network home directory>",
                "text": "@bauerm97 @gmkurtzer Thank you for all of your supports.  Have a wonderful day.\n\n-Tam",
                "pretext": "[singularityware/singularity] New comment by tamn2017 on issue <https://github.com/singularityware/singularity/issues/705#issuecomment-306011173|#705: mount network home directory>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496538995.267755",
        "date": 1496538995267
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306006066|#719: bad variable name with singularity import>",
                "text": "I've been trying for a few hours to download the layers (albeit my internet is awful). How big of an image is this? I can go to campus later (with a better connection) to test. Based on the error message, here are my first gut feelings about what might be going on. 1) is that somewhere in the environment you might have something that looks like this:\n\n```export PATH=/bla/bla:$PATH\n```\nYou aren't technically supposed to put the export and variable definition on the same line (I think that is called a \"bashism\") and it can lead to that \"bad variable name\" error. I would look in the container's `/singularity.d/env/*` (which are combined to be `/environment` so look there too). And look for statements like that. If you find any, try doing something more like this:\n\n```PATH=/bla/bla:$PATH\nexport PATH\n```\n(two lines)\n\nThe second thing that comes to mind is the `SHELL` itself. I would see what shell is being called when you shell in, and then try setting `SINGULARITY_SHELL` to be explicitly `/bin/bash`. Actually, if you have one of said \"bashisms\" and the error is happening because the shell is `/bin/sh` that might fix it.\n\nThen the third thing that comes to mind (related to the above too) is the top part of any of those files, I've seen that kind of error when I call a script but the top has this bit:\n\n```#!/bin/sh\n```\nshabang, whatever it's called, wrong. And again, the shell that you use going in might have influence here. The reason I bring these things up is because if we look at the `actions/shell` we see that all that it does is figure out the shell to use, and source a bunch of files. I'll split this up and add some commentary:\n\nso here we see the default it's using is `/bin/sh`, and this makes sense for older systems support maybe:\n```#!/bin/sh\n```\n\nhere we see why we want to check the environment files - it just loop de loops through them and sources. So if a shebang / export / is weird, it could cause that error. I would look specifically for the path it mentioned - something about opt?\n\n```\nfor script in /.singularity.d/env/*.sh; do\n    if [ -f \"$script\" ]; then\n        . $script\n    fi\ndone\n\n```\nhere is why I recommended setting `SINGULARITY_SHELL` - if it's set then we use it, and exit this script\n\n```if test -n \"$SINGULARITY_SHELL\" -a -x \"$SINGULARITY_SHELL\"; then\n    exec $SINGULARITY_SHELL \"$@\"\n```echo \"ERROR: Failed running shell as defined by '\\$SINGULARITY_SHELL'\" 1&gt;&amp;2\nexit 1```\n```\n\notherwise, we try to do our best to guess, based on what we sniff and find:\n\n```elif test -x /bin/bash; then\n    SHELL=/bin/bash\n    PS1=\"Singularity $SINGULARITY_CONTAINER:\\\\w&gt; \"\n    export SHELL PS1\n    exec /bin/bash --norc \"$@\"\nelif test -x /bin/sh; then\n    SHELL=/bin/sh\n    export SHELL\n    exec /bin/sh \"$@\"\nelse\n    echo \"ERROR: /bin/sh does not exist in container\" 1&gt;&amp;2\nfi\nexit 1\n```\nAnyhoo - I would look at those specific things:\n• variables in environment files\n• declarations in environment files\n• selected and used shell given those things\n\nIf you can't figure it out from that, then run with `--debug` and see if you can figure out where in the action/shell script the error is happening. If you can't figure it out then, then I'll try to reproduce the error when I can download that monstrous image later. I'm not even looking at it, but I'm almost certain based on the number of layers and time that the base is that fatty mriqc :P ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/719#issuecomment-306006066|#719: bad variable name with singularity import>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496530176.884391",
        "date": 1496530176884
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#719 bad variable name with singularity import' https://github.com/singularityware/singularity/issues/719 by jokedurnez",
                "text": "*Version of Singularity:*\n\n2.3\n\n*Expected behavior*\n\nI'm trying to create a singularity image from a docker container:\n```[jdurnez@sh-101-58]$ singularity import $SINGULARITY docker://joke/cnp_task_analysis\nDocker image path: index.docker.io/joke/cnp_task_analysis:latest\nCache folder set to /home/users/jdurnez/.singularity/docker\n[32/32] |===================================| 100.0%\nImporting: base Singularity environment\n...\nImporting: /home/users/jdurnez/.singularity/metadata/sha256:dbda4988c86376f77fb0ebfc4aadf6f5087acc58bf920df723ea935a197bfd21.tar.gz\n```\n\n*Actual behavior*\n\nIt seems like the singularity container is generated, but when I try to access it:\n```\n[jdurnez@sh-101-58]$ singularity shell $SINGULARITY\nSingularity: Invoking an interactive shell within container...\n\n/.singularity.d/actions/shell: 35: export: /opt/mcr/v85/: bad variable name\n```\n\nHowever, with docker2singularity, it works.\n```[ec2-user@ip-172-31-3-3 CNP_task_analysis]$ docker run -v /var/run/docker.sock:/var/run/docker.sock -v /home/ec2-user/singularity:/output --privileged -t --rm singularityware/docker2singularity joke/cnp_task_analysis\n...\n(9/9) Moving the image to the output folder...\n 11,954,815,008 100%   61.77MB/s    0:03:04 (xfr#1, to-chk=0/1)\n[ec2-user@ip-172-31-3-3 singularity]$ singularity shell joke_cnp_task_analysis-2017-06-03-1246c19080c1.img\n```",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/jokedurnez|jokedurnez>",
                "title": "#719 bad variable name with singularity import",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/719",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496523573.565972",
        "date": 1496523573565
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by truatpasteurdotfr on issue <https://github.com/singularityware/singularity/issues/706#issuecomment-306001028|#706: problems with multiple Includes in bootstrap definition>",
                "text": "In order of personnal choice:\n1) a error message if multiple include: are listed (KISS)\n2) +include: to add to the include list? but why would we need that feature? \n3) warning message, using only the 1st include: and ignoring the subsequent one(s)\n4) include: concatenation (avoid delay the possible conflicts to the later process)",
                "pretext": "[singularityware/singularity] New comment by truatpasteurdotfr on issue <https://github.com/singularityware/singularity/issues/706#issuecomment-306001028|#706: problems with multiple Includes in bootstrap definition>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496523519.563409",
        "date": 1496523519563
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by akkornel on issue <https://github.com/singularityware/singularity/issues/706#issuecomment-305989688|#706: problems with multiple Includes in bootstrap definition>",
                "text": "The nice thing is, if you really want multiple `Include:` lines, you can turn the subsequent `Include:` lines into either `apt-get install` or `yum install` lines, and get exactly the same effect.\n\nAnd similarly, if you want to start with `ubuntu:14.04` and end up at `ubuntu:latest`, you can do that through manipulation of sources files and invocations of `apt-get`.\n\nI did consider pushing for allowing multiple `MirrorURL`, `UpdateURL`, and `GPG` lines, but I decided not to: You can easily do the same thing in the rest of the bootstrap",
                "pretext": "[singularityware/singularity] New comment by akkornel on issue <https://github.com/singularityware/singularity/issues/706#issuecomment-305989688|#706: problems with multiple Includes in bootstrap definition>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496511146.888428",
        "date": 1496511146888
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by truatpasteurdotfr on issue <https://github.com/singularityware/singularity/issues/696#issuecomment-305989623|#696: busybox replace ash by bash, it's possible ?>",
                "text": "my bad sorry for the confusion, use @vsoch alpine container as:\nalpine.def\n```Bootstrap: docker\nFrom: alpine:latest\n```\n\nthen\n```sudo singularity create alpine.img \nsudo singularity bootstrap alpine.img apline.def\nsudo singularity exec -w alpine.img sh -c 'apk update &amp;&amp; apk upgrade &amp;&amp; apk add bash bash-doc bash-completion ' \n```",
                "pretext": "[singularityware/singularity] New comment by truatpasteurdotfr on issue <https://github.com/singularityware/singularity/issues/696#issuecomment-305989623|#696: busybox replace ash by bash, it's possible ?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496511067.883803",
        "date": 1496511067883
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by AdamSimpson on issue <https://github.com/singularityware/singularity/issues/704#issuecomment-305984800|#704: SESSIONDIR_PREFIX in 2.3>",
                "text": "I am intersted in knowing more about this change as well.",
                "pretext": "[singularityware/singularity] New comment by AdamSimpson on issue <https://github.com/singularityware/singularity/issues/704#issuecomment-305984800|#704: SESSIONDIR_PREFIX in 2.3>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496506430.612893",
        "date": 1496506430612
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by Trophime on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305963656|#699: latest release 2.3 FTBS when building deb>",
                "text": "Yes that sounds reasonable then to not perform tests in the builder.",
                "pretext": "[singularityware/singularity] New comment by Trophime on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305963656|#699: latest release 2.3 FTBS when building deb>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496482056.456282",
        "date": 1496482056456
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/706#issuecomment-305950260|#706: problems with multiple Includes in bootstrap definition>",
                "text": "I don't think we should have multiple include lines - it would be inconsistent with our current approach which has one header per field or section. Being able to define multiple of the same thing is more akin to a Dockerfile, and so to have BOTH in our standard would just be confusing. If the `include: yum bzip2` is a workable solution, we should do that. If we allow for multiple Include: then we should talk about which other tags warrant multiple. Eg:\n\n```Bootstrap: docker\nFrom: ubuntu:latest\nFrom: ubuntu:14.04\n```\n\nI say... don't go there :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/706#issuecomment-305950260|#706: problems with multiple Includes in bootstrap definition>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496464124.739390",
        "date": 1496464124739
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/707#issuecomment-305950232|#707: Error if container directory is setgid>",
                "text": "I am thinking that a reasonable behavior would be just to check if the permissions are at least 755, such that 2755 would still be allowed. Do you concur?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/707#issuecomment-305950232|#707: Error if container directory is setgid>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496464081.737681",
        "date": 1496464081737
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/708|#708 Fix silly minor type in CONTRIBUTING.md> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/708|#708 Fix silly minor type in CONTRIBUTING.md> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496463957.732453",
        "date": 1496463957732
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-305950118|#611: Nvidia GPU support with different driver versions?>",
                "text": "Hi @kcgthb,\n\nIs `nvidia-smi` a statically compiled binary? If not, can you run the following commands for me:\n\n```$ ldd `which nvidia-smi`\n$ objdump -T `which nvidia-smi` | grep GLIBC_ | sed -e 's/^.*\\(GLIBC_[^ ]*\\).*$/\\1/' | sort | uniq\n```\n\nMy concern is that mounting a binary as such to the host system breaks portability... But on the other hand, we are doing it with libraries already! If you did a bind of `nvidia-smi` at Singularity runtime does that work? e.g.:\n\n```$ singularity shell -B /usr/bin/nvidia-smi --nv ......\n```",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-305950118|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496463918.730742",
        "date": 1496463918730
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/706#issuecomment-305949624|#706: problems with multiple Includes in bootstrap definition>",
                "text": "I would assume it would work if it was all in a single line, but this should not cause an error condition. The second Include should either be used as one would expect, ignored, or warned. I haven't considered which is the correct behavior for this scenario yet. Does anyone care to voice an opinion or desire?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/706#issuecomment-305949624|#706: problems with multiple Includes in bootstrap definition>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496463158.694147",
        "date": 1496463158694
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/714#issuecomment-305949493|#714: Singularity not preventing unmounts of mounted image directory>",
                "text": "Does omitting the `--containall` flag change the behavior?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/714#issuecomment-305949493|#714: Singularity not preventing unmounts of mounted image directory>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496462950.683681",
        "date": 1496462950683
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/715#issuecomment-305949416|#715: ENH: mailmap entries for Vanessa and Rémy>",
                "text": "Thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/715#issuecomment-305949416|#715: ENH: mailmap entries for Vanessa and Rémy>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496462824.677124",
        "date": 1496462824677
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/715|#715 ENH: mailmap entries for Vanessa and Rémy> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/715|#715 ENH: mailmap entries for Vanessa and Rémy> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496462820.676923",
        "date": 1496462820676
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/713#issuecomment-305949286|#713: singularity mpi multinode error>",
                "text": "Hi,\n\n@kma, Singularity should support MPICH and the other MPIs just fine in hybrid mode as long as versions are compatible inside and outside the container. Actually OpenMPI ended up being the hardest to get working properly and is a bit temperamental.\n\n@huitre39, can you check the `/etc/hosts` file from within the container and confirm that there is an appropriate entry for the IP addresses of the hosts in your multi-node job. By default this file should be shared from the host into the container.\n\nHope that helps!\n\nGreg",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/713#issuecomment-305949286|#713: singularity mpi multinode error>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496462618.667160",
        "date": 1496462618667
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/705#issuecomment-305948995|#705: mount network home directory>",
                "text": "All of the runtime options can also be set via environmant variables. For example, in this case you can export `SINGULARITY_HOME=...` in `~/.singularity-init`.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/705#issuecomment-305948995|#705: mount network home directory>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496462122.643056",
        "date": 1496462122643
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-305948795|#718: AWESOME JOB!>",
                "text": " is this reminder something that we need to do for every release? If so I can possibly help with this :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-305948795|#718: AWESOME JOB!>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496461831.629753",
        "date": 1496461831629
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by bauerm97 on issue <https://github.com/singularityware/singularity/issues/705#issuecomment-305948392|#705: mount network home directory>",
                "text": "@tamn2017 I don't believe that right now it is possible to specify a config option to provide a custom default home directory. @gmkurtzer is this a config option that we should allow?",
                "pretext": "[singularityware/singularity] New comment by bauerm97 on issue <https://github.com/singularityware/singularity/issues/705#issuecomment-305948392|#705: mount network home directory>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496461311.605709",
        "date": 1496461311605
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-305947892|#718: AWESOME JOB!>",
                "text": "WAHOOOO! Thanks @yarikoptic! BTW, apologies for forgetting (yet again) for forgetting to let you know about the upcoming release. But, at least I did annotate the tag! ;)\n\n&lt;baby steps&gt; lol",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-305947892|#718: AWESOME JOB!>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496460753.579830",
        "date": 1496460753579
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/712#issuecomment-305947835|#712: Fix debian package>",
                "text": "Can this PR be resubmitted to the development branch please?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/712#issuecomment-305947835|#712: Fix debian package>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496460674.576153",
        "date": 1496460674576
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/705#issuecomment-305947440|#705: mount network home directory>",
                "text": "... in 15 months? Just kidding :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/705#issuecomment-305947440|#705: mount network home directory>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496460163.552068",
        "date": 1496460163552
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305946686|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "text": "ok, for consistency and to maintain status quo I will sacrifice a new `~/.` directory on each user's box.  reverting my change and will upload to (Neuro)Debian(s).  Cheers",
                "pretext": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305946686|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496459179.504505",
        "date": 1496459179504
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305938210|#699: latest release 2.3 FTBS when building deb>",
                "text": "I would personally not do the test automatically from the builder (I don't do it in the RPM SPEC). This is because the `make test` command currently calls Singularity from the installed path, and the Singularity internals will fail on many levels as due to the SUID nature of the program (among other things), various paths are hard coded in the binaries. This means that an install to `DESTDIR`, and a test from there, or even the compiled source tree itself, won't work.\n\nDoes that make sense?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305938210|#699: latest release 2.3 FTBS when building deb>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496450525.002098",
        "date": 1496450525002
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305937660|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "text": "Orrrrr, we can use the OSX standard and put it in `~/Librarry/Application\\ Support/Singularity/`. &lt;ducks&gt;\n\nIn all seriousness, I don't have a strong opinion either way on this, and I think it is just as likely that `~/.cache` will also tend to get garbaged up as well, but the benefit is at least the garbage is in a common cesspool of both trash and non-trash.\n\nSince I'm not strongly leaning in either particular direction, and can find benefits and cons to each, I am happy to take consensus.\n\nBut I do feel strongly is that the packaged versions shouldn't do anything that would diverge from standard documented behavior.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305937660|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496450049.967642",
        "date": 1496450049967
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/705#issuecomment-305936848|#705: mount network home directory>",
                "text": "Thanks guys. The associated PR has been merged to the development branch and will thus be available in the next release!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/705#issuecomment-305936848|#705: mount network home directory>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496449484.923652",
        "date": 1496449484923
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/711|#711 Allow @ sign to be included in path names> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/711|#711 Allow @ sign to be included in path names> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496449020.885400",
        "date": 1496449020885
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/711#issuecomment-305936079|#711: Allow @ sign to be included in path names>",
                "text": "Looks good to me, thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/711#issuecomment-305936079|#711: Allow @ sign to be included in path names>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496449017.885063",
        "date": 1496449017885
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305923116|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "text": "@bbockelm just placed a grave stone on top of not yet conceived awesome singularity X app!!! :-)",
                "pretext": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305923116|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496442372.084730",
        "date": 1496442372084
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305922882|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "text": "And IMHO even if it were to stay `~/singularity`, cashe should reside under `~/singularity/cache` to avoid conflicts with whatever might come about and help poor souls in their cleansing endeavours ;-) ",
                "pretext": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305922882|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496442276.069213",
        "date": 1496442276069
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by jmstover on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305906635|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "text": "Yeah... pip does:\n`path = os.getenv(\"XDG_CACHE_HOME\", expanduser(\"~/.cache\"))`\n\nIt honestly doesn't surprise me that pip uses it...  Firefox will still use `~/.mozilla`, and I have a bunch of `${HOME}/.[appname]` dirs ... but I'm Slackware, and it's strict however upstream sends it in 90%+ of the cases.",
                "pretext": "[singularityware/singularity] New comment by jmstover on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305906635|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496436830.924433",
        "date": 1496436830924
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305903017|#699: latest release 2.3 FTBS when building deb>",
                "text": "thanks @yarikoptic !",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305903017|#699: latest release 2.3 FTBS when building deb>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496435829.659153",
        "date": 1496435829659
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by bbockelm on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305902177|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "text": "Oh certainly - there is no hard requirements.\n\nBut if this helps singularity be a \"good citizen\" for the larger community - doesn't seem like it would hurt!\n\n(Note - on my personal home directory, nothing in `~/.cache` is actually a graphical application.  It's things like `abrtd` and `pip`)",
                "pretext": "[singularityware/singularity] New comment by bbockelm on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305902177|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496435605.598367",
        "date": 1496435605598
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by jmstover on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305901721|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "text": "&gt; And well, could be argued that singularity has nothing to do with the desktop apps, \n&gt; so why should it care about XDG ;)\nHonestly... this is my take on it.\n\nSingularity itself isn't an X app, so... why worry about following the \"X Desktop Group\" (freedesktop.org) standard for a non-X app? If some GUI Singularity image manager comes along, then sure, follow the standard it in that application at that point, it's a GUI app then.\n\nBut as @yarikoptic did mention there. Singularity itself doesn't have anything to do with desktop apps at this point, so... =)",
                "pretext": "[singularityware/singularity] New comment by jmstover on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305901721|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496435477.563180",
        "date": 1496435477563
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/710|#710 building erlang fails> by <https://github.com/ityonemo|ityonemo>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/710|#710 building erlang fails> by <https://github.com/ityonemo|ityonemo>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496434786.371460",
        "date": 1496434786371
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ityonemo on issue <https://github.com/singularityware/singularity/issues/710#issuecomment-305899047|#710: building erlang fails>",
                "text": "switching to the current master makes it work!  Thanks.  I didn't notice the change in master",
                "pretext": "[singularityware/singularity] New comment by ityonemo on issue <https://github.com/singularityware/singularity/issues/710#issuecomment-305899047|#710: building erlang fails>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496434742.358955",
        "date": 1496434742358
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305896889|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "text": "re `there are plenty of applications that use a .[name] approach, and don't follow the guidelines`\n\nas far as I see -- there is more that follow \n```$&gt; /bin/ls -l .cache  | nl | tail -n -1\n    97  -rw-r--r-- 1 yoh yoh       11 May 27 19:07 zeitgeist-vacuum.stamp\n```\nand those which don't are most of the time either small projects not aware of XDG or elderlies which did it for decades already and find it hard to switch ;)",
                "pretext": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305896889|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496434123.185034",
        "date": 1496434123185
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-305895468|#718: AWESOME JOB!>",
                "text": "I think I want to leave this open just a little longer, to feel the warm sunshine from all those :+1: ! I'll add in some snacks:\n\n:taco: :taco: :ice_cream: :ice_cream: :shallow_pan_of_food: :shallow_pan_of_food: :cookie: :cookie: :ramen: :ramen: :rice: :rice: :rice_ball: :rice_ball: :rice_cracker: :rice_cracker: :candy: :candy: :milk_glass: :milk_glass: :cake: :cake: :fish_cake: :fish_cake: :hamburger: :hamburger: :avocado: :avocado: :avocado: :avocado: :avocado: :avocado: :avocado: ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/718#issuecomment-305895468|#718: AWESOME JOB!>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496433735.073100",
        "date": 1496433735073
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305894805|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "text": "ok -- I will wait for @gmkurtzer feedback as well before I upload or unpatch debian package",
                "pretext": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305894805|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496433556.017236",
        "date": 1496433556017
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#718 AWESOME JOB!' https://github.com/singularityware/singularity/issues/718 by yarikoptic",
                "text": "was about to whine a lot while by mistake trying to use apparently an outdated devel build... so many fixes got into 2.3 -- just great! thank you everyone, please close at your will\n\n:+1: \n:+1: \n:+1: \n:+1: \n:+1: ",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/yarikoptic|yarikoptic>",
                "title": "#718 AWESOME JOB!",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/718",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496432699.769827",
        "date": 1496432699769
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/717|#717 I did it! I got here!> by <https://github.com/yarikoptic|yarikoptic>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/717|#717 I did it! I got here!> by <https://github.com/yarikoptic|yarikoptic>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496432399.686369",
        "date": 1496432399686
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/717#issuecomment-305890548|#717: I did it! I got here!>",
                "text": "ok -- it is sensible actually! sorry for the noise!\n```hopa:/tmp\n$&gt; singularity pull neurodebian\nERROR: pull is only supported for docker and shub URIs\n```",
                "pretext": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/717#issuecomment-305890548|#717: I did it! I got here!>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496432398.686319",
        "date": 1496432398686
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/717#issuecomment-305890116|#717: I did it! I got here!>",
                "text": "oh oh oh \nno\n```$&gt; which singularity        \n/usr/local/bin/singularity\n```",
                "pretext": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/717#issuecomment-305890116|#717: I did it! I got here!>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496432271.651165",
        "date": 1496432271651
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/717#issuecomment-305888650|#717: I did it! I got here!>",
                "text": "version glitch is interesting... I fetched tarball from github earlier today ... may be release tag was \"updated\" interim or smth",
                "pretext": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/717#issuecomment-305888650|#717: I did it! I got here!>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496431851.528391",
        "date": 1496431851528
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305888501|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "text": "someone's future is often our (developers) past! ;)",
                "pretext": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305888501|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496431811.516041",
        "date": 1496431811516
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305888425|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "text": "I think we could, but I also think that there are plenty of applications that use a `.[name]` approach, and don't follow the guidelines.  I'll leave it up to @gmkurtzer to decide if this is big enough to warrant changing the entire storage scheme. I sort of like that you can intuitively find `.singularity` and `.singularity.d` is similar in the image. What we can do better is tell users how it works, so they can find the cache, and for that <http://singularity.lbl.gov/user-control|your wish is granted> :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305888425|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496431794.510571",
        "date": 1496431794510
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#717 I did it! I got here!' https://github.com/singularityware/singularity/issues/717 by yarikoptic",
                "text": "*Version of Singularity:*\n\n2.3-1 (perspective debian build)\n(although btw singularity since claims 2.2.99 -- I guess a loose release tail)\n\n*Expected behavior*\n\ndo something useful (like fetch an image) or give me some reasonable error message\n\n*Actual behavior*\n\n```shell\n$&gt; singularity pull neurodebian\nERROR: Beep boop, we should never get here!\n\n$&gt; singularity --version       \n2.2.99\n```\n\n*Steps to reproduce behavior*\n\nSee above",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/yarikoptic|yarikoptic>",
                "title": "#717 I did it! I got here!",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/717",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496431302.367372",
        "date": 1496431302367
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by bbockelm on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305886427|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "text": "Seems like a solid idea to follow the XDG guidelines, but also sounds like it's perhaps a feature improvement for the next release?",
                "pretext": "[singularityware/singularity] New comment by bbockelm on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305886427|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496431283.361916",
        "date": 1496431283361
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305885851|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "text": "BTW -- one of the rationales behind having all caches under ~/.cache (besides minimizing pollution of $HOME) is that if I am short of space I could just `rm -rf ~/.cache/*` in a moment of need.  Hunting around $HOME for caches for app X and then Y and then... could be a bit tedious even using cool `ncdu` ;)",
                "pretext": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305885851|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496431121.314678",
        "date": 1496431121314
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305885393|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "text": "according to the code `SINGULARITY_DISABLE_CACHE` doesn't really \"disable it\" -- it still creates/uses?  some temporary directory as far as I see from the code:\n\n```shell\nif DISABLE_CACHE == True:\n    SINGULARITY_CACHE = tempfile.mkdtemp()\nelse:\n    userhome = pwd.getpwuid(os.getuid())[5]\n    _cache = os.path.join(userhome,\".singularity\") \n    SINGULARITY_CACHE = getenv(\"SINGULARITY_CACHEDIR\", default=_cache)\n\nif not os.path.exists(SINGULARITY_CACHE):\n    os.mkdir(SINGULARITY_CACHE)\n```",
                "pretext": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305885393|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496430991.277456",
        "date": 1496430991277
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305885027|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "text": ";-) not that dumb one, since I just took it for granted and forgot details (I also hate having a blooming number of hidden directories and files in my home)... \nAnd well, could be argued that singularity has nothing to do with the desktop apps, so why should it care about XDG ;) \n<https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html>  More info on Debian point of view on it:\n<https://wiki.debian.org/XDGBaseDirectorySpecification>  which encourages upstreams to conform it but actually suggests maintainers to not patch... oh well -- I have just committed the \"crime\" -- I did patch singularity debian package to use `~/.cache/singularity` :-/ ;-)",
                "pretext": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305885027|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496430897.248954",
        "date": 1496430897248
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305885018|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "text": "what do you mean canonical?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305885018|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496430889.246780",
        "date": 1496430889246
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305884954|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "text": "If you don't want the cache to be created (and tmp will be used), set `SINGULARITY_DISABLE_CACHE` to True/yes, or if you want to move it elsewhere, set `SINGULARITY_CACHEDIR`. The hierarchy is always the following, by default:\n\n```$HOME/.singularity\n$HOME/.singularity/docker\n$HOME/.singularity/shub\n$HOME/.singularity/metadata\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305884954|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496430869.240930",
        "date": 1496430869240
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by bbockelm on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305882726|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "text": "Dumb question - what makes `~/.cache` canonical?  Not necessarily opposed, I just see pure chaos in my personal home directory and would like to have some, well, canonical written document to point folks at when questions are asked.",
                "pretext": "[singularityware/singularity] New comment by bbockelm on issue <https://github.com/singularityware/singularity/issues/716#issuecomment-305882726|#716: do not breed ~/.singularity but adhere to standard hierarchy>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496430278.061846",
        "date": 1496430278061
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#716 do not breed ~/.singularity but adhere to standard hierarchy' https://github.com/singularityware/singularity/issues/716 by yarikoptic",
                "text": "*Version of Singularity:*\n\n2.3\n\n*Expected behavior*\n\nnot create `~/.singularity`\n\nshould use appropriate and canonically located directory under `~/.cache`\n\n```$&gt; python -c 'from appdirs import AppDirs; dirs = AppDirs(\"singularity\", \"singularityware.org\"); print(dirs.user_cache_dir)'   \n/home/yoh/.cache/singularity\n```\n\n*Actual behavior*\n\ncreates (tries at least ;-) ) to create `~/.singularity` even for root\n\n*Steps to reproduce behavior*\n\nSee #699 ",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/yarikoptic|yarikoptic>",
                "title": "#716 do not breed ~/.singularity but adhere to standard hierarchy",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/716",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496429954.953738",
        "date": 1496429954953
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by kma on issue <https://github.com/singularityware/singularity/issues/713#issuecomment-305880331|#713: singularity mpi multinode error>",
                "text": "Hi,\n\nI guess this is mpich implementation of MPI. I think singularity supports only OpenMPI 2.1.x version.  ",
                "pretext": "[singularityware/singularity] New comment by kma on issue <https://github.com/singularityware/singularity/issues/713#issuecomment-305880331|#713: singularity mpi multinode error>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496429671.862093",
        "date": 1496429671862
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305878676|#699: latest release 2.3 FTBS when building deb>",
                "text": "ah -- great to see activity/contributions in updating debian packaging!  note that \"official\" packaging repository was setup separately from the \"upstream\" (this) repository to facilitate contributions/maintenance by other debian developers/maintainers.   I just ran into this CACHE mkdir behavior (imho nothing should mkdir while purely importing a module), and indeed running tests should be disabled since they require full sudo access, and package should build fine through fakeroot as well.  I hope to push out new package within few hours",
                "pretext": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305878676|#699: latest release 2.3 FTBS when building deb>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496429256.728237",
        "date": 1496429256728
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/702#issuecomment-305877581|#702: Old version on debian package>",
                "text": "well -- I am maintaining debian packaging \"outside\" of this repo... \n<http://git.debian.org/?p=collab-maint/singularity-container.git>  is the repo... and 2.3-1 is about to come out (yet to resolve few leftovers ;) )",
                "pretext": "[singularityware/singularity] New comment by yarikoptic on issue <https://github.com/singularityware/singularity/issues/702#issuecomment-305877581|#702: Old version on debian package>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496429025.652098",
        "date": 1496429025652
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ityonemo on issue <https://github.com/singularityware/singularity/issues/710#issuecomment-305851206|#710: building erlang fails>",
                "text": "the license statement is a holdover from the .def file I cloned to make this, I am not sure that it will make a difference, but I will try to do the same without the license section.",
                "pretext": "[singularityware/singularity] New comment by ityonemo on issue <https://github.com/singularityware/singularity/issues/710#issuecomment-305851206|#710: building erlang fails>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496422681.531224",
        "date": 1496422681531
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#715 ENH: mailmap entries for Vanessa and Rémy' https://github.com/singularityware/singularity/pull/715 by yarikoptic",
                "text": "Just added their multiple \"identities\" for a nicer \"git shortlog -sn\" ;)\n\nAttn: @singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/yarikoptic|yarikoptic>",
                "title": "#715 ENH: mailmap entries for Vanessa and Rémy",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/715",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496422562.491290",
        "date": 1496422562491
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#714 Singularity not preventing unmounts of mounted image directory' https://github.com/singularityware/singularity/issues/714 by DrDaveD",
                "text": "*Version of Singularity:*\n\n2.3\n\n*Expected behavior*\n\nIf the image that singularity runs is a directory, I expect to not be able to unmount the filesystem that the directory is in while singularity is running (without some kind of forcing option)\n\n*Actual behavior*\n\nSingularity does not hold any references to the filesystem, so the filesystem can be unmounted.  The only references are inside the container, and at least on el7.3 that is not enough to be noticed outside the container.  I had reported this earlier in pr #626, but when I tested the development branch at the time there was a file descriptor left open, but now in the singularity-2.3 release the behavior is back the way it was in singularity-2.2.1.\n\n*Steps to reproduce behavior*\n\nOn EL7.3, assuming an existing singularity image file I call 'centos7.img', make a loopback filesystem, mount it, and use it:\n```dd if=/dev/zero of=centos7.ext3 bs=1G count=1\nsudo losetup /dev/loop0 centos7.ext3\nsudo mkfs -t ext3 -m 1 -v /dev/loop0\nsudo mkdir -p /mnt/loop0\nsudo mount /dev/loop0 /mnt/loop0\nsingularity export centos7.img | (cd /mnt/loop0 &amp;&amp; sudo tar xf -)\nsingularity exec --containall /mnt/loop0 bash\n```\nThen in another window while singularity is running, umount /mnt/loop0.\n\nIt can be worked around by first doing 'cd /mnt/loop0' before running singularity exec (or inside singularity), or by having singularity open a file descriptor to the image directory and leaving it open.\n\nThis example of course is for reproducing, but in reality we experience the problem with automounted cvmfs; the automounter doesn't realize the filesystem is still in use, and unmounts it.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/DrDaveD|DrDaveD>",
                "title": "#714 Singularity not preventing unmounts of mounted image directory",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/714",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496418940.275290",
        "date": 1496418940275
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by Trophime on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305825541|#699: latest release 2.3 FTBS when building deb>",
                "text": "in short:\n• uncomment the ```override_dh_auto_test``` in ```debian\\rules```\n• try to rebuild the package with ```pbuilder```\n• in the chrooted pbuilder environment change the path to ```singularity``` and ```etc``` directory in ```test.sh```\n• run ```make test.sh```",
                "pretext": "[singularityware/singularity] New comment by Trophime on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305825541|#699: latest release 2.3 FTBS when building deb>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496418218.011311",
        "date": 1496418218011
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by Trophime on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305824563|#699: latest release 2.3 FTBS when building deb>",
                "text": "In debian/rules you just have to comment out the only ```override_dh_auto_test```.\nIf you try to build the package with pbuilder, first create a pbuilder image (see <https://wiki.ubuntu.com/PbuilderHowto#Troubleshooting_.22pbuilder_create.22|this guide> if you are not familiar with that) in my case I use Debian/stretch.\n\nThen you can simply generate the package with ```DIST=stretch pdebuild```\nIt actually try to build the package in a chroot env.\n\nAt this point the package will FTBS when running the test  (in ```make -j1 test``` actually)\n\nTo understand what was going wrong I patched test.sh:\n```\n\n*Index: singularity-container-2.3/test.sh.in*\n\n--- singularity-container-2.3.orig/test.sh.in\n+++ singularity-container-2.3/test.sh.in\n@@ -22,11 +22,11 @@\n # \n\n-prefix=\"@prefix@\"\n+prefix=\"${destdir}/@prefix@\"\n exec_prefix=\"@exec_prefix@\"\n libexecdir=\"@libexecdir@\"\n-sysconfdir=\"@sysconfdir@\"\n-localstatedir=\"@localstatedir@\"\n+sysconfdir=\"${destdir}/@sysconfdir@\"\n+localstatedir=\"${destdir}/@localstatedir@\"\n bindir=\"@bindir@\"\n\n SINGULARITY_OVERLAY_FS=\"@OVERLAY_FS@\"\n@@ -41,12 +41,14 @@ export SINGULARITY_libexecdir SINGULARIT\n\n-if [ -z \"$CLEAN_SHELL\" ]; then\n• /bin/echo \"Building/Installing Singularity to temporary directory\"\n• /bin/echo \"Reinvoking in a clean shell\"\n• sleep 1\n• exec env -i CLEAN_SHELL=1 PATH=\"$SINGULARITY_PATH:/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin\" bash \"$0\" \"$@\"\n     -fi\n     +# if [ -z \"$CLEAN_SHELL\" ]; then\n     +#     /bin/echo \"Building/Installing Singularity to temporary directory\"\n     +#     /bin/echo \"Reinvoking in a clean shell\"\n     +#     sleep 1\n     +#     exec env -i CLEAN_SHELL=1 PATH=\"$SINGULARITY_PATH:/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin\" bash \"$0\" \"$@\"\n     +# fi\n• +export PATH=$SINGULARITY_PATH:$PATH\n\n     if [ ! -f \"autogen.sh\" ]; then\n      /bin/echo \"ERROR: Run this from the singularity source root\"\n     ```\n\nand still in the chroot env I relaunch ```destdir=$(PWD)/Debian/singularity-conainer make test```\n\nTried to be clear but may be it's not...\nTell me if you need more details",
                "pretext": "[singularityware/singularity] New comment by Trophime on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305824563|#699: latest release 2.3 FTBS when building deb>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496418014.936893",
        "date": 1496418014936
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305820626|#699: latest release 2.3 FTBS when building deb>",
                "text": "could you tell me the steps for how to reproduce this (eg using the debian install?) it looks like it works ok on circle (tests pass) so if I can debug it locally I can see why the return code is 1 (indicating error) and not 0.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305820626|#699: latest release 2.3 FTBS when building deb>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496417184.625380",
        "date": 1496417184625
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by Trophime on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305819671|#699: latest release 2.3 FTBS when building deb>",
                "text": "```\nVERBOSE2 SINGULARITY_COMMAND_ASIS found as False\nVERBOSE2 SINGULARITY_ROOTFS not defined (None)\nVERBOSE2 SINGULARITY_METADATA_FOLDER found as None/.singularity.d\nVERBOSE2 SINGULARITY_FIX_PERMS found as False\nVERBOSE2 SINGULARITY_COLORIZE not defined (None)\nVERBOSE2 SINGULARITY_DISABLE_CACHE found as False\nVERBOSE2 SINGULARITY_CACHEDIR found as /root/.singularity\nVERBOSE2 SINGULARITY_ENVIRONMENT found as None/.singularity.d/environment\nVERBOSE2 SINGULARITY_RUNSCRIPT found as None/singularity\nVERBOSE2 SINGULARITY_TESTFILE found as None/.singularity.d/test\nVERBOSE2 SINGULARITY_DEFFILE found as None/.singularity.d/Singularity\nVERBOSE2 SINGULARITY_ENVBASE found as None/.singularity.d/env\nVERBOSE2 SINGULARITY_LABELFILE found as None/.singularity.d/labels.json\nVERBOSE2 SINGULARITY_INCLUDECMD found as False\nVERBOSE2 SINGULARITY_PULLFOLDER found as /build/singularity-container-2.3/libexec/python\nVERBOSE2 SHUB_NAMEBYHASH not defined (None)\nVERBOSE2 SHUB_NAMEBYCOMMIT not defined (None)\nVERBOSE2 SHUB_CONTAINERNAME not defined (None)\nVERBOSE2 SINGULARITY_CONTENTS found as None/.singularity.d/.layers\nVERBOSE2 SINGULARITY_PYTHREADS found as 9\n\n*FF*\n\nFAIL: test_docker_size (tests.test_helpers.TestJson)\n\n*test the function to return Docker size*\n\nTraceback (most recent call last):\n  File \"tests/test_helpers.py\", line 77, in test_docker_size\n    self.assertEqual(result['return_code'],0)\nAssertionError: 1 != 0\n\n======================================================================\nFAIL: test_shub_size (tests.test_helpers.TestJson)\n\n*test the function to return Singularity Hub Image Size*\n\nTraceback (most recent call last):\n  File \"tests/test_helpers.py\", line 101, in test_shub_size\n    self.assertEqual(result['return_code'],0)\nAssertionError: 1 != 0\n\n-------------------------\n\nRan 2 tests in 0.713s\n\n```",
                "pretext": "[singularityware/singularity] New comment by Trophime on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305819671|#699: latest release 2.3 FTBS when building deb>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496416978.549306",
        "date": 1496416978549
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/713#issuecomment-305816027|#713: singularity mpi multinode error>",
                "text": "hey @huitre39 are you able to try this with 2.3?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/713#issuecomment-305816027|#713: singularity mpi multinode error>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496416194.254992",
        "date": 1496416194254
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305815408|#699: latest release 2.3 FTBS when building deb>",
                "text": "what is the full output for the test error?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305815408|#699: latest release 2.3 FTBS when building deb>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496416056.203105",
        "date": 1496416056203
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#713 singularity mpi multinode error' https://github.com/singularityware/singularity/issues/713 by huitre39",
                "text": "*Version of Singularity:*\n\n2.2.1\n\n*Expected behavior*\n\nRun my program without error\n\n*Actual behavior*\n\nHost of my machine is not found, if i run mpirun in singularity image. Without it's work\n\n*Steps to reproduce behavior*\n\nmpirun -np 20 -v singularity exec --writable /root/singularity/myimage.img /root/app/myprogram\n\nFatal error in MPI_Init: Other MPI error, error stack:\nMPIR_Init_thread(805)...................: fail failed\nMPID_Init(1831).........................: channel initialization failed\nMPIDI_CH3_Init(147).....................: fail failed\nMPID_nem_tcp_post_init(645).............: fail failed\nMPID_nem_tcp_connect(1122)..............: fail failed\nMPID_nem_tcp_get_addr_port_from_bc(1346): Missing ifname or invalid host/port description in business card\n\nif i run mpirun (or mpiexec) in my contenair i have this error, without singularity :\nmpirun -np 20 -v /root/app/myprogram\n\nit's work perfectly in my cluster.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/huitre39|huitre39>",
                "title": "#713 singularity mpi multinode error",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/713",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496405052.787875",
        "date": 1496405052787
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#712 Fix debian package' https://github.com/singularityware/singularity/pull/712 by Trophime",
                "text": "*Description of the Pull Request (PR):*\n\nUpdate debian files for 2.3 release\nThe test still cannot be performed when building the package\n\n*This fixes or addresses the following GitHub issues:*\n\n• Ref: #699\n\n*Checkoff for all PRs:*\n\n• [x] I have read the <https://github.com/singularityware/singularity/blob/master/CONTRIBUTING.md|Guidelines for Contributing>, and this PR conforms to the stated requirements.\n• [ ] I have tested this PR locally with a `make test`\n• [ ] I have added myself as a contributor to the <https://github.com/singularityware/singularity/blob/master/AUTHORS.md|Author's file>\n• [x] This PR is ready for review and/or merge\n\nAttn: @singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/Trophime|Trophime>",
                "title": "#712 Fix debian package",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/712",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496394993.800881",
        "date": 1496394993800
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by Trophime on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305715496|#699: latest release 2.3 FTBS when building deb>",
                "text": "I tried to follow my idea of changing paths in ```test.sh```\nNow I get:\n```\nsh ./test.sh\nBuilding/Installing Singularity to temporary directory\nReinvoking in a clean shell\n\n################################################################################\nChecking environment (script: 01-sanity.sh, testdir: /tmp/stest.yeDeki)\n\n• sudo true                                                                                     (retval=0) OK\n• sudo false                                                                                    (retval=1) OK\n• which singularity                                                                             (retval=0) OK\n• test -f /tmp/buildd/singularity-container-2.3/debian/singularity-container/etc/singularity    (retval=0) OK\n\n################################################################################\nRunning Flawfinder (script: 02-flawfinder.sh, testdir: /tmp/stest.pv8HaV)\n\n• which flawfinder                                                                              (retval=0) OK\n• sh -c flawfinder -SQ --minlevel=3 ../src &gt; '/tmp/stest.pv8HaV/ff.out'                         (retval=0) OK\n\n################################################################################\nChecking Python unit tests (script: 05-python-units.sh, testdir: /tmp/stest.xOk31f)\n\n• python2 -m unittest tests.test_json                                                           (retval=0) OK\n• python2 -m unittest tests.test_helpers                                                        (retval=1) ERROR\n     VERBOSE2 SINGULARITY_COMMAND_ASIS found as False\n     VERBOSE2 SINGULARITY_ROOTFS not defined (None)\n     VERBOSE2 SINGULARITY_METADATA_FOLDER found as None/.singularity.d\n     VERBOSE2 SINGULARITY_FIX_PERMS found as False\n     VERBOSE2 SINGULARITY_COLORIZE not defined (None)\n     VERBOSE2 SINGULARITY_DISABLE_CACHE found as False\n     VERBOSE2 SINGULARITY_CACHEDIR found as /root/.singularity\n     VERBOSE2 SINGULARITY_ENVIRONMENT found as None/.singularity.d/environment\n     VERBOSE2 SINGULARITY_RUNSCRIPT found as None/singularity\n     VERBOSE2 SINGULARITY_TESTFILE found as None/.singularity.d/test\n     VERBOSE2 SINGULARITY_DEFFILE found as None/.singularity.d/Singularity\n     VERBOSE2 SINGULARITY_ENVBASE found as None/.singularity.d/env\n     VERBOSE2 SINGULARITY_LABELFILE found as None/.singularity.d/labels.json\n     VERBOSE2 SINGULARITY_INCLUDECMD found as False\n     VERBOSE2 SINGULARITY_PULLFOLDER found as /build/singularity-container-2.3/libexec/python\n     VERBOSE2 SHUB_NAMEBYHASH not defined (None)\n     VERBOSE2 SHUB_NAMEBYCOMMIT not defined (None)\n     VERBOSE2 SHUB_CONTAINERNAME not defined (None)\n     VERBOSE2 SINGULARITY_CONTENTS found as None/.singularity.d/.layers\n     VERBOSE2 SINGULARITY_PYTHREADS found as 9\n\n*FF*\n\nFAIL: test_docker_size (tests.test_helpers.TestJson)\n\n*test the function to return Docker size*\n\nTraceback (most recent call last):\n  File \"tests/test_helpers.py\", line 77, in test_docker_size\n    self.assertEqual(result['return_code'],0)\nAssertionError: 1 != 0\n\n======================================================================\nFAIL: test_shub_size (tests.test_helpers.TestJson)\n\n*test the function to return Singularity Hub Image Size*\n\nTraceback (most recent call last):\n  File \"tests/test_helpers.py\", line 101, in test_shub_size\n    self.assertEqual(result['return_code'],0)\nAssertionError: 1 != 0\n\n-------------------------\n\nRan 2 tests in 1.150s\n\nFAILED (failures=2)\n*** PYTHON VERSION 2 UTIL HELPERS TESTING START ***\n\n---START----------------------------------------\nTesting Docker Size\nSINGULARITY_CACHE=/root/.singularity\n---END------------------------------------------\n\n---START----------------------------------------\nTesting Singularity Hub Size\n---END------------------------------------------\nFull output in: /tmp/stest.xOk31f\nERROR: Failed running test: 05-python-units.sh\nMakefile:828: recipe for target 'test' failed\nmake: *** [test] Error 1\n```",
                "pretext": "[singularityware/singularity] New comment by Trophime on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305715496|#699: latest release 2.3 FTBS when building deb>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496389681.626696",
        "date": 1496389681626
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305708267|#699: latest release 2.3 FTBS when building deb>",
                "text": "ahh sorry now I'm looking farther back in time at the original error message - in terms of disabling the tests I think that could definitely work. What we could do to address this:\n\n```VERBOSE2 SINGULARITY_CACHEDIR found as /nonexistent/.singularity\nTraceback (most recent call last):\n  File \"./configure_transform.py\", line 30, in &lt;module&gt;\n    from sutils import (\n  File \"../libexec/python/sutils.py\", line 25, in &lt;module&gt;\n    from defaults import (\n  File \"../libexec/python/defaults.py\", line 110, in &lt;module&gt;\n    os.mkdir(SINGULARITY_CACHE)\nOSError: [Errno 2] No such file or directory: '/nonexistent/.singularity'\n```\nis to simply have some other flag to indicate that the import from defaults is doing some kind of test (and thus not try to create the cache. If you set `SINGULARITY_DISABLE_CACHE` to True then it will set it to be tmp, but again we still wouldn't want any directory to be created. Let's ask @gmkurtzer if we can just disable this entirely, I'm not sure.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305708267|#699: latest release 2.3 FTBS when building deb>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496387441.220594",
        "date": 1496387441220
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by Trophime on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305707177|#699: latest release 2.3 FTBS when building deb>",
                "text": "Here is the exact error you get when building debian package:\n```dh_auto_test\n    make -j1 test VERBOSE=1\nmake[2]: Entering directory '/build/singularity-container-2.3'\nsh ./test.sh\nBuilding/Installing Singularity to temporary directory\nReinvoking in a clean shell\nERROR: Could not locate singularity program at: /usr/bin/singularity\nMakefile:828: recipe for target 'test' failed\n```\n\nA quick work-around could be the change the ```PATH``` in ```test.sh.in```\nif there is no \"side effects\" on the \"installed\" singularity",
                "pretext": "[singularityware/singularity] New comment by Trophime on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305707177|#699: latest release 2.3 FTBS when building deb>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496387058.158017",
        "date": 1496387058158
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by Trophime on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305702875|#699: latest release 2.3 FTBS when building deb>",
                "text": "That's not what I was talking about.\nI meant in debian now when you building a package it tries to run some tests.\n\nIn the case of singularity it tries to run: ```sh ./test.sh``` (```test.sh``` is created from ```test.sh.in``` during the build step ```make```) .\n\nHope I was more clear",
                "pretext": "[singularityware/singularity] New comment by Trophime on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305702875|#699: latest release 2.3 FTBS when building deb>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496385477.920307",
        "date": 1496385477920
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305700691|#699: latest release 2.3 FTBS when building deb>",
                "text": "See <http://singularity.lbl.gov/bootstrap-image#test>",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305700691|#699: latest release 2.3 FTBS when building deb>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496384666.812481",
        "date": 1496384666812
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305700594|#699: latest release 2.3 FTBS when building deb>",
                "text": "Yes, if you write a %test section in your bootstrap spec you can run some tests during the build. Is this what you are looking to do?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305700594|#699: latest release 2.3 FTBS when building deb>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496384627.807627",
        "date": 1496384627807
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by Trophime on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305699336|#699: latest release 2.3 FTBS when building deb>",
                "text": "Yes I can but I still have trouble.\nI need to export ```SINGULARITY_CACHEDIR=$(PKGDIR)/var/singularity/cache``` in ```debian/rules``` and comment out the tests which are now run automatically when building the package. \nThe tests fail because the script is not able to find ```singularity``` in the path (defined in the script) which only looks for the \"usual\" directories and not in the \"prefixed\" directory (I mean sometihng like ``../debian/singularity-container/usr/bin``` and so on) \n\nWould there be a way to run the tests during the building of the package?",
                "pretext": "[singularityware/singularity] New comment by Trophime on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305699336|#699: latest release 2.3 FTBS when building deb>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496384112.742480",
        "date": 1496384112742
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/706#issuecomment-305691717|#706: problems with multiple Includes in bootstrap definition>",
                "text": "@akkornel your a debian/rhel/yum/all-the-linux-things badass!! :D",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/706#issuecomment-305691717|#706: problems with multiple Includes in bootstrap definition>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496380552.354405",
        "date": 1496380552354
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by belledon on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-305677681|#659: Using development branch on Singularity Hub>",
                "text": "Yes it is!! =) ",
                "pretext": "[singularityware/singularity] New comment by belledon on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-305677681|#659: Using development branch on Singularity Hub>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496373027.573275",
        "date": 1496373027573
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-305677606|#659: Using development branch on Singularity Hub>",
                "text": "Thanks! And hey, we got that \"overly long string\" issue fixed! That's progress, if you ask me, haha.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-305677606|#659: Using development branch on Singularity Hub>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496372996.569916",
        "date": 1496372996569
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/659|#659 Using development branch on Singularity Hub> by <https://github.com/belledon|belledon>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/659|#659 Using development branch on Singularity Hub> by <https://github.com/belledon|belledon>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496372917.562109",
        "date": 1496372917562
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by belledon on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-305677443|#659: Using development branch on Singularity Hub>",
                "text": "Will do! ",
                "pretext": "[singularityware/singularity] New comment by belledon on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-305677443|#659: Using development branch on Singularity Hub>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496372916.562093",
        "date": 1496372916562
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-305677206|#659: Using development branch on Singularity Hub>",
                "text": "would you mind closing the issue here, and opening again with the error above on the singularityhub issues board? <https://github.com/singularityhub/singularityhub.github.io/issues> This is actually an issue with singularity-python, but used via the hub :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-305677206|#659: Using development branch on Singularity Hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496372816.551053",
        "date": 1496372816551
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-305677067|#659: Using development branch on Singularity Hub>",
                "text": "ah interesting, I know the reason for this. The old method created a tar in a sort of hacky way, and this new way is more elegant (it does it in memory) but it looks to be not a good solution given that your container is massive. I unfortunately won't have a quick solution for this soon, but let me poke around and see what I can do. I think this would be a good one for me to test manually, but probably tomorrow. Sorry for the delay - just too much to do!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-305677067|#659: Using development branch on Singularity Hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496372749.543787",
        "date": 1496372749543
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by belledon on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-305674888|#659: Using development branch on Singularity Hub>",
                "text": "I think it makes sense from a backend  point of view. \n\nUnfortunately I ran into this error. \n\n```Running test scriptlet\nFinalizing Singularity container\n/tmp/tmpw95c4ays/image\nDEBUG:shub_builder:Built image: /tmp/tmpw95c4ays/b340d5cb482e863b562e3999a975c4c5\nINFO:shub_builder:Final time of build 195 seconds.\nINFO:shub_builder:Singularity 2.3-master.gf737013 being used.\nTraceback (most recent call last):\nFile \"\", line 1, in \nFile \"/usr/local/lib/python3.5/dist-packages/singularity/build/google.py\", line 245, in run_build\nparams=params)\nFile \"/usr/local/lib/python3.5/dist-packages/singularity/build/main.py\", line 191, in run_build\nold_version=old_version)\nFile \"/usr/local/lib/python3.5/dist-packages/singularity/package.py\", line 160, in package\nfile_obj,tar = get_memory_tar(image_path)\nFile \"/usr/local/lib/python3.5/dist-packages/singularity/reproduce.py\", line 513, in get_memory_tar\nbyte_array = cli.export(image_path)\nFile \"/usr/local/lib/python3.5/dist-packages/singularity/cli.py\", line 220, in export\noutput = self.run_command(cmd,sudo=sudo)\nFile \"/usr/local/lib/python3.5/dist-packages/singularity/cli.py\", line 81, in run_command\noutput = run_command(cmd,suppress=suppress) # suppress doesn't make difference here\nFile \"/usr/local/lib/python3.5/dist-packages/singularity/utils.py\", line 113, in run_command\noutput, err = process.communicate()\nFile \"/usr/lib/python3.5/subprocess.py\", line 1072, in communicate\nstdout, stderr = self._communicate(input, endtime, timeout)\nFile \"/usr/lib/python3.5/subprocess.py\", line 1745, in _communicate\nstdout = b''.join(stdout)\nMemoryError\n```\n\nID is 1056",
                "pretext": "[singularityware/singularity] New comment by belledon on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-305674888|#659: Using development branch on Singularity Hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496371686.423712",
        "date": 1496371686423
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-305671298|#659: Using development branch on Singularity Hub>",
                "text": "I haven't added any sort of \"push to rebuild\" button because I want each one to be associated with a unique commit - so for now your only option is to make a trivial change and commit again. I realize this is silly, so I'm definitely thinking about a reasonable solution. It would mean cleaning up the first (and not messing that up) so I need to think it over.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-305671298|#659: Using development branch on Singularity Hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496370004.231699",
        "date": 1496370004231
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by belledon on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-305670632|#659: Using development branch on Singularity Hub>",
                "text": "Hey @vsoch ,\n\nThanks for the response! I ran into a memory error but that was my bad. Quick question, is there anyway to tell the build to remake a branch? I've been just commiting some null change on the def file each time. ",
                "pretext": "[singularityware/singularity] New comment by belledon on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-305670632|#659: Using development branch on Singularity Hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496369685.194389",
        "date": 1496369685194
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-305667389|#659: Using development branch on Singularity Hub>",
                "image_url": "https://cloud.githubusercontent.com/assets/814322/26707652/4f695bac-4714-11e7-8bcf-ff3d4fe073d8.png",
                "image_width": 1360,
                "image_height": 439,
                "image_bytes": 39432,
                "text": "hey @belledon ! The builders are now updated. It looks like your collection builder is still set to singularity 2.2.1:\n\n```&gt; &gt; &gt; builder.spec\n&gt; &gt; &gt; { 'builder_name': 'singularity-builder-2-2-1-50gb',\n&gt; &gt; &gt;   'bucket_name': 'singularity-hub-regional',\n&gt; &gt; &gt;   'environment': 'gce'}\n&gt; &gt; &gt; ```\n&gt; &gt; &gt; I am hesitant about changing user preferences for builders, but you can do this on your own by clicking on the EDIT BUILDER button in your collection:\n```![image](https://cloud.githubusercontent.com/assets/814322/26707615/13a3e4ac-4714-11e7-9c83-fe41378c7eba.png)\n```\nand then selecting the 2-3-50gb builder:\n\n<https://cloud.githubusercontent.com/assets/814322/26707652/4f695bac-4714-11e7-8bcf-ff3d4fe073d8.png|image>\n\nActually, I probably need to make very clear instructions to do this - people will assume (with older collections, that is) that it would be changed automatically (and it's not). Do you want to test changing it, and then push again to redo the build? There were bugs in the builders and I had to just redo them, so it will be a good test. We can close the issue only after confirming the entire process goes smoothly (without the overly long string error!) And I will get on making the \"how to change your builder\" docs asap!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-305667389|#659: Using development branch on Singularity Hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496368294.022949",
        "date": 1496368294022
    },
    {
        "user": "eduardoarango",
        "text": "<@U3E99RUG1|eduardoarango> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1496368208.011637",
        "date": 1496368208011
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/710#issuecomment-305666126|#710: building erlang fails>",
                "text": "Also note that files are copied after %post, so if you want to add them before %post you need to do that in %setup, eg:\n\n```%setup \ncp /path/on/host/LICENSE $SINGULARITY_ROOTFS/LICENSE\n```\nThis uses the copy (cp) command, so the same wild cards / `man cp` rules apply.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/710#issuecomment-305666126|#710: building erlang fails>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496367732.953772",
        "date": 1496367732953
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/710#issuecomment-305666010|#710: building erlang fails>",
                "text": "hey @ityonemo do you get this error with the current master (which is now the old development?) I notice in your gist that there is a reference to do something with a /LICENSE, but do you put that file there? You would need a %files section with something like\n\n```%files\n/path/on/host/LICENSE /LICENSE\n```\nbut it looks like you are removing it, so maybe you do not :) \n\nI would guess mot of your issues revolve around not putting files in the image that you think are there - could you \n\n• test this with files correctly added,\n• use the current master\n• include the entire build spec in the gist?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/710#issuecomment-305666010|#710: building erlang fails>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496367672.946522",
        "date": 1496367672946
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#711 Allow @ sign to be included in path names' https://github.com/singularityware/singularity/pull/711 by bauerm97",
                "text": "*Description of the Pull Request (PR):*\n\nAllow `@` to be included in path names via calls to `envar_path()`. As long as @gmkurtzer doesn't see any reason to exclude the `@` symbol from path names this is safe to merge.\n\n*This fixes or addresses the following GitHub issues:*\n\n• Ref: #705 \n\n*Checkoff for all PRs:*\n\n• [x] I have read the <https://github.com/singularityware/singularity/blob/master/CONTRIBUTING.md|Guidelines for Contributing>, and this PR conforms to the stated requirements.\n• [x] I have tested this PR locally with a `make test`\n• [x] I have added myself as a contributor to the <https://github.com/singularityware/singularity/blob/master/AUTHORS.md|Author's file>\n• [x] This PR is ready for review and/or merge\n\nAttn: @singularityware-admin ",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/bauerm97|bauerm97>",
                "title": "#711 Allow @ sign to be included in path names",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/711",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496366101.754898",
        "date": 1496366101754
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/709|#709 Allow @ sign to be included in path names> by <https://github.com/bauerm97|bauerm97>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/709|#709 Allow @ sign to be included in path names> by <https://github.com/bauerm97|bauerm97>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496365871.726824",
        "date": 1496365871726
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#710 building erlang fails' https://github.com/singularityware/singularity/issues/710 by ityonemo",
                "text": "*Version of Singularity:*\n\n2.2.99 (development branch)\n\n*Expected behavior*\n\nErlang should build.  Works fine if you comment out the make command and execute make when in shell --writable\n\n*Actual behavior*\n\nThere seems to be a failure where it fails to identify the build directory, makefile errors out, and terminates the build process.\n\n*Steps to reproduce behavior*\n\ndef file:\n<https://gist.github.com/ityonemo/2b50d3297e499f16ef5e9cdfd7e75386>\n\ncd /var/buildzone/otp\nmake \n\nBuilds correctly.\n\nuncomment the make command, and it fails.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/ityonemo|ityonemo>",
                "title": "#710 building erlang fails",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/710",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496365150.631621",
        "date": 1496365150631
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by tamn2017 on issue <https://github.com/singularityware/singularity/issues/705#issuecomment-305659701|#705: mount network home directory>",
                "text": "@bauerm97 Assume @ is fixed to be included in path names, how do I update singularity.conf so I don't have to run \" -C -H /home-4/userxyz@test.edu ..\" every time?\n\nThanks\nTam",
                "pretext": "[singularityware/singularity] New comment by tamn2017 on issue <https://github.com/singularityware/singularity/issues/705#issuecomment-305659701|#705: mount network home directory>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496364817.589927",
        "date": 1496364817589
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#709 Allow @ sign to be included in path names' https://github.com/singularityware/singularity/pull/709 by bauerm97",
                "text": "*Description of the Pull Request (PR):*\n\nAllow `@` to be included in path names via calls to `envar_path()`. As long as @gmkurtzer doesn't see any reason to exclude the `@` symbol from path names this is safe to merge.\n\n*This fixes or addresses the following GitHub issues:*\n\n• Ref: #705 \n\n*Checkoff for all PRs:*\n\n• [x] I have read the <https://github.com/singularityware/singularity/blob/master/CONTRIBUTING.md|Guidelines for Contributing>, and this PR conforms to the stated requirements.\n• [x] I have tested this PR locally with a `make test`\n• [x] I have added myself as a contributor to the <https://github.com/singularityware/singularity/blob/master/AUTHORS.md|Author's file>\n• [x] This PR is ready for review and/or merge\n\nAttn: @singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/bauerm97|bauerm97>",
                "title": "#709 Allow @ sign to be included in path names",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/709",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496364438.542614",
        "date": 1496364438542
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by bauerm97 on issue <https://github.com/singularityware/singularity/issues/705#issuecomment-305657674|#705: mount network home directory>",
                "text": "@tamn2017 so it appears that `@` is not currently an allowed character in path names as determined by the call to `envar_path()` (which in turn calls `envar_get()`). @gmkurtzer is there any reason not to include `@` in `envar_path()`'s call to `envar_get()`?\n\nThe new code would be:\n\n`\nchar *envar_path(char *name) {\n    singularity_message(DEBUG, \"Checking environment variable is valid path: '%s'\\n\", name);\n    return(envar_get(name, \"/._+-=,:@\", PATH_MAX));\n}\n`",
                "pretext": "[singularityware/singularity] New comment by bauerm97 on issue <https://github.com/singularityware/singularity/issues/705#issuecomment-305657674|#705: mount network home directory>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496363869.472932",
        "date": 1496363869472
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by tamn2017 on issue <https://github.com/singularityware/singularity/issues/705#issuecomment-305656410|#705: mount network home directory>",
                "text": "Hi Michael,\nthank you for looking into this.  Below is my debug output. \n\n-Tam\n\nEnabling debugging\nEnding argument loop\nSingularity version: 2.3-master.gadf5259\nExec'ing: /cm/shared/apps/singularity/libexec/singularity/cli/shell.exec\nEvaluating args: '-C -H /home-4/userxyz@test.edu contain1.img'\nVERBOSE [U=0,P=122534]     message_init()                            Set messagelevel to: 5\nVERBOSE [U=0,P=122534]     singularity_config_parse()                Initialize configuration file: /cm/shared/apps/singularity/etc/singularity/singularity.conf\nDEBUG   [U=0,P=122534]     singularity_config_parse()                Starting parse of configuration file /cm/shared/apps/singularity/etc/singularity/singularity.conf\nVERBOSE [U=0,P=122534]     singularity_config_parse()                Got config key allow setuid = 'yes'\nVERBOSE [U=0,P=122534]     singularity_config_parse()                Got config key max loop devices = '256'\nVERBOSE [U=0,P=122534]     singularity_config_parse()                Got config key allow pid ns = 'yes'\nVERBOSE [U=0,P=122534]     singularity_config_parse()                Got config key config passwd = 'yes'\nVERBOSE [U=0,P=122534]     singularity_config_parse()                Got config key config group = 'yes'\nVERBOSE [U=0,P=122534]     singularity_config_parse()                Got config key config resolv_conf = 'yes'\nVERBOSE [U=0,P=122534]     singularity_config_parse()                Got config key mount proc = 'yes'\nVERBOSE [U=0,P=122534]     singularity_config_parse()                Got config key mount sys = 'yes'\nVERBOSE [U=0,P=122534]     singularity_config_parse()                Got config key mount dev = 'yes'\nVERBOSE [U=0,P=122534]     singularity_config_parse()                Got config key mount home = 'no'\nVERBOSE [U=0,P=122534]     singularity_config_parse()                Got config key mount tmp = 'yes'\nVERBOSE [U=0,P=122534]     singularity_config_parse()                Got config key mount hostfs = 'no'\nVERBOSE [U=0,P=122534]     singularity_config_parse()                Got config key bind path = '/etc/localtime'\nVERBOSE [U=0,P=122534]     singularity_config_parse()                Got config key bind path = '/etc/hosts'\nVERBOSE [U=0,P=122534]     singularity_config_parse()                Got config key user bind control = 'yes'\nVERBOSE [U=0,P=122534]     singularity_config_parse()                Got config key enable overlay = 'yes'\nVERBOSE [U=0,P=122534]     singularity_config_parse()                Got config key mount slave = 'yes'\nVERBOSE [U=0,P=122534]     singularity_config_parse()                Got config key sessiondir max size = '16'\nDEBUG   [U=0,P=122534]     singularity_config_parse()                Finished parsing configuration file '/cm/shared/apps/singularity/etc/singularity/singularity.conf'\nVERBOSE [U=0,P=122534]     singularity_registry_init()               Initializing Singularity Registry\nVERBOSE [U=0,P=122534]     singularity_registry_set()                Adding value to registry: 'CONTAIN' = '1'\nDEBUG   [U=0,P=122534]     singularity_registry_set()                Returning singularity_registry_set(CONTAIN, 1) = 0\nVERBOSE [U=0,P=122534]     singularity_registry_set()                Adding value to registry: 'LIBEXECDIR' = '/cm/shared/apps/singularity/libexec'\nDEBUG   [U=0,P=122534]     singularity_registry_set()                Returning singularity_registry_set(libexecdir, /cm/shared/apps/singularity/libexec) = 0\nVERBOSE [U=0,P=122534]     singularity_registry_set()                Adding value to registry: 'COMMAND' = 'shell'\nDEBUG   [U=0,P=122534]     singularity_registry_set()                Returning singularity_registry_set(COMMAND, shell) = 0\nVERBOSE [U=0,P=122534]     singularity_registry_set()                Adding value to registry: 'MESSAGELEVEL' = '5'\nDEBUG   [U=0,P=122534]     singularity_registry_set()                Returning singularity_registry_set(MESSAGELEVEL, 5) = 0\nVERBOSE [U=0,P=122534]     singularity_registry_set()                Adding value to registry: 'VERSION' = '2.3-master.gadf5259'\nDEBUG   [U=0,P=122534]     singularity_registry_set()                Returning singularity_registry_set(version, 2.3-master.gadf5259) = 0\nVERBOSE [U=0,P=122534]     singularity_registry_set()                Adding value to registry: 'LOCALSTATEDIR' = '/cm/shared/apps/singularity/var'\nDEBUG   [U=0,P=122534]     singularity_registry_set()                Returning singularity_registry_set(localstatedir, /cm/shared/apps/singularity/var) = 0\nVERBOSE [U=0,P=122534]     singularity_registry_set()                Adding value to registry: 'HOME' = '/home-4/userxyz@test.edu'\nDEBUG   [U=0,P=122534]     singularity_registry_set()                Returning singularity_registry_set(HOME, /home-4/userxyz@test.edu) = 0\nVERBOSE [U=0,P=122534]     singularity_registry_set()                Adding value to registry: 'CLEANENV' = '1'\nDEBUG   [U=0,P=122534]     singularity_registry_set()                Returning singularity_registry_set(CLEANENV, 1) = 0\nVERBOSE [U=0,P=122534]     singularity_registry_set()                Adding value to registry: 'DIR' = '/cm/shared/apps/singularity'\nDEBUG   [U=0,P=122534]     singularity_registry_set()                Returning singularity_registry_set(DIR, /cm/shared/apps/singularity) = 0\nVERBOSE [U=0,P=122534]     singularity_registry_set()                Adding value to registry: 'SYSCONFDIR' = '/cm/shared/apps/singularity/etc'\nDEBUG   [U=0,P=122534]     singularity_registry_set()                Returning singularity_registry_set(sysconfdir, /cm/shared/apps/singularity/etc) = 0\nVERBOSE [U=0,P=122534]     singularity_registry_set()                Adding value to registry: 'UNSHARE_PID' = '1'\nDEBUG   [U=0,P=122534]     singularity_registry_set()                Returning singularity_registry_set(UNSHARE_PID, 1) = 0\nVERBOSE [U=0,P=122534]     singularity_registry_set()                Adding value to registry: 'BINDIR' = '/cm/shared/apps/singularity/bin'\nDEBUG   [U=0,P=122534]     singularity_registry_set()                Returning singularity_registry_set(bindir, /cm/shared/apps/singularity/bin) = 0\nVERBOSE [U=0,P=122534]     singularity_registry_set()                Adding value to registry: 'UNSHARE_IPC' = '1'\nDEBUG   [U=0,P=122534]     singularity_registry_set()                Returning singularity_registry_set(UNSHARE_IPC, 1) = 0\nVERBOSE [U=0,P=122534]     singularity_registry_set()                Adding value to registry: 'IMAGE' = 'contain1.img'\nDEBUG   [U=0,P=122534]     singularity_registry_set()                Returning singularity_registry_set(IMAGE, contain1.img) = 0\nDEBUG   [U=0,P=122534]     singularity_registry_get()                Returning value from registry: 'HOME' = '/home-4/userxyz@test.edu'\nDEBUG   [U=0,P=122534]     singularity_registry_get()                Returning NULL on 'TARGET_UID'\nDEBUG   [U=0,P=122534]     singularity_registry_get()                Returning NULL on 'TARGET_GID'\nDEBUG   [U=0,P=122534]     singularity_priv_init()                   Initializing user info\nDEBUG   [U=0,P=122534]     singularity_priv_init()                   Set the calling user's username to: userxyz@test.edu\nDEBUG   [U=0,P=122534]     singularity_priv_init()                   Marking uinfo structure as ready\nDEBUG   [U=0,P=122534]     singularity_priv_init()                   Obtaining home directory\nVERBOSE [U=0,P=122534]     singularity_priv_init()                   Set home and homedir (via SINGULARITY_HOME) to: /home-4/userxyz@test.edu\nVERBOSE [U=0,P=122534]     singularity_suid_init()                   Running SUID program workflow\nVERBOSE [U=0,P=122534]     singularity_suid_init()                   Checking program has appropriate permissions\nVERBOSE [U=0,P=122534]     singularity_suid_init()                   Checking configuration file is properly owned by root\nVERBOSE [U=0,P=122534]     singularity_suid_init()                   Checking if singularity.conf allows us to run as suid\nDEBUG   [U=0,P=122534]     singularity_config_get_bool_char_impl()   Called s…",
                "pretext": "[singularityware/singularity] New comment by tamn2017 on issue <https://github.com/singularityware/singularity/issues/705#issuecomment-305656410|#705: mount network home directory>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496363280.397519",
        "date": 1496363280397
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by belledon on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-305647221|#659: Using development branch on Singularity Hub>",
                "text": "Hey @vsoch ,\n\nJust tried it with 2.3 and received a similar error. This was during some variable exports when preparing to install nvidia drivers. \n\n```DEBUG [U=0,P=2186] bootdef_parser.c:202:singularity_bootdef_section_get(): Reading line: PATH=$NV_DRIVER_PATH:\\$PATH\nERROR [U=0,P=2186] util/util.c:159:strjoin() : Overly-long string encountered.\nABORT [U=0,P=2186] util/util.c:160:strjoin() : Retval = 255\n```\n\nFrom the def file in <https://github.com/belledon/chainer_sing/blob/master/Singularity>\nThe container has ID 1050\n\nThe build succeeds on my local system with version `2.2.99-development.g0ea6d4e`",
                "pretext": "[singularityware/singularity] New comment by belledon on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-305647221|#659: Using development branch on Singularity Hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496359336.808302",
        "date": 1496359336808
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by kcgthb on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-305643698|#611: Nvidia GPU support with different driver versions?>",
                "text": "That seems close enough indeed, but I think there may additional bits missing. For instance, the NVML-related tools, such as `nvidia-smi`, which heavily depend on the driver, are not available within the container.\n`nvidia-docker` mounts them at runtime, as mentionned in <https://github.com/NVIDIA/nvidia-docker/issues/274>",
                "pretext": "[singularityware/singularity] New comment by kcgthb on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-305643698|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496357958.575383",
        "date": 1496357958575
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#708 Fix silly minor type in CONTRIBUTING.md' https://github.com/singularityware/singularity/pull/708 by bauerm97",
                "text": "*Description of the Pull Request (PR):*\n\nJust a minor typo fix\n\n*Checkoff for all PRs:*\n\n• [x] I have read the <https://github.com/singularityware/singularity/blob/master/CONTRIBUTING.md|Guidelines for Contributing>, and this PR conforms to the stated requirements.\n• [x] I have tested this PR locally with a `make test`\n• [x] I have added myself as a contributor to the <https://github.com/singularityware/singularity/blob/master/AUTHORS.md|Author's file>\n• [x] This PR is ready for review and/or merge\n\nAttn: @singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/bauerm97|bauerm97>",
                "title": "#708 Fix silly minor type in CONTRIBUTING.md",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/708",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496357387.471855",
        "date": 1496357387471
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by bauerm97 on issue <https://github.com/singularityware/singularity/issues/705#issuecomment-305620634|#705: mount network home directory>",
                "text": "Hi, could you run singularity in debug mode with `singularity -d shell -C -H /home-4/userxyz@test.edu contain1.img` and posting the debug output here so I can see what's going on?",
                "pretext": "[singularityware/singularity] New comment by bauerm97 on issue <https://github.com/singularityware/singularity/issues/705#issuecomment-305620634|#705: mount network home directory>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496351222.993224",
        "date": 1496351222993
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by bauerm97 on issue <https://github.com/singularityware/singularity/issues/706#issuecomment-305617741|#706: problems with multiple Includes in bootstrap definition>",
                "text": "@myourshaw As @akkornel has said, if you change `Include: yum` into `Include: yum bzip2` your def file should work as expected. Could you try this out and see if that solves your issue?\n\nThis arises because of how the code in <https://github.com/singularityware/singularity/blob/master/src/bootstrap-lib/keyval.c|the keyval parser> parses the `Include:` lines, where it looks one line at a time through the bootdef file and unfortunately overwrites the environment variable at each pass (when there are multiple lines present).",
                "pretext": "[singularityware/singularity] New comment by bauerm97 on issue <https://github.com/singularityware/singularity/issues/706#issuecomment-305617741|#706: problems with multiple Includes in bootstrap definition>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496350541.768448",
        "date": 1496350541768
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by akkornel on issue <https://github.com/singularityware/singularity/issues/706#issuecomment-305614050|#706: problems with multiple Includes in bootstrap definition>",
                "text": "Hi @myourshaw, what happens if you put `yum` and `bzip2` on the same `Include:` line, at the top of the file?",
                "pretext": "[singularityware/singularity] New comment by akkornel on issue <https://github.com/singularityware/singularity/issues/706#issuecomment-305614050|#706: problems with multiple Includes in bootstrap definition>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496349683.486704",
        "date": 1496349683486
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#707 Error if container directory is setgid' https://github.com/singularityware/singularity/issues/707 by kcgthb",
                "text": "*Description*\n\nWhen Singularity is installed in a SETGID directory, permissions check fail in `singularity_image_mount()` and attempt to fix the permission fail too. \n\n*Version of Singularity:*\n\n2.3\n\n*Expected behavior*\n\nNo error :)\n\n*Actual behavior*\n\n`Bad permission mode (should be 0755) on: &lt;install_dir&gt;/var/singularity/mnt/container`\n\n*Steps to reproduce behavior*\n\nInstall Singularity in a SETGID directory:\n```$ chmod g+s /share/singularity\n$ configure --prefix=/share/singularity\n$ sudo make install\n$ stat -c \"%a %n\" /share/singularityvar/singularity/mnt/container\n2755 /share/singularityvar/singularity/mnt/container\n```\nRun:\n```$ singularity --debug shell container.img\n[...]\nVERBOSE [U=215845,P=76501] singularity_runtime_rootfs()              Set container directory to: /share/software/user/open/singularity/2.3/var/singularity/mnt/container\nDEBUG   [U=215845,P=76501] singularity_runtime_rootfs()              Checking for container directory\nDEBUG   [U=215845,P=76501] singularity_runtime_rootfs()              Returning container_directory: /share/software/user/open/singularity/2.3/var/singularity/mnt/container\nDEBUG   [U=215845,P=76501] chk_mode()                                Checking exact mode (40755) on: /share/software/user/open/singularity/2.3/var/singularity/mnt/container\nVERBOSE [U=215845,P=76501] chk_mode()                                Found wrong permission on file /share/software/user/open/singularity/2.3/var/singularity/mnt/container: 40755 != 42755\nDEBUG   [U=215845,P=76501] singularity_image_mount()                 fixing bad permissions on /share/software/user/open/singularity/2.3/var/singularity/mnt/container\nDEBUG   [U=215845,P=76501] singularity_priv_escalate()               Temporarily escalating privileges (U=215845)\nDEBUG   [U=0,P=76501]      singularity_priv_escalate()               Clearing supplementary GIDs.\nDEBUG   [U=0,P=76501]      singularity_priv_drop()                   Dropping privileges to UID=215845, GID=32264 (11 supplementary GIDs)\nDEBUG   [U=0,P=76501]      singularity_priv_drop()                   Restoring supplementary groups\nDEBUG   [U=215845,P=76501] singularity_priv_drop()                   Confirming we have correct UID/GID\nERROR   [U=215845,P=76501] singularity_image_mount()                 Bad permission mode (should be 0755) on: /share/software/user/open/singularity/2.3/var/singularity/mnt/container\nABORT   [U=215845,P=76501] singularity_image_mount()                 Retval = 255\n```\n`chk_mode()` returns an error because of the SETGID bit. I'm not sure what's required here, security-wise. Is it necessary that this directory has the SETUID and SETGID bits not set? Or could the permissions check be relaxed to ignore those bits? \n\nIf it's important that they are not set, then the mechanism to fix the permissions in `singularity_image_mount()` should be improved. Currently, it does a <https://github.com/singularityware/singularity/blob/master/src/lib/image/mount/mount.c#L61|`chmod 0755`> on the directory, which will _not_ clear the SETUID/SETGID bits.\n\nFrom `man 1 chmod`:\n&gt; SETUID AND SETGID BITS\n&gt; [...]\n&gt;        you can set (but not clear) the bits with a numeric mode\nIt looks like if they actually need to be cleared, the SETUID/SETGID bits need to be explicitely unset.\n\n*Summary*\n\nDo SETUID/SETGID need to be absent from the container directory (`var/singularity/mnt/container`)?\n1. if not, the `chk_mode()` check should be less strict and ignore them,\n2. if so, they should be explicitly unset in `singularity_image_mount()` or possibly even better in the `install` target of the Makefile (the directory is created with `install -d -m 0755`, which also does _not_ unset SETUID/SETGID bits).",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/kcgthb|kcgthb>",
                "title": "#707 Error if container directory is setgid",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/707",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496349444.409223",
        "date": 1496349444409
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#706 problems with multiple Includes in bootstrap definition' https://github.com/singularityware/singularity/issues/706 by myourshaw",
                "text": "*Version of Singularity:*\n\n2.3\n\n*Expected behavior*\n\ndef file that has multiple includes will build correctly, e.g.\n\n```\nBootStrap: yum\nOSVersion: 7\nMirrorURL: <http://mirror.centos.org/centos-%>{OSVERSION}/%{OSVERSION}/os/$basearch/\nInclude: yum\n\nUpdateURL: <http://mirror.centos.org/centos-%>{OSVERSION}/%{OSVERSION}/updates/$basearch/\n\n*additional packages*\n\nInclude: bzip2\n\n%post\n  echo \"Installing EPEL\"\n  yum -y install epel-release\n```\n\n*Actual behavior*\n\ndef file that has multiple includes fails.\n\n```\n...\nComplete!\nRunning post scriptlet\n• echo 'Installing EPEL'\n     Installing EPEL\n• yum -y install epel-release\n     /bin/sh: line 3: yum: command not found\n     ABORT: Aborting with RETVAL=255\n     ```\n\n*Steps to reproduce behavior*\n\nrun singularity bootstrap with the above def file",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/myourshaw|myourshaw>",
                "title": "#706 problems with multiple Includes in bootstrap definition",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/706",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496347129.602412",
        "date": 1496347129602
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/703|#703 Update Debian changelog to 2.3> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/703|#703 Update Debian changelog to 2.3> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496346102.249891",
        "date": 1496346102249
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/703#issuecomment-305599504|#703: Update Debian changelog to 2.3>",
                "text": "Looks good to me, thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/703#issuecomment-305599504|#703: Update Debian changelog to 2.3>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496346096.247776",
        "date": 1496346096247
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/701#issuecomment-305599136|#701: Slurm plugin missing header>",
                "text": "I can take a stab at this, but the SLURM plugin does need to be updated and @bbockelm (who \"owns\" that component), has been focused on other things. If anyone wants to try and get to this before I can, it would be greatly appreciated!\n\nThank you!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/701#issuecomment-305599136|#701: Slurm plugin missing header>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496346000.216240",
        "date": 1496346000216
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/700|#700 PULL_REQUEST_TEMPLATE.md links fixed> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/700|#700 PULL_REQUEST_TEMPLATE.md links fixed> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496345693.112867",
        "date": 1496345693112
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/700#issuecomment-305597328|#700: PULL_REQUEST_TEMPLATE.md links fixed>",
                "text": "Looks good, thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/700#issuecomment-305597328|#700: PULL_REQUEST_TEMPLATE.md links fixed>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496345685.110258",
        "date": 1496345685110
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305597001|#699: latest release 2.3 FTBS when building deb>",
                "text": "Looks good, thank you! Can you send a PR with these changes?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305597001|#699: latest release 2.3 FTBS when building deb>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496345605.083424",
        "date": 1496345605083
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/698#issuecomment-305596620|#698: convert img to tar.gz archive>",
                "text": "Yes, you can use tar.gz files that contain a root file system, but it is not very efficient as it must be splat out to the file system before it can be used. But to answer your question, yes, you can convert a disk image to a tarball by using a command like:\n\n```$ singularity export container.img &gt; container.tar\n```",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/698#issuecomment-305596620|#698: convert img to tar.gz archive>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496345511.051566",
        "date": 1496345511051
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/698|#698 convert img to tar.gz archive> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/698|#698 convert img to tar.gz archive> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496345511.051518",
        "date": 1496345511051
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#705 mount network home directory' https://github.com/singularityware/singularity/issues/705 by tamn2017",
                "text": "*Version of Singularity:*\n\nVersion 2.3\n\n*Expected behavior*\n\nHoping it would mount network /home-4/userxyz@test.edu \n\n*Actual behavior*\n\nWARNING: Could not chdir to home: /home-4/userzyz@test.edu\n\n*Steps to reproduce behavior*\n\nsingularity shell container1.img\nsingularity shell docker://centos\nsingularity shell -C -H /home-4/userxyz\\@test.edu contain1.img ",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/tamn2017|tamn2017>",
                "title": "#705 mount network home directory",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/705",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496344046.552253",
        "date": 1496344046552
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#704 SESSIONDIR_PREFIX in 2.3' https://github.com/singularityware/singularity/issues/704 by kcgthb",
                "text": "Hi!\n\nIt looks like the `SESSIONDIR_PREFIX` configuration directive disappeared from `etc/singularity.conf` in 2.3, and I'm curious about the rationale.\n\nAs far as I can see, the session directory is now set to `&lt;singularity_install_dir&gt;/var/singularity/mnt/session`. I understand that this comes from the `localstatedir` option of the `configure` script.\n\nWe're typically installing Singularity on a shared NFS directory, alongside other applications, and in that case, the `localstatedir`, as well as the session directory, will end up on NFS. I recall from previous versions that those needed to be local to each machine. Is that not the case anymore?",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/kcgthb|kcgthb>",
                "title": "#704 SESSIONDIR_PREFIX in 2.3",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/704",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496343420.323291",
        "date": 1496343420323
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/702#issuecomment-305578855|#702: Old version on debian package>",
                "text": "This is largely my fault for having 2.3 represented in the docs - I took the assumption / hope that someone would update the package and then it would be correct :) I think with a PR for the debian distribution this will be fixed?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/702#issuecomment-305578855|#702: Old version on debian package>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496341583.648641",
        "date": 1496341583648
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/703#issuecomment-305577100|#703: Update Debian changelog to 2.3>",
                "text": "This seems ok to me, @gmkurtzer do you want your email in there ?",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/703#issuecomment-305577100|#703: Update Debian changelog to 2.3>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496341199.508520",
        "date": 1496341199508
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#703 Update Debian changelog to 2.3' https://github.com/singularityware/singularity/pull/703 by dexter2cz",
                "text": "*Description of the Pull Request (PR):*\n\nUpdated Debian changelog.\n\n*This fixes or addresses the following GitHub issues:*\n\n• Ref: #702\n\n*Checkoff for all PRs:*\n\n• [X] I have read the &lt;CONTRIBUTING.md|Guidelines for Contributing&gt;, and this PR conforms to the stated requirements.\n• [X] I have tested this PR locally with a `make test`\n• [ ] I have added myself as a contributor to the &lt;AUTHORS.md|Author's file&gt;\n• [X] This PR is ready for review and/or merge\n\nAttn: @singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/dexter2cz|dexter2cz>",
                "title": "#703 Update Debian changelog to 2.3",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/703",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496340341.202541",
        "date": 1496340341202
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by moskalenko on issue <https://github.com/singularityware/singularity/issues/682#issuecomment-305565269|#682: apps executed inside singularity container doesn't use the same timezone as the host>",
                "text": "I was testing this same issue a few days ago after posting about it on slack and at that time 2.9.99 didn't have this problem. I just re-checked with the newly released singularity-2.3.0 and the 2.2 problem is still absent.",
                "pretext": "[singularityware/singularity] New comment by moskalenko on issue <https://github.com/singularityware/singularity/issues/682#issuecomment-305565269|#682: apps executed inside singularity container doesn't use the same timezone as the host>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496338516.529894",
        "date": 1496338516529
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by moskalenko on issue <https://github.com/singularityware/singularity/issues/701#issuecomment-305564462|#701: Slurm plugin missing header>",
                "text": "Same here, full error:\n\nMaking all in slurm\nmake[3]: Entering directory `singularity-2.3/src/slurm'\ndepbase=`echo singularity.lo | sed 's|[^/]*$|.deps/&amp;|;s|.lo$||'`;\\\n        /bin/sh ../../libtool --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../../src     -I/opt/slurm/include -MT singularity.lo -MD -MP -MF $depbase.Tpo -c -o singularity.lo singularity.c &amp;&amp;\\\n        mv -f $depbase.Tpo $depbase.Plo\nlibtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../../src -I/opt/slurm/include -MT singularity.lo -MD -MP -MF .deps/singularity.Tpo -c singularity.c  -fPIC -DPIC -o .libs/singularity.o\nsingularity.c:32:29: error: lib/singularity.h: No such file or directory\nsingularity.c: In function ‘setup_container_environment’:\nsingularity.c:66: warning: incompatible implicit declaration of built-in function ‘snprintf’\nsingularity.c: In function ‘setup_container_cwd’:\nsingularity.c:130: warning: initialization makes pointer from integer without a cast\nsingularity.c: In function ‘setup_container’:\nsingularity.c:148: warning: incompatible implicit declaration of built-in function ‘printf’\nsingularity.c:172: error: redeclaration of ‘image’ with no linkage\nsingularity.c:145: note: previous declaration of ‘image’ was here\nsingularity.c:173: warning: assignment makes pointer from integer without a cast\nmake[3]: *** [singularity.lo] Error 1\nmake[3]: Leaving directory `singularity-2.3/src/slurm'\nmake[2]: *** [all-recursive] Error 1\nmake[2]: Leaving directory `singularity-2.3/src'\nmake[1]: *** [all] Error 2\nmake[1]: Leaving directory `singularity-2.3/src'\nmake: *** [all-recursive] Error 1\n\nHowever, just patching those includes out is not sufficient as it doesn't address re-declaration of image.\n\nsingularity.c: In function ‘setup_container_environment’:\nsingularity.c:65: warning: incompatible implicit declaration of built-in function ‘snprintf’\nsingularity.c: In function ‘setup_container_cwd’:\nsingularity.c:129: warning: initialization makes pointer from integer without a cast\nsingularity.c: In function ‘setup_container’:\nsingularity.c:147: warning: incompatible implicit declaration of built-in function ‘printf’\nsingularity.c:171: error: redeclaration of ‘image’ with no linkage\nsingularity.c:144: note: previous declaration of ‘image’ was here\nsingularity.c:172: warning: assignment makes pointer from integer without a cast",
                "pretext": "[singularityware/singularity] New comment by moskalenko on issue <https://github.com/singularityware/singularity/issues/701#issuecomment-305564462|#701: Slurm plugin missing header>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496338326.461925",
        "date": 1496338326461
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#702 Old version on debian package' https://github.com/singularityware/singularity/issues/702 by BaronPampa",
                "text": "*Version of Singularity:*\n\n2.3\n\n*Expected behavior*\n\ndeb package with name: singularity-container_2.3_amd64.deb\n\n*Actual behavior*\n\nsingularity-container_2.2-1_amd64.deb\n\n*Steps to reproduce behavior*\n\n$&gt;tar xfv singularity-2.3.tar.gz\n$&gt; cd singularity-2.3/\n$&gt; fakeroot dpkg-buildpackage -b -us -uc",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/BaronPampa|BaronPampa>",
                "title": "#702 Old version on debian package",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/702",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496333076.566684",
        "date": 1496333076566
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "<https://github.com/singularityware/singularity|[singularity]> The branch \"2.3\" was deleted by gmkurtzer",
                "text": "<https://github.com/singularityware/singularity|[singularity]> The branch \"2.3\" was deleted by gmkurtzer",
                "id": 1,
                "color": "4183C4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496331278.830053",
        "date": 1496331278830
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "<https://github.com/singularityware/singularity/tree/2.3|[singularity:2.3]> was branched from \"master\" and pushed by gmkurtzer",
                "text": "<https://github.com/singularityware/singularity/tree/2.3|[singularity:2.3]> was branched from \"master\" and pushed by gmkurtzer",
                "id": 1,
                "color": "4183C4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496330811.638058",
        "date": 1496330811638
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by kav2k on issue <https://github.com/singularityware/singularity/issues/701#issuecomment-305498111|#701: Slurm plugin missing header>",
                "text": "To clarify: this only happens when trying to compile Slurm integration plugin.",
                "pretext": "[singularityware/singularity] New comment by kav2k on issue <https://github.com/singularityware/singularity/issues/701#issuecomment-305498111|#701: Slurm plugin missing header>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496324830.186858",
        "date": 1496324830186
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#701 Slurm plugin missing header' https://github.com/singularityware/singularity/issues/701 by gdolle",
                "text": "singularity.c:32:29: fatal error: lib/singularity.h: No such file or directory  #include \"lib/singularity.h\"\n\nMaybe this include should be removed ? (like here <https://github.com/singularityware/singularity/commit/e699be95cdb7c2352f22dfa844c2cec301e0adfe>)\n\n*Version of Singularity:*\n\nRelease 2.3.0",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/gdolle|gdolle>",
                "title": "#701 Slurm plugin missing header",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/701",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496323281.645757",
        "date": 1496323281645
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#700 PULL_REQUEST_TEMPLATE.md links fixed' https://github.com/singularityware/singularity/pull/700 by ArangoGutierrez",
                "text": "*Description of the Pull Request (PR):*\n\nLinks on PULL_REQUEST_TEMPLATE.md are broken (Error 404)\n\n*This fixes or addresses the following GitHub issues:*\n\n• Ref: #\n\n*Checkoff for all PRs:*\n\n• [x] I have read the &lt;CONTRIBUTING.md|Guidelines for Contributing&gt;, and this PR conforms to the stated requirements.\n• [x] I have tested this PR locally with a `make test`\n• [x] I have added myself as a contributor to the &lt;AUTHORS.md|Author's file&gt;\n• [x] This PR is ready for review and/or merge\n\nAttn: @singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "title": "#700 PULL_REQUEST_TEMPLATE.md links fixed",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/700",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496322504.400040",
        "date": 1496322504400
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by Trophime on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305487813|#699: latest release 2.3 FTBS when building deb>",
                "text": "Here is the ```debian/control``` file I use (from Debian archive):\n```\nSource: singularity-container\nSection: admin\nPriority: optional\nMaintainer: NeuroDebian Team <mailto:team@neuro.debian.net|team@neuro.debian.net>\nUploaders:\n Dave Love <mailto:fx@gnu.org|fx@gnu.org>,\n Mehdi Dogguy <mailto:mehdi@debian.org|mehdi@debian.org>,\n Yaroslav Halchenko <mailto:debian@onerussian.com|debian@onerussian.com>,\nBuild-Depends:\n debhelper (&gt;= 9),\n dh-autoreconf,\n help2man,\n python-dev (&gt;= 2.6.6-3~)\n\n*python3.5-dev*\n\nStandards-Version: 3.9.8\nX-Python-Version: current\n#X-Python3-Version: &gt;= 3.5\nHomepage: <http://gmkurtzer.github.io/singularity>\nVcs-Git: <https://anonscm.debian.org/git/collab-maint/singularity-container.git>\nVcs-Browser: <https://anonscm.debian.org/git/collab-maint/singularity-container.git>\n\n*\"singularity\" is a packaged game (but the contents don't clash)*\n\nPackage: singularity-container\nArchitecture: any\nDepends: ${misc:Depends}, ${shlibs:Depends}, python\nDescription: container platform focused on supporting \"Mobility of Compute\"\n Mobility of Compute encapsulates the development to compute model\n where developers can work in an environment of their choosing and\n creation and when the developer needs additional compute resources,\n this environment can easily be copied and executed on other platforms.\n Additionally as the primary use case for Singularity is targeted\n towards computational portability, many of the barriers to entry of\n other container solutions do not apply to Singularity making it an\n ideal solution for users (both computational and non-computational)\n and HPC centers.\n```",
                "pretext": "[singularityware/singularity] New comment by Trophime on issue <https://github.com/singularityware/singularity/issues/699#issuecomment-305487813|#699: latest release 2.3 FTBS when building deb>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496322500.398972",
        "date": 1496322500398
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#699 latest release 2.3 FTBS when building deb ' https://github.com/singularityware/singularity/issues/699 by Trophime",
                "text": "*Version of Singularity:*\n\n2.3\n\n*Expected behavior*\n\nbuild debian package\n\n*Actual behavior*\n\nThe build crashes first in the configure step because of missing ```python```\nAfter adding ```python-dev``` to ```Build-Depends``` in ```debian/control``` (see attached)\nit crashes again:\n```Making all in etc\nmake[2]: Entering directory '/build/singularity-container-2.3/etc'\n./configure_transform.py --defaults ../src/util/config_defaults.h --infile singularity.conf.in --outfile singularity.conf\nVERBOSE2 SINGULARITY_COMMAND_ASIS found as False\nVERBOSE2 SINGULARITY_ROOTFS not defined (None)\nVERBOSE2 SINGULARITY_METADATA_FOLDER found as None/.singularity.d\nVERBOSE2 SINGULARITY_FIX_PERMS found as False\nVERBOSE2 SINGULARITY_COLORIZE not defined (None)\nVERBOSE2 SINGULARITY_DISABLE_CACHE found as False\nVERBOSE2 SINGULARITY_CACHEDIR found as /nonexistent/.singularity\nTraceback (most recent call last):\n  File \"./configure_transform.py\", line 30, in &lt;module&gt;\n    from sutils import (\n  File \"../libexec/python/sutils.py\", line 25, in &lt;module&gt;\n    from defaults import (\n  File \"../libexec/python/defaults.py\", line 110, in &lt;module&gt;\n    os.mkdir(SINGULARITY_CACHE)\nOSError: [Errno 2] No such file or directory: '/nonexistent/.singularity'\n```\n\n*Steps to reproduce behavior*\n\nI use pdebuild to rebuild the package to make the build in a \"proper\" way with a clean and minimal debian dist.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/Trophime|Trophime>",
                "title": "#699 latest release 2.3 FTBS when building deb ",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/699",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496322419.374821",
        "date": 1496322419374
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#698 convert img to tar.gz archive' https://github.com/singularityware/singularity/issues/698 by huitre39",
                "text": "Hello, last week i view that i can use singularity with tar.gz who contains root file system.\nMy question is, can i convert img disk image to tar.gz archive ?",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/huitre39|huitre39>",
                "title": "#698 convert img to tar.gz archive",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/698",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496319921.704855",
        "date": 1496319921704
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "<https://github.com/singularityware/singularity|[singularity]> New tag <https://github.com/singularityware/singularity/compare/2.3|2.3> was pushed by gmkurtzer",
                "text": "<https://github.com/singularityware/singularity|[singularity]> New tag <https://github.com/singularityware/singularity/compare/2.3|2.3> was pushed by gmkurtzer",
                "id": 1,
                "color": "4183C4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496278404.867195",
        "date": 1496278404867
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/681|#681 singularity supported uris discussion> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/681|#681 singularity supported uris discussion> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496278331.857491",
        "date": 1496278331857
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-305358470|#681: singularity supported uris discussion>",
                "text": "okay, I think we are good then. Thanks everyone!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-305358470|#681: singularity supported uris discussion>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496278331.857489",
        "date": 1496278331857
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-305351742|#681: singularity supported uris discussion>",
                "text": "Nope, we don't have to support import'ing an image into an image. It is messy, but it can be done pretty easily by exporting and then importing.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-305351742|#681: singularity supported uris discussion>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496275425.454001",
        "date": 1496275425454
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-305324178|#681: singularity supported uris discussion>",
                "text": "Not for import I don't think - @gmkurtzer that is correct? We currently don't have support to import an image into another image. That sounds messy.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-305324178|#681: singularity supported uris discussion>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496266410.163152",
        "date": 1496266410163
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-305314162|#681: singularity supported uris discussion>",
                "text": "Right now it only lists docker as a supported URI.  shub should work too right?",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-305314162|#681: singularity supported uris discussion>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496264025.436599",
        "date": 1496264025436
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-305313191|#681: singularity supported uris discussion>",
                "text": "ok, let's just double check the import docs then provided via the singularity --help.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-305313191|#681: singularity supported uris discussion>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496263793.358263",
        "date": 1496263793358
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-305312020|#681: singularity supported uris discussion>",
                "text": "Well, the format is supported for all of the action commands, but import specifically takes a strict format to convert it to the container image format (e.g. it also can't take a directory or a cpio in that it only supports tar).",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-305312020|#681: singularity supported uris discussion>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496263543.273703",
        "date": 1496263543273
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/696#issuecomment-305310532|#696: busybox replace ash by bash, it's possible ?>",
                "text": "and please use development branch:\n\n```git clone -b https://www.github.com/singularityware/singularity.git\ncd singularity\n./autogen.sh\n./configure --prefix=/usr/local\nmake\nsudo make install\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/696#issuecomment-305310532|#696: busybox replace ash by bash, it's possible ?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496263212.162281",
        "date": 1496263212162
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/696#issuecomment-305310306|#696: busybox replace ash by bash, it's possible ?>",
                "text": "@sazearte did you try my suggestion?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/696#issuecomment-305310306|#696: busybox replace ash by bash, it's possible ?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496263157.144029",
        "date": 1496263157144
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-305309727|#681: singularity supported uris discussion>",
                "image_url": "https://upload.wikimedia.org/wikipedia/commons/thumb/c/ca/Yoyo.gif/200px-Yoyo.gif",
                "image_width": 200,
                "image_height": 287,
                "image_bytes": 21153,
                "is_animated": true,
                "text": "...yo <https://upload.wikimedia.org/wikipedia/commons/thumb/c/ca/Yoyo.gif/200px-Yoyo.gif>",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-305309727|#681: singularity supported uris discussion>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496263025.100830",
        "date": 1496263025100
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-305309566|#681: singularity supported uris discussion>",
                "text": "The table for the paper above is for the supported container formats. So I think it follows that we should be able to have containers in that format. But for this particular issue, what we also need to clarify is which of the above are supported for import. We can't have in our docs (and singularity --help) that a format is supported that isn't /. no longer is, yo! :P",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-305309566|#681: singularity supported uris discussion>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496262992.089776",
        "date": 1496262992089
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-305278743|#681: singularity supported uris discussion>",
                "text": "Are these for imports, or direct container actions (run, shell, test, exec, etc..)?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-305278743|#681: singularity supported uris discussion>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496255917.674915",
        "date": 1496255917674
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/697#issuecomment-305270594|#697: Added missing .img to import.help>",
                "text": "Yep, I am on testing that now.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/697#issuecomment-305270594|#697: Added missing .img to import.help>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496254151.028593",
        "date": 1496254151028
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/697#issuecomment-305270314|#697: Added missing .img to import.help>",
                "text": "Haha thanks this looks ok to me. I think @gmkurtzer we need to resolve the functionalities (still) provided by import, per the message on the list this morning.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/697#issuecomment-305270314|#697: Added missing .img to import.help>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496254089.007090",
        "date": 1496254089007
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/697#issuecomment-305270197|#697: Added missing .img to import.help>",
                "text": "Thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/697#issuecomment-305270197|#697: Added missing .img to import.help>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496254064.998480",
        "date": 1496254064998
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/697|#697 Added missing .img to import.help> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/697|#697 Added missing .img to import.help> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496254059.996712",
        "date": 1496254059996
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/695#issuecomment-305215739|#695: Small tweaks to inspect help>",
                "text": "Thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/695#issuecomment-305215739|#695: Small tweaks to inspect help>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496243084.824445",
        "date": 1496243084824
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/695|#695 Small tweaks to inspect help> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/695|#695 Small tweaks to inspect help> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496243078.821746",
        "date": 1496243078821
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#697 Added missing .img to import.help' https://github.com/singularityware/singularity/pull/697 by dexter2cz",
                "text": "Just minor fix.",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/dexter2cz|dexter2cz>",
                "title": "#697 Added missing .img to import.help",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/697",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496221321.456125",
        "date": 1496221321456
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by sazearte on issue <https://github.com/singularityware/singularity/issues/696#issuecomment-305108217|#696: busybox replace ash by bash, it's possible ?>",
                "text": "truatpasteurdotfr, thanks for your help but in my busybox image, apk (or yum) is not installed, i have this error :\nsh: apk: not found",
                "pretext": "[singularityware/singularity] New comment by sazearte on issue <https://github.com/singularityware/singularity/issues/696#issuecomment-305108217|#696: busybox replace ash by bash, it's possible ?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496215645.165507",
        "date": 1496215645165
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by truatpasteurdotfr on issue <https://github.com/singularityware/singularity/issues/696#issuecomment-305008491|#696: busybox replace ash by bash, it's possible ?>",
                "text": "@sazearte you are using singularity 2.2 ? just apply this workaround\nreduce the bootstrap file to:\n```#bb.def\nBootStrap: busybox\nMirrorURL: file:///home/robert/busybox/busybox-x86_64\n```\nthen:\n```\nsudo singularity create bb.img \nsudo singularity bootstrap bb.img bb.def\nsudo singularity exec -w bb.img sh -c 'apk update &amp;&amp; apk upgrade &amp;&amp; apk add bash bash-doc bash-completion ' ",
                "pretext": "[singularityware/singularity] New comment by truatpasteurdotfr on issue <https://github.com/singularityware/singularity/issues/696#issuecomment-305008491|#696: busybox replace ash by bash, it's possible ?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496178441.732168",
        "date": 1496178441732
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/696#issuecomment-304954480|#696: busybox replace ash by bash, it's possible ?>",
                "text": "Can you install development branch? We don't even have cli.py in the python bits anymore. Then please try again.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/696#issuecomment-304954480|#696: busybox replace ash by bash, it's possible ?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496166229.640817",
        "date": 1496166229640
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by sazearte on issue <https://github.com/singularityware/singularity/issues/696#issuecomment-304883032|#696: busybox replace ash by bash, it's possible ?>",
                "text": "it's not work for me :\n```Bootstrap initialization\nChecking bootstrap definition\nExecuting Prebootstrap module\nExecuting Bootstrap 'docker' module\nFrom: alpine:latest\nlibrary/alpine:latest\nTraceback (most recent call last):\n  File \"/usr/local/libexec/singularity/python/cli.py\", line 198, in &lt;module&gt;\n    main()\n  File \"/usr/local/libexec/singularity/python/cli.py\", line 146, in main\n    auth=doauth)\n  File \"/usr/local/libexec/singularity/python/docker/api.py\", line 156, in get_manifest\n    permission=\"pull\")\n  File \"/usr/local/libexec/singularity/python/docker/api.py\", line 63, in get_token\n    response = api_get(base,default_header=False)\n  File \"/usr/local/libexec/singularity/python/utils.py\", line 143, in api_get\n    response = urlopen(request)\n  File \"/usr/lib64/python2.7/urllib2.py\", line 154, in urlopen\n    return opener.open(url, data, timeout)\n  File \"/usr/lib64/python2.7/urllib2.py\", line 431, in open\n    response = self._open(req, data)\n  File \"/usr/lib64/python2.7/urllib2.py\", line 449, in _open\n    '_open', req)\n  File \"/usr/lib64/python2.7/urllib2.py\", line 409, in _call_chain\n    result = func(*args)\n  File \"/usr/lib64/python2.7/urllib2.py\", line 1258, in https_open\n    context=self._context, check_hostname=self._check_hostname)\n  File \"/usr/lib64/python2.7/urllib2.py\", line 1214, in do_open\n    raise URLError(err)\nurllib2.URLError: &lt;urlopen error [Errno -2] Name or service not known&gt;\nExecuting Postbootstrap module\nERROR: Container does not contain the valid minimum requirement of /bin/sh\n```\n\ni use bootstrap busybox :\n\n```\nBootStrap: busybox\nMirrorURL: file:///home/robert/busybox/busybox-x86_64\n\n%post\n    echo \"Hello from inside the container\"\n\n```\n\nbut i have ash shell not bash",
                "pretext": "[singularityware/singularity] New comment by sazearte on issue <https://github.com/singularityware/singularity/issues/696#issuecomment-304883032|#696: busybox replace ash by bash, it's possible ?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496151972.270316",
        "date": 1496151972270
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/696#issuecomment-304877852|#696: busybox replace ash by bash, it's possible ?>",
                "text": "This may not be exactly what you want, but if you use alpine you get busybox and bash both. Here is my SIngularity build file:\n\n```\nBootstrap: docker\nFrom: alpine:latest\n\n%post\napk update\napk add bash\napk add bash-doc\napk add bash-completion\n```and then to create\n```\nsingularity create alpine.img\nsudo singularity bootstrap alpine.img Singularity\n```\n\nand then you have both!\n\n```\nvanessa@vanessa-ThinkPad-T450s:~/Desktop$ singularity shell alpine.img \nSingularity: Invoking an interactive shell within container...\n\nSingularity alpine.img:~/Desktop&gt; which bash\n/bin/bash\nSingularity alpine.img:~/Desktop&gt; which busybox\n/bin/busybox\nSingularity alpine.img:~/Desktop&gt; \n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/696#issuecomment-304877852|#696: busybox replace ash by bash, it's possible ?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496150894.899809",
        "date": 1496150894899
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#696 busybox replace ash by bash, it's possible ?' https://github.com/singularityware/singularity/issues/696 by sazearte",
                "text": "Hello, i create small image with busybox.\n\nbut my image have ash shell, can i install bash ?\ni try to copy binnary of bash in my image, but when i run /bin/bash command i have this error\n`/bin/sh: /bin/bash: not found`",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/sazearte|sazearte>",
                "title": "#696 busybox replace ash by bash, it's possible ?",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/696",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496140924.560888",
        "date": 1496140924560
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by nielsaka on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-304836209|#674: (How to) Access local file during bootstrap?>",
                "text": "I use the container to run a bunch of scripts that execute statistical simulations, create graphs and tables and then build a paper with the results included. All this is managed by the `makefile`, so in principle the results are reproducible without the singularity container. But some dependencies are not necessarily available at my local HPC cluster and taking care of the computing environment adds another layer of reproducibility (which I guess I don't need to tell you about...), so singularity is great for that. \n\nI thought just having `make` and letting all the computations happen from within the container would be sufficient. I suppose that could be called an on demand compiler. After having managed to install the local package, it now also works like a charm :)\n\nThe separate `makefile` also has the nice effect that simulations that haven't changed don't need to be rerun when building the paper. ",
                "pretext": "[singularityware/singularity] New comment by nielsaka on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-304836209|#674: (How to) Access local file during bootstrap?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496139539.285282",
        "date": 1496139539285
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-304765668|#674: (How to) Access local file during bootstrap?>",
                "text": "hey @nielsaka- why are you running make for the runscript as opposed to handling it during the build? Is the container itself intended to be an on demand compiler or is the make for the packages you are providing within it? If you can give me a sense of what you want the final thing to do, I can try to help with the Singularity file above.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-304765668|#674: (How to) Access local file during bootstrap?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496114421.305832",
        "date": 1496114421305
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#695 Small tweaks to inspect help' https://github.com/singularityware/singularity/pull/695 by vsoch",
                "text": "Fixes #\n\nChanges proposed in this pull request\n\n -\n -\n -\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#695 Small tweaks to inspect help",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/695",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496075889.582155",
        "date": 1496075889582
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "<https://github.com/singularityware/singularity|[singularity]> New branch \"<https://github.com/singularityware/singularity/tree/inspect-tweaks|inspect-tweaks>\" was pushed by vsoch",
                "text": "<https://github.com/singularityware/singularity|[singularity]> New branch \"<https://github.com/singularityware/singularity/tree/inspect-tweaks|inspect-tweaks>\" was pushed by vsoch",
                "id": 1,
                "color": "4183C4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496075837.575353",
        "date": 1496075837575
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by nielsaka on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-304657434|#674: (How to) Access local file during bootstrap?>",
                "text": "I like the discussion above. Something like `%files-pre`, `%install`, `%files-post` would make sense to me.",
                "pretext": "[singularityware/singularity] New comment by nielsaka on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-304657434|#674: (How to) Access local file during bootstrap?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496063322.250033",
        "date": 1496063322250
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by nielsaka on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-304657184|#674: (How to) Access local file during bootstrap?>",
                "text": "Hey, thanks, no, I haven't got any more questions at the moment. \n\nTo answer @gmkurtzer from 19th May, what I now do ist the following. The bootstrap def file looks like this (more or less)\n\n```\nBootStrap: debootstrap\nOSVersion: jessie\nMirrorURL: <http://ftp.de.debian.org/debian/>\n\n%setup\n    cp -R code/package /tmp/\n\n%runscript\n    make\n\n%files\n    # will only be copied after %post is run\n\n%post\n    export LC_ALL=C\n    ...\n    Rscript -e 'install.packages(\"/tmp/package/\", repos = NULL)'\n```\nDuring `%setup` a local package that lies in my local project folder under `code/package/` is copied to `/tmp/`. I like the ability to copy the whole directory using `cp -R`. My understanding is that in sections like `%file`, I would have to zip/tar it first(?) Using `/tmp/` as a location to transfer files to the container seemed the easiest way out. Finally, the very last line installs the package which is written in R. ",
                "pretext": "[singularityware/singularity] New comment by nielsaka on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-304657184|#674: (How to) Access local file during bootstrap?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496063247.234981",
        "date": 1496063247234
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-304546961|#681: singularity supported uris discussion>",
                "image_url": "https://cloud.githubusercontent.com/assets/814322/26532884/3fe22dd0-43c2-11e7-8cda-4e85afc556c3.png",
                "image_width": 1573,
                "image_height": 620,
                "image_bytes": 94747,
                "text": "I'm not sure anymore which types are supported - our publication lists the following:\n\n<https://cloud.githubusercontent.com/assets/814322/26532884/3fe22dd0-43c2-11e7-8cda-4e85afc556c3.png|image>\n\nI think we need to be consistent and support these. @gmkurtzer can you review your plan for which are / will continue to be supported?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-304546961|#681: singularity supported uris discussion>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496013966.919112",
        "date": 1496013966919
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-304543732|#681: singularity supported uris discussion>",
                "text": "Looks like the help doc is now aligned with the function.  Is there a burning need to support html for `import`?  If not, I would just suggest closing this. ",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-304543732|#681: singularity supported uris discussion>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496009621.717530",
        "date": 1496009621717
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/680|#680 bc is a dependency of pull.exe (when pulling from Docker Hub)> by <https://github.com/GodloveD|GodloveD>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/680|#680 bc is a dependency of pull.exe (when pulling from Docker Hub)> by <https://github.com/GodloveD|GodloveD>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496008409.660012",
        "date": 1496008409660
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/680#issuecomment-304542786|#680: bc is a dependency of pull.exe (when pulling from Docker Hub)>",
                "text": "So this is totally fixed now!  Awesome!",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/680#issuecomment-304542786|#680: bc is a dependency of pull.exe (when pulling from Docker Hub)>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1496008409.659996",
        "date": 1496008409659
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/694#issuecomment-304355923|#694: Adding ability to read docker credentials from .docker/config.json>",
                "text": "see my comments at the end of this thread <https://github.com/singularityware/singularity/issues/693> I don't think the docker config file should be first checked, because it's not/*can't* be on most environments where this command would be run. The only other option that I wanted to run by as an addition would be to allow the user to specify the token as an environment variable instead of the docker username and password. You could still decode it, but it might make users more comfortable not having the username/password easily in plain sight.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/694#issuecomment-304355923|#694: Adding ability to read docker credentials from .docker/config.json>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495823270.932392",
        "date": 1495823270932
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/694#issuecomment-304352998|#694: Adding ability to read docker credentials from .docker/config.json>",
                "text": "Heya, is this ready for merge, or should we wait until after the 2.3 release?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/694#issuecomment-304352998|#694: Adding ability to read docker credentials from .docker/config.json>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495822490.744294",
        "date": 1495822490744
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/693#issuecomment-304328571|#693: Registry authentication with .docker/config>",
                "text": "I disagree about use of the docker config - I've been using Docker since 2015 and this is the first time I used `docker login` to generate one. I advocate for the environment variable approach because you have to be specific about setting it, and importantly, it doesn't require the Docker daemon. A user on a shared resource would have to arbitrarily create one or copy from a host, and that's a lot more work than just exporting the environment variable. ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/693#issuecomment-304328571|#693: Registry authentication with .docker/config>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495816425.280440",
        "date": 1495816425280
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by rbrthogan on pull request <https://github.com/singularityware/singularity/pull/694#issuecomment-304224542|#694: Adding ability to read docker credentials from .docker/config.json>",
                "text": "It seems to me that a much more elegant solution would be to just rely on the existence of user credentials in `.docker/config.json`. Right now, for Basic authentication, you have a 2 stage process, with the first simply reproducing data that would be contained in `.docker/config.json` if it exists followed by using this data to get access, and separately have a fall back to read this file anyway. I think that if `.docker/config.json` exists it should be first thing used, otherwise perhaps you could look for env variables, construct the first token, etc. This way, the api will execute entirely the same code, independent of registry Auth, as long as the correct credentials are present.\n\nI personally don't love the env variable solution because it requires me to stored my password as plain text which is irksome. Perhaps you don't want to rely on the existence of `.docker/config.json` because it is generated by the docker daemon. I do think, however, that most users who often use private docker registries (either with Basic Authentication or OAuth) likely use the docker daemon to handle credentials for them. In any case, the env variable solution can always be there as fall back if `.docker/config.json` doesn't exist.\n\nI hope this isn't just my personal bias speaking, I would be interested to hear community feedback.",
                "pretext": "[singularityware/singularity] New comment by rbrthogan on pull request <https://github.com/singularityware/singularity/pull/694#issuecomment-304224542|#694: Adding ability to read docker credentials from .docker/config.json>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495787557.644644",
        "date": 1495787557644
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by rbrthogan on issue <https://github.com/singularityware/singularity/issues/693#issuecomment-304224498|#693: Registry authentication with .docker/config>",
                "text": "thanks for the quick work @vsoch !\n\nI'm not sure I understand your concern about hard coding the `.docker/config.json` stuff though. For sure, singularity is more than just a container on top of Docker, but the changes we are proposing are specifically related the docker api client which is already in the project. \n\nI have some comments about the solution which I will repost on the PR to continue discussion there:\n\nIt seems to me that a much more elegant solution would be to just rely on the existence of user credentials in `.docker/config.json`. Right now, for Basic authentication, you have a 2 stage process, with the first simply reproducing data that would be contained in `.docker/config.json` if it exists followed by using this data to get access, and separately have a fall back to read this file anyway. I think that if `.docker/config.json` exists it should be first thing used, otherwise perhaps you could look for env variables, construct the first token, etc. This way, the api will execute entirely the same code, independent of registry Auth, as long as the correct credentials are present.\n\nI personally don't love the env variable solution because it requires me to stored my password as plain text which is irksome. Perhaps you don't want to rely on the existence of `.docker/config.json` because it is generated by the docker daemon. I do think, however, that most users who often use private docker registries (either with Basic Authentication or OAuth) likely use the docker daemon to handle credentials for them. In any case, the env variable solution can always be there as fall back if `.docker/config.json` doesn't exist.\n\nI hope this isn't just my personal bias speaking, I would be interested to hear community feedback.",
                "pretext": "[singularityware/singularity] New comment by rbrthogan on issue <https://github.com/singularityware/singularity/issues/693#issuecomment-304224498|#693: Registry authentication with .docker/config>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495787546.643069",
        "date": 1495787546643
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-304173968|#670: Problem building RPM from Git source>",
                "text": "Ahh, good thinking!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-304173968|#670: Problem building RPM from Git source>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495765490.474758",
        "date": 1495765490474
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#694 Adding ability to read docker credentials from .docker/config.json' https://github.com/singularityware/singularity/pull/694 by vsoch",
                "text": "Fixes #693 \n\nChanges proposed in this pull request\n\n• This PR adds a function to the docker api client that can read in the config token from the user's config.json, which is located in `/.docker/config.json`, and generated when a user does docker login. I was first against adding this additional use case, but I think it's reasonable to minimally look for this as an option given that the authentication has failed, and the user has not provided a credential - for the subset of users that also use Docker, it will mean not having to export environment variables.\n     • I also wrote a function to get the registry an actual function (since we use it many times), and with this more properly defined the `USERHOME` variable in defaults.py\n     • Adding a test for this.\n\nThe config.json seems to store a base64 credential that is indexed by the registry version, and as far as I know, it works to use a version 1 credential for version 2 registry (this is how I tested). We should keep our eye on this in case there are situations when one credential doesn't work for the other. However, given that the user has gotten to the point, they would have just hit a sys.exit(1) anyway, so it doesn't hurt to try!\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#694 Adding ability to read docker credentials from .docker/config.json",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/694",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495758385.805658",
        "date": 1495758385805
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/693#issuecomment-304158293|#693: Registry authentication with .docker/config>",
                "text": "okay, I just figured out a way to do it as a \"last call resort\" and will link the PR soon.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/693#issuecomment-304158293|#693: Registry authentication with .docker/config>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495757994.766212",
        "date": 1495757994766
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/693#issuecomment-304155361|#693: Registry authentication with .docker/config>",
                "text": "I thought more about this - I don't like the idea of automatically using any docker config found in the user's home - I think since Singularity is not just a container to carry around Docker, having this essentially hard coded in the software's functionality isn't a direction I like. The ability to specify a `--token` would also coincide with hard coding something docker in. Is it really a hassle to export the environment variables? That gives support for Docker, it's something you do intentionally, but it doesn't add extra variables/options to the core user interface/interaction of Singularity. Let me know your thoughts - and definitely if you have idea for implementation give it a go and we can discuss!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/693#issuecomment-304155361|#693: Registry authentication with .docker/config>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495756653.619559",
        "date": 1495756653619
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/693#issuecomment-304111220|#693: Registry authentication with .docker/config>",
                "text": "hey @rbrthogan  - I just tested this out (comparing the value in the `.docker/config.json` with the one we are generating) and they are totally the same! What I can do is have this be a fallback for a user credential. Something like:\n\n• upon init, if username and password are provided via environment, use that\n• if no username and password, check for docker/config.json, and use that instead\n\nThis is a reasonable addition, and I think worth adding if it benefits a ton of users (that prefer using docker login instead of exporting things to the environment). Let me give it some tests and I'll put in a PR for us to look over.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/693#issuecomment-304111220|#693: Registry authentication with .docker/config>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495743107.165725",
        "date": 1495743107165
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by rbrthogan on issue <https://github.com/singularityware/singularity/issues/693#issuecomment-304108165|#693: Registry authentication with .docker/config>",
                "text": "Ah ok, cool. In that case, maybe we can just extend the current approach to\nallow the user to pass the fully formed token explicitly, i.e., add a\n'--token' field to env variable that overrides the token creation you are\ndoing and just gets passed directly.\n\nDoes that make sense? I can fork and test it out when I'm back in work in\nthe morning and make a PR if it works.\n\nOn May 25, 2017 8:06 PM, \"Vanessa Sochat\" <mailto:notifications@github.com|notifications@github.com> wrote:\n\n&gt; hey @rbrthogan <https://github.com/rbrthogan> ! We start with the\n&gt; username and password (likely from the environment as\n&gt; SINGULARITY_DOCKER_USERNAME and SINGULARITY_DOCKER_PASSWORD and then put\n&gt; them together with a : and encode with base64 to turn into the initial\n&gt; token, eg:\n&gt; \n&gt; def basic_auth_header(username, password):\n&gt;     '''basic_auth_header will return a base64 encoded header object to\n&gt;     generate a token\n&gt;     :param username: the username\n&gt;     :param password: the password\n&gt;     '''\n&gt;     s = \"%s:%s\" % (username, password)\n&gt;     if sys.version_info[0] &gt;= 3:\n&gt;         s = bytes(s, 'utf-8')\n&gt;         credentials = base64.b64encode(s).decode('utf-8')\n&gt;     else:\n&gt;         credentials = base64.b64encode(s)\n&gt;     auth = {\"Authorization\": \"Basic %s\" % credentials}\n&gt;     return auth\n&gt; \n&gt; This auth object, which is part of the header, is then handed to our\n&gt; client that makes all the requests for docker manifests (eg, metadata,\n&gt; layers, etc.) Given that no authentication is needed, it just works! If\n&gt; authentication is needed then the server will respond with a 401, and then\n&gt; we look at the Www-Authenticate header to get the specific scope,\n&gt; registry, and repo that we need to ask permissions for. Then we update that\n&gt; in the header, and issue the request again, eg:\n&gt; \n&gt; self.token_url = \"%s?service=%s&amp;expires_in=9000&amp;scope=%s\" %(realm,service,scope)\n&gt; \n&gt; and if all goes well, this responds with a much (longer) token that will\n&gt; do the authentication, and we update the client headers with it:\n&gt; \n&gt; token = json.loads(response)[\"token\"]\n&gt; token = {\"Authorization\": \"Bearer %s\" %(token) }\n&gt; \n&gt; It looks like the ~/.docker/config.json file is specifically when you log\n&gt; into the docker daemon with \"docker login\" - funny enough I've been using\n&gt; Docker for years (meaning having the daemon locally) and never actually\n&gt; logged in. I'm not sure I see the dire need to add a \"sniff\" for this\n&gt; config, because we have taken an approach that doesn't have any dependency\n&gt; or integration with their daemon (just using the back end APIs in the same\n&gt; way) @gmkurtzer <https://github.com/gmkurtzer> do you have thoughts on\n&gt; this? @rbrthogan <https://github.com/rbrthogan> what would be the\n&gt; pros/benefits of supporting this specific config over just using the\n&gt; environment variables?\n&gt; \n&gt; —\n&gt; You are receiving this because you were mentioned.\n&gt; Reply to this email directly, view it on GitHub\n&gt; <https://github.com/singularityware/singularity/issues/693#issuecomment-304096260>,\n&gt; or mute the thread\n&gt; <https://github.com/notifications/unsubscribe-auth/AIyaz-aIssLv3ewqBLCLGGS9OvJL_WiSks5r9dFDgaJpZM4Nmf47>\n&gt; .",
                "pretext": "[singularityware/singularity] New comment by rbrthogan on issue <https://github.com/singularityware/singularity/issues/693#issuecomment-304108165|#693: Registry authentication with .docker/config>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495742369.969598",
        "date": 1495742369969
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/693#issuecomment-304096260|#693: Registry authentication with .docker/config>",
                "text": "hey @rbrthogan ! We start with the username and password (likely from the environment as `SINGULARITY_DOCKER_USERNAME` and `SINGULARITY_DOCKER_PASSWORD` and then put them together with a `:` and encode with base64 to turn into the initial token, eg:\n\n```def basic_auth_header(username, password):\n    '''basic_auth_header will return a base64 encoded header object to\n    generate a token\n    :param username: the username\n    :param password: the password\n    '''\n    s = \"%s:%s\" % (username, password)\n    if sys.version_info[0] &gt;= 3:\n        s = bytes(s, 'utf-8')\n        credentials = base64.b64encode(s).decode('utf-8')\n    else:\n        credentials = base64.b64encode(s)\n    auth = {\"Authorization\": \"Basic %s\" % credentials}\n    return auth\n```\n\nThis auth object, which is part of the header, is then handed to our client that makes all the requests for docker manifests (eg, metadata, layers, etc.) Given that no authentication is needed, it just works! If authentication is needed then the server will respond with a 401, and then we look at the `Www-Authenticate` header to get the specific scope, registry, and repo that we need to ask permissions for. Then we update that in the header, and issue the request again, eg:\n\n```self.token_url = \"%s?service=%s&amp;expires_in=9000&amp;scope=%s\" %(realm,service,scope)\n```\n\nand if all goes well, this responds with a much (longer) token that will do the authentication, and we update the client headers with it:\n\n```token = json.loads(response)[\"token\"]\ntoken = {\"Authorization\": \"Bearer %s\" %(token) }\n```\nIt looks like the ~/.docker/config.json file is specifically when you log into the docker daemon with \"docker login\" - funny enough I've been using Docker for years (meaning having the daemon locally) and never actually logged in. I'm not sure I see the dire need to add a \"sniff\" for this config, because we have taken an approach that doesn't have any dependency or integration with their daemon (just using the back end APIs in the same way) @gmkurtzer do you have thoughts on this? @rbrthogan what would be the pros/benefits of supporting this specific config over just using the environment variables?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/693#issuecomment-304096260|#693: Registry authentication with .docker/config>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495739200.168395",
        "date": 1495739200168
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by rbrthogan on issue <https://github.com/singularityware/singularity/issues/693#issuecomment-304080820|#693: Registry authentication with .docker/config>",
                "text": ".docker/config.json simply stores your credentials (\n<https://docs.docker.com/engine/reference/commandline/login/>)\n\nSome registries us OAuth so they require you send an authorisation header\nwith the request. <https://docs.docker.com/registry/spec/auth/token/>\n\nAs far as I'm aware docker pull handles all that as long as your registry\nis configured correctly and it just looks in .docker/config.json for\ncredentials. For a user point of view docker pull works just the same.\n\nI'm not sure exactly how you are handling this right now with the\nenvironment variables, so it might be more complicated than I'm aware.\n\nFYI: I'm using the stups framework <https://github.com/zalando-stups,> so\npierone is the registry I'm talking about and has functionality for\nrefreshing my tokens. I don't think that this issue is specific to Pierone\nhowever, should apply to any registry with OAuth flow, but just letting you\nknow for some context.\n\nSorry I can't be more helpful, hopefully someone more knowledgeable will\nchime in.\n\nOn May 25, 2017 6:15 PM, \"Vanessa Sochat\" <mailto:notifications@github.com|notifications@github.com> wrote:\n\n&gt; OAuth is a bit of a different flow, so I'm not sure how it would fit in\n&gt; nicely. Can you point me to more info on the docker config? That definitely\n&gt; seems reasonable to try!\n&gt; \n&gt; —\n&gt; You are receiving this because you authored the thread.\n&gt; Reply to this email directly, view it on GitHub\n&gt; <https://github.com/singularityware/singularity/issues/693#issuecomment-304067226>,\n&gt; or mute the thread\n&gt; <https://github.com/notifications/unsubscribe-auth/AIyaz__GQTEDWRTJ_RfbZXNbIx3H7pFkks5r9bcTgaJpZM4Nmf47>\n&gt; .",
                "pretext": "[singularityware/singularity] New comment by rbrthogan on issue <https://github.com/singularityware/singularity/issues/693#issuecomment-304080820|#693: Registry authentication with .docker/config>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495735617.179289",
        "date": 1495735617179
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/693#issuecomment-304067226|#693: Registry authentication with .docker/config>",
                "text": "OAuth is a bit of a different flow, so I'm not sure how it would fit in nicely. Can you point me to more info on the docker config? That definitely seems reasonable to try!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/693#issuecomment-304067226|#693: Registry authentication with .docker/config>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495732499.318287",
        "date": 1495732499318
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#693 Registry authentication with .docker/config' https://github.com/singularityware/singularity/issues/693 by rbrthogan",
                "text": "As far as I am aware it is currently not possible to authenticate with docker registry that use OAuth authentication, with only basic authentication being supported. Is this correct?\n\nIs it possible to read authorisation tokens from .docker/config file ?",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/rbrthogan|rbrthogan>",
                "title": "#693 Registry authentication with .docker/config",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/693",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495724909.192422",
        "date": 1495724909192
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by verdurin on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-304032071|#670: Problem building RPM from Git source>",
                "text": "It's GPFS.\n\nI can try on the local filesystem, yes.",
                "pretext": "[singularityware/singularity] New comment by verdurin on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-304032071|#670: Problem building RPM from Git source>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495724347.021645",
        "date": 1495724347021
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by truatpasteurdotfr on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-304030533|#670: Problem building RPM from Git source>",
                "text": "```[tru@hpe840g1-1 ~]$ sudo useradd -u 160000000 bigui\n[tru@hpe840g1-1 ~]$ sudo su - biguid\nAttempting to create directory /home/biguid/perl5\n[biguid@hpe840g1-1 ~]$ touch testfile\n[biguid@hpe840g1-1 ~]$ tar --posix -cf test.tar testfile\n[biguid@hpe840g1-1 ~]$ echo $?\n0\n[biguid@hpe840g1-1 ~]$ id\nuid=160000000(biguid) gid=2768(biguid) groups=2768(biguid) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023\n[biguid@hpe840g1-1 ~]$ rpm -q tar\ntar-1.26-31.el7.x86_64\n```\n\nmaybe not a tar issue, what is the underneath filesystem? Can you work on a local filesystem ie /tmp (etx4|xfs) or /dev/shm (tmpfs)",
                "pretext": "[singularityware/singularity] New comment by truatpasteurdotfr on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-304030533|#670: Problem building RPM from Git source>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495724016.924297",
        "date": 1495724016924
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/682#issuecomment-303874050|#682: apps executed inside singularity container doesn't use the same timezone as the host>",
                "text": "Haha. You know, if the earth were flat we wouldn't have these problems! Oh wait, maybe we would (<http://theflatearthsociety.org/home/>).... But I too digress.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/682#issuecomment-303874050|#682: apps executed inside singularity container doesn't use the same timezone as the host>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495666239.370613",
        "date": 1495666239370
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/682#issuecomment-303872858|#682: apps executed inside singularity container doesn't use the same timezone as the host>",
                "text": "Timezone? Time? My computer thinks it's 3 hours in the future in one browser but not the other, and I'm ok with this. ;) Non productive comment, yes, but couldn't help myself :wink: ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/682#issuecomment-303872858|#682: apps executed inside singularity container doesn't use the same timezone as the host>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495665863.315403",
        "date": 1495665863315
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/260#issuecomment-303871020|#260: Implemented ability for config file to specify allowable bind directories>",
                "text": "This won't make it into 2.3, and if we end up rebasing this to 2.4, then we are going to need to rebase and then reimplement. Closing (for now). ",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/260#issuecomment-303871020|#260: Implemented ability for config file to specify allowable bind directories>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495665259.226190",
        "date": 1495665259226
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/260|#260 Implemented ability for config file to specify allowable bind directories> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/260|#260 Implemented ability for config file to specify allowable bind directories> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495665258.226064",
        "date": 1495665258226
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/424|#424 Support for overriding variables inside the container at runtime> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/424|#424 Support for overriding variables inside the container at runtime> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495665105.202661",
        "date": 1495665105202
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/424#issuecomment-303870566|#424: Support for overriding variables inside the container at runtime>",
                "text": "This has been implemented in the development branch by using the environment variable syntax `SINGULARITYENV_` where everything post string will be transposed into the container. To unset a variable simply make it equal a zero length string.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/424#issuecomment-303870566|#424: Support for overriding variables inside the container at runtime>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495665105.202613",
        "date": 1495665105202
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/475|#475 Add/opensuse> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/475|#475 Add/opensuse> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495665016.187561",
        "date": 1495665016187
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/475#issuecomment-303870270|#475: Add/opensuse>",
                "text": "This has been implemented via #688. Closing.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/475#issuecomment-303870270|#475: Add/opensuse>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495665015.187512",
        "date": 1495665015187
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/682#issuecomment-303864433|#682: apps executed inside singularity container doesn't use the same timezone as the host>",
                "text": "It really shouldn't but I thought maybe if the timezone files were of different formats that might explain it... But alas, nope. I'm confused and I can't seem to replicate.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/682#issuecomment-303864433|#682: apps executed inside singularity container doesn't use the same timezone as the host>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495663353.902939",
        "date": 1495663353902
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/690|#690 `--contain` help is not very clear> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/690|#690 `--contain` help is not very clear> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495663262.884731",
        "date": 1495663262884
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/690#issuecomment-303864077|#690: `--contain` help is not very clear>",
                "text": "This has been merged, thank you!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/690#issuecomment-303864077|#690: `--contain` help is not very clear>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495663259.884044",
        "date": 1495663259884
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/692#issuecomment-303864007|#692: Development - change `--contain` help message>",
                "text": "Thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/692#issuecomment-303864007|#692: Development - change `--contain` help message>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495663239.879778",
        "date": 1495663239879
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/692|#692 Development - change `--contain` help message> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/692|#692 Development - change `--contain` help message> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495663234.878767",
        "date": 1495663234878
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by verdurin on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-303860040|#670: Problem building RPM from Git source>",
                "text": "```\n\n*type tar &amp;&amp; rpm -q tar*\n\ntar is /bin/tar\ntar-1.26-29.el7.x86_64\n```",
                "pretext": "[singularityware/singularity] New comment by verdurin on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-303860040|#670: Problem building RPM from Git source>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495662133.655375",
        "date": 1495662133655
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by pescobar on issue <https://github.com/singularityware/singularity/issues/682#issuecomment-303855552|#682: apps executed inside singularity container doesn't use the same timezone as the host>",
                "text": "Yes. I am running centos 7.3 in both the host and the container. Does this makes any difference?",
                "pretext": "[singularityware/singularity] New comment by pescobar on issue <https://github.com/singularityware/singularity/issues/682#issuecomment-303855552|#682: apps executed inside singularity container doesn't use the same timezone as the host>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495660936.394477",
        "date": 1495660936394
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/687#issuecomment-303855266|#687: Overlay error with SUSE>",
                "text": "Haha, nice try @crbaird, but those are just the defaults and are configurables! lol\n\nGlad it sounds like it is working out! WAHOO!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/687#issuecomment-303855266|#687: Overlay error with SUSE>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495660862.377932",
        "date": 1495660862377
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/682#issuecomment-303854451|#682: apps executed inside singularity container doesn't use the same timezone as the host>",
                "text": "@pescobar I am just curious, are you running the same distribution within the container as on the host? If not, what happens if you do? Is it the same?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/682#issuecomment-303854451|#682: apps executed inside singularity container doesn't use the same timezone as the host>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495660673.334606",
        "date": 1495660673334
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/689#issuecomment-303853644|#689: adding changes to inspect.py>",
                "text": "Looks good, thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/689#issuecomment-303853644|#689: adding changes to inspect.py>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495660472.287502",
        "date": 1495660472287
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/689|#689 adding changes to inspect.py> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/689|#689 adding changes to inspect.py> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495660464.285715",
        "date": 1495660464285
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#692 Development' https://github.com/singularityware/singularity/pull/692 by remyd1",
                "text": "Fixes #690 \n\nChanges proposed in this pull request\n\nIt changes the `--contain` help message to:\n```    -c/--contain        This option disables the sharing of filesystems on\n                        your host (e.g. /dev, $HOME and /tmp).\n```\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/remyd1|remyd1>",
                "title": "#692 Development",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/692",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495657320.478215",
        "date": 1495657320478
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by remyd1 on pull request <https://github.com/singularityware/singularity/pull/691#issuecomment-303839988|#691: Merge pull request #1 from singularityware/master>",
                "text": "Bad branchs, sorry...",
                "pretext": "[singularityware/singularity] New comment by remyd1 on pull request <https://github.com/singularityware/singularity/pull/691#issuecomment-303839988|#691: Merge pull request #1 from singularityware/master>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495657217.450774",
        "date": 1495657217450
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/691|#691 Merge pull request #1 from singularityware/master> by <https://github.com/remyd1|remyd1>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/691|#691 Merge pull request #1 from singularityware/master> by <https://github.com/remyd1|remyd1>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495657195.444734",
        "date": 1495657195444
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#691 Merge pull request #1 from singularityware/master' https://github.com/singularityware/singularity/pull/691 by remyd1",
                "text": "Merging master\n\nFixes #690 \n\nChanges proposed in this pull request\n\nA new help message for `--contain`\n\n```    -c/--contain        This option disables the sharing of filesystems on\n                        your host (e.g. /dev, $HOME and /tmp).\n```\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/remyd1|remyd1>",
                "title": "#691 Merge pull request #1 from singularityware/master",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/691",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495657171.438388",
        "date": 1495657171438
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#690 `--contain` help is not very clear' https://github.com/singularityware/singularity/issues/690 by remyd1",
                "text": "The help message for `--contain` message is:\n\n```    -c/--contain        This option disables the automatic sharing of writable\n                        filesystems on your host (e.g. $HOME and /tmp).\n```\n\nAlthough _/dev_ and _/proc_ for example are also not shared.\n\nPR will follow.\n\nRémy",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/remyd1|remyd1>",
                "title": "#690 `--contain` help is not very clear",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/690",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495656930.375681",
        "date": 1495656930375
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by truatpasteurdotfr on issue <https://github.com/singularityware/singularity/issues/660#issuecomment-303827327|#660: compiling singularity on RHEL 5>",
                "text": "on the bright side you still can run CentOS-6 container on CentOS-5",
                "pretext": "[singularityware/singularity] New comment by truatpasteurdotfr on issue <https://github.com/singularityware/singularity/issues/660#issuecomment-303827327|#660: compiling singularity on RHEL 5>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495654184.654781",
        "date": 1495654184654
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by truatpasteurdotfr on issue <https://github.com/singularityware/singularity/issues/660#issuecomment-303825243|#660: compiling singularity on RHEL 5>",
                "text": "and you can't run a Singularity 2.2 CentOS-7 container created on CentOS-7 on CentOS-5 using singularity 2.1.2 (although you can run the singularity busybox toy model created on Singularity 2.2 on CentOS-7 on the CentOS-5 with singularity 2.1.2)",
                "pretext": "[singularityware/singularity] New comment by truatpasteurdotfr on issue <https://github.com/singularityware/singularity/issues/660#issuecomment-303825243|#660: compiling singularity on RHEL 5>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495653679.523423",
        "date": 1495653679523
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by truatpasteurdotfr on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-303818153|#670: Problem building RPM from Git source>",
                "text": "@verdurin can you check where your \"tar\" is from?\n```type tar &amp;&amp; rpm -q tar\n```\nCentOS-7 version is tar-1.26-31.el7.x86_64 with the following changelog from 7.2:\n```\n• Mon Jun 20 2016 Pavel Raiskup <mailto:praiskup@redhat.com|praiskup@redhat.com> - 1.26-31\n• avoid double free in selinux code (rhbz#1347396)\n• Thu Jun 04 2015 Pavel Raiskup <mailto:praiskup@redhat.com|praiskup@redhat.com> - 1.26-30\n• don't mistakenly set default ACLs (#1220890)\n• Fri Jan 24 2014 Daniel Mach <mailto:dmach@redhat.com|dmach@redhat.com> - 2:1.26-29\n• Mass rebuild 2014-01-24\n     ```",
                "pretext": "[singularityware/singularity] New comment by truatpasteurdotfr on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-303818153|#670: Problem building RPM from Git source>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495652023.072102",
        "date": 1495652023072
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by truatpasteurdotfr on issue <https://github.com/singularityware/singularity/issues/660#issuecomment-303814364|#660: compiling singularity on RHEL 5>",
                "text": "• CentOS-5 is now EOL'ed, as you know.\n• CentOS-5 rpm can not handle CentOS-7 rpms.\n• Even if you could bootstrap a CentOS-7 container, you would faild trying to run it on CentOS-5...\n     ```[tru@sillage singularity]$ ./Centos-7+yum.img\n     WARNING: No Singularity runscript found, launching 'shell'\n     FATAL: kernel too old\n     ```\n• CentOS-5 can only run singularity 2.1.2 afaik (so no docker import etc...)",
                "pretext": "[singularityware/singularity] New comment by truatpasteurdotfr on issue <https://github.com/singularityware/singularity/issues/660#issuecomment-303814364|#660: compiling singularity on RHEL 5>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495651179.831760",
        "date": 1495651179831
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by crbaird on issue <https://github.com/singularityware/singularity/issues/687#issuecomment-303736098|#687: Overlay error with SUSE>",
                "text": "Thanks for looking, @craiggardner. We're building Leap 42.2 containers under SLE SP2 hosts. The issue seems to be related to the fact that our hosts are themselves running stateless warewulf images. Adding overlay to warewulf's bootstrap.conf seems to be getting us further. So we may be able to blame @gmkurtzer after all.",
                "pretext": "[singularityware/singularity] New comment by crbaird on issue <https://github.com/singularityware/singularity/issues/687#issuecomment-303736098|#687: Overlay error with SUSE>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495635144.981812",
        "date": 1495635144981
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by pescobar on issue <https://github.com/singularityware/singularity/issues/682#issuecomment-303643492|#682: apps executed inside singularity container doesn't use the same timezone as the host>",
                "text": "```\n[root@login20 pipeline2]# hwclock\nWed 24 May 2017 09:36:41 AM CEST  -0.457992 seconds\n\n[root@login20 pipeline2]# hwclock --localtime\nWed 24 May 2017 07:36:53 AM CEST  -0.391080 seconds\n\n[root@login20 pipeline2]# date\nWed May 24 09:37:06 CEST 2017\n```",
                "pretext": "[singularityware/singularity] New comment by pescobar on issue <https://github.com/singularityware/singularity/issues/682#issuecomment-303643492|#682: apps executed inside singularity container doesn't use the same timezone as the host>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495611483.321253",
        "date": 1495611483321
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#689 adding changes to inspect.py' https://github.com/singularityware/singularity/pull/689 by vsoch",
                "image_url": "https://asciinema.org/a/122013.png",
                "image_width": 423,
                "image_height": 250,
                "image_bytes": 35724,
                "text": "This PR will add more robust parsing of the different environment, labels, and definition files using the new `--inspect` command. A few notes!\n\n• Instead of typing everything out, please preview the functionality here <https://asciinema.org/a/122013?speed=3>\n• I wrote up docs to explain the back end python API, here: <https://github.com/vsoch/singularity/blob/development/libexec/python/README.md#inspect>\n• It looks like there are some merge conflicts that need to be resolved. I did change around some current code, so this was expected.\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#689 adding changes to inspect.py",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/689",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495598334.675029",
        "date": 1495598334675
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by craiggardner on issue <https://github.com/singularityware/singularity/issues/687#issuecomment-303602360|#687: Overlay error with SUSE>",
                "text": "@cbaird, I'm certainly not a kernel expert, and I've only been looking into this issue superficially so far.  But as long as you're using SLES12 (any of the releases, from SP0 to SP2), you're using kernel 4.4 that should allow for the overlayfs.  But SLES provides overlayfs as a kernel module.  Possibly the simple solution to this particular problem is to load the kmodule.  I'll lurk some more, see if I can give you more info.  In the mean time, would you please let me know which SLES or openSUSE release you're using?",
                "pretext": "[singularityware/singularity] New comment by craiggardner on issue <https://github.com/singularityware/singularity/issues/687#issuecomment-303602360|#687: Overlay error with SUSE>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495593829.294612",
        "date": 1495593829294
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/683|#683 shell command not working with .tar.gz> by <https://github.com/GodloveD|GodloveD>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/683|#683 shell command not working with .tar.gz> by <https://github.com/GodloveD|GodloveD>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495588351.766153",
        "date": 1495588351766
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/683#issuecomment-303588062|#683: shell command not working with .tar.gz>",
                "text": "Thanks for the clarification.  Closing.",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/683#issuecomment-303588062|#683: shell command not working with .tar.gz>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495588349.765983",
        "date": 1495588349765
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/683#issuecomment-303558857|#683: shell command not working with .tar.gz>",
                "text": "okay, then the above is perfecto. The example @GodloveD gave shouldn't work. And I added functions in singularity python to do this, so with that next release we can direct users to that.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/683#issuecomment-303558857|#683: shell command not working with .tar.gz>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495580692.871915",
        "date": 1495580692871
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/683#issuecomment-303558251|#683: shell command not working with .tar.gz>",
                "text": "I don't have a plan to. an archive of a single file and then compression of that image seems a bit like overkill. ;)",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/683#issuecomment-303558251|#683: shell command not working with .tar.gz>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495580617.861971",
        "date": 1495580617861
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/683#issuecomment-303557752|#683: shell command not working with .tar.gz>",
                "text": "Are we going to support .img.tar.gz too?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/683#issuecomment-303557752|#683: shell command not working with .tar.gz>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495580570.855381",
        "date": 1495580570855
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/677#issuecomment-303555820|#677: Tweaks to Development as we test/ go over docs>",
                "text": "Sweet!! Thanks dude :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/677#issuecomment-303555820|#677: Tweaks to Development as we test/ go over docs>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495580195.800453",
        "date": 1495580195800
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/687#issuecomment-303555673|#687: Overlay error with SUSE>",
                "text": "Yeah, this just doesn't seem to be supported in SLES. I spoke with @craiggardner and he mentioned this is due to security precaution by SuSE. We are still working through this, and we might come with a better solution, but, this won't be an immediate fix. For the time being, overlayfs is an unsupported feature on SLES.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/687#issuecomment-303555673|#687: Overlay error with SUSE>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495580141.792807",
        "date": 1495580141792
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/684#issuecomment-303554932|#684: singularity exec -e seems broken>",
                "text": "Haha, I am literally LOL'ing right now. Seriously, outloud. People are going to think I'm weird.\n\nThanks everyone!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/684#issuecomment-303554932|#684: singularity exec -e seems broken>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495579885.756453",
        "date": 1495579885756
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/682#issuecomment-303554709|#682: apps executed inside singularity container doesn't use the same timezone as the host>",
                "text": "Hi @pescobar What is the output of:\n\n```$ sudo hwclock\n$ sudo hwclock --localtime\n$ date\n```\n\nReturn on your host system?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/682#issuecomment-303554709|#682: apps executed inside singularity container doesn't use the same timezone as the host>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495579804.744655",
        "date": 1495579804744
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/688|#688 Support SLE/openSUSE with zypper> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/688|#688 Support SLE/openSUSE with zypper> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495579679.727615",
        "date": 1495579679727
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/688#issuecomment-303554324|#688: Support SLE/openSUSE with zypper>",
                "text": "This looks great, thank you @crbaird!\n\n@vsoch Yes, you are right. At some point we should have tests for each of our examples, but that is a bit hard to do via CI (unless we also spin up a SLES/OpenSuSE environment).\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/688#issuecomment-303554324|#688: Support SLE/openSUSE with zypper>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495579676.727134",
        "date": 1495579676727
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/683#issuecomment-303553889|#683: shell command not working with .tar.gz>",
                "text": "We could be more specific about the format of tar.gz that would be expected in the help file... Is this clearer:\n\n```    *.tar*              Tar archives are exploded to a temporary directory and\n                        run within that directory (and cleaned up after). The\n                        contents of the archive is a root file system with root\n                        being in the current directory. Compression suffixes as \n                        '.gz' and '.bz2' are supported.\n```",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/683#issuecomment-303553889|#683: shell command not working with .tar.gz>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495579505.703295",
        "date": 1495579505703
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/685|#685 help doc states that images are writable by default and that /bin/sh is default shell> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/685|#685 help doc states that images are writable by default and that /bin/sh is default shell> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495579351.680786",
        "date": 1495579351680
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/685#issuecomment-303553432|#685: help doc states that images are writable by default and that /bin/sh is default shell>",
                "text": "This was fixed by @vsoch, closing. Thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/685#issuecomment-303553432|#685: help doc states that images are writable by default and that /bin/sh is default shell>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495579350.680743",
        "date": 1495579350680
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/677#issuecomment-303553177|#677: Tweaks to Development as we test/ go over docs>",
                "text": "Merged and updated to use the mount backend (instead of action) for inspect.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/677#issuecomment-303553177|#677: Tweaks to Development as we test/ go over docs>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495579268.668636",
        "date": 1495579268668
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/677|#677 Tweaks to Development as we test/ go over docs> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/677|#677 Tweaks to Development as we test/ go over docs> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495579230.663076",
        "date": 1495579230663
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/688#issuecomment-303517142|#688: Support SLE/openSUSE with zypper>",
                "text": "awesome! Hey @gmkurtzer should we have a test proper, or just manual?",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/688#issuecomment-303517142|#688: Support SLE/openSUSE with zypper>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495570146.655928",
        "date": 1495570146655
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by crbaird on issue <https://github.com/singularityware/singularity/issues/687#issuecomment-303379695|#687: Overlay error with SUSE>",
                "text": "Thanks @vsoch. Zypper is SUSE's yum. I've submitted PR #688  for your consideration. Please let me know how I can help further.",
                "pretext": "[singularityware/singularity] New comment by crbaird on issue <https://github.com/singularityware/singularity/issues/687#issuecomment-303379695|#687: Overlay error with SUSE>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495541841.554218",
        "date": 1495541841554
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/684|#684 singularity exec -e seems broken> by <https://github.com/GodloveD|GodloveD>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/684|#684 singularity exec -e seems broken> by <https://github.com/GodloveD|GodloveD>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495534975.449660",
        "date": 1495534975449
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/684#issuecomment-303356397|#684: singularity exec -e seems broken>",
                "text": "Of course!  How silly of me.  Thanks for setting me straight.  Closing.  ",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/684#issuecomment-303356397|#684: singularity exec -e seems broken>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495534971.448991",
        "date": 1495534971448
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/686|#686 add --nv to exec and --run documentation> by <https://github.com/GodloveD|GodloveD>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/686|#686 add --nv to exec and --run documentation> by <https://github.com/GodloveD|GodloveD>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495534562.382330",
        "date": 1495534562382
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/686#issuecomment-303354933|#686: add --nv to exec and --run documentation>",
                "text": "I must have been out of date.  Thanks!  closing!",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/686#issuecomment-303354933|#686: add --nv to exec and --run documentation>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495534556.381344",
        "date": 1495534556381
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by pescobar on issue <https://github.com/singularityware/singularity/issues/682#issuecomment-303352328|#682: apps executed inside singularity container doesn't use the same timezone as the host>",
                "text": "Hi @gmkurtzer \n\nThis doesn't solve the problem for me.\n\n```\n[root@login20 pipeline2]# ls -la /etc/localtime \nlrwxrwxrwx. 1 root root 35 Mar 13 17:10 /etc/localtime -&gt; ../usr/share/zoneinfo/Europe/Zurich\n\n[root@login20 pipeline2]# date\nTue May 23 12:02:09 CEST 2017\n\n[root@login20 pipeline2]# singularity shell -B /etc/localtime pipeline2.img\nSingularity: Invoking an interactive shell within container...\n\nSingularity.pipeline2.img&gt; date\nTue May 23 10:02:22 CEST 2017\n\nSingularity.pipeline2.img&gt; ls -la /etc/localtime \nlrwxrwxrwx 1 root root 25 Dec 14 14:59 /etc/localtime -&gt; ../usr/share/zoneinfo/UTC\n```\n\nI did the tests with the latest release `singularity-2.2.1` installed in centos7.3 host. The tests are executed as root",
                "pretext": "[singularityware/singularity] New comment by pescobar on issue <https://github.com/singularityware/singularity/issues/682#issuecomment-303352328|#682: apps executed inside singularity container doesn't use the same timezone as the host>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495533869.264292",
        "date": 1495533869264
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/684#issuecomment-303305828|#684: singularity exec -e seems broken>",
                "text": "oh my gosh, the cow didn't say anything at all!! :scream: ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/684#issuecomment-303305828|#684: singularity exec -e seems broken>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495522042.222342",
        "date": 1495522042222
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by dexter2cz on issue <https://github.com/singularityware/singularity/issues/684#issuecomment-303304667|#684: singularity exec -e seems broken>",
                "text": "@GodloveD Your variable is expanded before singularity exec is executed, so you are actually calling:\n`singularity exec -e lolcow.img echo This is Rogue II`\n\nTry this:\n```\n$ export BASE=\"A cow says moo moo\"\n$ singularity exec deb.img bash -c \"echo $BASE\"\nA cow says moo moo\n\n$ singularity exec deb.img bash -c \"echo \\$BASE\"\nA cow says moo moo\n\n$ singularity exec -e deb.img bash -c \"echo \\$BASE\"\n\n```",
                "pretext": "[singularityware/singularity] New comment by dexter2cz on issue <https://github.com/singularityware/singularity/issues/684#issuecomment-303304667|#684: singularity exec -e seems broken>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495521639.174917",
        "date": 1495521639174
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#688 Development' https://github.com/singularityware/singularity/pull/688 by crbaird",
                "text": "Based on PR #475 by @FlyElephant-31\n\nChanges proposed in this pull request\n\n• adds zypper bootstrap capability\n• adds openSUSE example def\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/crbaird|crbaird>",
                "title": "#688 Development",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/688",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495516457.686152",
        "date": 1495516457686
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/687#issuecomment-303291788|#687: Overlay error with SUSE>",
                "text": "hey @crbaird! I'm not familiar with zypper or why the overlayfs might be causing an issue, but it looks like <https://github.com/singularityware/singularity/pull/475> is from January, so I think it would be great if you can contribute to add support for openSUSE and SLE - maybe we can bring @FlyElephant-M31 into discussion and you guys can collaborate for the feature?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/687#issuecomment-303291788|#687: Overlay error with SUSE>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495516153.659248",
        "date": 1495516153659
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#687 Overlay error with SUSE' https://github.com/singularityware/singularity/issues/687 by crbaird",
                "text": "Hi - \n   I'm having a bit of trouble running dev-branch containers under SLES. Bootstrap completes without issue, but exec'ing fails with \"Could not mount Singularity overlay: No such device\". Turning off overlay works just fine. I would like to submit a pull request to enable bootstrapping with zypper for both SLE and openSUSE, but I don't want to step on PR475 's toes. Debug output follows, and any help would be appreciated.\n\nThanks,\nReese\n\n`sms007:/home/ohpc-test/tests/runtimes/singularity # singularity -d exec /tmp/${DISTRO}.img 'echo 2+2 |bc'\nEnabling debugging\nEnding argument loop\nSingularity version: 2.2.99-dist\nExec'ing: /usr/lib/singularity/cli/exec.exec\nEvaluating args: '/tmp/opensuse.img echo 2+2 |bc'\nVERBOSE [U=0,P=22985]      message_init()                            Set messagelevel to: 5\nVERBOSE [U=0,P=22985]      singularity_config_parse()                Initialize configuration file: /etc/singularity/singularity.conf\nDEBUG   [U=0,P=22985]      singularity_config_parse()                Starting parse of configuration file /etc/singularity/singularity.conf\nVERBOSE [U=0,P=22985]      singularity_config_parse()                Got config key allow setuid = 'yes'\nVERBOSE [U=0,P=22985]      singularity_config_parse()                Got config key max loop devices = '256'\nVERBOSE [U=0,P=22985]      singularity_config_parse()                Got config key allow pid ns = 'yes'\nVERBOSE [U=0,P=22985]      singularity_config_parse()                Got config key config passwd = 'yes'\nVERBOSE [U=0,P=22985]      singularity_config_parse()                Got config key config group = 'yes'\nVERBOSE [U=0,P=22985]      singularity_config_parse()                Got config key config resolv_conf = 'yes'\nVERBOSE [U=0,P=22985]      singularity_config_parse()                Got config key mount proc = 'yes'\nVERBOSE [U=0,P=22985]      singularity_config_parse()                Got config key mount sys = 'yes'\nVERBOSE [U=0,P=22985]      singularity_config_parse()                Got config key mount dev = 'yes'\nVERBOSE [U=0,P=22985]      singularity_config_parse()                Got config key mount home = 'yes'\nVERBOSE [U=0,P=22985]      singularity_config_parse()                Got config key mount tmp = 'yes'\nVERBOSE [U=0,P=22985]      singularity_config_parse()                Got config key mount hostfs = 'no'\nVERBOSE [U=0,P=22985]      singularity_config_parse()                Got config key bind path = '/etc/hosts'\nVERBOSE [U=0,P=22985]      singularity_config_parse()                Got config key user bind control = 'yes'\nVERBOSE [U=0,P=22985]      singularity_config_parse()                Got config key enable overlay = 'yes'\nVERBOSE [U=0,P=22985]      singularity_config_parse()                Got config key mount slave = 'yes'\nVERBOSE [U=0,P=22985]      singularity_config_parse()                Got config key sessiondir max size = '16'\nDEBUG   [U=0,P=22985]      singularity_config_parse()                Finished parsing configuration file '/etc/singularity/singularity.conf'\nVERBOSE [U=0,P=22985]      singularity_registry_init()               Initializing Singularity Registry\nVERBOSE [U=0,P=22985]      singularity_registry_set()                Adding value to registry: 'LIBEXECDIR' = '/usr/lib'\nDEBUG   [U=0,P=22985]      singularity_registry_set()                Returning singularity_registry_set(libexecdir, /usr/lib) = 0\nVERBOSE [U=0,P=22985]      singularity_registry_set()                Adding value to registry: 'COMMAND' = 'exec'\nDEBUG   [U=0,P=22985]      singularity_registry_set()                Returning singularity_registry_set(COMMAND, exec) = 0\nVERBOSE [U=0,P=22985]      singularity_registry_set()                Adding value to registry: 'MESSAGELEVEL' = '5'\nDEBUG   [U=0,P=22985]      singularity_registry_set()                Returning singularity_registry_set(MESSAGELEVEL, 5) = 0\nVERBOSE [U=0,P=22985]      singularity_registry_set()                Adding value to registry: 'VERSION' = '2.2.99-dist'\nDEBUG   [U=0,P=22985]      singularity_registry_set()                Returning singularity_registry_set(version, 2.2.99-dist) = 0\nVERBOSE [U=0,P=22985]      singularity_registry_set()                Adding value to registry: 'LOCALSTATEDIR' = '/var'\nDEBUG   [U=0,P=22985]      singularity_registry_set()                Returning singularity_registry_set(localstatedir, /var) = 0\nVERBOSE [U=0,P=22985]      singularity_registry_set()                Adding value to registry: 'SYSCONFDIR' = '/etc'\nDEBUG   [U=0,P=22985]      singularity_registry_set()                Returning singularity_registry_set(sysconfdir, /etc) = 0\nVERBOSE [U=0,P=22985]      singularity_registry_set()                Adding value to registry: 'BINDIR' = '/usr/bin'\nDEBUG   [U=0,P=22985]      singularity_registry_set()                Returning singularity_registry_set(bindir, /usr/bin) = 0\nVERBOSE [U=0,P=22985]      singularity_registry_set()                Adding value to registry: 'IMAGE' = '/tmp/opensuse.img'\nDEBUG   [U=0,P=22985]      singularity_registry_set()                Returning singularity_registry_set(IMAGE, /tmp/opensuse.img) = 0\nDEBUG   [U=0,P=22985]      singularity_registry_get()                Returning NULL on 'HOME'\nDEBUG   [U=0,P=22985]      singularity_registry_get()                Returning NULL on 'TARGET_UID'\nDEBUG   [U=0,P=22985]      singularity_registry_get()                Returning NULL on 'TARGET_GID'\nDEBUG   [U=0,P=22985]      singularity_priv_init()                   Initializing user info\nDEBUG   [U=0,P=22985]      singularity_priv_init()                   Set the calling user's username to: root\nDEBUG   [U=0,P=22985]      singularity_priv_init()                   Marking uinfo structure as ready\nDEBUG   [U=0,P=22985]      singularity_priv_init()                   Obtaining home directory\nVERBOSE [U=0,P=22985]      singularity_priv_init()                   Set home (via getpwuid()) to: /root\nVERBOSE [U=0,P=22985]      singularity_suid_init()                   Running SUID program workflow\nVERBOSE [U=0,P=22985]      singularity_suid_init()                   Checking program has appropriate permissions\nVERBOSE [U=0,P=22985]      singularity_suid_init()                   Checking configuration file is properly owned by root\nVERBOSE [U=0,P=22985]      singularity_suid_init()                   Checking if singularity.conf allows us to run as suid\nDEBUG   [U=0,P=22985]      singularity_config_get_bool_char_impl()   Called singularity_config_get_bool(allow setuid, yes)\nDEBUG   [U=0,P=22985]      singularity_config_get_value_impl()       Returning configuration value allow setuid='yes'\nDEBUG   [U=0,P=22985]      singularity_config_get_bool_char_impl()   Return singularity_config_get_bool(allow setuid, yes) = 1\nDEBUG   [U=0,P=22985]      singularity_registry_get()                Returning NULL on 'NOSUID'\nVERBOSE [U=0,P=22985]      singularity_priv_userns()                 Invoking the user namespace\nDEBUG   [U=0,P=22985]      singularity_config_get_bool_char_impl()   Called singularity_config_get_bool(allow user ns, yes)\nDEBUG   [U=0,P=22985]      singularity_config_get_value_impl()       No configuration entry found for 'allow user ns'; returning default value 'yes'\nDEBUG   [U=0,P=22985]      singularity_config_get_bool_char_impl()   Return singularity_config_get_bool(allow user ns, yes) = 1\nVERBOSE [U=0,P=22985]      singularity_priv_userns()                 Not virtualizing USER namespace: running as root\nDEBUG   [U=0,P=22985]      singularity_priv_userns()                 Returning singularity_priv_init(void)\nDEBUG   [U=0,P=22985]      singularity_priv_drop()                   Running as root, not changing privileges\nDEBUG   [U=0,P=22985]      singularity_runtime_ns()                  Calling: _singularity_runtime_ns_pid()\nDEBUG   [U=0,P=22985]      singularity_config_get_bool_char_impl()   Called singularity_config_get_bool(allow pid ns, yes)\nDEBUG   [U=0,P=22985]      singularity_config_get_value_impl()       Returning configuration value allow pid ns=…",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/crbaird|crbaird>",
                "title": "#687 Overlay error with SUSE",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/687",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495515006.566346",
        "date": 1495515006566
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/683#issuecomment-303282569|#683: shell command not working with .tar.gz>",
                "text": "my inclination was to edit there, but I don't see any evidence that file is actually being called... so I'll just leave this for @gmkurtzer to fix up.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/683#issuecomment-303282569|#683: shell command not working with .tar.gz>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495511077.244014",
        "date": 1495511077244
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/686#issuecomment-303281308|#686: add --nv to exec and --run documentation>",
                "text": "are you using the most up to date development? I already see the above in the help for those!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/686#issuecomment-303281308|#686: add --nv to exec and --run documentation>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495510444.194905",
        "date": 1495510444194
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/683#issuecomment-303281047|#683: shell command not working with .tar.gz>",
                "text": "Do you know if we are still using image_handler.sh?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/683#issuecomment-303281047|#683: shell command not working with .tar.gz>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495510308.184571",
        "date": 1495510308184
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/683#issuecomment-303278886|#683: shell command not working with .tar.gz>",
                "text": "I think this is because a `.img.tar.gz` != `.tar.gz` let me mess around with some things and see if I can make this work.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/683#issuecomment-303278886|#683: shell command not working with .tar.gz>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495509333.107259",
        "date": 1495509333107
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#686 add --nv to exec and --run documentation' https://github.com/singularityware/singularity/issues/686 by GodloveD",
                "text": "The output of `help singularity shell` contains this helpful line:\n``` -n/--nv             Enable experimental Nvidia support\n```\nThe same option works with `exec` and `run` so this line should appear in `singularity help exec` and `singularity help run` as well.  ",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/GodloveD|GodloveD>",
                "title": "#686 add --nv to exec and --run documentation",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/686",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495508464.035730",
        "date": 1495508464035
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#685 help doc states that images are writable by default and that /bin/sh is default shell' https://github.com/singularityware/singularity/issues/685 by GodloveD",
                "text": "The output from `singularity help shell` yields these lines in the description.  \n\n```\nObtain a shell (/bin/sh) within the container image.\n\nnote: When invoking a shell within a container, the container image is\nby default writable.\n```\nNeither of these lines are accurate.  ",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/GodloveD|GodloveD>",
                "title": "#685 help doc states that images are writable by default and that /bin/sh is default shell",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/685",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495508278.019959",
        "date": 1495508278019
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#684 singularity exec -e seems broken' https://github.com/singularityware/singularity/issues/684 by GodloveD",
                "text": "According to `singularity help exec` the `-e` option should clean the environment.  It seems to work with the `shell` command:\n```\n$ export BASE='This is Rogue II'\n\n$ singularity shell -e lolcow.img\nSingularity: Invoking an interactive shell within container...\n\nSingularity lolcow.img:~&gt; echo $BASE\n\nSingularity lolcow.img:~&gt;\n```Perfect.  But when I try the same thing with the `exec` command:\n```\n$ singularity exec -e lolcow.img echo $BASE\nThis is Rogue II\n```",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/GodloveD|GodloveD>",
                "title": "#684 singularity exec -e seems broken",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/684",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495507626.964184",
        "date": 1495507626964
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#683 shell command not working with .tar.gz' https://github.com/singularityware/singularity/issues/683 by GodloveD",
                "text": "According to `singularity help shell` a user should be able to shell into a `.tar.gz` archive.  But this doesn't seem to be working (using an example image from <https://hub.docker.com/r/godlovedc/lolcow/|`docker://godlovedc/lolcow`>).\n```\n$ tar czvf lolcow.img.tar.gz lolcow.img\nlolcow.img\n\n$ singularity shell lolcow.img.tar.gz\nOpening gzip compressed archive, stand by...\nERROR  : No valid /bin/sh in container\nABORT  : Retval = 255\n\n$ singularity exec lolcow.img ls /bin/sh\n/bin/sh\n```",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/GodloveD|GodloveD>",
                "title": "#683 shell command not working with .tar.gz",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/683",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495506652.880208",
        "date": 1495506652880
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/682#issuecomment-303241266|#682: apps executed inside singularity container doesn't use the same timezone as the host>",
                "text": "It seems if I bind the file `/etc/localtime` into the container at runtime (`singularity shell -B /etc/localtime ...`) Things seem to work fine. Can you verify?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/682#issuecomment-303241266|#682: apps executed inside singularity container doesn't use the same timezone as the host>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495493422.475884",
        "date": 1495493422475
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/680#issuecomment-303183348|#680: bc is a dependency of pull.exe (when pulling from Docker Hub)>",
                "text": "Ahhhh, nevermind. I see how you are doing it now. Sorry, I was totally off on that!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/680#issuecomment-303183348|#680: bc is a dependency of pull.exe (when pulling from Docker Hub)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495478001.203542",
        "date": 1495478001203
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#682 apps executed inside singularity container doesn't use the same timezone as the host' https://github.com/singularityware/singularity/issues/682 by pescobar",
                "text": "while testing singularity I have noticed that a tool executed inside a container is not using the same timezone as the host. \n\nThis is the date in the host machine where singularity is executed\n```[escobar@login20 benchmark-pipeline1]$ timedatectl \n      Local time: Mon 2017-05-22 17:46:27 CEST\n  Universal time: Mon 2017-05-22 15:46:27 UTC\n        RTC time: Mon 2017-05-22 15:46:27\n       Time zone: Europe/Zurich (CEST, +0200)\n     NTP enabled: yes\nNTP synchronized: yes\n```\n\nAnd these are the generated logs from the tool executed inside the container:\n\n```May 22 15:31:54 ..... started STAR run\nMay 22 15:31:54 ... starting to generate Genome files\nMay 22 15:32:53 ... starting to sort Suffix Array. This may take a long time...\nMay 22 15:33:07 ... sorting Suffix Array chunks and saving them to disk...\nMay 22 15:46:58 ... loading chunks from disk, packing SA...\nMay 22 15:47:56 ... finished generating suffix array\nMay 22 15:47:56 ... generating Suffix Array index\n```\n\nIt seems inside the container it's using UTC instead of the host timezone. Is there any solution so the container uses the host's timezone?",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/pescobar|pescobar>",
                "title": "#682 apps executed inside singularity container doesn't use the same timezone as the host",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/682",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495468279.639356",
        "date": 1495468279639
    },
    {
        "user": "frederik",
        "text": "<@U5FFKV6M6|frederik> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1495434821.897488",
        "date": 1495434821897
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/679|#679 singularity pull: incorrect image size> by <https://github.com/chrisfilo|chrisfilo>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/679|#679 singularity pull: incorrect image size> by <https://github.com/chrisfilo|chrisfilo>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495428527.356229",
        "date": 1495428527356
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/679#issuecomment-302998095|#679: singularity pull: incorrect image size>",
                "image_url": "https://asciinema.org/a/121684.png",
                "image_width": 372,
                "image_height": 250,
                "image_bytes": 89123,
                "text": "Hey @chrisfilo - I'm sorry you are having trouble, I have never built images with circle so I'm not sure how to advise, but I can give you the method I use to check the manifest. Here is what you want to do:\n\n<https://asciinema.org/a/121684?speed=3>\n\nthe instructions for copy paste are in the comments there, and I'll include them here as well:\n\nYou can use singularity python functions to check your manifest. First download it\n```  git clone -b development https://www.github.com/singularityware/singularity.git\n  cd singularity/libexec/python```\nFrom the singularity/libexec/python folder do:\n```  ipython\n  from docker.api import *\n  client = DockerApiConnection(image=\"poldracklab/fmriprep:0.4.4\") \n  manifest = client.get_manifest()\n\n  # Then look at the version \n  manifest['schemaVersion']\n\n  # if you want to force version 1.0\n  manifest = client.get_manifest(old_version=True)```\nThere are definitely ways that we could get the size of the layers automatically, but we need a solution that is quick, meaning it really has to come from the manifest. We are taking an approach that, in due time, *most* images will support (eg, version 1 manifests will likely not endure forever) and it's reasonable that, in the short term, the user that has a version 1 can supply a `--size`. I hope this is also reasonable to you - I can tell you that it took a lot of convincing to get the docker pull command to begin with, so might be good to not push the boundary on what you are insisting come with it. At least without some break :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/679#issuecomment-302998095|#679: singularity pull: incorrect image size>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495428247.336653",
        "date": 1495428247336
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/679#issuecomment-302996076|#679: singularity pull: incorrect image size>",
                "text": "I switched to docker 1.10 in the latest release, but the size is still estimated incorrectly:\n\n```[newuser@a55dc27d5a87 ~]$ singularity pull docker://poldracklab/fmriprep:0.4.4\nInitializing Singularity image subsystem\nOpening image file: fmriprep-0.4.4.img\nCreating 768MiB image\nBinding image to loop\nCreating file system within image\ndone\nImage is done: fmriprep-0.4.4.img\nDocker image path: index.docker.io/poldracklab/fmriprep:0.4.4\nCache folder set to /home/newuser/.singularity/docker\n```\nAre there other strategies for estimating image size we could explore? Maybe a sum of the size of all layers?",
                "pretext": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/679#issuecomment-302996076|#679: singularity pull: incorrect image size>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495426957.245240",
        "date": 1495426957245
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/677#issuecomment-302953365|#677: Tweaks to Development as we test/ go over docs>",
                "image_url": "https://asciinema.org/a/121620.png",
                "image_width": 609,
                "image_height": 250,
                "image_bytes": 32763,
                "text": "I just added the &lt;|inspect&gt; command to the PR to hopefully address #651 \n\n<https://asciinema.org/a/121620?speed=2>\n\nI first was going to make labels.json default, but this wouldn't work for older images,so I made default the runscript, and the user can specify `--labels` if he/she wants that. This seems like a good start, and maybe in the future we can add an inspect to show environment variables too?",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/677#issuecomment-302953365|#677: Tweaks to Development as we test/ go over docs>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495390689.258899",
        "date": 1495390689258
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/651#issuecomment-302953181|#651: singularity inspect>",
                "image_url": "https://asciinema.org/a/121620.png",
                "image_width": 609,
                "image_height": 250,
                "image_bytes": 32763,
                "text": "hey @gmkurtzer I just gave `inspect` a go:\n\n<https://asciinema.org/a/121620?speed=2>\n\nI made the default to show the runscript to support all oldest versions of Singularity, but the user can also ask for `--labels`. Should we add in a command to show some subset of environment too?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/651#issuecomment-302953181|#651: singularity inspect>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495390513.250458",
        "date": 1495390513250
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-302949123|#674: (How to) Access local file during bootstrap?>",
                "text": "hey @nielsaka did you have any more questions for this issue? Are there any points we overlooked or forgot to help with?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-302949123|#674: (How to) Access local file during bootstrap?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495386112.048860",
        "date": 1495386112048
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/680#issuecomment-302914088|#680: bc is a dependency of pull.exe (when pulling from Docker Hub)>",
                "text": "I'm not sure what you mean by being able to do this in native shell - you would always need to get an image's manifest with stuff that would be hard to do in shell, so unless you want to completely re-implement the python stuff in shell, I don't see how you could do it all in native shell... :/",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/680#issuecomment-302914088|#680: bc is a dependency of pull.exe (when pulling from Docker Hub)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495340011.387046",
        "date": 1495340011387
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/680#issuecomment-302914001|#680: bc is a dependency of pull.exe (when pulling from Docker Hub)>",
                "text": "Did you see my development branch? Yes I implemented it. see the link above!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/680#issuecomment-302914001|#680: bc is a dependency of pull.exe (when pulling from Docker Hub)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495339934.384539",
        "date": 1495339934384
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/680#issuecomment-302912902|#680: bc is a dependency of pull.exe (when pulling from Docker Hub)>",
                "text": "Oh, that's an interesting idea, but I should be able to do this in native shell without spawning out another process. Do you have this done, if so can I check out the commit?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/680#issuecomment-302912902|#680: bc is a dependency of pull.exe (when pulling from Docker Hub)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495337724.317022",
        "date": 1495337724317
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-302912746|#681: singularity supported uris discussion>",
                "text": "Oh, yeah... I think I broke some of those. Great catch!\n\nI will take care of these before the release in the shell code (`import.exec`)... That is, unless someone else wants to take a stab at it?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/681#issuecomment-302912746|#681: singularity supported uris discussion>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495337478.310118",
        "date": 1495337478310
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#681 singularity supported uris discussion' https://github.com/singularityware/singularity/issues/681 by vsoch",
                "text": "@GodloveDC brought up a good issue, that our old docs showed examples of imports that don't seem to work:\n\n```\n    $ gunzip -c debian.tar.gz | singularity import /tmp/Debian\n    $ singularity import /tmp/Debian.img debian.tar.gz\n    $ singularity import /tmp/Debian.img file://debian.tar.gz\n    $ singularity import /tmp/Debian.img <http://foo.com/debian.tar.gz>\n    $ singularity import /tmp/Debian.img docker://ubuntu:latest\n\n```\n\nwe should have discussion about what kinds of uri's we want supported for imports vs. images themselves, and if having file:// is really necessary. For the meantime, I removed the lines from the above that we are sure do not work.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/vsoch|vsoch>",
                "title": "#681 singularity supported uris discussion",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/681",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495334054.208659",
        "date": 1495334054208
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/677#issuecomment-302909156|#677: Tweaks to Development as we test/ go over docs>",
                "text": "This recent change will move the calculation of size into python, and will close <https://github.com/singularityware/singularity/issues/680>",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/677#issuecomment-302909156|#677: Tweaks to Development as we test/ go over docs>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495330251.090357",
        "date": 1495330251090
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/680#issuecomment-302908248|#680: bc is a dependency of pull.exe (when pulling from Docker Hub)>",
                "text": "let me give a go at handling this in python, one sec",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/680#issuecomment-302908248|#680: bc is a dependency of pull.exe (when pulling from Docker Hub)>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495328578.035920",
        "date": 1495328578035
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#680 bc is a dependency of pull.exe (when pulling from Docker Hub) ' https://github.com/singularityware/singularity/issues/680 by GodloveD",
                "text": "When trying top pull an image from Docker Hub I get the following error.\n```ubuntu@ip-172-31-0-48:~$ singularity pull docker://tensorflow/tensorflow\n/usr/local/libexec/singularity/cli/pull.exec: line 144: bc: command not found\nERROR  : Could not convert container size to integer\nABORT  : Retval = 255\n```\nInstalling `bc` fixes the error.  But this could easily trip people up.  ",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/GodloveD|GodloveD>",
                "title": "#680 bc is a dependency of pull.exe (when pulling from Docker Hub) ",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/680",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495328316.026093",
        "date": 1495328316026
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/677#issuecomment-302902958|#677: Tweaks to Development as we test/ go over docs>",
                "image_url": "https://asciinema.org/a/121536.png",
                "image_width": 586,
                "image_height": 250,
                "image_bytes": 38046,
                "text": "These recent updates will fix the bug with authentication with private registries, <https://asciinema.org/a/121536|shown here> and detailed <https://groups.google.com/a/lbl.gov/forum/#!topic/singularity/uerNrdpDnH8|here>. The repo in question (if you have permissions to view) is <https://hub.docker.com/r/c1t4r/usecases/|here>.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/677#issuecomment-302902958|#677: Tweaks to Development as we test/ go over docs>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495319665.743499",
        "date": 1495319665743
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/679#issuecomment-302844605|#679: singularity pull: incorrect image size>",
                "text": "I haven't had personal experience working with building on Circle, so I was just going from their docs. I was going off of the docs that I posted in <https://github.com/poldracklab/mriqc/issues/499|this issue>, specifically here: <https://docs.docker.com/registry/compatibility/#registry-v23> it says\n\n&gt; &gt; Manifest Push with Docker 1.9 and Older\n&gt; &gt; The Docker Engine will construct a Schema 1 manifest which the registry will persist to disk.\n&gt; &gt; When the manifest is pulled by digest or tag with any docker version, a Schema 1 manifest will be returned.\nI would try shelling into a circle build, and seeing if you are able to verify that the image is built with Docker 1.10 or later, and then view the manifest on the instance (before pushing). Then you can at least check that the issue is with the build on circle, and it's not some transfer error (and the hub is returning old data). ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/679#issuecomment-302844605|#679: singularity pull: incorrect image size>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495246559.861542",
        "date": 1495246559861
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/679#issuecomment-302844403|#679: singularity pull: incorrect image size>",
                "text": "Do you know which Docker version I need to use to create V2 manifest? Or is\nit a distinction between images pushed to Docker Hub vs images built on\nDocker Hub.\n\nBuilding images on CI has some serious advantages: you version your images\nwith tags and make sure you only push an image to Docker Hub if the tests\npass. We have 20-30 images built this way. It would be good to figure out a\nway for this to work.\n\nOn Fri, May 19, 2017 at 6:58 PM, Vanessa Sochat <mailto:notifications@github.com|notifications@github.com>\nwrote:\n\n&gt; @chrisfilo <https://github.com/chrisfilo> has a more rare use case, at\n&gt; least in the scientific community, of actually doing tests and continuous\n&gt; integration for building images (most just build from Github --&gt; Docker\n&gt; Hub). An image of this latter kind will be built with the version 2.0 spec\n&gt; (Chris limitation is something to do with needing to build with a docker\n&gt; that works on Circle) so I would think that this estimation would work for\n&gt; most images. So in this case, it comes down to whether we want to take a\n&gt; chance at estimating size (and given how big these images get, we would\n&gt; likely get it wrong) or just abort. I think it would be a safer thing to\n&gt; assume that, given that we can't estimate the size, we would probably get\n&gt; it wrong, and abort. However, the user should be able to get around this by\n&gt; giving the command a size. For example, in this case we would do like:\n&gt; \n&gt; singularity pull docker://fatty/donutsareyummy\n&gt; WARNING: Cannot detect size from version 1.0 manifest.\n&gt; ERROR: Aborting creation and import of docker layers. Please use version 2.0 manifest or specify image size.\n&gt; \n&gt; and then the user can either build the image to have a version 2.0\n&gt; manifest, or do this:\n&gt; \n&gt; singularity pull --size 10000000 docker://fatty/donutsareyummy\n&gt; Image created fatty-donutsareyummy.img\n&gt; ./fatty-donutsareyummy.img\n&gt; NOMNOMNOM !!\n&gt; \n&gt; —\n&gt; You are receiving this because you were mentioned.\n&gt; Reply to this email directly, view it on GitHub\n&gt; <https://github.com/singularityware/singularity/issues/679#issuecomment-302843861>,\n&gt; or mute the thread\n&gt; <https://github.com/notifications/unsubscribe-auth/AAOkp_QjyU81tRJ6iyQLoZMA1Cc3-qpOks5r7kjQgaJpZM4NhJq9>\n&gt; .",
                "pretext": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/679#issuecomment-302844403|#679: singularity pull: incorrect image size>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495246294.851270",
        "date": 1495246294851
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/676#issuecomment-302843948|#676: singularity.spec %description is outdated>",
                "text": "I already changed this in my little development PR - it's in the singularity.spec.init file --&gt; <https://github.com/singularityware/singularity/pull/677/files#diff-b3fb1fb02c192e0be6fee00045236e40>",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/676#issuecomment-302843948|#676: singularity.spec %description is outdated>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495245661.824165",
        "date": 1495245661824
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/679#issuecomment-302843861|#679: singularity pull: incorrect image size>",
                "text": "@chrisfilo has a more rare use case, at least in the scientific community, of actually doing tests and continuous integration for building images (most just build from Github --&gt; Docker Hub). An image of this latter kind will be built with the version 2.0 spec (Chris limitation is something to do with needing to build with a docker that works on Circle) so I would think that this estimation would work for most images. So in this case, it comes down to whether we want to take a chance at estimating size (and given how big these images get, we would likely get it wrong) or just abort. I think it would be a safer thing to assume that, given that we can't estimate the size, we would probably get it wrong, and abort.  However, the user should be able to get around this by giving the command a size. For example, in this case we would do like:\n\n```singularity pull docker://fatty/donutsareyummy\nWARNING: Cannot detect size from version 1.0 manifest.\nERROR: Aborting creation and import of docker layers. Please use version 2.0 manifest or specify image size.\n```\n\nand then the user can either build the image to have a version 2.0 manifest, or do this:\n\n```singularity pull --size 10000000 docker://fatty/donutsareyummy\nImage created fatty-donutsareyummy.img\n./fatty-donutsareyummy.img\nNOMNOMNOM !!\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/679#issuecomment-302843861|#679: singularity pull: incorrect image size>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495245520.817458",
        "date": 1495245520817
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/676#issuecomment-302843106|#676: singularity.spec %description is outdated>",
                "text": "Where do we have that documented? That was in Singualrity v1.x, but I don't have %description doing anything anymore.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/676#issuecomment-302843106|#676: singularity.spec %description is outdated>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495244578.775989",
        "date": 1495244578775
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/679#issuecomment-302842947|#679: singularity pull: incorrect image size>",
                "text": "BTW, I just added a warning message when it can't obtain the size as expected. I'm thinking of just bombing out with a suitable error message as that is better then a failed pull/import.\n\nYou know... I still don't like the `pull` for docker images! &lt;seals lips&gt;",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/679#issuecomment-302842947|#679: singularity pull: incorrect image size>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495244385.767077",
        "date": 1495244385767
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/679#issuecomment-302842838|#679: singularity pull: incorrect image size>",
                "text": "hey @chrisfilo ! Just testing this now, I still see a version 1 manifest:\n\n```\nfrom docker.api import *\nVERBOSE2 SINGULARITY_COMMAND_ASIS found as False\nVERBOSE2 SINGULARITY_ROOTFS not defined (None)\nVERBOSE2 SINGULARITY_METADATA_FOLDER found as None/.singularity.d\nVERBOSE2 SINGULARITY_FIX_PERMS found as False\nVERBOSE2 SINGULARITY_COLORIZE not defined (None)\nVERBOSE2 SINGULARITY_DISABLE_CACHE found as False\nVERBOSE2 SINGULARITY_CACHEDIR found as /home/vanessa/.singularity\nVERBOSE2 SINGULARITY_ENVBASE found as None/.singularity.d/env\nVERBOSE2 SINGULARITY_LABELFILE found as None/.singularity.d/labels.json\nVERBOSE2 SINGULARITY_INCLUDECMD found as False\nVERBOSE2 SINGULARITY_PULLFOLDER found as /home/vanessa/Documents/Dropbox/Code/singularity/singularity/libexec/python\nVERBOSE2 SHUB_NAMEBYHASH not defined (None)\nVERBOSE2 SHUB_NAMEBYCOMMIT not defined (None)\nVERBOSE2 SHUB_CONTAINERNAME not defined (None)\nVERBOSE2 SINGULARITY_CONTENTS found as None/.singularity.d/.layers\nVERBOSE2 SINGULARITY_PYTHREADS found as 9\n\nclient = DockerApiConnection(image='poldracklab/fmriprep:0.4.3')\nmanifest = client.get_manifest()\nDEBUG Headers found: Content-Type,Accept\nVERBOSE Registry: index.docker.io\nVERBOSE Namespace: poldracklab\nVERBOSE Repo Name: fmriprep\nVERBOSE Repo Tag: 0.4.3\nVERBOSE Version: None\nVERBOSE Obtaining tags: <https://index.docker.io/v2/poldracklab/fmriprep/tags/list>\nDEBUG GET <https://index.docker.io/v2/poldracklab/fmriprep/tags/list>\nDEBUG Http Error with code 401\nDEBUG GET <https://auth.docker.io/token?service=registry.docker.io&amp;expires_in=9000&amp;scope=repository:poldracklab/fmriprep:pull>\nDEBUG Headers found: Content-Type,Authorization,Accept\n```\nas an example, here is the same function to an image with a version 2 manifest:\n\n```\nclient=DockerApiConnection(image='ubuntu:latest')\nDEBUG Headers found: Content-Type,Accept\nVERBOSE Registry: index.docker.io\nVERBOSE Namespace: library\nVERBOSE Repo Name: ubuntu\nVERBOSE Repo Tag: latest\nVERBOSE Version: None\nVERBOSE Obtaining tags: <https://index.docker.io/v2/library/ubuntu/tags/list>\nDEBUG GET <https://index.docker.io/v2/library/ubuntu/tags/list>\nDEBUG Http Error with code 401\nDEBUG GET <https://auth.docker.io/token?service=registry.docker.io&amp;expires_in=9000&amp;scope=repository:library/ubuntu:pull>\nclDEBUG Headers found: Content-Type,Authorization,Accept\neit\nIn [8]: manifest=client.get_manifest()\nVERBOSE Obtaining manifest: <https://index.docker.io/v2/library/ubuntu/manifests/latest>\nDEBUG GET <https://index.docker.io/v2/library/ubuntu/manifests/latest>\n\nmanifest.keys()\ndict_keys(['schemaVersion', 'layers', 'mediaType', 'config'])\n\nmanifest['schemaVersion']\n```\nlet me know if you want me to try any other images!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/679#issuecomment-302842838|#679: singularity pull: incorrect image size>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495244276.762566",
        "date": 1495244276762
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#679 singularity pull: incorrect image size' https://github.com/singularityware/singularity/issues/679 by chrisfilo",
                "text": "```[newuser@2204cd237e7a ~]$ singularity pull docker://poldracklab/fmriprep:0.4.3\nInitializing Singularity image subsystem\nOpening image file: fmriprep-0.4.3.img\nCreating 768MiB image\nBinding image to loop\nCreating file system within image\ndone\nImage is done: fmriprep-0.4.3.img\nDocker image path: index.docker.io/poldracklab/fmriprep:0.4.3\n```\nThis is followed by lots of \"no space left on device\" errors due to too small initial .img file - this docker image is over 10Gb in size.\n\nPS This image has been created with Docker &gt;1.9.1 so it should have the relevant metadata.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/chrisfilo|chrisfilo>",
                "title": "#679 singularity pull: incorrect image size",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/679",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495243281.714950",
        "date": 1495243281714
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-302834548|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "text": "yeah so I (very stupidly) just tried this again - my computer crashed again! At least that's reliable. I'm afraid I'm unable to help, other than to strongly encourage you to come back from the dark side, @chrisfilo  :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-302834548|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495237614.360929",
        "date": 1495237614360
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/678#issuecomment-302832960|#678: Running cached Docker Hub images can be slow>",
                "text": "and for docs... <https://github.com/singularityware/singularityware.github.io/blob/docs/2.3/pages/docs/user-docs/docs-pull.md|wish granted!>",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/678#issuecomment-302832960|#678: Running cached Docker Hub images can be slow>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495236680.281963",
        "date": 1495236680281
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-302832004|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "text": "That is very weird... I don't get the error ever. :/",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-302832004|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495236161.233632",
        "date": 1495236161233
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-302829420|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "text": "@gmkurtzer I don't think this is related to forking or sub-threading. I get the same behaviour with the ubuntu image and bash:\n\n```\n[newuser@f63a1d2ec534 ~]$ Singularity: Singularity: cleanup (U=500,P=5276)&gt; Failed removing file: /tmp/.singularity-runtime.OYoSarbj/ubuntu/root\n\nSingularity: Singularity: cleanup (U=500,P=5276)&gt; Could not remove directory /tmp/.singularity-runtime.OYoSarbj: Directory not empty\n\nSingularity: Singularity: cleanup (U=500,P=5276)&gt; Retval = 255\n\n[newuser@f63a1d2ec534 ~]$ ls -al /tmp/.singularity-runtime.OYoSarbj/ubuntu/root\ntotal 16\ndrwx------  2 newuser newuser 4096 May 10 16:23 .\ndrwx------ 21 newuser newuser 4096 May 19 22:59 ..\n-rw-r--r--  1 newuser newuser 3106 Oct 22  2015 .bashrc\n-rw-r--r--  1 newuser newuser  148 Aug 17  2015 .profile\n```",
                "pretext": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-302829420|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495234865.103563",
        "date": 1495234865103
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-302826960|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "text": "Does this program fork or run sub-threads? I think what is happening is that the foreground process returns, but there is still a thread running that hasn't been properly reaped or waited on which is still in that directory.\n\nIf you use an image, this shouldn't be an issue anymore, but I don't think I can solve this within singularity.\n\nThe reason it seemed to go away before was because in the previous commit I broke the cleanup thread. ",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-302826960|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495233617.964091",
        "date": 1495233617964
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/678#issuecomment-302825243|#678: Running cached Docker Hub images can be slow>",
                "text": "you would do:\n\n```docker pull bids/mriqc\n```\n\nand that should create and import into `bids-mriqc.img`",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/678#issuecomment-302825243|#678: Running cached Docker Hub images can be slow>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495232826.869102",
        "date": 1495232826869
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-302822520|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "text": "I've tried with 54694d32ba911e1a4e677f15ee3e631217884e64 unfortunately the bug regressed:\n\n```\n[newuser@35853316e77a ~]$ singularity run docker://bids/mriqc:0.9.3\nDocker image path: index.docker.io/bids/mriqc:0.9.3\nCache folder set to /home/newuser/.singularity/docker\n[25/25] |===================================| 100.0%\nCreating container runtime...\nSingularity: action-suid (U=500,P=19)&gt; USER=newuser, IMAGE='mriqc:0.9.3', COMMAND='run'\n\nFontconfig warning: ignoring C.UTF-8: not a valid language tag\nusage: mriqc [-h] [-v]\n             [--participant_label [PARTICIPANT_LABEL [PARTICIPANT_LABEL ...]]]\n             [-m [{T1w,bold,T2w} [{T1w,bold,T2w} ...]]] [-s SESSION_ID]\n             [-r RUN_ID] [--nthreads NTHREADS] [--n_procs N_PROCS]\n             [--mem_gb MEM_GB] [--write-graph] [--dry-run]\n             [--use-plugin USE_PLUGIN] [--ica] [--testing] [--profile]\n             [--hmc-afni] [--hmc-fsl] [-f] [--fft-spikes-detector]\n             [-w WORK_DIR] [--report-dir REPORT_DIR] [--verbose-reports]\n             [--ants-nthreads ANTS_NTHREADS] [--ants-settings ANTS_SETTINGS]\n             [--deoblique] [--despike] [--start-idx START_IDX]\n             [--stop-idx STOP_IDX] [--correct-slice-timing]\n             bids_dir output_dir {participant,group} [{participant,group} ...]\nmriqc: error: the following arguments are required: bids_dir, output_dir, analysis_level\n[newuser@35853316e77a ~]$ Singularity: Singularity: cleanup (U=500,P=100482)&gt; Failed removing file: /tmp/.singularity-runtime.ZGDDenKs/bids/mriqc:0.9.3/libwebp-0.5.2-linux-x86-64/include/webp\n\nSingularity: Singularity: cleanup (U=500,P=100482)&gt; Could not remove directory /tmp/.singularity-runtime.ZGDDenKs: Directory not empty\n\nSingularity: Singularity: cleanup (U=500,P=100482)&gt; Retval = 255\n\n[newuser@35853316e77a ~]$ ls -al /tmp/.singularity-runtime.ZGDDenKs/bids/mriqc:0.9.3/libwebp-0.5.2-linux-x86-64/include/webp\ntotal 108\ndrwx------ 2 newuser newuser  4096 Dec 16 00:10 .\ndrwx------ 3 newuser newuser  4096 Dec 16 00:10 ..\n-rw-r--r-- 1 newuser newuser 23112 Dec 16 00:10 decode.h\n-rw-r--r-- 1 newuser newuser 15235 Dec 16 00:10 demux.h\n-rw-r--r-- 1 newuser newuser 26278 Dec 16 00:10 encode.h\n-rw-r--r-- 1 newuser newuser 22885 Dec 16 00:10 mux.h\n-rw-r--r-- 1 newuser newuser  3149 Dec 16 00:10 mux_types.h\n-rw-r--r-- 1 newuser newuser  1687 Dec 16 00:10 types.h\n```",
                "pretext": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-302822520|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495231686.721586",
        "date": 1495231686721
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/678#issuecomment-302821130|#678: Running cached Docker Hub images can be slow>",
                "text": "Thanks for your feedback:\n1) This was the third time this command was executed. First one was slower (download), the second one had roughly the same runtime as the third time.\n2) I think cache is being reused since redownloading does not seem to happen.\n3) This is being run inside Docker (on windows using Hyper-V), all three executions were done inside the same docker container instance to preserve cache.\n4) I don't think storing cache on a mounted volume would help. Quite the opposite - docker host/container transfer times would slow it down.\n\nIf it's just the docker layers being exploded that is happening when I do subsequent `singularity run` I'm not sure how can this be made faster without sacrificing too much space.\n\nWhat is the command for creating singularity image directly from Docker Hub? Is the documentation for 2.3 up somewhere?",
                "pretext": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/678#issuecomment-302821130|#678: Running cached Docker Hub images can be slow>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495231191.647909",
        "date": 1495231191647
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/678#issuecomment-302813885|#678: Running cached Docker Hub images can be slow>",
                "text": "I (think?) @chrisfilo is either running the singularity image from within a Docker container (and the Singularity image is bootstrapping a docker image) to support running it on his workstation (Windows?) or it's the case he is running these jobs en masse (maybe also in Docker) and given bringing up a new Docker image, doesn't want to have to download/change permissions every single time? But if the second were true.. then probably he could run docker and doesn't need Singularity... ok I'm going to go remove my brain from this loopy matrix now... ! :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/678#issuecomment-302813885|#678: Running cached Docker Hub images can be slow>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495228830.261975",
        "date": 1495228830261
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/678#issuecomment-302813045|#678: Running cached Docker Hub images can be slow>",
                "text": "In theory yes, but if we kept all of the docker layers expanded it would quickly take over everything. Plus, the exploded files that comprise the runtime container must exist on a local file system ends up ruling out any place in $HOME.\n\nIf you want it to be faster, you should create a Singularity image out of the docker container and run via the image. The docker action integration is mostly used as a parlor trick or for one time test/usage as it doesn't create persistent containers (and thus after each use they are cleaned).",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/678#issuecomment-302813045|#678: Running cached Docker Hub images can be slow>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495228548.209238",
        "date": 1495228548209
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/678#issuecomment-302812960|#678: Running cached Docker Hub images can be slow>",
                "text": "If you are running this from within a docker image, maybe you can try to set the `SINGULARITY_CACHE` directory to be something shared on the host (and mounted on the container) so that new images that are spawned find the already existing layers. We pick this up as a <https://github.com/singularityware/singularity/blob/development/libexec/python/defaults.py#L107|variable in the environment!>",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/678#issuecomment-302812960|#678: Running cached Docker Hub images can be slow>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495228518.203808",
        "date": 1495228518203
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/678#issuecomment-302812553|#678: Running cached Docker Hub images can be slow>",
                "text": "The images with permissions changed are saved to the cache, and we do both download and changes with multirprocessing. Was this the first time you ran it?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/678#issuecomment-302812553|#678: Running cached Docker Hub images can be slow>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495228389.180122",
        "date": 1495228389180
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-302811133|#674: (How to) Access local file during bootstrap?>",
                "text": "I agree, `%install` would be more specific. Build sort of gets at the entire process that the user is running, so I think I like `%install`, but no promises that my opinion won't change on this. Given that `%post` is likely to change, it probably makes sense to make the files commands general to be \"before build/setup/post/install/whatever\" happens, and then \"after\" so I would advocate for either `%files-pre` and `%files-post`, unless we plan to add some different paradigm for which pre and post doesn't make sense, in which case we should talk about other ways that a user could add a file (at a specific point) in the build/install process).",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-302811133|#674: (How to) Access local file during bootstrap?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495227927.094796",
        "date": 1495227927094
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#678 Running cached Docker Hub images can be slow' https://github.com/singularityware/singularity/issues/678 by chrisfilo",
                "text": "```\n[newuser@de835965be28 ~]$ time singularity run docker://poldracklab/mriqc:0.9.3\nDocker image path: index.docker.io/poldracklab/mriqc:0.9.3\nCache folder set to /home/newuser/.singularity/docker\nCreating container runtime...\nSingularity: action-suid (U=500,P=70247)&gt; USER=newuser, IMAGE='mriqc:0.9.3', COMMAND='run'\n\nusage: mriqc [-h] [-v]\n             [--participant_label [PARTICIPANT_LABEL [PARTICIPANT_LABEL ...]]]\n             [-m [{T1w,bold,T2w} [{T1w,bold,T2w} ...]]] [-s SESSION_ID]\n             [-r RUN_ID] [--nthreads NTHREADS] [--n_procs N_PROCS]\n             [--mem_gb MEM_GB] [--write-graph] [--dry-run]\n             [--use-plugin USE_PLUGIN] [--ica] [--testing] [--profile]\n             [--hmc-afni] [--hmc-fsl] [-f] [--fft-spikes-detector]\n             [-w WORK_DIR] [--report-dir REPORT_DIR] [--verbose-reports]\n             [--ants-nthreads ANTS_NTHREADS] [--ants-settings ANTS_SETTINGS]\n             [--deoblique] [--despike] [--start-idx START_IDX]\n             [--stop-idx STOP_IDX] [--correct-slice-timing]\n             bids_dir output_dir {participant,group} [{participant,group} ...]\nmriqc: error: the following arguments are required: bids_dir, output_dir, analysis_level\n\nreal    2m33.440s\nuser    1m3.050s\nsys     0m35.140s\n```\nThe same command works almost instantaneous when using Docker. I wonder if some time can be saved by  saving the tarred layers with all of the file permission changed instead of performing the file permission changes each time an image is being run.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/chrisfilo|chrisfilo>",
                "title": "#678 Running cached Docker Hub images can be slow",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/678",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495227788.067608",
        "date": 1495227788067
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-302810636|#674: (How to) Access local file during bootstrap?>",
                "text": "And actually, in 2.4, I am planning on changing `%post` to something that makes more sense as to what it is actually doing... Perhaps something like `%install` or `%build` or something. `%post` is misleading in that what is it coming after? Who knows? I used to know, but we added more things that come after, so post isn't really post anymore. Very confusing. lol",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-302810636|#674: (How to) Access local file during bootstrap?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495227778.065673",
        "date": 1495227778065
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-302810256|#674: (How to) Access local file during bootstrap?>",
                "text": "and @nielsaka thanks for the kind words!! I will fix those docs immediately!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-302810256|#674: (How to) Access local file during bootstrap?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495227653.039959",
        "date": 1495227653039
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-302810092|#674: (How to) Access local file during bootstrap?>",
                "text": "And now that I'm thinking of it, I sort of like `%files-pre` a bit better (it's shorter) and better sandwiches the `%post` section , so I'll leave the specific name up to you.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-302810092|#674: (How to) Access local file during bootstrap?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495227600.027713",
        "date": 1495227600027
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue re-opened: <https://github.com/singularityware/singularity/issues/662|#662 ERROR: Could not remove run directory (...) Directory not empty> by <https://github.com/chrisfilo|chrisfilo>",
                "text": "[singularityware/singularity] Issue re-opened: <https://github.com/singularityware/singularity/issues/662|#662 ERROR: Could not remove run directory (...) Directory not empty> by <https://github.com/chrisfilo|chrisfilo>",
                "id": 1,
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495227556.018804",
        "date": 1495227556018
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-302809847|#674: (How to) Access local file during bootstrap?>",
                "text": "@gmkurtzer - I would advocate for %files-setup so it's clear that it corresponds to setup. And then we would support `%files` as we do now, moving files after boostrap (because it's more likely the location where they are being moved to doesn't exist). Given that we support `%files-pre`, we should also support `%files-post`, because if I stumbled on a spec file and saw:\n\n```\n%files-pre\n\n%post\n\n%files-post\n```\n\nthat would make a lot of sense to me, whereas this should work:\n\n```\n%files-pre\n\n%post\n\n%files\n```\n\nalthough it is less clear. And the current spec we have now is also still reasonable, but it should default to be `%files-post`\n\n```\n%files\n\n*happens after bootstrap*\n\n```\n\nAnd even if a user does something like this, we would still want it to work, and `%files` and `%files-post` should be treated equally:\n\n```\n%files\nbla bla\n\n%files-post\nbla2 bla2\n```\n\nThis is probably why Docker has taken a line by line approach (well along with the layers thing) - it gives the user more control over order of operations. I sort of like the way we do it, because we don't want to have to parse the %post section line by line looking for something like %file.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-302809847|#674: (How to) Access local file during bootstrap?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495227527.012815",
        "date": 1495227527012
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-302809789|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "text": "@chrisfilo I apologize, I realized I broke something else after I committed what you tested. Would you mind running the test one more time please?\n\nThank you!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-302809789|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495227509.009065",
        "date": 1495227509009
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/662|#662 ERROR: Could not remove run directory (...) Directory not empty> by <https://github.com/chrisfilo|chrisfilo>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/662|#662 ERROR: Could not remove run directory (...) Directory not empty> by <https://github.com/chrisfilo|chrisfilo>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495227416.990233",
        "date": 1495227416990
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-302809366|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "text": "I just tested with the latest commit and this issue does not show up anymore. Thanks for the fix @gmkurtzer!",
                "pretext": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-302809366|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495227415.990164",
        "date": 1495227415990
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-302808647|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "text": "I was about to comment! @gmkurtzer is doing some changes to handle these temporary directories, so another test would be good :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-302808647|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495227173.940529",
        "date": 1495227173940
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/667#issuecomment-302806621|#667: [Feautre_Request] Call shub from a def file>",
                "text": "I think your easiest case (for now) would be to harness docker - make a\nbase that is a docker image, and then use that as a base for additional\napps. This is functionality that is currently supported, and it's pretty\ntrivial to write a Dockerfile and have it built on the hub Eg:\n\nBoostrap: docker\n&gt; From zane/base-image\n&gt; \n&gt; %post\n&gt; git clone https:www.github.com/zane/another-module\n&gt; cd another-module\n&gt; ... etc\nThe original image would be cached as docker layers, and easily reused\nwithout needing to build.\n\nOn Fri, May 19, 2017 at 4:37 PM, Goldstone, Robin J. <mailto:goldstone1@llnl.gov|goldstone1@llnl.gov>\nwrote:\n\n&gt; Vanessa – I agree there are a number of interesting things to consider\n&gt; along the lines of composability.  But that aside, I am wondering if there\n&gt; is a more straightforward solution for Zane.  If the issue is the time it\n&gt; takes to rebuild the base image, why not just write a def file that creates\n&gt; an OS image and nothing else.  Then just make multiple copies of that image\n&gt; then make corresponding def files that add in your app install in the %post\n&gt; section.\n&gt; \n&gt; Example: create “base.def” file that defines a basic OS install. Something\n&gt; like this:\n&gt; BootStrap: debootstrap\n&gt; OSVersion: trusty\n&gt; MirrorURL: <http://us.archive.ubuntu.com/ubuntu/>\n&gt; \n&gt; Create the container and boostrap it:\n&gt; sudo singularity create –s 1024 base.img\n&gt; sudo singularity bootstrap base.img base.def\n&gt; \n&gt; When it is done, just make a copy of it:\n&gt; cp base.img app1.img\n&gt; \n&gt; Now create app1.def with appropriate %post section to install app1 e.g.\n&gt; BootStrap: debootstrap\n&gt; OSVersion: trusty\n&gt; MirrorURL: <http://us.archive.ubuntu.com/ubuntu/>\n&gt; \n&gt; %post\n&gt;     cd /tmp\n&gt;     git clone <https://github.com/open-mpi/ompi.git>\n&gt;     etc…\n&gt; \n&gt; Even though you still have the code in there to bootstrap the OS,\n&gt; Singularity will find the OS is already there so it will just execute the\n&gt; %post section.  You can make multiple copies of base.img and create\n&gt; corresponding def files to customize them differently in this way.\n&gt; \n&gt; Is that the kind of thing you were looking for?\n&gt; \n&gt; Regards,\n&gt; Robin G.\n&gt; \n&gt; From: vanessa s <mailto:vsochat@gmail.com|vsochat@gmail.com>\n&gt; Reply-To: \"singularity@lbl.gov\" <mailto:singularity@lbl.gov|singularity@lbl.gov>\n&gt; Date: Friday, May 19, 2017 at 12:39 PM\n&gt; To: singularityware/singularity &lt;reply+000c6cf252b5a099476d2b20f987c3\n&gt; 2e441469693a60e79b92cf000000011536fbfb92a169ce0d98c136@reply.github.com&gt;,\n&gt; \"singularity@lbl.gov\" <mailto:singularity@lbl.gov|singularity@lbl.gov>\n&gt; Cc: singularityware/singularity <mailto:singularity@noreply.github.com|singularity@noreply.github.com>, Comment\n&gt; <mailto:comment@noreply.github.com|comment@noreply.github.com>\n&gt; Subject: [Singularity] Re: [singularityware/singularity] [Feautre_Request]\n&gt; Call shub from a def file (#667)\n&gt; \n&gt; Hi Zane,\n&gt; \n&gt; This is a very important question, but also a complicated one.  I'm\n&gt; including this to the list so others can think about it too. When we start\n&gt; to talk about importing other images, this asks the question \"what\n&gt; encompasses an image?\" The Docker approach is to have images composed of\n&gt; layers, which isn't an approach best fit for science because it means that\n&gt; you can potentially have containers with missing dependencies, and you\n&gt; cannot trust that you image A is exactly what the author designed it to be.\n&gt; It's not the sparsest solution, but with a Singularity image being \"an\n&gt; entire thing\" we can ensure that, years down the road, if you find a\n&gt; container, you can do a checksum with some unique id provided by the author\n&gt; and verify it is exactly what it is supposed to be. This isn't a problem of\n&gt; \"how do we implement this\" - there are several options there, none of which\n&gt; are technically hard. We could take an approach and move things around like\n&gt; tar balls (essentially what Docker does, and what we do to support it). But\n&gt; having containers depend on other containers starts to get messy very\n&gt; quickly, because it moves away from our current model toward something that\n&gt; looks more like Docker.\n&gt; \n&gt; However, this is a really important question, not only because we would\n&gt; want to have some ability to put pieces together like legos in a larger\n&gt; orchestration, but also because the design schema that we come up with is\n&gt; going to drive how people build their scientific tools. If we provide\n&gt; support for a model that allows overlays and combining things, that\n&gt; encourages less ideal practice where things are more likely to break\n&gt; because of dependencies. The approach I believe we are going to test first\n&gt; (not with 2.3, of course, but maybe 2.4) is to think of how a lot of this\n&gt; functionality could be addressed with simple mounting. You could think of\n&gt; this like a data containers, meaning that you can define how two containers\n&gt; are mounted together, but each in isolation is complete to do what it was\n&gt; intended to do. This would support software that could be mounted and run\n&gt; with this sort of fashion, but again, the more fingers that the software\n&gt; needs to stick into the other container, the harder it would get.\n&gt; \n&gt; Again from the reproducibility standpoint, with the current landscape we\n&gt; are going to start to see a LOT of containers. Very soon, if not already.\n&gt; For example, when you browse around and find 150 containers called\n&gt; tensorflow, how do you know which one is best? How are they\n&gt; different/similar? my thinking is that our first task should be efforts to\n&gt; organize and compare these containers. We can then have easy ways to\n&gt; reliably say \"we know this group is similar in having tensorflow for\n&gt; versions x,y,z, and now we can run to compare how this variable (version)\n&gt; influences our result.\" and then we can make recommendations for different\n&gt; configurations of things and application goals, and (hopefully) narrow down\n&gt; the landscape to point out the better images of the bunch. This is\n&gt; different from a Docker/Github approach, where obviously the entities would\n&gt; want to incentivize you to make as many containers/repos as possible.\n&gt; \n&gt; Anyway - trust that this question is very important. I don't think the\n&gt; right thing is to just dump containers into one another, but some other\n&gt; solution that supports and encourages reproducibility, while not breaking\n&gt; trust in provided containers.\n&gt; \n&gt; Best,\n&gt; \n&gt; Vanessa\n&gt; \n&gt; On Fri, May 19, 2017 at 2:31 PM, Zane Westover <mailto:notifications@github.com|notifications@github.com>\n&gt; wrote:\n&gt; Is there a way to have a LOCAL base singularity image to use as the\n&gt; starting point of others? For instance:\n&gt; BootStrap: singularity\n&gt; image_path: xxx # Path and filename if Image_id on local host\n&gt; I have several containers that I want to build that all have a large file\n&gt; base in common. It takes HOURS to build the base image and would only be a\n&gt; few minutes to do the last piece for each specific application. Instead,\n&gt; currently my definition files are all 98% identical except for the fact\n&gt; that they are inevitably 0% identical.\n&gt; —\n&gt; You are receiving this because you commented.\n&gt; Reply to this email directly, view it on GitHub, or mute the thread.\n&gt; \n&gt; --\n&gt; Vanessa Villamia Sochat\n&gt; Stanford University '16\n&gt; \n&gt; *(603) 321-0676*\n&gt; \n&gt; You received this message because you are subscribed to the Google Groups\n&gt; \"singularity\" group.\n&gt; To unsubscribe from this group and stop receiving emails from it, send an\n&gt; email to singularity+unsubscribe@lbl.gov.\n&gt; \n&gt; --\n&gt; You received this message because you are subscribed to the Google Groups\n&gt; \"singularity\" group.\n&gt; To …",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/667#issuecomment-302806621|#667: [Feautre_Request] Call shub from a def file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495226589.820006",
        "date": 1495226589820
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/667#issuecomment-302805463|#667: [Feautre_Request] Call shub from a def file>",
                "text": "Vanessa – I agree there are a number of interesting things to consider along the lines of composability.  But that aside, I am wondering if there is a more straightforward solution for Zane.  If the issue is the time it takes to rebuild the base image, why not just write a def file that creates an OS image and nothing else.  Then just make multiple copies of that image then make corresponding def files that add in your app install in the %post section.\n\nExample: create “base.def” file that defines a basic OS install. Something like this:\nBootStrap: debootstrap\nOSVersion: trusty\nMirrorURL: <http://us.archive.ubuntu.com/ubuntu/>\n\nCreate the container and boostrap it:\nsudo singularity create –s 1024 base.img\nsudo singularity bootstrap base.img base.def\n\nWhen it is done, just make a copy of it:\ncp base.img app1.img\n\nNow create app1.def with appropriate %post section to install app1 e.g.\nBootStrap: debootstrap\nOSVersion: trusty\nMirrorURL: <http://us.archive.ubuntu.com/ubuntu/>\n\n%post\n    cd /tmp\n    git clone <https://github.com/open-mpi/ompi.git>\n    etc…\n\nEven though you still have the code in there to bootstrap the OS, Singularity will find the OS is already there so it will just execute the %post section.  You can make multiple copies of base.img and create corresponding def files to customize them differently in this way.\n\nIs that the kind of thing you were looking for?\n\nRegards,\nRobin G.\n\nFrom: vanessa s <mailto:vsochat@gmail.com|vsochat@gmail.com>\nReply-To: \"singularity@lbl.gov\" <mailto:singularity@lbl.gov|singularity@lbl.gov>\nDate: Friday, May 19, 2017 at 12:39 PM\nTo: singularityware/singularity <mailto:reply@reply.github.com|reply@reply.github.com>, \"singularity@lbl.gov\" <mailto:singularity@lbl.gov|singularity@lbl.gov>\nCc: singularityware/singularity <mailto:singularity@noreply.github.com|singularity@noreply.github.com>, Comment <mailto:comment@noreply.github.com|comment@noreply.github.com>\nSubject: [Singularity] Re: [singularityware/singularity] [Feautre_Request] Call shub from a def file (#667)\n\nHi Zane, \n\nThis is a very important question, but also a complicated one.  I'm including this to the list so others can think about it too. When we start to talk about importing other images, this asks the question \"what encompasses an image?\" The Docker approach is to have images composed of layers, which isn't an approach best fit for science because it means that you can potentially have containers with missing dependencies, and you cannot trust that you image A is exactly what the author designed it to be. It's not the sparsest solution, but with a Singularity image being \"an entire thing\" we can ensure that, years down the road, if you find a container, you can do a checksum with some unique id provided by the author and verify it is exactly what it is supposed to be. This isn't a problem of \"how do we implement this\" - there are several options there, none of which are technically hard. We could take an approach and move things around like tar balls (essentially what Docker does, and what we do to support it). But having containers depend on other containers starts to get messy very quickly, because it moves away from our current model toward something that looks more like Docker.\n\nHowever, this is a really important question, not only because we would want to have some ability to put pieces together like legos in a larger orchestration, but also because the design schema that we come up with is going to drive how people build their scientific tools. If we provide support for a model that allows overlays and combining things, that encourages less ideal practice where things are more likely to break because of dependencies. The approach I believe we are going to test first (not with 2.3, of course, but maybe 2.4) is to think of how a lot of this functionality could be addressed with simple mounting. You could think of this like a data containers, meaning that you can define how two containers are mounted together, but each in isolation is complete to do what it was intended to do. This would support software that could be mounted and run with this sort of fashion, but again, the more fingers that the software needs to stick into the other container, the harder it would get.\n\nAgain from the reproducibility standpoint, with the current landscape we are going to start to see a LOT of containers. Very soon, if not already. For example, when you browse around and find 150 containers called tensorflow, how do you know which one is best? How are they different/similar? my thinking is that our first task should be efforts to organize and compare these containers. We can then have easy ways to reliably say \"we know this group is similar in having tensorflow for versions x,y,z, and now we can run to compare how this variable (version) influences our result.\" and then we can make recommendations for different configurations of things and application goals, and (hopefully) narrow down the landscape to point out the better images of the bunch. This is different from a Docker/Github approach, where obviously the entities would want to incentivize you to make as many containers/repos as possible.\n \nAnyway - trust that this question is very important. I don't think the right thing is to just dump containers into one another, but some other solution that supports and encourages reproducibility, while not breaking trust in provided containers.\n\nBest,\n\nVanessa\n\nOn Fri, May 19, 2017 at 2:31 PM, Zane Westover <mailto:notifications@github.com|notifications@github.com> wrote:\nIs there a way to have a LOCAL base singularity image to use as the starting point of others? For instance:\nBootStrap: singularity\nimage_path: xxx # Path and filename if Image_id on local host\nI have several containers that I want to build that all have a large file base in common. It takes HOURS to build the base image and would only be a few minutes to do the last piece for each specific application. Instead, currently my definition files are all 98% identical except for the fact that they are inevitably 0% identical.\n—\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n-- \nVanessa Villamia Sochat\nStanford University '16\n\n*(603) 321-0676*\n\nYou received this message because you are subscribed to the Google Groups \"singularity\" group.\nTo unsubscribe from this group and stop receiving emails from it, send an email to singularity+unsubscribe@lbl.gov.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/667#issuecomment-302805463|#667: [Feautre_Request] Call shub from a def file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495226251.748253",
        "date": 1495226251748
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#677 Tweaks to Development as we test/ go over docs' https://github.com/singularityware/singularity/pull/677 by vsoch",
                "text": "I'll be updating this PR with small changes to descriptions, docs, etc. You can merge at any time (and I'll open again) or just leave and merge with one swift FWOOP.\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#677 Tweaks to Development as we test/ go over docs",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/677",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495226226.742911",
        "date": 1495226226742
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/667#issuecomment-302793456|#667: [Feautre_Request] Call shub from a def file>",
                "text": "Hi Zane,\n\nThis is a very important question, but also a complicated one.  I'm\nincluding this to the list so others can think about it too. When we start\nto talk about importing other images, this asks the question \"what\nencompasses an image?\" The Docker approach is to have images composed of\nlayers, which isn't an approach best fit for science because it means that\nyou can potentially have containers with missing dependencies, and you\ncannot trust that you image A is exactly what the author designed it to be.\nIt's not the sparsest solution, but with a Singularity image being \"an\nentire thing\" we can ensure that, years down the road, if you find a\ncontainer, you can do a checksum with some unique id provided by the author\nand verify it is exactly what it is supposed to be. This isn't a problem of\n\"how do we implement this\" - there are several options there, none of which\nare technically hard. We could take an approach and move things around like\ntar balls (essentially what Docker does, and what we do to support it). But\nhaving containers depend on other containers starts to get messy very\nquickly, because it moves away from our current model toward something that\nlooks more like Docker.\n\nHowever, this is a really important question, not only because we would\nwant to have some ability to put pieces together like legos in a larger\norchestration, but also because the design schema that we come up with is\ngoing to drive how people build their scientific tools. If we provide\nsupport for a model that allows overlays and combining things, that\nencourages less ideal practice where things are more likely to break\nbecause of dependencies. The approach I believe we are going to test first\n(not with 2.3, of course, but maybe 2.4) is to think of how a lot of this\nfunctionality could be addressed with simple mounting. You could think of\nthis like a data containers, meaning that you can define how two containers\nare mounted together, but each in isolation is complete to do what it was\nintended to do. This would support software that could be mounted and run\nwith this sort of fashion, but again, the more fingers that the software\nneeds to stick into the other container, the harder it would get.\n\nAgain from the reproducibility standpoint, with the current landscape we\nare going to start to see a LOT of containers. Very soon, if not already.\nFor example, when you browse around and find 150 containers called\ntensorflow, how do you know which one is best? How are they\ndifferent/similar? my thinking is that our first task should be efforts to\norganize and compare these containers. We can then have easy ways to\nreliably say \"we know this group is similar in having tensorflow for\nversions x,y,z, and now we can run to compare how this variable (version)\ninfluences our result.\" and then we can make recommendations for different\nconfigurations of things and application goals, and (hopefully) narrow down\nthe landscape to point out the better images of the bunch. This is\ndifferent from a Docker/Github approach, where obviously the entities would\nwant to incentivize you to make as many containers/repos as possible.\n\nAnyway - trust that this question is very important. I don't think the\nright thing is to just dump containers into one another, but some other\nsolution that supports and encourages reproducibility, while not breaking\ntrust in provided containers.\n\nBest,\n\nVanessa\n\nOn Fri, May 19, 2017 at 2:31 PM, Zane Westover <mailto:notifications@github.com|notifications@github.com>\nwrote:\n\n&gt; Is there a way to have a LOCAL base singularity image to use as the\n&gt; starting point of others? For instance:\n&gt; BootStrap: singularity\n&gt; image_path: xxx # Path and filename if Image_id on local host\n&gt; \n&gt; I have several containers that I want to build that all have a large file\n&gt; base in common. It takes HOURS to build the base image and would only be a\n&gt; few minutes to do the last piece for each specific application. Instead,\n&gt; currently my definition files are all 98% identical except for the fact\n&gt; that they are inevitably 0% identical.\n&gt; \n&gt; —\n&gt; You are receiving this because you commented.\n&gt; Reply to this email directly, view it on GitHub\n&gt; <https://github.com/singularityware/singularity/issues/667#issuecomment-302778205>,\n&gt; or mute the thread\n&gt; <https://github.com/notifications/unsubscribe-auth/AAxs8g0wjw6Z8dfVkYwNdAml6dMWnWPaks5r7d_7gaJpZM4NYhvj>\n&gt; .\n-- \nVanessa Villamia Sochat\nStanford University '16\n(603) 321-0676",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/667#issuecomment-302793456|#667: [Feautre_Request] Call shub from a def file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495222778.981374",
        "date": 1495222778981
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/676#issuecomment-302790311|#676: singularity.spec %description is outdated>",
                "text": "How about like:\n\n```%description\nSingularity provides functionality to make portable\ncontainers that can be used across host environments.\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/676#issuecomment-302790311|#676: singularity.spec %description is outdated>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495221895.779568",
        "date": 1495221895779
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/676#issuecomment-302789370|#676: singularity.spec %description is outdated>",
                "text": "yeah I'll put in a change for a PR, right now it reads:\n```%description\nSingularity provides functionality to build the smallest most minimal\npossible containers, and running those containers as single application\nenvironments.\n```\nand I think what it's (sort of) getting at is a desire of modularity for function of containers.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/676#issuecomment-302789370|#676: singularity.spec %description is outdated>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495221615.716343",
        "date": 1495221615716
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#676 singularity.spec %description is outdated' https://github.com/singularityware/singularity/issues/676 by DrDaveD",
                "text": "The %description in singularity.spec talks about building the smallest most minimal possible containers, but that's not much like the current description of what singularity is (on the <http://singularity.lbl.gov|website>).",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/DrDaveD|DrDaveD>",
                "title": "#676 singularity.spec %description is outdated",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/676",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495221335.653523",
        "date": 1495221335653
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/667#issuecomment-302785607|#667: [Feautre_Request] Call shub from a def file>",
                "text": "I think it can be implemented. \n\n&gt; How?: \nMoun both conatiners, the &lt;source&gt;  img as read only, and  then doing a `cp` or a `sync` &lt;source&gt; &lt;destination&gt; and then start the normal bootstrap workflow. \n#\n\nI think this could be a feature for 2.4, since 2.3 is lock down.",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/667#issuecomment-302785607|#667: [Feautre_Request] Call shub from a def file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495220617.485298",
        "date": 1495220617485
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by zanewestover on issue <https://github.com/singularityware/singularity/issues/667#issuecomment-302778205|#667: [Feautre_Request] Call shub from a def file>",
                "text": "Is there a way to have a LOCAL base singularity image to use as the starting point of others? For instance:\nBootStrap: singularity\nimage_path: xxx  # Path and filename if Image_id on local host\n\nI have several containers that I want to build that all have a large file base in common. It takes HOURS to build the base image and would only be a few minutes to do the last piece for each specific application. Instead, currently my definition files are all 98% identical except for the fact that they are inevitably 0% identical.",
                "pretext": "[singularityware/singularity] New comment by zanewestover on issue <https://github.com/singularityware/singularity/issues/667#issuecomment-302778205|#667: [Feautre_Request] Call shub from a def file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495218683.991063",
        "date": 1495218683991
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-302757580|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "text": "@chrisfilo,\n\nWhen you ran it earlier there was an error output like:\n\n```Failed removing file: /tmp/.singularity-runtime.e9QOcU07/container/bids/mriqc:0.9.3/libwebp-0.5.2-linux-x86-64/include/webp\n```\n\nCan you rerun it again, and if you get that error can you send me the `ls -l` output of that file please?\n\nThank you!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-302757580|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495213336.600836",
        "date": 1495213336600
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-302724843|#674: (How to) Access local file during bootstrap?>",
                "text": "Hi @nielsaka,\n\nHrmm, you bring up an interesting point regarding the order of things. It seems we can either create a `%files-pre` (or something like that) section that will copy files before running `%post`, or you can use the `%setup` section as that runs from your current directory and then install into the path located at `$SINGULARITY_ROOTFS`.\n\nYou mentioned that you \"resorted to using `%section` and copying folders to `/tmp/`\". Can you elaborate on what you did there?\n\nBTW, you are right about the environment, good catch!\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-302724843|#674: (How to) Access local file during bootstrap?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495205646.467241",
        "date": 1495205646467
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by nielsaka on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-302688390|#674: (How to) Access local file during bootstrap?>",
                "text": "Thanks for the feedback! I checked the documentation, installed the development version and tried the `%files` section. The files were copied, but only after the `%post` section had been executed. So installing a local package this way didn't work out. I resorted to using `%section` and copying files and folders to `/tmp/`.\nAlso, since `cp` is mentioned I thought at first I could use options, such as `-R /folder/on/host /folder/in/container/`, but that is not supported apparently.\n\n One minor thing regarding the docs, the local `href`s don't work (but that might be due to viewing the file on github?) and in the <https://github.com/singularityware/singularityware.github.io/blob/docs/2.3/pages/docs/user-docs/docs-environment-metadata.md#environment|environment docs> I was only able to make `VARIABLE_NAME=VARIABLE_VALUE` work, not `VARIABLE_NAME VARIABLE_VALUE`.\n\n(and btw, thank you for this amazing project!)",
                "pretext": "[singularityware/singularity] New comment by nielsaka on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-302688390|#674: (How to) Access local file during bootstrap?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495196530.200818",
        "date": 1495196530200
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/675#issuecomment-302599963|#675: fixing printing of metadata to labels.json to be pretty>",
                "text": "Wahoo! Thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/675#issuecomment-302599963|#675: fixing printing of metadata to labels.json to be pretty>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495164774.005921",
        "date": 1495164774005
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/675|#675 fixing printing of metadata to labels.json to be pretty> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/675|#675 fixing printing of metadata to labels.json to be pretty> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495164765.005256",
        "date": 1495164765005
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/622#issuecomment-302599752|#622: mentioning googlegroup/gitter/slack/whatever in readme>",
                "text": "I think it's safe to close this - I don't think we are going to use Gitter anytime soon, unless it gets significantly better. Sorry @antonkulaga :(",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/622#issuecomment-302599752|#622: mentioning googlegroup/gitter/slack/whatever in readme>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495164655.996313",
        "date": 1495164655996
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/622|#622 mentioning googlegroup/gitter/slack/whatever in readme> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/622|#622 mentioning googlegroup/gitter/slack/whatever in readme> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495164654.996277",
        "date": 1495164654996
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/675#issuecomment-302599674|#675: fixing printing of metadata to labels.json to be pretty>",
                "text": "and to be specific, we can then address <https://github.com/singularityware/singularity/issues/651>",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/675#issuecomment-302599674|#675: fixing printing of metadata to labels.json to be pretty>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495164608.992403",
        "date": 1495164608992
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#675 fixing printing of metadata to labels.json to be pretty' https://github.com/singularityware/singularity/pull/675 by vsoch",
                "text": "This is a quick fix so the metadata returned in the .tar.gz is pretty! It goes from this:\n\n```{\"org.label-schema.version\":\"0.9.3\",\"org.label-schema.schema-version\":\"1.0\",\"org.label-schema.vcs-ref\":\"de60ff0\",\"org.label-schema.url\":\"http://mriqc.readthedocs.io\",\"org.label-schema.vcs-url\":\"https://github.com/poldracklab/mriqc\",\"org.label-schema.build-date\":\"2017-04-23T18:10:33Z\",\"org.label-schema.name\":\"MRIQC\",\"org.label-schema.description\":\"MRIQC-NR-IQMs(no-referenceImageQualityMetrics)forMRI\"}\n```\n\nto this:\n\n```vanessa@vanessa-ThinkPad-T460s:~/Desktop$ singularity exec docker.img cat /.singularity.d/labels.json\n{\n    \"org.label-schema.version\": \"0.9.3\",\n    \"org.label-schema.schema-version\": \"1.0\",\n    \"org.label-schema.vcs-ref\": \"de60ff0\",\n    \"org.label-schema.url\": \"http://mriqc.readthedocs.io\",\n    \"org.label-schema.vcs-url\": \"https://github.com/poldracklab/mriqc\",\n    \"org.label-schema.build-date\": \"2017-04-23T18:10:33Z\",\n    \"org.label-schema.name\": \"MRIQC\",\n    \"org.label-schema.description\": \"MRIQC  - NR-IQMs (no-reference Image Quality Metrics) for MRI\"\n}\n```\nThe reason was because we don't use the write_json function from sutils (because we are just generating the json string to be used in another function). This was an oversight on my part.\n\nand thus we can support an \"inspect\" command that isn't fugly :)\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#675 fixing printing of metadata to labels.json to be pretty",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/675",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495164554.987933",
        "date": 1495164554987
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/672#issuecomment-302563562|#672: Adds an option to override tmp directory>",
                "text": "So binding the home directory isn't quite as simple unless overlay is enabled. But the `-H` option is needed because it also updates the `/etc/passwd` and `/etc/group` files on demand so credentials and paths are taken care of properly.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/672#issuecomment-302563562|#672: Adds an option to override tmp directory>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495148136.325817",
        "date": 1495148136325
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-302561851|#670: Problem building RPM from Git source>",
                "text": "I can't replicate this. I've tried even creating users with gigantic UIDs on Centos7.3, but no issues found. This seems like a tar or autotools error and not Singularity, but I can't tell for sure.\n\nSorry.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-302561851|#670: Problem building RPM from Git source>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495147509.236334",
        "date": 1495147509236
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/673#issuecomment-302560435|#673: exec breaks with image directory in current development branch>",
                "text": "Fantastic!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/673#issuecomment-302560435|#673: exec breaks with image directory in current development branch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495147014.164114",
        "date": 1495147014164
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-302517614|#674: (How to) Access local file during bootstrap?>",
                "text": "just worked on the docs for bootstrap for 2.3, do you want to <https://github.com/singularityware/singularityware.github.io/blob/docs/2.3/pages/docs/user-docs/docs-bootstrap-image.md#bootstrapping-a-container|check them out here> and let me know if anything is unclear or should be better hashed out? Thank you!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-302517614|#674: (How to) Access local file during bootstrap?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495135849.715664",
        "date": 1495135849715
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-302467181|#674: (How to) Access local file during bootstrap?>",
                "text": "hey @nielsaka ! Yes we definitely need to have the docs updated - I am working on those for 2.3 now (with details about your question) and will post soon. The short answer is that for 2.3 (development branch) you can add files during bootstrap in a `%fies` section, eg:\n\n```%files\n/path/on/host/file /path/in/container/file\n```\n\nThis will use your standard copy (`cp`) command so the same general `&lt;source&gt;` and `&lt;destination&gt;` applies. For the older Singularity, you will need to copy files from the host to the variable `$SINGULARITY_ROOTFS` in the `%setup` section.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-302467181|#674: (How to) Access local file during bootstrap?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495125877.912513",
        "date": 1495125877912
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/673|#673 exec breaks with image directory in current development branch> by <https://github.com/DrDaveD|DrDaveD>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/673|#673 exec breaks with image directory in current development branch> by <https://github.com/DrDaveD|DrDaveD>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495124993.658569",
        "date": 1495124993658
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/673#issuecomment-302463215|#673: exec breaks with image directory in current development branch>",
                "text": "Yes, that fixed it.",
                "pretext": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/673#issuecomment-302463215|#673: exec breaks with image directory in current development branch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495124993.658542",
        "date": 1495124993658
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by nielsaka on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-302391547|#674: (How to) Access local file during bootstrap?>",
                "text": "Or, to put it differently, is it best practice to copy all the required local files to the host system's `/tmp/` before bootstrapping and then `cd /tmp/` during bootstrap?",
                "pretext": "[singularityware/singularity] New comment by nielsaka on issue <https://github.com/singularityware/singularity/issues/674#issuecomment-302391547|#674: (How to) Access local file during bootstrap?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495111163.505195",
        "date": 1495111163505
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#674 (How to) Access local file during bootstrap?' https://github.com/singularityware/singularity/issues/674 by nielsaka",
                "text": "Hi, I hope this is the right place to ask this question.\n\nI would like to use a local file on the host system to install something inside the container during the bootstrap process. However, I am having difficulties finding the file. I am not sure which parts of the host system are accessible during bootstrap. I gathered `/tmp/` is, but is the working directory of the bootstrap definition file or the directory where I run `singularity bootstrap` from as well?\n\nAs a workaround, I currently have a script that creates the container, bootstraps it and then runs\n\n`sudo singularity exec --writable -B $PWD:/home/my_dir container.img command`\n\nwhere `command` will do the installation using the files in the current working directory and `/home/my_dir` has been created in the container during bootstrapping.\n\nIt would be nicer, though, to have it mentioned in the bootstrap definition file and having it all take place during bootstrapping. I couldn't find anything in this regard in the documentation or in other issues. I am happy to be pointed at right place to look, though, of course.\n\nThanks!",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/nielsaka|nielsaka>",
                "title": "#674 (How to) Access local file during bootstrap?",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/674",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495110437.362889",
        "date": 1495110437362
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by verdurin on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-302367507|#670: Problem building RPM from Git source>",
                "text": "```$ touch tartest\n$ tar --posix -cf test.tar tartest\n$ echo $?\n0\n```",
                "pretext": "[singularityware/singularity] New comment by verdurin on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-302367507|#670: Problem building RPM from Git source>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495103880.307716",
        "date": 1495103880307
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hcraT on pull request <https://github.com/singularityware/singularity/pull/672#issuecomment-302339514|#672: Adds an option to override tmp directory>",
                "text": "Wouldn't make sense to apply the same reasoning to the home directory (I mean\nto move the home binding after user bind and so remove the `-H` option)?\n\nWhat about `--contain_dir` or `--contain_path` or `--contain_prefix` in this way the link between `--contain` and this option becomes obvious.",
                "pretext": "[singularityware/singularity] New comment by hcraT on pull request <https://github.com/singularityware/singularity/pull/672#issuecomment-302339514|#672: Adds an option to override tmp directory>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495096746.999011",
        "date": 1495096746999
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302280139|#408: Image generation should provide hash>",
                "text": "lol, let's wait for my paper to get reviewed and then pick up back on this ;O) The issue shall remain open!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302280139|#408: Image generation should provide hash>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495073039.399627",
        "date": 1495073039399
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302271539|#408: Image generation should provide hash>",
                "text": "Yep, exactly @vsoch! We need to still discuss how best to determine image equality. It is a good question and it needs answering!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302271539|#408: Image generation should provide hash>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495069197.011955",
        "date": 1495069197011
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302267222|#408: Image generation should provide hash>",
                "text": "yes! This is exactly why I made these different levels of reproducibility- you can generate the \"same\" image twice and it will be determined to be equal on the level REPLICATE but not IDENTICAL.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302267222|#408: Image generation should provide hash>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495067215.808204",
        "date": 1495067215808
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302262016|#408: Image generation should provide hash>",
                "text": "Even if a single file's timestamp changes inside a container, the container itself will have an entirely different hash/checksum. And things like timestamps will indeed change from one bootstrap to another, even with the same bootstrap recipe!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302262016|#408: Image generation should provide hash>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495064948.545882",
        "date": 1495064948545
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302261389|#408: Image generation should provide hash>",
                "text": "Okay, so I did some more experiments, and my bad, the checksum does changes, but it changes even though I build the same image (with the same content) again;;; I guess either way `shasum` against an image file is not suitable for image comparison. I guess this is the reason why you said the container comparison is an interesting topic.",
                "pretext": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302261389|#408: Image generation should provide hash>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495064686.513941",
        "date": 1495064686513
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-302259178|#670: Problem building RPM from Git source>",
                "text": "Can you try with the `--posix` tar flag. For example, this is something from RH's bugzilla, can you test and see if they have a regression:\n\n```  # useradd -u 160000000 biguid\n  # su biguid\n  $ cd /tmp\n  $ touch testfile\n  $ tar --posix -cf test.tar testfile\n  tar: value 16777216 out of uid_t range 0..2097151\n  tar: Exiting with failure status due to previous errors\n  $ echo $?\n  2\n```",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-302259178|#670: Problem building RPM from Git source>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495063763.398324",
        "date": 1495063763398
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by verdurin on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-302258255|#670: Problem building RPM from Git source>",
                "text": "Yes other tar operations are fine.",
                "pretext": "[singularityware/singularity] New comment by verdurin on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-302258255|#670: Problem building RPM from Git source>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495063377.349397",
        "date": 1495063377349
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-302253402|#670: Problem building RPM from Git source>",
                "text": "Can you tar up other things on that system?\n\nIt is very strange that your UID is falling outside of what tar thinks is the top of uid_t (as Centos7 uses a 64bit UID space not 32bit as tar seems to report).",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-302253402|#670: Problem building RPM from Git source>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495061544.098382",
        "date": 1495061544098
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by verdurin on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-302251095|#670: Problem building RPM from Git source>",
                "text": "My UID on that cluster is `30003777`.",
                "pretext": "[singularityware/singularity] New comment by verdurin on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-302251095|#670: Problem building RPM from Git source>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495060736.977923",
        "date": 1495060736977
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302239462|#408: Image generation should provide hash>",
                "text": "It seems to be working for me too:\n\ngmk@gmkdev2:~/git/singularity$ shasum /tmp/centos.img\ndc73d6a9aad0b21c1a5972d0a49b7392213934f6  /tmp/centos.img\ngmk@gmkdev2:~/git/singularity$ sudo singularity exec -w /tmp/centos.img sh\n-c \"echo '' &gt;&gt; /singularity\"\ngmk@gmkdev2:~/git/singularity$ shasum /tmp/centos.img\n65eccc149e6f565ba85509fb35c1e0737cb7bb09  /tmp/centos.img\n\nGreg\n\nOn Wed, May 17, 2017 at 12:45 PM, Vanessa Sochat <mailto:notifications@github.com|notifications@github.com>\nwrote:\n\n&gt; oh I see! Are you making changes to the actual runscript or the link to\n&gt; it? For example, the runscript is actually at /.singularity.d/runscript\n&gt; and the /singularity is just a link. Can you give me something to\n&gt; reproduce your error? What I did is:\n&gt; \n&gt; sha1sum coffee.img\n&gt; 3f6a212a0fc6d018457be2e6f3c8e8197abbbb43  coffee.img\n&gt; \n&gt; _Here I am making a trivial change to runscript_\n&gt; \n&gt; sudo singularity shell --writable coffee.img\n&gt; Singularity: Invoking an interactive shell within container...\n&gt; \n&gt; Singularity coffee.img:~&gt; vim /.singularity.d/runscript\n&gt; Singularity coffee.img:~&gt; exit\n&gt; \n&gt; exit\n&gt; \n&gt; _And now sha1sum is different_\n&gt; \n&gt; vanessa@vanessa-ThinkPad-T460s:~/Desktop$ sha1sum coffee.img b4cf583b5f3a6bf357d095137e7b5a7c2aa27244  coffee.img\n&gt; \n&gt; —\n&gt; You are receiving this because you were mentioned.\n&gt; Reply to this email directly, view it on GitHub\n&gt; <https://github.com/singularityware/singularity/issues/408#issuecomment-302211324>,\n&gt; or mute the thread\n&gt; <https://github.com/notifications/unsubscribe-auth/ANVkxaVo8UZyOybZDxIM7kND6C7S_zTqks5r605kgaJpZM4LJI9t>\n&gt; .",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302239462|#408: Image generation should provide hash>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495057199.349410",
        "date": 1495057199349
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/673#issuecomment-302238108|#673: exec breaks with image directory in current development branch>",
                "text": "OK, I think I got it now. Can you again test the latest development branch and let me know?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/673#issuecomment-302238108|#673: exec breaks with image directory in current development branch>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495056832.273201",
        "date": 1495056832273
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302211324|#408: Image generation should provide hash>",
                "text": "oh I see! Are you making changes to the actual runscript or the link to it? For example, the runscript is actually at `/.singularity.d/runscript` and the `/singularity` is just a link. Can you give me something to reproduce your error? What I did is:\n\n```\nsha1sum coffee.img \n3f6a212a0fc6d018457be2e6f3c8e8197abbbb43  coffee.img\n\n*Here I am making a trivial change to runscript*\n\nsudo singularity shell --writable coffee.img \nSingularity: Invoking an interactive shell within container...\n\nSingularity coffee.img:~&gt; vim /.singularity.d/runscript \nSingularity coffee.img:~&gt; exit\n\nexit\n\n*And now sha1sum is different*\n\nvanessa@vanessa-ThinkPad-T460s:~/Desktop$ sha1sum coffee.img b4cf583b5f3a6bf357d095137e7b5a7c2aa27244  coffee.img\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302211324|#408: Image generation should provide hash>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495050339.623036",
        "date": 1495050339623
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302209630|#408: Image generation should provide hash>",
                "text": "Right, as a matter of fact, I didn't actually expect Singularity to do anything special. I was just using Linux sha1sum/md5sum to get the checksum of the final Singularity image. I'm wondering why the checksum didn't change even though I did make some changes to the image... ",
                "pretext": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302209630|#408: Image generation should provide hash>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495050061.551099",
        "date": 1495050061551
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302206020|#408: Image generation should provide hash>",
                "text": "To be more clear, this is not implemented. I don't know what @gmkurtzer is using to generate a unique id, or other, but it isn't related to any of the methods I discussed or showed above.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302206020|#408: Image generation should provide hash>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495049471.397351",
        "date": 1495049471397
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302194947|#408: Image generation should provide hash>",
                "text": "Same image, same layers, everything *exactly* the same except one thing: I added 9 additional characters in the `%runscript` section. e.g. from `Rscript xyz.R` to `Rscript --vanilla xyz.R`\nI naturally (naively) thought that this would generate a different hash, but it didn't. How come?",
                "pretext": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302194947|#408: Image generation should provide hash>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495047360.824511",
        "date": 1495047360824
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/673#issuecomment-302188305|#673: exec breaks with image directory in current development branch>",
                "text": "Ok, the variant with -C now ends with\n```LOG     [U=3382,P=2]       main()                                    USER=dwd, IMAGE='osgvo:el6', COMMAND='exec'\nDEBUG   [U=3382,P=2]       action_exec()                             Checking for: /.singularity.d/actions/exec\nDEBUG   [U=3382,P=2]       action_exec()                             Checking for: /.exec\nWARNING [U=3382,P=2]       action_exec()                             Container does not have an exec helper script, calling 'bash' directly\nERROR   [U=3382,P=2]       action_exec()                             Failed to execvp() bash: No such file or directory\nABORT   [U=3382,P=2]       action_exec()                             Retval = 255\n```\n\nAh, so the issue appears to be the search PATH.  If I ask for /bin/bash instead of bash, it works.\n\nInterestingly, the shorter command without -C now works (if I add 'bash' to the end as I'm quite sure I had done before).  It ends in \n```EBUG   [U=3382,P=12921]   action_exec()                             Checking for: /.singularity.d/actions/exec\nDEBUG   [U=3382,P=12921]   action_exec()                             Checking for: /.exec\nWARNING [U=3382,P=12921]   action_exec()                             Container does not have an exec helper script, calling 'bash' directly\n```",
                "pretext": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/673#issuecomment-302188305|#673: exec breaks with image directory in current development branch>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495046077.457964",
        "date": 1495046077457
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302176086|#408: Image generation should provide hash>",
                "text": "The work I was doing wound up <https://github.com/singularityware/singularity-python/blob/master/singularity/reproduce.py#L496|here> and for that specific function, I was using md5. Likely for the image we should use sha256.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302176086|#408: Image generation should provide hash>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495044196.914927",
        "date": 1495044196914
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302174839|#408: Image generation should provide hash>",
                "text": "hey @hisplan ! We had originally intended this to be part of Singularity proper, and at one point @gmkurtzer added a random uuid generation (not a hash) but I don't think this was developed further. I did more work on these hash sums for a paper that I am working on, but no decisions / finality ever was integrated into the software proper. I came up with the above hoping to add, but it looks like the issue got lost in the nethers. @gmkurtzer, did you intend to add for 2.3? ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302174839|#408: Image generation should provide hash>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495043922.830902",
        "date": 1495043922830
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302173040|#408: Image generation should provide hash>",
                "text": "Hi,\n\nSo I've been creating a checksum for my image (e.g. `shasum -a 256 test.img`), and today I noticed that a small change that I made in `%runscript` section didn't actually change the checksum. :scream: \nI'm using version 2.2.1 and would like to know the best way to make a hash for my image. or is the has already being provided somewhere?",
                "pretext": "[singularityware/singularity] New comment by hisplan on issue <https://github.com/singularityware/singularity/issues/408#issuecomment-302173040|#408: Image generation should provide hash>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495043528.716263",
        "date": 1495043528716
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/672#issuecomment-302114841|#672: Adds an option to override tmp directory>",
                "text": "Your logic makes sense, but I would prefer not to change so much. I think if I/we/you do this, the behavior would be in alignment with what you are hoping for:\n\nIf we move the order of operations so that user binds happen before `singularity_mount_tmp()` and check to see if `/tmp` and/or `/var/tmp` is already mounted via a user bind, and if so, skip it.\n\nIn that case, we can simply do what you originally requested:\n\n```$ singularity shell -B ~/tmp:/tmp container.img\n```\n\nAdditionally, your point about option nomenclature is a good one, I propose to change `--workdir` to `--tmpdir` as that seems truer to intent (with of course maintaining legacy support).",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/672#issuecomment-302114841|#672: Adds an option to override tmp directory>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495032560.397392",
        "date": 1495032560397
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-302109139|#670: Problem building RPM from Git source>",
                "text": "It is very weird, I can not seem to replicate that error:\n\n```...\ntest -n \"\" \\\n|| find \"singularity-2.2.99\" -type d ! -perm -755 \\\n        -exec chmod u+rwx,go+rx {} \\; -o \\\n  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \\; -o \\\n  ! -type d ! -perm -400 -exec chmod a+r {} \\; -o \\\n  ! -type d ! -perm -444 -exec /bin/sh /home/gmk/git/singularity/install-sh -c -m a+r {} {} \\; \\\n|| chmod -R a+r \"singularity-2.2.99\"\ntardir=singularity-2.2.99 &amp;&amp; ${TAR-tar} chof - \"$tardir\" | GZIP=--best gzip -c &gt;singularity-2.2.99.tar.gz\nmake[1]: Leaving directory `/home/gmk/git/singularity'\nif test -d \"singularity-2.2.99\"; then find \"singularity-2.2.99\" -type d ! -perm -200 -exec chmod u+w {} ';' &amp;&amp; rm -rf \"singularity-2.2.99\" || { sleep 5 &amp;&amp; rm -rf \"singularity-2.2.99\"; }; else :; fi\n[gmk@gmkdev1 singularity]$ ls -l singularity-2.2.99.tar.gz \n-rw-rw-r--. 1 gmk gmk 594547 May 17 07:30 singularity-2.2.99.tar.gz\n[gmk@gmkdev1 singularity]$ cat /etc/redhat-release \nCentOS Linux release 7.2.1511 (Core) \n[gmk@gmkdev1 singularity]$ id\nuid=1000(gmk) gid=1000(gmk) groups=1000(gmk),10(wheel) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023\n```\n\nWhat is your current UID (`id`)?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-302109139|#670: Problem building RPM from Git source>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495031511.058387",
        "date": 1495031511058
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/673#issuecomment-302106756|#673: exec breaks with image directory in current development branch>",
                "text": "Hi @DrDaveD, can you retest against the latest development branch which contains the above commit? There are no code changes here, but hopefully a bit more debug output which should help to figure out what is going on.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/673#issuecomment-302106756|#673: exec breaks with image directory in current development branch>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495031106.925307",
        "date": 1495031106925
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hcraT on pull request <https://github.com/singularityware/singularity/pull/672#issuecomment-302011329|#672: Adds an option to override tmp directory>",
                "text": "Hi,\nyou are right (of course :D ). However I have to say that I find the current options a bit confusing (both the naming and the semantics).\n\nIn the current status of the software in order to change the source tmp folder you need to set both contain and workdir. Moreover you need to:\n• set the workdir option to the prefix of the path where your source /tmp folder is\n• specify the -H option in order to prevent containment of the home directory (if all you need is to change the /tmp mountpoint)\n• the names of both the source and destination mountpoint are hard-coded (you could of course use the -B option in that case)\n• the contain option has important consequences (if all you want is to change the /tmp mountpoint)\n\nMy proposal would be:\n• remove the workdir option (whose name is in my opinion misleading becasue in docker the semantics is different, that semantics would be a nice addition in singularity as well)\n• make the --contain take an optional parameter (the path to be used as \"workdir\") if the option is present but no path is specified the workdir is set by default to the session-directory\n• keep the -H option and add the -T option to the dev branch.\n     In case you agree with the proposal would in your opinion be useful to add a --temp_var (or --var_temp) option as well?\n\nThanks.",
                "pretext": "[singularityware/singularity] New comment by hcraT on pull request <https://github.com/singularityware/singularity/pull/672#issuecomment-302011329|#672: Adds an option to override tmp directory>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1495006782.036200",
        "date": 1495006782036
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by verdurin on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-301929060|#670: Problem building RPM from Git source>",
                "text": "Makes no difference, I'm afraid.\nIn case you missed it in the big paste above, this must be part of the problem:\n```test -n \"\" \\\n|| find \"singularity-2.2.99\" -type d ! -perm -755 \\\n        -exec chmod u+rwx,go+rx {} \\; -o \\\n  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \\; -o \\\n  ! -type d ! -perm -400 -exec chmod a+r {} \\; -o \\\n  ! -type d ! -perm -444 -exec /bin/sh /home/camp/huffmaa/src/github/singularity/install-sh -c -m a+r {} {} \\; \\\n|| chmod -R a+r \"singularity-2.2.99\"\ntardir=singularity-2.2.99 &amp;&amp; ${TAR-tar} chof - \"$tardir\" | GZIP=--best gzip -c &gt;singularity-2.2.99.tar.gz\ntar: value 30003777 out of uid_t range 0..2097151\ntar: Exiting with failure status due to previous errors\n```",
                "pretext": "[singularityware/singularity] New comment by verdurin on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-301929060|#670: Problem building RPM from Git source>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494972228.253358",
        "date": 1494972228253
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#673 exec breaks with image directory in current development branch' https://github.com/singularityware/singularity/issues/673 by DrDaveD",
                "text": "In the current singularity development branch, on a centos7 host, the following command \n```singularity -d exec -C --home $HOME/root/home:/srv /cvmfs/singularity.opensciencegrid.org/opensciencegrid/osgvo:el6 bash\n```\nends in \n```VERBOSE [U=3382,P=2]       action_exec()                             Exec'ing /.exec\nERROR   [U=3382,P=2]       action_exec()                             Failed to execvp() /.exec: No such file or directory\nABORT   [U=3382,P=2]       action_exec()                             Retval = 255\n```\n\nSubstituting an image file works, and using shell instead of exec works.\n\nAlso, the shorter command\n```singularity -d exec /cvmfs/singularity.opensciencegrid.org/opensciencegrid/osgvo:el6\n```\nends in\n```VERBOSE [U=3382,P=24523]   action_exec()                             Exec'ing /.exec\nSegmentation fault\n```",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/DrDaveD|DrDaveD>",
                "title": "#673 exec breaks with image directory in current development branch",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/673",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494961405.534955",
        "date": 1494961405534
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/667#issuecomment-301832604|#667: [Feautre_Request] Call shub from a def file>",
                "text": "We can also implement a pull from shub, and then mount the container as read-write and then run a post. We can also have it expand the container if necessary.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/667#issuecomment-301832604|#667: [Feautre_Request] Call shub from a def file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494951038.521102",
        "date": 1494951038521
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-301832242|#670: Problem building RPM from Git source>",
                "text": "Can you use `development` branch instead of master? We are about to merge development into master.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-301832242|#670: Problem building RPM from Git source>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494950968.499999",
        "date": 1494950968499
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/660#issuecomment-301810643|#660: compiling singularity on RHEL 5>",
                "text": "I can't replicate this easily right now, but if anyone else can, that would be helpful!\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/660#issuecomment-301810643|#660: compiling singularity on RHEL 5>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494946917.179251",
        "date": 1494946917179
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/672#issuecomment-301809670|#672: Adds an option to override tmp directory>",
                "text": "Heya @hcraT,\n\nI think this option is satisfied by the `--workdir` and a `--temp` option would be redundant. Also, to consider this, we would have to move this to the 'development' GitHub branch as opposed to master.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/672#issuecomment-301809670|#672: Adds an option to override tmp directory>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494946734.113440",
        "date": 1494946734113
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#672 Adds an option to override tmp directory' https://github.com/singularityware/singularity/pull/672 by hcraT",
                "text": "As proposed in #642 adds the -T (--temp) option. This allows to override the\n/tmp directory similar to the -H (--home) option.",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/hcraT|hcraT>",
                "title": "#672 Adds an option to override tmp directory",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/672",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494936712.357589",
        "date": 1494936712357
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by Amjadhpc on issue <https://github.com/singularityware/singularity/issues/660#issuecomment-301694644|#660: compiling singularity on RHEL 5>",
                "text": "I tried v 2.1 . but hitting rpm errors while bootstraping\n\ns*ingularity bootstrap /tmp/centos7.img centos.def (The def file is used from examples directory).*\n\n when i try to bootstrap it gives me Rpm_check_debug vs depsolve errors.  I am using a local repo of Centos 7 instead of Centos 7 Mirror  (Thanks to  Wannacry cyber attack , my organization blocked yum ):) Not sure if this is the issue\nThe short summary of  errors is as follows\n\n*Transaction Summary*\n\nInstall    109 Package(s)\nUpdate       0 Package(s)\nRemove       0 Package(s)\n\nTotal download size: 58 M\n\n*Downloading Packages:*\n\nTotal                                                                                                   1.6 GB/s |  58 MB     00:00\nRunning rpm_check_debug\nERROR with rpm_check_debug vs depsolve:\nrpmlib(FileDigests) is needed by pygpgme-0.3-9.el7.x86_64\nrpmlib(PayloadIsXz) is needed by pygpgme-0.3-9.el7.x86_64\nrpmlib(FileDigests) is needed by bzip2-libs-1.0.6-12.el7.x86_64\nrpmlib(PayloadIsXz) is needed by bzip2-libs-1.0.6-12.el7.x86_64\n\nComplete!\n(1, [u'Please report this error in <http://yum.baseurl.org/report']>)",
                "pretext": "[singularityware/singularity] New comment by Amjadhpc on issue <https://github.com/singularityware/singularity/issues/660#issuecomment-301694644|#660: compiling singularity on RHEL 5>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494918389.178148",
        "date": 1494918389178
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by verdurin on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-301687741|#670: Problem building RPM from Git source>",
                "text": "This is from `master`.\n\nHere's the log, looks like there's a strange `uid` problem with tar:\n\nScript started on Tue 16 May 2017 07:21:50 BST\nkhuffmaa@ca170:~/src/github[huffmaa@ca170 github]$ cd singularity/\nkhuffmaa@ca170:~/src/github/singularity[huffmaa@ca170 singularity]$ ./autogen.sh\n+autoreconf -i -f\nlibtoolize: putting auxiliary files in `.'.\nlibtoolize: copying file `./ltmain.sh'\nlibtoolize: putting macros in AC_CONFIG_MACRO_DIR, `m4'.\nlibtoolize: copying file `m4/libtool.m4'\nlibtoolize: copying file `m4/ltoptions.m4'\nlibtoolize: copying file `m4/ltsugar.m4'\nlibtoolize: copying file `m4/ltversion.m4'\nlibtoolize: copying file `m4/lt~obsolete.m4'\nconfigure.ac:39: installing './compile'\nconfigure.ac:9: installing './config.guess'\nconfigure.ac:9: installing './config.sub'\nconfigure.ac:30: installing './install-sh'\nconfigure.ac:30: installing './missing'\nsrc/Makefile.am: installing './depcomp'\nkhuffmaa@ca170:~/src/github/singularity[huffmaa@ca170 singularity]$ ./configure --with-slurm\nchecking build system type... x86_64-unknown-linux-gnu\nchecking host system type... x86_64-unknown-linux-gnu\nchecking target system type... x86_64-unknown-linux-gnu\nchecking for a BSD-compatible install... /usr/bin/install -c\nchecking whether build environment is sane... yes\nchecking for a thread-safe mkdir -p... /usr/bin/mkdir -p\nchecking for gawk... gawk\nchecking whether make sets $(MAKE)... yes\nchecking whether make supports nested variables... yes\nchecking for style of include used by make... GNU\nchecking for gcc... gcc\nchecking whether the C compiler works... yes\nchecking for C compiler default output file name... a.out\nchecking for suffix of executables... \nchecking whether we are cross compiling... no\nchecking for suffix of object files... o\nchecking whether we are using the GNU C compiler... yes\nchecking whether gcc accepts -g... yes\nchecking for gcc option to accept ISO C89... none needed\nchecking dependency style of gcc... gcc3\nchecking how to run the C preprocessor... gcc -E\nchecking for grep that handles long lines and -e... /usr/bin/grep\nchecking for egrep... /usr/bin/grep -E\nchecking for ANSI C header files... yes\nchecking for sys/types.h... yes\nchecking for sys/stat.h... yes\nchecking for stdlib.h... yes\nchecking for string.h... yes\nchecking for memory.h... yes\nchecking for strings.h... yes\nchecking for inttypes.h... yes\nchecking for stdint.h... yes\nchecking for unistd.h... yes\nchecking minix/config.h usability... no\nchecking minix/config.h presence... no\nchecking for minix/config.h... no\nchecking whether it is safe to define *EXTENSIONS*... yes\nchecking how to print strings... printf\nchecking for a sed that does not truncate output... /usr/bin/sed\nchecking for fgrep... /usr/bin/grep -F\nchecking for ld used by gcc... /usr/bin/ld\nchecking if the linker (/usr/bin/ld) is GNU ld... yes\nchecking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\nchecking the name lister (/usr/bin/nm -B) interface... BSD nm\nchecking whether ln -s works... yes\nchecking the maximum length of command line arguments... 1572864\nchecking whether the shell understands some XSI constructs... yes\nchecking whether the shell understands \"+=\"... yes\nchecking how to convert x86_64-unknown-linux-gnu file names to x86_64-unknown-linux-gnu format... func_convert_file_noop\nchecking how to convert x86_64-unknown-linux-gnu file names to toolchain format... func_convert_file_noop\nchecking for /usr/bin/ld option to reload object files... -r\nchecking for objdump... objdump\nchecking how to recognize dependent libraries... pass_all\nchecking for dlltool... no\nchecking how to associate runtime and link libraries... printf %s\\n\nchecking for ar... ar\nchecking for archiver @FILE support... @\nchecking for strip... strip\nchecking for ranlib... ranlib\nchecking command to parse /usr/bin/nm -B output from gcc object... ok\nchecking for sysroot... no\nchecking for mt... no\nchecking if : is a manifest tool... no\nchecking for dlfcn.h... yes\nchecking for objdir... .libs\nchecking if gcc supports -fno-rtti -fno-exceptions... no\nchecking for gcc option to produce PIC... -fPIC -DPIC\nchecking if gcc PIC flag -fPIC -DPIC works... yes\nchecking if gcc static flag -static works... no\nchecking if gcc supports -c -o file.o... yes\nchecking if gcc supports -c -o file.o... (cached) yes\nchecking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes\nchecking whether -lc should be explicitly linked in... no\nchecking dynamic linker characteristics... GNU/Linux ld.so\nchecking how to hardcode library paths into programs... immediate\nchecking whether stripping libraries is possible... yes\nchecking if libtool supports shared libraries... yes\nchecking whether to build shared libraries... yes\nchecking whether to build static libraries... yes\nchecking for gcc... (cached) gcc\nchecking whether we are using the GNU C compiler... (cached) yes\nchecking whether gcc accepts -g... (cached) yes\nchecking for gcc option to accept ISO C89... (cached) none needed\nchecking dependency style of gcc... (cached) gcc3\nchecking dependency style of gcc... (cached) gcc3\nchecking whether gcc and cc understand -c and -o together... yes\nchecking for namespace: CLONE_NEWPID... yes\nchecking for namespace: CLONE_PID... no\nchecking for namespace: CLONE_FS... yes\nchecking for namespace: CLONE_NEWNS... yes\nchecking for namespace: CLONE_NEWUSER... yes\nchecking for namespace: CLONE_NEWIPC... yes\nchecking for feature: NO_NEW_PRIVS... yes\nchecking for feature: MS_SLAVE... yes\nchecking for feature: MS_REC... yes\nchecking for feature: MS_PRIVATE... yes\nchecking for setns... yes\nchecking for overlayfs... yes\nchecking --with-slurm... yes\nchecking slurm/spank.h usability... yes\nchecking slurm/spank.h presence... yes\nchecking for slurm/spank.h... yes\nyes\nchecking if suid should be enabled... yes\nchecking that generated files are newer than configure... done\nconfigure: creating ./config.status\nconfig.status: creating Makefile\nconfig.status: creating singularity.spec\nconfig.status: creating test.sh\nconfig.status: creating src/Makefile\nconfig.status: creating src/lib/Makefile\nconfig.status: creating src/lib/ns/Makefile\nconfig.status: creating src/lib/ns/ipc/Makefile\nconfig.status: creating src/lib/ns/mnt/Makefile\nconfig.status: creating src/lib/ns/pid/Makefile\nconfig.status: creating src/lib/ns/user/Makefile\nconfig.status: creating src/lib/rootfs/Makefile\nconfig.status: creating src/lib/rootfs/image/Makefile\nconfig.status: creating src/lib/rootfs/dir/Makefile\nconfig.status: creating src/lib/rootfs/squashfs/Makefile\nconfig.status: creating src/lib/action/Makefile\nconfig.status: creating src/lib/action/exec/Makefile\nconfig.status: creating src/lib/action/shell/Makefile\nconfig.status: creating src/lib/action/start/Makefile\nconfig.status: creating src/lib/action/stop/Makefile\nconfig.status: creating src/lib/action/test/Makefile\nconfig.status: creating src/lib/action/run/Makefile\nconfig.status: creating src/lib/file/Makefile\nconfig.status: creating src/lib/file/group/Makefile\nconfig.status: creating src/lib/file/passwd/Makefile\nconfig.status: creating src/lib/file/resolvconf/Makefile\nconfig.status: creating src/lib/file/entrypoint/Makefile\nconfig.status: creating src/lib/mount/Makefile\nconfig.status: creating src/lib/mount/cwd/Makefile\nconfig.status: creating src/lib/mount/dev/Makefile\nconfig.status: creating src/lib/mount/binds/Makefile\nconfig.status: creating src/lib/mount/home/Makefile\nconfig.status: creating src/lib/mount/hostfs/Makefile\nconfig.status: creating src/lib/mount/kernelfs/Makefile\nconfig.status: creating src/lib/mount/tmp/Makefile\nconfig.status: creating src/lib/mount/userbinds/Makefile\nconfig.status: creating src/lib/mount/scratch/Makefile\nconfig.status: creating src/lib/image/Makefile\nconfig.status: creating src/lib/image/mount/Makefile\nconfig.status: creating src/lib/image/bind/Makefile\nconfig.status: creating src/lib/image/create/Makefile\nconfig.status: creating src/lib/image/expand/Makefile\nconfig.status: creating src/lib/imag…",
                "pretext": "[singularityware/singularity] New comment by verdurin on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-301687741|#670: Problem building RPM from Git source>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494916080.897995",
        "date": 1494916080897
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hcraT on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-301682424|#642: bind paths and overlay in the configuration file>",
                "text": "I now see, by skimming through the code, that the folder is actually\nmounted on the session directory. What I would need however is a -T option\npretty much like the -H. I will create a pull request with the code that\nimplements the option.\n\nOn May 16, 2017 03:12, \"Gregory M. Kurtzer\" <mailto:notifications@github.com|notifications@github.com>\nwrote:\n\n&gt; There is a bug with regards to /tmp/ working with the trailing slash, but\n&gt; not without. But, trying to use a container that has an unwritable /tmp\n&gt; or $HOME would be bad. If you want to change the location of temporary\n&gt; directories, specify the --workdir.\n&gt; \n&gt; —\n&gt; You are receiving this because you were mentioned.\n&gt; Reply to this email directly, view it on GitHub\n&gt; <https://github.com/singularityware/singularity/issues/642#issuecomment-301647084>,\n&gt; or mute the thread\n&gt; <https://github.com/notifications/unsubscribe-auth/ABKrb4AudIu4jf-jbtWdK_WZIuUDoi3Dks5r6Pf1gaJpZM4NJ0Ph>\n&gt; .",
                "pretext": "[singularityware/singularity] New comment by hcraT on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-301682424|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494913920.683716",
        "date": 1494913920683
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/671#issuecomment-301665923|#671: Fixing test for size, and there was no bug with the uri>",
                "text": "happy dinosaur :O)",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/671#issuecomment-301665923|#671: Fixing test for size, and there was no bug with the uri>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494905493.962586",
        "date": 1494905493962
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/671#issuecomment-301665321|#671: Fixing test for size, and there was no bug with the uri>",
                "text": "Read and merged!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/671#issuecomment-301665321|#671: Fixing test for size, and there was no bug with the uri>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494905180.935918",
        "date": 1494905180935
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/671|#671 Fixing test for size, and there was no bug with the uri> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/671|#671 Fixing test for size, and there was no bug with the uri> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494905170.935091",
        "date": 1494905170935
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#671 Fixing test for size, and there was no bug with the uri' https://github.com/singularityware/singularity/pull/671 by vsoch",
                "text": "This is essentially the same PR as before #668 that was never merged, with just a tweak to some print output for the image uri. The reason it wasn't working was because the sha digest was incorrect.\n\nChanges proposed in this pull request\n\n• bla bla bla\n• nobody is reading this\n• sad dinosaur :*(\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#671 Fixing test for size, and there was no bug with the uri",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/671",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494904737.899304",
        "date": 1494904737899
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/668|#668 Update to size function> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/668|#668 Update to size function> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494904330.865877",
        "date": 1494904330865
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/660#issuecomment-301648972|#660: compiling singularity on RHEL 5>",
                "text": "Can you try to update to Singularity v2.1 or v2.2.1? We have dropped support in Singularity for RHEL5 in the development branch (soon to become 2.3), and it may have also had some incompatibilities in 2.2.1.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/660#issuecomment-301648972|#660: compiling singularity on RHEL 5>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494897926.254028",
        "date": 1494897926254
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/669|#669 Fixed debian build files according to new version> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/669|#669 Fixed debian build files according to new version> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494897804.241972",
        "date": 1494897804241
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/669#issuecomment-301648686|#669: Fixed debian build files according to new version>",
                "text": "Me too, thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/669#issuecomment-301648686|#669: Fixed debian build files according to new version>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494897801.241668",
        "date": 1494897801241
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-301647084|#642: bind paths and overlay in the configuration file>",
                "text": "There is a bug with regards to `/tmp/` working with the trailing slash, but not without. But, trying to use a container that has an unwritable `/tmp` or $HOME would be bad. If you want to change the location of temporary directories, specify the `--workdir`.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-301647084|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494897140.175451",
        "date": 1494897140175
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-301645645|#670: Problem building RPM from Git source>",
                "text": "What branch are you using?\n\nCan you upload the output of `make dist`?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/670#issuecomment-301645645|#670: Problem building RPM from Git source>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494896539.113763",
        "date": 1494896539113
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#670 Problem building RPM from Git source' https://github.com/singularityware/singularity/issues/670 by verdurin",
                "text": "I'm following the instructions at <http://singularity.lbl.gov/install-linux#build-an-rpm-from-source> and what I'm left with after running `make dist` is an empty tarball.\n\nThis is on a CentOS 7.2 machine.\n\nLet me know which specific logs you need to help debug this.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/verdurin|verdurin>",
                "title": "#670 Problem building RPM from Git source",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/670",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494889515.292933",
        "date": 1494889515292
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-301569192|#642: bind paths and overlay in the configuration file>",
                "text": "@hcraT  That's what singularity --contain does, it provides new $HOME and /tmp mountpoints that are unique to the container.  You can control the content of the mount points with -W/--workdir, and you can additionally override the home directory with -H/--homedir.",
                "pretext": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-301569192|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494874322.896473",
        "date": 1494874322896
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/669#issuecomment-301487127|#669: Fixed debian build files according to new version>",
                "text": "This looks good to me.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/669#issuecomment-301487127|#669: Fixed debian build files according to new version>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494857490.970151",
        "date": 1494857490970
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by hcraT on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-301450695|#642: bind paths and overlay in the configuration file>",
                "text": "Hi,\nI would like only to point out that singularity still create mounts within the container even if the --contain otion is specified. For example:\n```$ singularity exec --contain image.img mount | grep -E '(/home|/tmp)'\n/dev/sda2 on /tmp type ext4 (rw,relatime,errors=remount-ro,stripe=64,data=ordered)\n/dev/sda2 on /home/my_user type ext4 (rw,relatime,errors=remount-ro,stripe=64,data=ordered)\n```\nI report this because I need to mount something in place of /tmp but singularity complains about tmp being already mounted:\n```singularity exec --contain --bind ./mydir:/tmp:rw image.img ls -l /tmp/\nWARNING: Not mounting requested bind point (already mounted in container): /tmp\n```\nI solved it by using `/tmp/` instead of `/tmp` but it would be good to get completely rid of the mounts. Is there a reason for the folders being still mounted in the container?\n\nThanks.",
                "pretext": "[singularityware/singularity] New comment by hcraT on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-301450695|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494848403.948852",
        "date": 1494848403948
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#669 Fixed debian build files according to new version' https://github.com/singularityware/singularity/pull/669 by dexter2cz",
                "text": "Some minor changes to debian/*\n• TODO file is no more\n• AUTHORS renamed to AUTHORS.md",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/dexter2cz|dexter2cz>",
                "title": "#669 Fixed debian build files according to new version",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/669",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494843412.185447",
        "date": 1494843412185
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by Amjadhpc on issue <https://github.com/singularityware/singularity/issues/660#issuecomment-301414673|#660: compiling singularity on RHEL 5>",
                "text": "Hi @gmkurtzer \n\nI  am using Singularity v 2.0 . \nWhen i try to create centos 7 image  using RHEL 5.4 , i get segfault on image bind . It fails to bind\nAttaching the output of singularity create /tmp/centos7.img command\n\n<https://github.com/singularityware/singularity/files/1000524/out.docx|out.docx>",
                "pretext": "[singularityware/singularity] New comment by Amjadhpc on issue <https://github.com/singularityware/singularity/issues/660#issuecomment-301414673|#660: compiling singularity on RHEL 5>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494838155.227024",
        "date": 1494838155227
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301290375|#661: singularity shell of tar.gz images>",
                "text": "and @tobigithub this probably isn't what you want, but you can still pass around images that are .tar.gz, and then decompress (unfortunately yourself) before running. eg:\n\n```\nsingularity create parsnip.img\nsingularity import parsnip.img docker://ubuntu\ngzip -c -9 parsnip.img &gt; parsnip.img.gz\nrm parsnip.img\ngzip -d -f parsnip.img.gz # produces parsnip.img\nsingularity shell parsnip.img\nSingularity: Invoking an interactive shell within container...\n\nSingularity tempo.img:~/Desktop\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301290375|#661: singularity shell of tar.gz images>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494736333.570059",
        "date": 1494736333570
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301290189|#661: singularity shell of tar.gz images>",
                "text": "Yeah I just tried this out and I think there is a bug - the image should decompress before it is attempted to run or mount, and this is what was done with 2.2 (the images being built on Singularity hub have essentially this flow). Here is what we essentially do on Singularity hub (but using bootstrap):\n\n```singularity create parsnip.img\nsingularity import parsnip.img docker://ubuntu\ngzip -c -9 parsnip.img &gt; parsnip.img.gz\n```\n\nand for sanity check, I also tried an image generation that does bootstrap (which would require sudo as the above does not:\n\n```singularity create tempo.img\nsudo singularity bootstrap tempo.img Singularity\n gzip -c -9 tempo.img &gt; tempo.img.gz\n```\n(the contents of the `Singularity` file are doing a bootstrap docker with ubuntu, and nothing else:\n\nin both of these cases I reproduced your error:\n\n``` singularity shell tempo.img.gz \nERROR  : Failed to mount image in (read only): Invalid argument\nABORT  : Retval = 255\nvanessa@vanessa-ThinkPad-T4\n```\n\nI also tried with using sudo to create the image:\n\n```sudo singularity create tempo.img\nsudo singularity bootstrap tempo.img Singularity\n gzip -c -9 tempo.img &gt; tempo.img.gz\n```\n\nand the same error. In the case of the (old) version 2.2, this same thing _does_ work - the image is generated as above and then decompressed at runtime, for example\n\n```\n singularity pull shub://vsoch/hello-world\nDone. Container is at: ./vsoch-hello-world-master.img\nvanessa@vanessa-ThinkPad-T450s:~/Desktop$ singularity shell vsoch-hello-world-master.img \nSingularity: Invoking an interactive shell within container...\n\n$\n```\n\nbut it doesn't look like we are doing that step in the current version, it checks for directory, squashfs, no go:\n\n```VERBOSE [U=1000,P=2826]    singularity_image_mount()                 Checking what kind of image we are mounting\nDEBUG   [U=1000,P=2826]    singularity_image_mount_squashfs_check()  Image does not appear to be of type '.sqsh': parsnip.img.gz\nDEBUG   [U=1000,P=2826]    singularity_image_mount_dir_check()       Checking if image is a directory\nVERBOSE [U=1000,P=2826]    singularity_image_mount_dir_check()       Source path is not a directory: parsnip.img.gz\nVERBOSE [U=1000,P=2826]    singularity_image_mount()                 Attempting to mount as singularity image\nDEBUG   [U=1000,P=2826]    singularity_registry_get()                Returning NULL on 'WRITABLE'\nDEBUG   [U=1000,P=2826]    singularity_priv_escalate()               Temporarily escalating privileges (U=1000)\nDEBUG   [U=0,P=2826]       singularity_priv_escalate()               Clearing supplementary GIDs.\nVERBOSE [U=0,P=2826]       singularity_image_mount_image_mount()     Mounting /dev/loop2 in read/only to: /var/lib/singularity/mnt/source\nERROR   [U=0,P=2826]       singularity_image_mount_image_mount()     Failed to mount image in (read only): Invalid argument\n```\n\nand not sure if this is relevant, but the permissions are also different:\n\n```\nls -l parsnip.img*Done. Container is at: ./vsoch-hello-world-master.img\nvanessa@vanessa-ThinkPad-T450s:~/Desktop$ singularity shell vsoch-hello-world-master.img \nSingularity: Invoking an interactive shell within container...\n\n-rwxr-xr-x 1 vanessa vanessa 805306400 May 13 21:06 parsnip.img\n-rw-rw-r-- 1 vanessa vanessa  46841333 May 13 21:07 parsnip.img.gz\n```\n\n@gmkurtzer is it possible that the check for the file type / extension was not carried forward with the changes you made for 2.3?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301290189|#661: singularity shell of tar.gz images>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494735892.556814",
        "date": 1494735892556
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by tobigithub on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301289535|#661: singularity shell of tar.gz images>",
                "text": "@vsoch \n\n&gt; hey Tobias, are you treating the .img extension as a compressed image? Singularity uses the extension to determine the file type see here so if you are giving a .img that isn't actually one, I would suspect something might go wrong. If you try the above with the image extension properly specified, do you still get the error?\nHi Vanessa,\nyes indeed, that may be an issue, btw I pulled the singularity development version for CentOS, but had really troubles to run it as a simple user with sudo.  So I ended up running everything as root. Also I renamed the compressed Centos-7.img to Centos-7.img.tar.gz and tried to execute it, still same error.\n\nI would like to know the 4 commands to create an image, make it bootable, then compress it and run a singularity shell of the compressed file.",
                "pretext": "[singularityware/singularity] New comment by tobigithub on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301289535|#661: singularity shell of tar.gz images>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494734433.511224",
        "date": 1494734433511
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301289459|#661: singularity shell of tar.gz images>",
                "text": "Can't you just do:\n\n```gzip -c -9 container.img &gt; container.img.gz\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301289459|#661: singularity shell of tar.gz images>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494734273.506285",
        "date": 1494734273506
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by tobigithub on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301289410|#661: singularity shell of tar.gz images>",
                "text": "@jmstover  \n\n&gt; You're creating a tar of the Singularity code base there, and not a rootfs\n&gt; an OS install.... The directory you are in when you run that tar command,\n&gt; should be equivalent to the / directory of an OS install.\nThank  you Jason, OK. I am not a LINUX expert, what would be the appropriate commands to create an image file, make it bootable, compress it and execute it? ",
                "pretext": "[singularityware/singularity] New comment by tobigithub on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301289410|#661: singularity shell of tar.gz images>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494734153.503166",
        "date": 1494734153503
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301289388|#661: singularity shell of tar.gz images>",
                "text": "Yes +1 @jmstover... something is off that a command to create in a compressed file doesn't result in an extension that indicates it has been compressed.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301289388|#661: singularity shell of tar.gz images>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494734095.501682",
        "date": 1494734095501
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301289366|#661: singularity shell of tar.gz images>",
                "text": "hey Tobias, are you treating the `.img` extension as a compressed image? Singularity uses the extension to determine the file type <https://github.com/singularityware/singularity/blob/development/libexec/image-handler.sh#L225|see here> so if you are giving a `.img` that isn't actually one, I would suspect something might go wrong. If you try the above with the image extension properly specified, do you still get the error?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301289366|#661: singularity shell of tar.gz images>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494734049.500490",
        "date": 1494734049500
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by jmstover on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301289322|#661: singularity shell of tar.gz images>",
                "text": "Hi Tobias,\n\n&gt; _compressing file from 2 GB to 7 MB works_\n&gt; \n&gt; [root@localhost singularity]# tar cvzf /tmp/Centos-7.img .\nIn the above, you're overwriting Centos-7.img file, not compressing it. The\n'-c' option to tar is _create_. So, you're creating a new file named\n'Centos-7.img' with the contents of your current working directory (the '.'\nused).\n\nSo... I don't think that's doing what you're thinking it's doing.\n\n-J\n\nOn Sat, May 13, 2017 at 10:32 PM, Tobias Kind <mailto:notifications@github.com|notifications@github.com>\nwrote:\n\n&gt; Hi,\n&gt; now under CentOS 6.5. BTW many of the installations on the LBL wiki do not\n&gt; work out of the box\n&gt; due to permission settings, for example a user can install centos into a\n&gt; virtual machine, but is not\n&gt; part of the sudoer group. Many commands on the WIKI fail without deeper\n&gt; LINUX knowledge.\n&gt; So here all commands are executed as su (bad I know, just from a clean\n&gt; desktop vm install)\n&gt; \n&gt; _create image works_\n&gt; \n&gt; [root@localhost singularity]# singularity create --size 2048 /tmp/Centos-7.img\n&gt; \n&gt; _bootstrap the image works_\n&gt; \n&gt; [root@localhost singularity]# singularity bootstrap /tmp/Centos-7.img examples/centos.def\n&gt; \n&gt; _running singularity works_\n&gt; \n&gt; [root@localhost singularity]# singularity shell /tmp/Centos-7.img\n&gt; \n&gt; _compressing file from 2 GB to 7 MB works_\n&gt; \n&gt; [root@localhost singularity]# tar cvzf /tmp/Centos-7.img .\n&gt; \n&gt; _show the compressed image works_\n&gt; \n&gt; [root@localhost singularity]# ls -l /tmp/Centos-7.img\n&gt; -rwxr-xr-x. 1 root root 6612516 May 13 20:10 /tmp/Centos-7.img\n&gt; [root@localhost singularity]#\n&gt; \n&gt; _starting the image does not work_\n&gt; \n&gt; [root@localhost singularity]# singularity shell /tmp/Centos-7.img\n&gt; ERROR  : File is not a valid Singularity image, aborting...\n&gt; ABORT  : Retval = 255\n&gt; [root@localhost singularity]# singularity create --size 2048 /tmp/Centos-7.img\n&gt; \n&gt; I think many of the examples need to be tested on a clean install from and\n&gt; ISO (like I did with UBUNTU and CentOS) and the without any additional\n&gt; modifications the commands should be shown. For example in this case the\n&gt; image file is just compressed without *.tar.gz, so the singularity script\n&gt; might not catch that.\n&gt; \n&gt; The original question was how to execute a singularity shell with a\n&gt; compressed (tar.gz) image file.\n&gt; \n&gt; —\n&gt; You are receiving this because you were mentioned.\n&gt; Reply to this email directly, view it on GitHub\n&gt; <https://github.com/singularityware/singularity/issues/661#issuecomment-301288754>,\n&gt; or mute the thread\n&gt; <https://github.com/notifications/unsubscribe-auth/AA5zogiC1FY09VnsjKbBR0pN8M_aYV8fks5r5nXigaJpZM4NThx2>\n&gt; .",
                "pretext": "[singularityware/singularity] New comment by jmstover on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301289322|#661: singularity shell of tar.gz images>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494733964.498312",
        "date": 1494733964498
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by tobigithub on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301288754|#661: singularity shell of tar.gz images>",
                "text": "Hi,\nnow under CentOS 6.5. BTW many of the installations on the LBL wiki do not work out of the box\ndue to permission settings, for example a user can install centos into a virtual machine, but is not\npart of the sudoer group. Many commands on the WIKI fail without deeper LINUX knowledge.\nSo here all commands are executed as su (bad I know, just from a clean desktop vm install)\n\n````\n\n*create image works*\n\n[root@localhost singularity]# singularity create --size 2048 /tmp/Centos-7.img\n\n*bootstrap the image works*\n\n[root@localhost singularity]# singularity bootstrap /tmp/Centos-7.img examples/centos.def\n\n*running singularity works*\n\n[root@localhost singularity]# singularity shell /tmp/Centos-7.img\n\n*compressing file from 2 GB to 7 MB works*\n\n[root@localhost singularity]# tar cvzf /tmp/Centos-7.img . \n\n*show the compressed image works*\n\n[root@localhost singularity]# ls -l /tmp/Centos-7.img\n-rwxr-xr-x. 1 root root 6612516 May 13 20:10 /tmp/Centos-7.img\n[root@localhost singularity]#\n\n*starting the image does not work*\n\n[root@localhost singularity]# singularity shell /tmp/Centos-7.img\nERROR  : File is not a valid Singularity image, aborting...\nABORT  : Retval = 255\n[root@localhost singularity]# singularity create --size 2048 /tmp/Centos-7.img\n````\nI think many of the examples need to be tested on a clean install from and ISO (like I did with UBUNTU and CentOS) and the without any additional modifications the commands should be shown. For example in this case the image file is just compressed without *.tar.gz, so the singularity script might not catch that.\n\nThe original question was how to execute a singularity shell with a compressed (tar.gz) image file.",
                "pretext": "[singularityware/singularity] New comment by tobigithub on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301288754|#661: singularity shell of tar.gz images>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494732770.464976",
        "date": 1494732770464
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by jmstover on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301285692|#661: singularity shell of tar.gz images>",
                "image_url": "https://avatars0.githubusercontent.com/u/20306680?v=3&s=400",
                "image_width": 250,
                "image_height": 250,
                "image_bytes": 30181,
                "text": "Hi Tobias,\n\n&gt; vm@ubuntu:~/git/singularity$ tar cvzf /tmp/ubuntu14.img .\nYou're creating a tar of the Singularity code base there, and not a rootfs\nan OS install.... The directory you are in when you run that tar command,\nshould be equivalent to the / directory of an OS install.\n\nSo, you'll have a structure like:\n\nsome_dir/\nbin/\nlib/\nlib64/\netc/\nvar/\n[...]\n\nYou'll change to 'some_dir', and then run the command: tar czvf\n/tmp/something.img .\n\nThe file should be a tar of an OS structure...\n\n-J\n\nOn Sat, May 13, 2017 at 8:51 PM, Vanessa Sochat <mailto:notifications@github.com|notifications@github.com>\nwrote:\n\n&gt; To install from development:\n&gt; \n&gt; git clone -b development <https://www.github.com/singularityware/singularity.git>\n&gt; cd singularity\n&gt; ./autogen.sh\n&gt; ./configure --prefix=/usr/local\n&gt; make\n&gt; sudo make install\n&gt; \n&gt; —\n&gt; You are receiving this because you were mentioned.\n&gt; Reply to this email directly, view it on GitHub\n&gt; <https://github.com/singularityware/singularity/issues/661#issuecomment-301285541>,\n&gt; or mute the thread\n&gt; <https://github.com/notifications/unsubscribe-auth/AA5zoqCWmglavDzJSZGYucq_XzssQY-eks5r5l4PgaJpZM4NThx2>\n&gt; .",
                "pretext": "[singularityware/singularity] New comment by jmstover on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301285692|#661: singularity shell of tar.gz images>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494726984.287165",
        "date": 1494726984287
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301285541|#661: singularity shell of tar.gz images>",
                "text": "To install from development:\n\n```git clone -b development https://www.github.com/singularityware/singularity.git\ncd singularity\n./autogen.sh\n./configure --prefix=/usr/local\nmake\nsudo make install\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301285541|#661: singularity shell of tar.gz images>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494726670.277032",
        "date": 1494726670277
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301285496|#661: singularity shell of tar.gz images>",
                "text": "I don't think you are using development branch. When you do version you should see the commit:\n\n```singularity --version\n2.2.99-development.g945c6ee\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301285496|#661: singularity shell of tar.gz images>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494726588.274010",
        "date": 1494726588274
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by tobigithub on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301285064|#661: singularity shell of tar.gz images>",
                "text": "Mmmh, does not work for me, at least not under ubuntu14. \n\n````\n\n*singularity version*\n\nvm@ubuntu:~$ singularity --version\n2.2.99\n\n*create image in /tmp*\n\nvm@ubuntu:~/git/singularity$ sudo singularity create --size 2048 /tmp/ubuntu14.img\nCreating a new image with a maximum size of 2048MiB...\nExecuting image create helper\nFormatting image with ext3 file system\nDone.\n\n#show image file exists (2 GB)\nvm@ubuntu:~/git/singularity$ ls -l /tmp/ubuntu14.img \n-rwxr-xr-x 1 root root 2147483679 May 13 17:35 /tmp/ubuntu14.img\n\n*bootstrapping it*\n\nvm@ubuntu:~/git/singularity$ sudo singularity bootstrap /tmp/ubuntu14.img examples/ubuntu.def\n...snip ... snip lots of text\nProcessing triggers for libc-bin (2.19-0ubuntu6) ...\nNo test code provided in this container\n\n#show the file size of the bootstrapped container\nvm@ubuntu:~/git/singularity$ ls -l /tmp/ubuntu14.img \n-rwxr-xr-x 1 root root 2147483679 May 13 17:42 /tmp/ubuntu14.img\nvm@ubuntu:~/git/singularity$ \n\n#invoke singularity shell (working)\nvm@ubuntu:~/git/singularity$ singularity shell /tmp/ubuntu14.img \nSingularity: Invoking an interactive shell within container...\n\nSingularity.ubuntu14.img&gt; $ whoami\nvm\nSingularity.ubuntu14.img&gt; $ uname -r\n3.19.0-25-generic\nSingularity.ubuntu14.img&gt; $ exit\nvm@ubuntu:~/git/singularity$ \n\n*now compressing it, according to proposed solution (no child dir)*\n\nvm@ubuntu:~/git/singularity$ tar cvzf /tmp/ubuntu14.img  .\ntar (child): /tmp/ubuntu14.img: Cannot open: Permission denied\ntar (child): Error is not recoverable: exiting now\n./\n./LICENSE\n./README.md\nvm@ubuntu:~/git/singularity$ \n\n*because img is root (permission wise) use sudo*\n\nsudo tar cvzf /tmp/ubuntu14.img  .\n... snip ... snip lots of text\n./docs/README.md\n./compile\n./Makefile.am\n./AUTHORS\nvm@ubuntu:~/git/singularity$ \n\n#image is now compressed to 7.4 MB (0.3%)\nvm@ubuntu:~/git/singularity$ ls -l /tmp/ubuntu14.img \n-rwxr-xr-x 1 root root 7492172 May 13 17:51 /tmp/ubuntu14.img\nvm@ubuntu:~/git/singularity$ \n\n*now start shell with compressed file*\n\nvm@ubuntu:~/git/singularity$ singularity shell /tmp/ubuntu14.img\nERROR  : File is not a valid Singularity image, aborting...\nABORT  : Retval = 255\nvm@ubuntu:~/git/singularity$ \n\n*start with sudo*\n\nvm@ubuntu:~/git/singularity$ sudo singularity shell /tmp/ubuntu14.img\nsudo: unable to resolve host ubuntu\nERROR  : File is not a valid Singularity image, aborting...\nABORT  : Retval = 255\n\n*magically restore image (2.1 GB)*\n\n*change write permissions for group and others*\n\nchmod g+w /tmp/ubuntu14.img \nchmod o+w /tmp/ubuntu14.img \n\n*now the permissions changed*\n\nvm@ubuntu:~/git/singularity$ ls -l /tmp/ubuntu14.img \n-rwxrwxrwx 1 vm vm 2147483679 May 13 17:42 /tmp/ubuntu14.img\n\n*now tar again according to proposed solution*\n\ntar cvzf /tmp/ubuntu14.img . \n....snip .... snip lots of text\n./compile\n./Makefile.am\n./AUTHORS\nvm@ubuntu:~/git/singularity$ \n\n*file has now user permissions and is compressed to 7MB*\n\nvm@ubuntu:~/git/singularity$ ls -l /tmp/ubuntu14.img\n-rwxrwxrwx 1 vm vm 7492172 May 13 18:09 /tmp/ubuntu14.img\nvm@ubuntu:~/git/singularity$ \n\n*start shell (does not work)*\n\nvm@ubuntu:~/git/singularity$ singularity shell /tmp/ubuntu14.img\nERROR  : File is not a valid Singularity image, aborting...\nABORT  : Retval = 255\nvm@ubuntu:~/git/singularity$ \n\n*sudo start shell*\n\nvm@ubuntu:~/git/singularity$ sudo singularity shell /tmp/ubuntu14.img\nsudo: unable to resolve host ubuntu\nERROR  : File is not a valid Singularity image, aborting...\nABORT  : Retval = 255\nvm@ubuntu:~/git/singularity$ \n\n`````\nactually I am currently unable expand the file back (unless I use an archive manager)\n````\n\n*file size stays 7 MB compressed instead of 2BGyte*\n\nvm@ubuntu:~/git/singularity$ sudo tar -czf /tmp/ubuntu14.img .\nsudo: unable to resolve host ubuntu\nvm@ubuntu:~/git/singularity$ sudo tar -xzf /tmp/ubuntu14.img .\nsudo: unable to resolve host ubuntu\nvm@ubuntu:~/git/singularity$ ls -l /tmp/ubuntu14.img\n-rwxrwxrwx 1 vm vm 7492172 May 13 18:33 /tmp/ubuntu14.img\nvm@ubuntu:~/git/singularity$ \n````",
                "pretext": "[singularityware/singularity] New comment by tobigithub on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301285064|#661: singularity shell of tar.gz images>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494725763.248358",
        "date": 1494725763248
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#668 Update to size function' https://github.com/singularityware/singularity/pull/668 by vsoch",
                "text": "This is a quick update to the size function so that it returns the summed size for all layers, versus the size of the writable layer. I have also added more verbosity to the README for using the command in Python.\n -\n -\n -\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#668 Update to size function",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/668",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494629124.013892",
        "date": 1494629124013
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/628|#628 Add a Gitter chat badge to README.md> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/628|#628 Add a Gitter chat badge to README.md> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494614630.111070",
        "date": 1494614630111
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/628#issuecomment-301155394|#628: Add a Gitter chat badge to README.md>",
                "text": "I am going to close this for now, as I don't think we are ready to move away from Slack yet.\n\nThanks everyone!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/628#issuecomment-301155394|#628: Add a Gitter chat badge to README.md>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494614630.111010",
        "date": 1494614630111
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301154805|#661: singularity shell of tar.gz images>",
                "text": "This is working fine for me with the development branch. One of the important factors to creating the tarball is to make sure that there are no child directories created. For example:\n\n```$ tar cvzf /tmp/container.tar.gz .\n```\nWould work where:\n```$ tar cvzf /tmp/container.tar.gz relative_path_to_contianer\n```\nWould not.\n\nI think this is what @jmstover was referring to earlier. \n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-301154805|#661: singularity shell of tar.gz images>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494614477.072640",
        "date": 1494614477072
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-300952848|#611: Nvidia GPU support with different driver versions?>",
                "text": "That is very very close to how it is getting done in Singularity today with the \"experimental\" GPU support. We are also getting the GPU libraries from the ld.so.cache as they are so things work very similar, and those libraries will indeed be matched to the host kernel (assuming the host's GPU support is working).",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-300952848|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494549430.961094",
        "date": 1494549430961
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/667#issuecomment-300930770|#667: [Feautre_Request] Call shub from a def file>",
                "text": "I have two options in mind A and B.\nWell I think that runscripts wont math on this feature\n\n*Option A:*\n\nSince shub works with in integration with github, what this feature would do is to \"merge\" both .def files. and I think the runscripts can be deleted on the merge step. now that the user will set new runscripts for the app that he might be installing.\n\n*Option B*\n\nI wont call it a \"merge\", I think of it more as if the image that we are calling from shub is going to be our base OS. What it would do is to download the image layers, remove the runscript ( The /Singularity file).\n\nI think the functionality a user will want from a previous image would be:\n• Enviroment files\n• Binaries\n• Maybe links(```ln```) and labels.(But this can be discussed)\n# \n\nI think Option A is a better call when talking abouth HPC enviroments, since compiling leads to a better performance than a pre-compiled binary (may vary depending on the arch). But the feature will allow users to stablish a standard image for their project workflows(Reproducibility). And there could be official images(certified by the app developer), so a user will be able to call a def file that setup a proper MPI enviroment or a CUDA env and just install their stuff over standar image.",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/667#issuecomment-300930770|#667: [Feautre_Request] Call shub from a def file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494540579.804470",
        "date": 1494540579804
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/667#issuecomment-300917830|#667: [Feautre_Request] Call shub from a def file>",
                "text": "yeah this is a cool idea, for sure! This would come down to \"merging\" two containers, and all of the issues that we anticipated before (some of which were relevant for docker) are now more prevalent. It comes down to deciding how all of the following would be merged, what would be included (vs. not) and if both are included, in what order:\n\n• runscripts\n• environment files\n• labels\n• files that are redundant.\n\nWhat is your proposal?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/667#issuecomment-300917830|#667: [Feautre_Request] Call shub from a def file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494536987.083307",
        "date": 1494536987083
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#667 [Feautre_Request] Call shub from a def file' https://github.com/singularityware/singularity/issues/667 by ArangoGutierrez",
                "text": "We stared this discussion on the  <https://singularity-container.slack.com|Slack> but I want to bring it here in order to recieve feedback on this feature-idea.\n\nLest say a user want to build something from a previus image. lets say, having an MPI prefered build image, and that user want to build something that uses MPI (e.g WRF,OpenFoam) over that image.\n\n```bash\nBootStrap: shub\nimage_id: xxx  # Image_id on shub\n\n%post\n    echo \"Hello from inside the container\"\n    echo \"Install additional software here\"\n\n%runscript\n    echo \"This is what happens when you run the container...\"\n```\n\nThis can be seens as a milestone for a future local repository.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "title": "#667 [Feautre_Request] Call shub from a def file",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/667",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494535293.663685",
        "date": 1494535293663
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by kcgthb on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-300903375|#611: Nvidia GPU support with different driver versions?>",
                "text": "Just to restart the discussion about strict library match requirements:\n\n&gt; Your point about library compatibility and portability between distros is a good one, but the Nvidia library does not and can not fix that. The libraries that the build (as I understand) are built against reasonably old and thus compatible versions of glibc, so we get general compatibility across most (if not all) current distributions of Linux.\nI was not referring to glibc or Linux distribution compatibility, but about the possibility to have less strict matching requirement between the different components of the NVIDIA stack (driver, libraries, CUDA) between host and containers. The <https://github.com/NVIDIA/nvidia-docker|`nvidia-docker`> devs lay it out pretty well <https://github.com/NVIDIA/nvidia-docker/wiki/NVIDIA-driver|here>  and explain it much better than I could.",
                "pretext": "[singularityware/singularity] New comment by kcgthb on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-300903375|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494533460.192454",
        "date": 1494533460192
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/666|#666 Add/citation> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/666|#666 Add/citation> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494531721.737041",
        "date": 1494531721737
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/665|#665 add citation to readme> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/665|#665 add citation to readme> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494531700.731692",
        "date": 1494531700731
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#666 Add/citation' https://github.com/singularityware/singularity/pull/666 by vsoch",
                "text": "Fixes #\n\nChanges proposed in this pull request\n\n -\n -\n -\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#666 Add/citation",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/666",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494531690.729318",
        "date": 1494531690729
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#665 add citation to readme' https://github.com/singularityware/singularity/pull/665 by vsoch",
                "text": "wooohoo!\n\n -\n -\n -\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#665 add citation to readme",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/665",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494531473.673366",
        "date": 1494531473673
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/658#issuecomment-300854514|#658: [feature request] Option to run only parts of the bootstrapping process.>",
                "text": "I like that idea, but won't get it into 2.3 before the release. I will keep it here for the 2.4 development which will start as soon as 2.3 hits master.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/658#issuecomment-300854514|#658: [feature request] Option to run only parts of the bootstrapping process.>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494522474.167459",
        "date": 1494522474167
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/660#issuecomment-300634185|#660: compiling singularity on RHEL 5>",
                "text": "Hi @Amjadhpc,\n\nWhat version of Singularity are you testing? You may have to go back and use Singularity v2.1.\n\nGreg",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/660#issuecomment-300634185|#660: compiling singularity on RHEL 5>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494456447.088138",
        "date": 1494456447088
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by georghildebrand on issue <https://github.com/singularityware/singularity/issues/658#issuecomment-300578092|#658: [feature request] Option to run only parts of the bootstrapping process.>",
                "text": "That's indeed a good idea. E.g.. In our cluster some GPU servers have\ndifferent driver versions. In that case such a system would help to only\nrebuild the driver. But it could make the def file look more complicated.\n\nI think if the bootstrap is not repeated over and over again it's already a\nbig win.\n\nWill test it tomorrow! Thanks for your excellent work!\n\nAm 10.05.2017 20:26 schrieb \"Vanessa Sochat\" <mailto:notifications@github.com|notifications@github.com>:\n\nhey is there any reason the --section command couldn't specify some\nadditional sections of post? For example, let's say you have a tensorflow\ndefinition file, and there are different installation dependencies,\ndepending on the cluster. You could either have different %post sections\nand specify to activate one (and not the other) or some ability to specify\nsubsections of %post and then choose which to build (and the\nvariable/choice would be recorded in the labels, etc.\n\n—\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\n<https://github.com/singularityware/singularity/issues/658#issuecomment-300571712>,\nor mute the thread\n<https://github.com/notifications/unsubscribe-auth/APQpdpodBZfTbTn-bTiw-gJsBkurtoh8ks5r4gFAgaJpZM4NRKIG>\n.",
                "pretext": "[singularityware/singularity] New comment by georghildebrand on issue <https://github.com/singularityware/singularity/issues/658#issuecomment-300578092|#658: [feature request] Option to run only parts of the bootstrapping process.>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494442161.786452",
        "date": 1494442161786
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/658#issuecomment-300571712|#658: [feature request] Option to run only parts of the bootstrapping process.>",
                "text": "hey is there any reason the --section command couldn't specify some additional sections of post? For example, let's say you have a tensorflow definition file, and there are different installation dependencies, depending on the cluster. You could either have different `%post` sections and specify to activate one (and not the other) or some ability to specify subsections of `%post` and then choose which to build (and the variable/choice would be recorded in the labels, etc.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/658#issuecomment-300571712|#658: [feature request] Option to run only parts of the bootstrapping process.>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494440767.390414",
        "date": 1494440767390
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/658|#658 [feature request] Option to run only parts of the bootstrapping process.> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/658|#658 [feature request] Option to run only parts of the bootstrapping process.> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494440339.266596",
        "date": 1494440339266
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/658#issuecomment-300569678|#658: [feature request] Option to run only parts of the bootstrapping process.>",
                "text": "Hi there. In development d541fb954e282fc91993c9b14f0c074755f462d5, I have added the feature to do:\n\n```$ sudo singularity bootstrap --section post container.img bootstrap.def\n```\n\nLet me know if you have any questions or issues with it.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/658#issuecomment-300569678|#658: [feature request] Option to run only parts of the bootstrapping process.>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494440339.266571",
        "date": 1494440339266
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ashiklom on issue <https://github.com/singularityware/singularity/issues/664#issuecomment-300464035|#664: `urllib` module dependencies for Python 3>",
                "text": "@vsoch Thanks for getting back to me! Yes, everything seems to be working fine off the development branch, so I'll go ahead and close this issue.",
                "pretext": "[singularityware/singularity] New comment by ashiklom on issue <https://github.com/singularityware/singularity/issues/664#issuecomment-300464035|#664: `urllib` module dependencies for Python 3>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494418600.058287",
        "date": 1494418600058
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/664|#664 `urllib` module dependencies for Python 3> by <https://github.com/ashiklom|ashiklom>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/664|#664 `urllib` module dependencies for Python 3> by <https://github.com/ashiklom|ashiklom>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494418600.058279",
        "date": 1494418600058
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by alanakbik on issue <https://github.com/singularityware/singularity/issues/474#issuecomment-300450757|#474: Container does not have a valid `/bin/sh`>",
                "text": "Running 'apt-get install sudo' in the container solved this issue for me.\n(The torch installation script has many sudo calls so it was necessary.)",
                "pretext": "[singularityware/singularity] New comment by alanakbik on issue <https://github.com/singularityware/singularity/issues/474#issuecomment-300450757|#474: Container does not have a valid `/bin/sh`>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494414749.447086",
        "date": 1494414749447
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by thiell on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-300374400|#611: Nvidia GPU support with different driver versions?>",
                "text": "Hey, so I have done a few more tests and the above error does appear very often when allocating a lot of GPUs (&gt;= 12), but sometimes it does actually work... grr, I don't like that. But I think we have to be careful as it could be a tensorflow issue. Indeed the error looks very similar to <https://github.com/tensorflow/tensorflow/issues/2239> which, in the case of docker, was apparently fixed by using nvidia-docker instead. However, please note that we do have a 1.0 of tensorflow compiled and installed on this cluster and it works well even with up to 16 GPUs, but it is not the latest version.\n\nI also quickly tested &lt;torch-gpu|docker://romanbilyi/torch-gpu&gt; using singularity `--nv` with multiple GPUs and didn't get any error when loading cutorch and doing very simple stuffs.",
                "pretext": "[singularityware/singularity] New comment by thiell on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-300374400|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494392553.248243",
        "date": 1494392553248
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-300360468|#611: Nvidia GPU support with different driver versions?>",
                "text": "thanks for testing this @thiell !! :dango: ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-300360468|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494385273.884262",
        "date": 1494385273884
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by thiell on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-300358328|#611: Nvidia GPU support with different driver versions?>",
                "text": "Hi @gmkurtzer and sorry for the delay!!\n\nThanks for adding `--nv`! I tried it (using 2.2.99-development.g945c6ee) and played a bit with  `docker://tensorflow/tensorflow:latest-gpu`...\n\nThe good news is that it seems to work well in jobs that allocate a single GPU (in slurm, so a single GPU device is visible - note: we're using device cgroup).\n\nExample (single GPU allocation):\n```Singularity tensorflow:latest-gpu:~&gt; python\nPython 2.7.12 (default, Nov 19 2016, 06:48:10) \n[GCC 5.4.0 20160609] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt; &gt; &gt; import tensorflow as tf\n&gt; &gt; &gt; with tf.device('/gpu:0'):\n&gt; &gt; &gt; ...     a = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3], name='a')\n&gt; &gt; &gt; ...     b = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2], name='b')\n&gt; &gt; &gt; ...     c = tf.matmul(a, b)\n&gt; &gt; &gt; ... \n&gt; &gt; &gt; sess = tf.Session(config=tf.ConfigProto(log_device_placement=True))\n&gt; &gt; &gt; 2017-05-10 02:23:25.640377: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\n&gt; &gt; &gt; 2017-05-10 02:23:25.640407: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\n&gt; &gt; &gt; 2017-05-10 02:23:25.640416: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n&gt; &gt; &gt; 2017-05-10 02:23:26.163631: I tensorflow/core/common_runtime/gpu/gpu_device.cc:887] Found device 0 with properties: \n&gt; &gt; &gt; name: Tesla K80\n&gt; &gt; &gt; major: 3 minor: 7 memoryClockRate (GHz) 0.8235\n&gt; &gt; &gt; pciBusID 0000:85:00.0\n&gt; &gt; &gt; Total memory: 11.17GiB\n&gt; &gt; &gt; Free memory: 11.11GiB\n&gt; &gt; &gt; 2017-05-10 02:23:26.163686: I tensorflow/core/common_runtime/gpu/gpu_device.cc:908] DMA: 0 \n&gt; &gt; &gt; 2017-05-10 02:23:26.163696: I tensorflow/core/common_runtime/gpu/gpu_device.cc:918] 0:   Y \n&gt; &gt; &gt; 2017-05-10 02:23:26.163712: I tensorflow/core/common_runtime/gpu/gpu_device.cc:977] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: Tesla K80, pci bus id: 0000:85:00.0)\n&gt; &gt; &gt; Device mapping:\n&gt; &gt; &gt; /job:localhost/replica:0/task:0/gpu:0 -&gt; device: 0, name: Tesla K80, pci bus id: 0000:85:00.0\n&gt; &gt; &gt; 2017-05-10 02:23:26.227264: I tensorflow/core/common_runtime/direct_session.cc:257] Device mapping:\n&gt; &gt; &gt; /job:localhost/replica:0/task:0/gpu:0 -&gt; device: 0, name: Tesla K80, pci bus id: 0000:85:00.0\n&gt; &gt; &gt; \n&gt; &gt; &gt; print(sess.run(c))\n&gt; &gt; &gt; MatMul: (MatMul): /job:localhost/replica:0/task:0/gpu:0\n&gt; &gt; &gt; 2017-05-10 02:23:47.507606: I tensorflow/core/common_runtime/simple_placer.cc:841] MatMul: (MatMul)/job:localhost/replica:0/task:0/gpu:0\n&gt; &gt; &gt; b: (Const): /job:localhost/replica:0/task:0/gpu:0\n&gt; &gt; &gt; 2017-05-10 02:23:47.507659: I tensorflow/core/common_runtime/simple_placer.cc:841] b: (Const)/job:localhost/replica:0/task:0/gpu:0\n&gt; &gt; &gt; a: (Const): /job:localhost/replica:0/task:0/gpu:0\n&gt; &gt; &gt; 2017-05-10 02:23:47.507679: I tensorflow/core/common_runtime/simple_placer.cc:841] a: (Const)/job:localhost/replica:0/task:0/gpu:0\n&gt; &gt; &gt; [[ 22.  28.]\n&gt; &gt; &gt;  [ 49.  64.]]\n&gt; &gt; &gt; ```\nHowever, for jobs using multiple GPUs, even when effectively using only one GPU in TensorFlow, I get the following error messages:\n\n```Singularity tensorflow:latest-gpu:~&gt; python\nPython 2.7.12 (default, Nov 19 2016, 06:48:10) \n[GCC 5.4.0 20160609] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt; &gt; &gt; import tensorflow as tf\n&gt; &gt; &gt; with tf.device('/gpu:0'):\n&gt; &gt; &gt; ...     a = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3], name='a')\n&gt; &gt; &gt; ...     b = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2], name='b')\n&gt; &gt; &gt; ...     c = tf.matmul(a, b)\n&gt; &gt; &gt; ... \n&gt; &gt; &gt; sess = tf.Session(config=tf.ConfigProto(log_device_placement=True))\n&gt; &gt; &gt; 2017-05-10 02:27:16.126277: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\n&gt; &gt; &gt; 2017-05-10 02:27:16.126330: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\n&gt; &gt; &gt; 2017-05-10 02:27:16.126353: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n&gt; &gt; &gt; 2017-05-10 02:27:16.139414: E tensorflow/stream_executor/cuda/cuda_driver.cc:405] failed call to cuInit: CUDA_ERROR_UNKNOWN\n&gt; &gt; &gt; 2017-05-10 02:27:16.139496: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:158] retrieving CUDA diagnostic information for host: xs-0007\n&gt; &gt; &gt; 2017-05-10 02:27:16.139523: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:165] hostname: xs-0007\n&gt; &gt; &gt; 2017-05-10 02:27:16.139594: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:189] libcuda reported version is: Invalid argument: expected %d.%d or %d.%d.%d form for driver version; got \"1\"\n&gt; &gt; &gt; 2017-05-10 02:27:16.139657: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:369] driver version file contents: \"\"\"NVRM version: NVIDIA UNIX x86_64 Kernel Module  361.93.03  Tue Sep 27 22:40:25 PDT 2016\n&gt; &gt; &gt; GCC version:  gcc version 4.4.7 20120313 (Red Hat 4.4.7-17) (GCC) \n&gt; &gt; &gt; \"\"\"\n&gt; &gt; &gt; 2017-05-10 02:27:16.139718: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:193] kernel reported version is: 361.93.3\n&gt; &gt; &gt; Device mapping: no known devices.\n&gt; &gt; &gt; 2017-05-10 02:27:16.143122: I tensorflow/core/common_runtime/direct_session.cc:257] Device mapping:\n&gt; &gt; &gt; ```\nI tried with several different GPU indexes, same issue.",
                "pretext": "[singularityware/singularity] New comment by thiell on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-300358328|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494384282.800034",
        "date": 1494384282800
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by thiell on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-300356717|#39: strange mount/unmount behavior>",
                "text": "Hi @gmkurtzer and sorry for the delay!!\n\nThanks for adding `--nv`! I tried it (using 2.2.99-development.g945c6ee) and played a bit with  `docker://tensorflow/tensorflow:latest-gpu`...\n\nThe good news is that it seems to work well in jobs that allocate a single GPU (in slurm, so a single GPU device is visible - note: we're using device cgroup).\n\nExample (single GPU allocation):\n```Singularity tensorflow:latest-gpu:~&gt; python\nPython 2.7.12 (default, Nov 19 2016, 06:48:10) \n[GCC 5.4.0 20160609] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt; &gt; &gt; import tensorflow as tf\n&gt; &gt; &gt; with tf.device('/gpu:0'):\n&gt; &gt; &gt; ...     a = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3], name='a')\n&gt; &gt; &gt; ...     b = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2], name='b')\n&gt; &gt; &gt; ...     c = tf.matmul(a, b)\n&gt; &gt; &gt; ... \n&gt; &gt; &gt; sess = tf.Session(config=tf.ConfigProto(log_device_placement=True))\n&gt; &gt; &gt; 2017-05-10 02:23:25.640377: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\n&gt; &gt; &gt; 2017-05-10 02:23:25.640407: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\n&gt; &gt; &gt; 2017-05-10 02:23:25.640416: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n&gt; &gt; &gt; 2017-05-10 02:23:26.163631: I tensorflow/core/common_runtime/gpu/gpu_device.cc:887] Found device 0 with properties: \n&gt; &gt; &gt; name: Tesla K80\n&gt; &gt; &gt; major: 3 minor: 7 memoryClockRate (GHz) 0.8235\n&gt; &gt; &gt; pciBusID 0000:85:00.0\n&gt; &gt; &gt; Total memory: 11.17GiB\n&gt; &gt; &gt; Free memory: 11.11GiB\n&gt; &gt; &gt; 2017-05-10 02:23:26.163686: I tensorflow/core/common_runtime/gpu/gpu_device.cc:908] DMA: 0 \n&gt; &gt; &gt; 2017-05-10 02:23:26.163696: I tensorflow/core/common_runtime/gpu/gpu_device.cc:918] 0:   Y \n&gt; &gt; &gt; 2017-05-10 02:23:26.163712: I tensorflow/core/common_runtime/gpu/gpu_device.cc:977] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: Tesla K80, pci bus id: 0000:85:00.0)\n&gt; &gt; &gt; Device mapping:\n&gt; &gt; &gt; /job:localhost/replica:0/task:0/gpu:0 -&gt; device: 0, name: Tesla K80, pci bus id: 0000:85:00.0\n&gt; &gt; &gt; 2017-05-10 02:23:26.227264: I tensorflow/core/common_runtime/direct_session.cc:257] Device mapping:\n&gt; &gt; &gt; /job:localhost/replica:0/task:0/gpu:0 -&gt; device: 0, name: Tesla K80, pci bus id: 0000:85:00.0\n&gt; &gt; &gt; \n&gt; &gt; &gt; print(sess.run(c))\n&gt; &gt; &gt; MatMul: (MatMul): /job:localhost/replica:0/task:0/gpu:0\n&gt; &gt; &gt; 2017-05-10 02:23:47.507606: I tensorflow/core/common_runtime/simple_placer.cc:841] MatMul: (MatMul)/job:localhost/replica:0/task:0/gpu:0\n&gt; &gt; &gt; b: (Const): /job:localhost/replica:0/task:0/gpu:0\n&gt; &gt; &gt; 2017-05-10 02:23:47.507659: I tensorflow/core/common_runtime/simple_placer.cc:841] b: (Const)/job:localhost/replica:0/task:0/gpu:0\n&gt; &gt; &gt; a: (Const): /job:localhost/replica:0/task:0/gpu:0\n&gt; &gt; &gt; 2017-05-10 02:23:47.507679: I tensorflow/core/common_runtime/simple_placer.cc:841] a: (Const)/job:localhost/replica:0/task:0/gpu:0\n&gt; &gt; &gt; [[ 22.  28.]\n&gt; &gt; &gt;  [ 49.  64.]]\n&gt; &gt; &gt; ```\nHowever, for jobs using multiple GPUs, even when effectively using only one GPU in TensorFlow, I get the following error messages:\n\n```Singularity tensorflow:latest-gpu:~&gt; python\nPython 2.7.12 (default, Nov 19 2016, 06:48:10) \n[GCC 5.4.0 20160609] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt; &gt; &gt; import tensorflow as tf\n&gt; &gt; &gt; with tf.device('/gpu:0'):\n&gt; &gt; &gt; ...     a = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3], name='a')\n&gt; &gt; &gt; ...     b = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2], name='b')\n&gt; &gt; &gt; ...     c = tf.matmul(a, b)\n&gt; &gt; &gt; ... \n&gt; &gt; &gt; sess = tf.Session(config=tf.ConfigProto(log_device_placement=True))\n&gt; &gt; &gt; 2017-05-10 02:27:16.126277: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\n&gt; &gt; &gt; 2017-05-10 02:27:16.126330: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\n&gt; &gt; &gt; 2017-05-10 02:27:16.126353: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n&gt; &gt; &gt; 2017-05-10 02:27:16.139414: E tensorflow/stream_executor/cuda/cuda_driver.cc:405] failed call to cuInit: CUDA_ERROR_UNKNOWN\n&gt; &gt; &gt; 2017-05-10 02:27:16.139496: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:158] retrieving CUDA diagnostic information for host: xs-0007\n&gt; &gt; &gt; 2017-05-10 02:27:16.139523: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:165] hostname: xs-0007\n&gt; &gt; &gt; 2017-05-10 02:27:16.139594: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:189] libcuda reported version is: Invalid argument: expected %d.%d or %d.%d.%d form for driver version; got \"1\"\n&gt; &gt; &gt; 2017-05-10 02:27:16.139657: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:369] driver version file contents: \"\"\"NVRM version: NVIDIA UNIX x86_64 Kernel Module  361.93.03  Tue Sep 27 22:40:25 PDT 2016\n&gt; &gt; &gt; GCC version:  gcc version 4.4.7 20120313 (Red Hat 4.4.7-17) (GCC) \n&gt; &gt; &gt; \"\"\"\n&gt; &gt; &gt; 2017-05-10 02:27:16.139718: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:193] kernel reported version is: 361.93.3\n&gt; &gt; &gt; Device mapping: no known devices.\n&gt; &gt; &gt; 2017-05-10 02:27:16.143122: I tensorflow/core/common_runtime/direct_session.cc:257] Device mapping:\n&gt; &gt; &gt; ```\nI tried with several different GPU indexes, same issue.",
                "pretext": "[singularityware/singularity] New comment by thiell on issue <https://github.com/singularityware/singularity/issues/39#issuecomment-300356717|#39: strange mount/unmount behavior>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494383568.740627",
        "date": 1494383568740
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-300315680|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "text": "Yes I'm using `--privileged` mode on Windows.\n\nOn Tue, May 9, 2017 at 2:25 PM, Vanessa Sochat <mailto:notifications@github.com|notifications@github.com>\nwrote:\n\n&gt; you are running this with privileged mode? Eg:\n&gt; \n&gt; docker run -it --privileged vanessa/test\n&gt; \n&gt; So - I just tried this, with a basic ubuntu image with the Dockerfile and\n&gt; command above, and my entire system crashed. I'm not sure I want to try\n&gt; that again, lol. Is there someone with non ubuntu (mac) that could give\n&gt; this a test? @gmkurtzer <https://github.com/gmkurtzer> ? Here is what you\n&gt; do:\n&gt; \n&gt; 1. make a folder somewhere, call it test\n&gt; 2. Copy the file above that chris provided into a file called\n&gt;      Dockerfile in that folder\n&gt; 3. Do docker build -t dockeruser/test .\n&gt; 4. Then run the image with privileged like\n&gt; \n&gt; docker run -it --privileged dockeruser/test\n&gt; \n&gt; then in the image, try something basic first:\n&gt; \n&gt; singularity run docker://ubuntu\n&gt; \n&gt; and hold your breath for a possible crash, if it doesn't crash and works\n&gt; ok, try @chrisfilo <https://github.com/chrisfilo> image\n&gt; \n&gt; singularity --debug run docker://bids/mriqc:0.9.3\n&gt; \n&gt; and then see if you get the same error. I think @chrisfilo\n&gt; <https://github.com/chrisfilo> is either still on Mac or Windows again?\n&gt; There is something funky going on likely because we are using priviledged\n&gt; docker --&gt; docker import via singularity &lt;-- and back.\n&gt; \n&gt; —\n&gt; You are receiving this because you were mentioned.\n&gt; Reply to this email directly, view it on GitHub\n&gt; <https://github.com/singularityware/singularity/issues/662#issuecomment-300306324>,\n&gt; or mute the thread\n&gt; <https://github.com/notifications/unsubscribe-auth/AAOkpz2upLrQ39_VbTdJz55DEOhOVQXfks5r4NnbgaJpZM4NUX3f>\n&gt; .",
                "pretext": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-300315680|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494367594.808758",
        "date": 1494367594808
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-300306324|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "text": "you are running this with privileged mode? Eg:\n\n```docker run -it --privileged vanessa/test\n```\n\nSo - I just tried this, with a basic ubuntu image with the Dockerfile and command above, and my entire system crashed. I'm not sure I want to try that again, lol. Is there someone with non ubuntu (mac) that could give this a test? @gmkurtzer ? Here is what you do:\n\n1. make a folder somewhere, call it `test`\n2. Copy the file above that chris provided into a  file called `Dockerfile` in that folder\n3. Do `docker build -t dockeruser/test .`\n4. Then run the image with privileged like\n\n```docker run -it --privileged dockeruser/test\n```\nthen in the image, try something basic first:\n\n```singularity run docker://ubuntu\n```\nand hold your breath for a possible crash, if it doesn't crash and works ok, try @chrisfilo image\n\n```singularity --debug run docker://bids/mriqc:0.9.3\n```\n\nand then see if you get the same error. I think @chrisfilo is either still on Mac or Windows again? There is something funky going on likely because we are using priviledged docker --&gt; docker import via singularity &lt;-- and back.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-300306324|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494365147.304707",
        "date": 1494365147304
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-300284557|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "text": "I've tried with non-root user. Same result:\n\n```\n[newuser@febd2ce0fb13 ~]$ singularity exec docker://bids/mriqc:0.9.3 env\nDocker image path: index.docker.io/bids/mriqc:0.9.3\nCache folder set to /home/newuser/.singularity/docker\n[25/25] |===================================| 100.0%\nCreating container runtime...\nSingularity: action-suid (U=500,P=31)&gt; USER=newuser, IMAGE='mriqc:0.9.3', COMMAND='exec'\n\nLESSOPEN=||/usr/bin/lesspipe.sh %s\nPOSSUMDIR=/usr/share/fsl/5.0\nAFNI_TTATLAS_DATASET=/usr/share/afni/atlases\nAFNI_PLUGINPATH=/usr/lib/afni/plugins\nUSER=newuser\nHOSTNAME=febd2ce0fb13\nSHLVL=1\nLD_LIBRARY_PATH=/usr/lib/fsl/5.0::/.singularity.d/libs\nHOME=/home/newuser\nPS1=Singularity&gt;\nG_BROKEN_FILENAMES=1\nFSLDIR=/usr/share/fsl/5.0\nAFNI_IMSAVE_WARNINGS=NO\nANTSPATH=/opt/ants\nFSLMULTIFILEQUIT=TRUE\nFSLTCLSH=/usr/bin/tclsh\nTERM=xterm\nPATH=/usr/local/miniconda/bin:/opt/ants:/usr/lib/fsl/5.0:/usr/lib/afni/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nFSLOUTPUTTYPE=NIFTI_GZ\nLANG=C.UTF-8\nAFNI_MODELPATH=/usr/lib/afni/models\nLS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:_.tar=01;31:_.tgz=01;31:_.arj=01;31:_.taz=01;31:_.lzh=01;31:_.lzma=01;31:_.tlz=01;31:_.txz=01;31:_.zip=01;31:_.z=01;31:_.Z=01;31:_.dz=01;31:_.gz=01;31:_.lz=01;31:_.xz=01;31:_.bz2=01;31:_.tbz=01;31:_.tbz2=01;31:_.bz=01;31:_.tz=01;31:_.deb=01;31:_.rpm=01;31:_.jar=01;31:_.rar=01;31:_.ace=01;31:_.zoo=01;31:_.cpio=01;31:_.7z=01;31:_.rz=01;31:_.jpg=01;35:_.jpeg=01;35:_.gif=01;35:_.bmp=01;35:_.pbm=01;35:_.pgm=01;35:_.ppm=01;35:_.tga=01;35:_.xbm=01;35:_.xpm=01;35:_.tif=01;35:_.tiff=01;35:_.png=01;35:_.svg=01;35:_.svgz=01;35:_.mng=01;35:_.pcx=01;35:_.mov=01;35:_.mpg=01;35:_.mpeg=01;35:_.m2v=01;35:_.mkv=01;35:_.ogm=01;35:_.mp4=01;35:_.m4v=01;35:_.mp4v=01;35:_.vob=01;35:_.qt=01;35:_.nuv=01;35:_.wmv=01;35:_.asf=01;35:_.rm=01;35:_.rmvb=01;35:_.flc=01;35:_.avi=01;35:_.fli=01;35:_.flv=01;35:_.gl=01;35:_.dl=01;35:_.xcf=01;35:_.xwd=01;35:_.yuv=01;35:_.cgm=01;35:_.emf=01;35:_.axv=01;35:_.anx=01;35:_.ogv=01;35:_.ogx=01;35:_.aac=01;36:_.au=01;36:_.flac=01;36:_.mid=01;36:_.midi=01;36:_.mka=01;36:_.mp3=01;36:_.mpc=01;36:_.ogg=01;36:_.ra=01;36:_.wav=01;36:_.axa=01;36:_.oga=01;36:_.spx=01;36:_.xspf=01;36:\nFSLWISH=/usr/bin/wish\nCRN_SHARED_DATA=/niworkflows_data\nSINGULARITY_CONTAINER=mriqc:0.9.3\nPWD=/home/newuser\nLC_ALL=C.UTF-8\nHISTFILE=\nSINGULARITY_NAME=mriqc:0.9.3\n[newuser@febd2ce0fb13 ~]$ Singularity: singularity: cleanupd (U=500,P=100718)&gt; Failed removing file: /tmp/.singularity-runtime.2CKUBwBh/container/bids/mriqc:0.9.3/libwebp-0.5.2-linux-x86-64/include/webp\n\nSingularity: singularity: cleanupd (U=500,P=100718)&gt; Could not remove directory /tmp/.singularity-runtime.2CKUBwBh: Directory not empty\n\nSingularity: singularity: cleanupd (U=500,P=100718)&gt; Retval = 255\n```\n\nHere's the content of the relevant tmp folder:\n\n```[newuser@febd2ce0fb13 ~]$ ls -al /tmp/.singularity-runtime.2CKUBwBh/container/bids/mriqc\\:0.9.3/\ntotal 2236\ndrwx------ 23 newuser newuser    4096 May  9 19:52 .\ndrwx------  3 newuser newuser    4096 May  9 19:48 ..\ndrwx------  2 newuser newuser    4096 Dec 13 20:24 bin\ndrwx------  2 newuser newuser    4096 Apr 12  2016 boot\ndrwx------  2 newuser newuser    4096 Dec 13 20:23 dev\nlrwxrwxrwx  1 newuser newuser      36 May  9 19:49 environment -&gt; .singularity.d/env/90-environment.sh\ndrwx------ 60 newuser newuser    4096 Dec 13 20:24 etc\nlrwxrwxrwx  1 newuser newuser      27 May  9 19:49 .exec -&gt; .singularity.d/actions/exec\ndrwx------  2 newuser newuser    4096 Apr 12  2016 home\ndrwx------  8 newuser newuser    4096 Sep 13  2015 lib\ndrwx------  2 newuser newuser    4096 Dec 13 20:24 lib64\ndrwx------  6 newuser newuser    4096 May  9 19:51 libwebp-0.5.2-linux-x86-64\n-rw-r--r--  1 newuser newuser 2185345 Apr 23 18:15 libwebp-0.5.2-linux-x86-64.tar.gz\ndrwx------  2 newuser newuser    4096 Dec 13 20:23 media\ndrwx------  2 newuser newuser    4096 Dec 13 20:23 mnt\ndrwx------  3 newuser newuser    4096 Apr 23 18:21 niworkflows_data\ndrwx------  3 newuser newuser    4096 Dec 13 20:23 opt\ndrwx------  2 newuser newuser    4096 Apr 12  2016 proc\n-rw-rw-r--  1 newuser newuser     213 Apr 23 18:07 requirements.txt\ndrwx------  8 newuser newuser    4096 Dec 13 20:24 root\ndrwx------  5 newuser newuser    4096 Dec 13 20:24 run\nlrwxrwxrwx  1 newuser newuser      26 May  9 19:49 .run -&gt; .singularity.d/actions/run\ndrwx------  2 newuser newuser    4096 Dec 13 20:24 sbin\nlrwxrwxrwx  1 newuser newuser      28 May  9 19:49 .shell -&gt; .singularity.d/actions/shell\nlrwxrwxrwx  1 newuser newuser      24 May  9 19:49 singularity -&gt; .singularity.d/runscript\ndrwx------  5 newuser newuser    4096 May  9 19:52 .singularity.d\ndrwx------  3 newuser newuser    4096 Feb  5  2016 sys\ndrwx------  3 newuser newuser    4096 Dec 13 20:24 tmp\ndrwx------ 11 newuser newuser    4096 Dec 13 20:23 usr\ndrwx------ 11 newuser newuser    4096 Dec 13 20:24 var\n-rw-rw-r--  1 newuser newuser       6 May  9 03:37 version\n```\n\nI don't get this error when running with `--debug`, but I don't think singularity is attempting to delete the folder:\n\n```\n[newuser@0e726194b97a ~]$ singularity --debug exec docker://bids/mriqc:0.9.3 env\nEnabling debugging\nEnding argument loop\nSingularity version: 2.2.99-HEAD.g945c6ee\nExec'ing: /usr/local/libexec/singularity/cli/exec.exec\nEvaluating args: 'docker://bids/mriqc:0.9.3 env'\nVERBOSE2 SINGULARITY_COMMAND_ASIS found as False\nVERBOSE2 SINGULARITY_ROOTFS found as /tmp/.singularity-runtime.8Wthh452/container/bids/mriqc:0.9.3\nVERBOSE2 SINGULARITY_METADATA_FOLDER found as /tmp/.singularity-runtime.8Wthh452/container/bids/mriqc:0.9.3/.singularity.d\nVERBOSE2 SINGULARITY_FIX_PERMS found as False\nVERBOSE2 SINGULARITY_COLORIZE not defined (None)\nVERBOSE2 SINGULARITY_DISABLE_CACHE found as False\nVERBOSE2 SINGULARITY_CACHEDIR found as /home/newuser/.singularity\nVERBOSE2 SINGULARITY_ENVBASE found as /tmp/.singularity-runtime.8Wthh452/container/bids/mriqc:0.9.3/.singularity.d/env\nVERBOSE2 SINGULARITY_LABELFILE found as /tmp/.singularity-runtime.8Wthh452/container/bids/mriqc:0.9.3/.singularity.d/labels.json\nVERBOSE2 SINGULARITY_INCLUDECMD found as False\nVERBOSE2 SINGULARITY_PULLFOLDER found as /home/newuser\nVERBOSE2 SHUB_NAMEBYHASH not defined (None)\nVERBOSE2 SHUB_NAMEBYCOMMIT not defined (None)\nVERBOSE2 SHUB_CONTAINERNAME not defined (None)\nVERBOSE2 SINGULARITY_CONTENTS found as /tmp/.singularity-layers.p05BbE5N\nVERBOSE2 SINGULARITY_PYTHREADS found as 9\nVERBOSE2 SINGULARITY_CONTAINER found as docker://bids/mriqc:0.9.3\nDEBUG Found uri docker://\nDEBUG\n*** STARTING DOCKER IMPORT PYTHON  ****\nDEBUG Docker layers and (env,labels,runscript) will be written to: /tmp/.singularity-layers.p05BbE5N\nVERBOSE2 SINGULARITY_DOCKER_USERNAME not defined (None)\nVERBOSE2 SINGULARITY_DOCKER_PASSWORD found\nDEBUG Starting Docker IMPORT, includes environment, runscript, and metadata.\nVERBOSE Docker image: bids/mriqc:0.9.3\nVERBOSE2 Specified Docker ENTRYPOINT as %runscript.\nDEBUG Headers found: Content-Type,Accept\nVERBOSE Registry: index.docker.io\nVERBOSE Namespace: bids\nVERBOSE Repo Name: mriqc\nVERBOSE Repo Tag: 0.9.3\nVERBOSE Version: None\nVERBOSE Obtaining tags: <https://index.docker.io/v2/bids/mriqc/tags/list>\nDEBUG GET <https://index.docker.io/v2/bids/mriqc/tags/list>\nDEBUG Http Error with code 401\nDEBUG GET <https://auth.docker.io/token?service=registry.docker.io&amp;expires_in=9000&amp;scope=repository:bids/mriqc:pull>\nDEBUG Headers found: Content-Type,Authorization,Accept\nDocker image path: index.docker.io/bids/mriqc:0.9.3\nVERBOSE Obtaining manifest: <https://index.docker.io/v2/bids/mriqc/manifests/0.9.3>\nDEBUG GET <https://index.docker.io/v2/bids/mriqc/manifests/0.9.3>\nDEBUG Image manifest version 2.1 found.\nDEBUG Adding digest sha256:243eedf190b75e91c01f330ff21c77f4c6dc385d7756dda9e7f39741ad4f4071\nDEBUG Adding digest sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4\nDEBUG A…",
                "pretext": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-300284557|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494360121.035646",
        "date": 1494360121035
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/664#issuecomment-300278266|#664: `urllib` module dependencies for Python 3>",
                "text": "hey @ashiklom! Could you retry this on the development branch? We no longer have this cli.py, nor do we have utils (it was renamed to suitls to deal with a conflict) so the bug might not be there anymore. Let's update this PR for the development branch, and then I will fix any issues right away!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/664#issuecomment-300278266|#664: `urllib` module dependencies for Python 3>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494358684.649760",
        "date": 1494358684649
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-300275616|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "text": "hey @chrisfilo ! No worries about the version. I think in this case, running as root would mean that home is in /root, and then the container's home is mounted as such, but that is also where the application lives... and there must be some permission error cleaning up the temporary directory. I just tried this as a (non root) user and it seems to work ok:\n\n```vanessa@vanessa-ThinkPad-T450s:~$ singularity run docker://bids/mriqc:0.9.3\nDocker image path: index.docker.io/bids/mriqc:0.9.3\nCache folder set to /home/vanessa/.singularity/docker\n[25/25] |                                   | 100.0% \nImporting: base Singularity environment\nExploding layer: sha256:243eedf190b75e91c01f330ff21c77f4c6dc385d7756dda9e7f39741ad4f4071.tar.gz\nExploding layer: sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4.tar.gz\nExploding layer: sha256:a4936036b8465027fd8e6a51cb5cae33190f705b4c4d17a8acf41f471c87ca83.tar.gz\nExploding layer: sha256:d71212883635f51c04e6030dc23dad7a8a5db1a013eafed23fcc976db3ef3439.tar.gz\nExploding layer: sha256:736625e6e08f2b6b983428e79a67a40acfb9647ab17184e9e2e911cd0a0c6f4f.tar.gz\nExploding layer: sha256:de5b15143d20c60c776fd5cd31ca09caf1e293ac50f98f18bcde5dc6a84d55ac.tar.gz\nExploding layer: sha256:54a5564a38ad416b14910a6dc41fec03ff8df40581d9cf026c5f05e4d3ef26f0.tar.gz\nExploding layer: sha256:91f577f6f911091eb01b3f1819860d92c4e1fb8550f37773088f0988fdd14cf5.tar.gz\nExploding layer: sha256:2f506b00f891f2e84f62cf1acdf59423eda26f37be82f7e39e2d5945e55b707d.tar.gz\nExploding layer: sha256:12f2072347221f221d1676db9f33d123fa4540f290446e0ac7722ed4ef0a0810.tar.gz\nExploding layer: sha256:9ddcf08966105c7e4be67e90fa25881617485ab6cfd74072cd3a1ae913301274.tar.gz\nExploding layer: sha256:d4a29c916103cde68802c58bf4ec909216cc4972895d2d5b1d448b0c8b17eceb.tar.gz\nExploding layer: sha256:7f4975bb38892fcdb9285fa22776bdd387c1c947c26aa0c7c3b62a0e8650df39.tar.gz\nExploding layer: sha256:83539119cf7d0c4d2076e8cdde9dcce2547aca339d0f1a4b6e28b28ae6933caa.tar.gz\nExploding layer: sha256:594bf226e62babfe551e6a88838ef0c5798a447ecedd65d5ac69abce4ae2d351.tar.gz\nExploding layer: sha256:399f9aadedac10094e52dc7d685ef8a04e54074bd157ebf1257cc0c4cedf7163.tar.gz\nExploding layer: sha256:7d6bbcadbe0101e0f7deb1b6a83d2a520e805447e5afd48303a0229c034df2ef.tar.gz\nExploding layer: sha256:d9e9382a21dd7dfe6babf8a4e744cafd6f2f7ebb983e2d40c7cb13fbc98b115d.tar.gz\nExploding layer: sha256:6f06d723971b4f12e240f3336a17bf45057b575e501bc65071d4298764d892e3.tar.gz\nExploding layer: sha256:91641bf41cb3485b405e4b2a287d8abc2c5545367faad1e2f72f103bff9c18f8.tar.gz\nExploding layer: sha256:bd842a2105a862f62ba4ad726531029be49046c290307e9c07a688c89f4606e6.tar.gz\nExploding layer: sha256:4a70713c436f2350e8a9f1c1e6c823290f331254c6c21d5657056499d8575608.tar.gz\nExploding layer: sha256:63fe8c0068a811103c702452985368fc99014f83b5f0151cf631644f13f383b2.tar.gz\nExploding layer: sha256:4daad8bdde31f5969d6a44800e993a911bed25853b2f89417b07ce7f0ac67714.tar.gz\nExploding layer: sha256:b3e1c725a85f0953e81815b7c7aabfad9ebfd90af53f99248981282b8045d787.tar.gz\nExploding layer: sha256:2bf1a0cf6f2a1259591399f9afe1956e03128633732c390aa0889af805e1b9a4.tar.gz\n/usr/local/miniconda/lib/python3.6/site-packages/sklearn/externals/joblib/_multiprocessing_helpers.py:28: UserWarning: [Errno 38] Function not implemented.  joblib will operate in serial mode\n  warnings.warn('%s.  joblib will operate in serial mode' % (e,))\nFontconfig warning: ignoring C.UTF-8: not a valid language tag\nusage: mriqc [-h] [-v]\n             [--participant_label [PARTICIPANT_LABEL [PARTICIPANT_LABEL ...]]]\n             [-m [{T1w,bold,T2w} [{T1w,bold,T2w} ...]]] [-s SESSION_ID]\n             [-r RUN_ID] [--nthreads NTHREADS] [--n_procs N_PROCS]\n             [--mem_gb MEM_GB] [--write-graph] [--dry-run]\n             [--use-plugin USE_PLUGIN] [--ica] [--testing] [--profile]\n             [--hmc-afni] [--hmc-fsl] [-f] [--fft-spikes-detector]\n             [-w WORK_DIR] [--report-dir REPORT_DIR] [--verbose-reports]\n             [--ants-nthreads ANTS_NTHREADS] [--ants-settings ANTS_SETTINGS]\n             [--deoblique] [--despike] [--start-idx START_IDX]\n             [--stop-idx STOP_IDX] [--correct-slice-timing]\n             bids_dir output_dir {participant,group} [{participant,group} ...]\nmriqc: error: the following arguments are required: bids_dir, output_dir, analysis_level\n```\nsome things to try:\n\n• if you can run as a user, give that a go, and see if you can reproduce what I did above\n• if you must run as root, then let's look at the above with `--debug` so we can see exactly what is going on. I would also try specifying `-H/--home` to be something else, so there isn't the weirdness of having the main application code and root home in the same spot.\n• and likely you won't choose this, but it would be worth considering for future images to not have core application stuffs in root's home.\n\nAnyway - whatever you try - please post the commands and debug output so I can help to resolve. Ty!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-300275616|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494358056.483698",
        "date": 1494358056483
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/663|#663 Environment variables defined in Dockerfile are lost when running images from Docker Hub> by <https://github.com/chrisfilo|chrisfilo>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/663|#663 Environment variables defined in Dockerfile are lost when running images from Docker Hub> by <https://github.com/chrisfilo|chrisfilo>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494355198.694878",
        "date": 1494355198694
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/663#issuecomment-300262659|#663: Environment variables defined in Dockerfile are lost when running images from Docker Hub>",
                "text": "Apologies - works as expected with the development branch.",
                "pretext": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/663#issuecomment-300262659|#663: Environment variables defined in Dockerfile are lost when running images from Docker Hub>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494355198.694836",
        "date": 1494355198694
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-300240523|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "text": "I was not (sorry for that). I've tried again with 945c6ee343a1e6101e22396a90dfdb5944f442b6 (most current on development branch) and I get the same error:\n\n```\n[root@e4fb0252c326 /]# singularity run docker://bids/mriqc:0.9.3\nDocker image path: index.docker.io/bids/mriqc:0.9.3\nCache folder set to /root/.singularity/docker\n[25/25] |===================================| 100.0%\nCreating container runtime...\nSingularity: action-suid (U=0,P=27)&gt; USER=root, IMAGE='mriqc:0.9.3', COMMAND='run'\n\nFontconfig warning: ignoring C.UTF-8: not a valid language tag\nusage: mriqc [-h] [-v]\n             [--participant_label [PARTICIPANT_LABEL [PARTICIPANT_LABEL ...]]]\n             [-m [{T1w,bold,T2w} [{T1w,bold,T2w} ...]]] [-s SESSION_ID]\n             [-r RUN_ID] [--nthreads NTHREADS] [--n_procs N_PROCS]\n             [--mem_gb MEM_GB] [--write-graph] [--dry-run]\n             [--use-plugin USE_PLUGIN] [--ica] [--testing] [--profile]\n             [--hmc-afni] [--hmc-fsl] [-f] [--fft-spikes-detector]\n             [-w WORK_DIR] [--report-dir REPORT_DIR] [--verbose-reports]\n             [--ants-nthreads ANTS_NTHREADS] [--ants-settings ANTS_SETTINGS]\n             [--deoblique] [--despike] [--start-idx START_IDX]\n             [--stop-idx STOP_IDX] [--correct-slice-timing]\n             bids_dir output_dir {participant,group} [{participant,group} ...]\nmriqc: error: the following arguments are required: bids_dir, output_dir, analysis_level\n[root@e4fb0252c326 /]# Singularity: singularity: cleanupd (U=0,P=100511)&gt; Failed removing file: /tmp/.singularity-runtime.e9QOcU07/container/bids/mriqc:0.9.3/libwebp-0.5.2-linux-x86-64/include/webp\n\nSingularity: singularity: cleanupd (U=0,P=100511)&gt; Could not remove directory /tmp/.singularity-runtime.e9QOcU07: Directory not empty\n\nSingularity: singularity: cleanupd (U=0,P=100511)&gt; Retval = 255\n```",
                "pretext": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-300240523|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494350791.407384",
        "date": 1494350791407
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by jjohnson42 on pull request <https://github.com/singularityware/singularity/pull/628#issuecomment-300171880|#628: Add a Gitter chat badge to README.md>",
                "text": "mattermost may be worth thinking about if you do self host",
                "pretext": "[singularityware/singularity] New comment by jjohnson42 on pull request <https://github.com/singularityware/singularity/pull/628#issuecomment-300171880|#628: Add a Gitter chat badge to README.md>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494338081.641573",
        "date": 1494338081641
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#664 `urllib` module dependencies for Python 3' https://github.com/singularityware/singularity/issues/664 by ashiklom",
                "text": "The `docker` module will fail when using current Python 3 (which is the <https://wiki.archlinux.org/index.php/python|default `python` executable on Arch Linux>, and it seems other distributions are <https://wiki.ubuntu.com/Python|moving in this direction as well>) with the following error:\n\n```Traceback (most recent call last):\n  File \"/usr/libexec/singularity/python/cli.py\", line 27, in &lt;module&gt;\n    from docker.api import get_layer, create_runscript, get_manifest, get_config, get_images\n  File \"/usr/libexec/singularity/python/docker/api.py\", line 29, in &lt;module&gt;\n    from utils import api_get, write_file, add_http\n  File \"/usr/libexec/singularity/python/utils.py\", line 32, in &lt;module&gt;\n    import urllib2\nModuleNotFoundError: No module named 'urllib2'\n```\n\nThis is because the `urllib2` module has been <https://docs.python.org/2/library/urllib2.html|deprecated in Python 3>.\n\nFortunately, this is easily fixed by running `2to3` on the `/usr/libexec/singularity/utils.py` script. I've provided the diff output from `2to3 utils.py` below.\n\n```\n--- utils.py    (original)\n+++ utils.py    (refactored)\n@@ -28,10 +28,10 @@\n import subprocess\n import sys\n import tarfile\n-import urllib\n\n*-import urllib2*\n\n-from urllib2 import HTTPError\n+import urllib.request, urllib.parse, urllib.error\n+import urllib.request, urllib.error, urllib.parse\n+\n+from urllib.error import HTTPError\n\n # Python less than version 3 must import OSError\n if sys.version_info[0] &lt; 3:\n@@ -74,7 +74,7 @@\n        try:\n            response = json.loads(response)\n        except:\n• print(\"Error parsing response for url %s, exiting.\" %(url))\n• ```    print((\"Error parsing response for url %s, exiting.\" %(url)))\n         sys.exit(1)\n\n     # If we have a next url```\n     @@ -128,16 +128,16 @@\n          do_stream = True\n\n      if data != None:\n• args = urllib.urlencode(data)\n• request = urllib2.Request(url=url,\n• args = urllib.parse.urlencode(data)\n• request = urllib.request.Request(url=url,\n                                    data=args,\n                                    headers=headers)\n      else:\n• request = urllib2.Request(url=url,\n• ``` request = urllib.request.Request(url=url,\n                                headers=headers)```\n      try:\n• response = urllib2.urlopen(request)\n• ``` response = urllib.request.urlopen(request)```\n      # If we have an HTTPError, try to follow the response\n      except HTTPError as error:\\\n     ```",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/ashiklom|ashiklom>",
                "title": "#664 `urllib` module dependencies for Python 3",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/664",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494332294.331596",
        "date": 1494332294331
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/663#issuecomment-299997290|#663: Environment variables defined in Dockerfile are lost when running images from Docker Hub>",
                "text": "Could you give it a try with the development branch. \nHere I present the output using \n&gt; singularity 2.2.99-development\n&gt; ```[Eduardo@Highwind ~]$ singularity -x shell docker://poldracklab/mriqc\n&gt; • '[' -f /home/Eduardo/.singularity-init ']'\n&gt; • '[' -f /usr/local/libexec/singularity/cli/action_argparser.sh ']'\n&gt; • . /usr/local/libexec/singularity/cli/action_argparser.sh\n&gt;      ++ message 2 'Evaluating args: '\\''docker://poldracklab/mriqc'\\''\\n'\n&gt;      ++ LEVEL=2\n&gt;      ++ MESSAGE='Evaluating args: '\\''docker://poldracklab/mriqc'\\''\\n'\n&gt;      ++ '[' -z 'Evaluating args: '\\''docker://poldracklab/mriqc'\\''\\n' ']'\n&gt;      ++ shift\n&gt;      ++ shift\n&gt;      ++ case \"$LEVEL\" in\n&gt;      ++ '[' 2 -le 1 ']'\n&gt;      ++ return 0\n&gt;      ++ true\n&gt;      ++ case ${1:-} in\n&gt;      ++ break\n&gt; • '[' -z '' ']'\n&gt; • SINGULARITY_IMAGE=docker://poldracklab/mriqc\n&gt; • export SINGULARITY_IMAGE\n&gt; • shift\n&gt; • '[' -z docker://poldracklab/mriqc ']'\n&gt; • '[' -f /usr/local/etc/singularity/init ']'\n&gt; • . /usr/local/etc/singularity/init\n&gt;      ++ unset module\n&gt;      ++ unset ml\n&gt;      ++ unset BASH_ENV\n&gt;      ++ SINGULARITYENV_PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin:/usr/local/sbin:/bin:/sbin:/usr/bin:/usr/sbin\n&gt;      ++ HISTFILE=\n&gt;      ++ export PATH HISTFILE\n&gt; • '[' -x /usr/local/libexec/singularity/image-handler.sh ']'\n&gt; • . /usr/local/libexec/singularity/image-handler.sh\n&gt;      ++ '[' -z docker://poldracklab/mriqc ']'\n&gt;      ++ '[' -z shell ']'\n&gt;      ++ case \"$SINGULARITY_IMAGE\" in\n&gt;      +++ echo docker://poldracklab/mriqc\n&gt;      +++ sed -e 's@^docker://@@'\n&gt;      ++ NAME=poldracklab/mriqc\n&gt;      ++ '[' -z '' ']'\n&gt;      ++ SINGULARITY_LOCALCACHEDIR=/tmp\n&gt;      +++ mktemp -d /tmp/.singularity-runtime.XXXXXXXX\n&gt;      ++ SINGULARITY_SESSIONDIR=/tmp/.singularity-runtime.n4MTd02Z\n&gt;      ++ SINGULARITY_ROOTFS=/tmp/.singularity-runtime.n4MTd02Z/container/poldracklab/mriqc\n&gt;      ++ mkdir -p /tmp/.singularity-runtime.n4MTd02Z/container/poldracklab/mriqc\n&gt;      ++ SINGULARITY_CONTAINER=docker://poldracklab/mriqc\n&gt;      ++ SINGULARITY_IMAGE=/tmp/.singularity-runtime.n4MTd02Z/container/poldracklab/mriqc\n&gt;      +++ mktemp /tmp/.singularity-layers.XXXXXXXX\n&gt;      ++ SINGULARITY_CONTENTS=/tmp/.singularity-layers.1qjMaVuo\n&gt;      ++ export SINGULARITY_ROOTFS SINGULARITY_IMAGE SINGULARITY_CONTAINER SINGULARITY_SESSIONDIR SINGULARITY_CONTENTS\n&gt;      ++ eval_abort /usr/local/libexec/singularity/python/import.py\n&gt;      ++ eval /usr/local/libexec/singularity/python/import.py\n&gt;      +++ /usr/local/libexec/singularity/python/import.py\n&gt;      Docker image path: index.docker.io/poldracklab/mriqc:latest\n&gt;      Cache folder set to /home/Eduardo/.singularity/docker\n&gt;      [48/48] |===================================| 100.0% \n&gt;      ++ RETVAL=0\n&gt;      ++ '[' 0 -ne 0 ']'\n&gt;      ++ return 0\n&gt;      ++ message 1 'Importing: base Singularity environment\\n'\n&gt;      ++ LEVEL=1\n&gt;      ++ MESSAGE='Importing: base Singularity environment\\n'\n&gt;      ++ '[' -z 'Importing: base Singularity environment\\n' ']'\n&gt;      ++ shift\n&gt;      ++ shift\n&gt;      ++ case \"$LEVEL\" in\n&gt;      ++ '[' 1 -le 1 ']'\n&gt;      ++ printf 'Importing: base Singularity environment\\n'\n&gt;      Importing: base Singularity environment\n&gt;      ++ return 0\n&gt;      ++ zcat /usr/local/libexec/singularity/bootstrap-scripts/environment.tar\n&gt;      ++ cd /tmp/.singularity-runtime.n4MTd02Z/container/poldracklab/mriqc\n&gt;      ++ tar -xf -\n&gt;      +++ cat /tmp/.singularity-layers.1qjMaVuo\n&gt;      ++ for i in '`cat \"$SINGULARITY_CONTENTS\"`'\n&gt;      +++ basename /home/Eduardo/.singularity/docker/sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4.tar.gz\n&gt;      ++ name=sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4.tar.gz\n&gt;      ++ message 1 'Exploding layer: sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4.tar.gz\\n'\n&gt;      ++ LEVEL=1\n&gt;      ++ MESSAGE='Exploding layer: sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4.tar.gz\\n'\n&gt;      ++ '[' -z 'Exploding layer: sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4.tar.gz\\n' ']'\n&gt;      ++ shift\n&gt;      ++ shift\n&gt;      ++ case \"$LEVEL\" in\n&gt;      ++ '[' 1 -le 1 ']'\n&gt;      ++ printf 'Exploding layer: sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4.tar.gz\\n'\n&gt;      Exploding layer: sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4.tar.gz\n&gt;      ++ return 0\n&gt;      ++ zcat /home/Eduardo/.singularity/docker/sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4.tar.gz\n&gt;      ++ cd /tmp/.singularity-runtime.n4MTd02Z/container/poldracklab/mriqc\n&gt;      ++ tar '--exclude=dev/_' -xf -\n&gt;      ++ for i in '`cat \"$SINGULARITY_CONTENTS\"`'\n&gt;      +++ basename /home/Eduardo/.singularity/docker/sha256:a4936036b8465027fd8e6a51cb5cae33190f705b4c4d17a8acf41f471c87ca83.tar.gz\n&gt;      ++ name=sha256:a4936036b8465027fd8e6a51cb5cae33190f705b4c4d17a8acf41f471c87ca83.tar.gz\n&gt;      ++ message 1 'Exploding layer: sha256:a4936036b8465027fd8e6a51cb5cae33190f705b4c4d17a8acf41f471c87ca83.tar.gz\\n'\n&gt;      ++ LEVEL=1\n&gt;      ++ MESSAGE='Exploding layer: sha256:a4936036b8465027fd8e6a51cb5cae33190f705b4c4d17a8acf41f471c87ca83.tar.gz\\n'\n&gt;      ++ '[' -z 'Exploding layer: sha256:a4936036b8465027fd8e6a51cb5cae33190f705b4c4d17a8acf41f471c87ca83.tar.gz\\n' ']'\n&gt;      ++ shift\n&gt;      ++ shift\n&gt;      ++ case \"$LEVEL\" in\n&gt;      ++ '[' 1 -le 1 ']'\n&gt;      ++ printf 'Exploding layer: sha256:a4936036b8465027fd8e6a51cb5cae33190f705b4c4d17a8acf41f471c87ca83.tar.gz\\n'\n&gt;      Exploding layer: sha256:a4936036b8465027fd8e6a51cb5cae33190f705b4c4d17a8acf41f471c87ca83.tar.gz\n&gt;      ++ return 0\n&gt;      ++ zcat /home/Eduardo/.singularity/docker/sha256:a4936036b8465027fd8e6a51cb5cae33190f705b4c4d17a8acf41f471c87ca83.tar.gz\n&gt;      ++ cd /tmp/.singularity-runtime.n4MTd02Z/container/poldracklab/mriqc\n&gt;      ++ tar '--exclude=dev/_' -xf -\n&gt;      ++ for i in '`cat \"$SINGULARITY_CONTENTS\"`'\n&gt;      +++ basename /home/Eduardo/.singularity/docker/sha256:d71212883635f51c04e6030dc23dad7a8a5db1a013eafed23fcc976db3ef3439.tar.gz\n&gt;      ++ name=sha256:d71212883635f51c04e6030dc23dad7a8a5db1a013eafed23fcc976db3ef3439.tar.gz\n&gt;      ++ message 1 'Exploding layer: sha256:d71212883635f51c04e6030dc23dad7a8a5db1a013eafed23fcc976db3ef3439.tar.gz\\n'\n&gt;      ++ LEVEL=1\n&gt;      ++ MESSAGE='Exploding layer: sha256:d71212883635f51c04e6030dc23dad7a8a5db1a013eafed23fcc976db3ef3439.tar.gz\\n'\n&gt;      ++ '[' -z 'Exploding layer: sha256:d71212883635f51c04e6030dc23dad7a8a5db1a013eafed23fcc976db3ef3439.tar.gz\\n' ']'\n&gt;      ++ shift\n&gt;      ++ shift\n&gt;      ++ case \"$LEVEL\" in\n&gt;      ++ '[' 1 -le 1 ']'\n&gt;      ++ printf 'Exploding layer: sha256:d71212883635f51c04e6030dc23dad7a8a5db1a013eafed23fcc976db3ef3439.tar.gz\\n'\n&gt;      Exploding layer: sha256:d71212883635f51c04e6030dc23dad7a8a5db1a013eafed23fcc976db3ef3439.tar.gz\n&gt;      ++ return 0\n&gt;      ++ zcat /home/Eduardo/.singularity/docker/sha256:d71212883635f51c04e6030dc23dad7a8a5db1a013eafed23fcc976db3ef3439.tar.gz\n&gt;      ++ cd /tmp/.singularity-runtime.n4MTd02Z/container/poldracklab/mriqc\n&gt;      ++ tar '--exclude=dev/_' -xf -\n&gt;      ++ for i in '`cat \"$SINGULARITY_CONTENTS\"`'\n&gt;      +++ basename /home/Eduardo/.singularity/docker/sha256:736625e6e08f2b6b983428e79a67a40acfb9647ab17184e9e2e911cd0a0c6f4f.tar.gz\n&gt;      ++ name=sha256:736625e6e08f2b6b983428e79a67a40acfb9647ab17184e9e2e911cd0a0c6f4f.tar.gz\n&gt;      ++ message 1 'Exploding layer: sha256:736625e6e08f2b6b983428e79a67a40acfb9647ab17184e9e2e911cd0a0c6f4f.tar.gz\\n'\n&gt;      ++ LEVEL=1\n&gt;      ++ MESSAGE='Exploding layer: sha256:736625e6e08f2b6b983428e79a67a40a…",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/663#issuecomment-299997290|#663: Environment variables defined in Dockerfile are lost when running images from Docker Hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494279174.798284",
        "date": 1494279174798
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-299995290|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "text": "Are you using development branch?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/662#issuecomment-299995290|#662: ERROR: Could not remove run directory (...) Directory not empty>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494278669.689327",
        "date": 1494278669689
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/537#issuecomment-299995178|#537: Various additional tweaks for 2.3>",
                "text": "Why are you using current master? Did this ever work with current master?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/537#issuecomment-299995178|#537: Various additional tweaks for 2.3>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494278638.682430",
        "date": 1494278638682
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#663 Environment variables defined in Dockerfile are lost when running images from Docker Hub' https://github.com/singularityware/singularity/issues/663 by chrisfilo",
                "text": "```[root@9d45339bd15d /]# singularity exec docker://poldracklab/mriqc:0.9.3 env\nCache folder set to /root/.singularity/docker\nDownloading layer sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4\nExtracting /root/.singularity/docker/sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4.tar.gz\nDownloading layer sha256:a4936036b8465027fd8e6a51cb5cae33190f705b4c4d17a8acf41f471c87ca83\nExtracting /root/.singularity/docker/sha256:a4936036b8465027fd8e6a51cb5cae33190f705b4c4d17a8acf41f471c87ca83.tar.gz\nDownloading layer sha256:d71212883635f51c04e6030dc23dad7a8a5db1a013eafed23fcc976db3ef3439\nExtracting /root/.singularity/docker/sha256:d71212883635f51c04e6030dc23dad7a8a5db1a013eafed23fcc976db3ef3439.tar.gz\nDownloading layer sha256:736625e6e08f2b6b983428e79a67a40acfb9647ab17184e9e2e911cd0a0c6f4f\nExtracting /root/.singularity/docker/sha256:736625e6e08f2b6b983428e79a67a40acfb9647ab17184e9e2e911cd0a0c6f4f.tar.gz\nDownloading layer sha256:de5b15143d20c60c776fd5cd31ca09caf1e293ac50f98f18bcde5dc6a84d55ac\nExtracting /root/.singularity/docker/sha256:de5b15143d20c60c776fd5cd31ca09caf1e293ac50f98f18bcde5dc6a84d55ac.tar.gz\nDownloading layer sha256:54a5564a38ad416b14910a6dc41fec03ff8df40581d9cf026c5f05e4d3ef26f0\nExtracting /root/.singularity/docker/sha256:54a5564a38ad416b14910a6dc41fec03ff8df40581d9cf026c5f05e4d3ef26f0.tar.gz\nDownloading layer sha256:91f577f6f911091eb01b3f1819860d92c4e1fb8550f37773088f0988fdd14cf5\nExtracting /root/.singularity/docker/sha256:91f577f6f911091eb01b3f1819860d92c4e1fb8550f37773088f0988fdd14cf5.tar.gz\nDownloading layer sha256:2f506b00f891f2e84f62cf1acdf59423eda26f37be82f7e39e2d5945e55b707d\nExtracting /root/.singularity/docker/sha256:2f506b00f891f2e84f62cf1acdf59423eda26f37be82f7e39e2d5945e55b707d.tar.gz\nDownloading layer sha256:12f2072347221f221d1676db9f33d123fa4540f290446e0ac7722ed4ef0a0810\nExtracting /root/.singularity/docker/sha256:12f2072347221f221d1676db9f33d123fa4540f290446e0ac7722ed4ef0a0810.tar.gz\nDownloading layer sha256:9ddcf08966105c7e4be67e90fa25881617485ab6cfd74072cd3a1ae913301274\nExtracting /root/.singularity/docker/sha256:9ddcf08966105c7e4be67e90fa25881617485ab6cfd74072cd3a1ae913301274.tar.gz\nDownloading layer sha256:d4a29c916103cde68802c58bf4ec909216cc4972895d2d5b1d448b0c8b17eceb\nExtracting /root/.singularity/docker/sha256:d4a29c916103cde68802c58bf4ec909216cc4972895d2d5b1d448b0c8b17eceb.tar.gz\nDownloading layer sha256:7f4975bb38892fcdb9285fa22776bdd387c1c947c26aa0c7c3b62a0e8650df39\nExtracting /root/.singularity/docker/sha256:7f4975bb38892fcdb9285fa22776bdd387c1c947c26aa0c7c3b62a0e8650df39.tar.gz\nDownloading layer sha256:83539119cf7d0c4d2076e8cdde9dcce2547aca339d0f1a4b6e28b28ae6933caa\nExtracting /root/.singularity/docker/sha256:83539119cf7d0c4d2076e8cdde9dcce2547aca339d0f1a4b6e28b28ae6933caa.tar.gz\nDownloading layer sha256:594bf226e62babfe551e6a88838ef0c5798a447ecedd65d5ac69abce4ae2d351\nExtracting /root/.singularity/docker/sha256:594bf226e62babfe551e6a88838ef0c5798a447ecedd65d5ac69abce4ae2d351.tar.gz\nDownloading layer sha256:399f9aadedac10094e52dc7d685ef8a04e54074bd157ebf1257cc0c4cedf7163\nExtracting /root/.singularity/docker/sha256:399f9aadedac10094e52dc7d685ef8a04e54074bd157ebf1257cc0c4cedf7163.tar.gz\nDownloading layer sha256:7d6bbcadbe0101e0f7deb1b6a83d2a520e805447e5afd48303a0229c034df2ef\nExtracting /root/.singularity/docker/sha256:7d6bbcadbe0101e0f7deb1b6a83d2a520e805447e5afd48303a0229c034df2ef.tar.gz\nDownloading layer sha256:d9e9382a21dd7dfe6babf8a4e744cafd6f2f7ebb983e2d40c7cb13fbc98b115d\nExtracting /root/.singularity/docker/sha256:d9e9382a21dd7dfe6babf8a4e744cafd6f2f7ebb983e2d40c7cb13fbc98b115d.tar.gz\nDownloading layer sha256:6f06d723971b4f12e240f3336a17bf45057b575e501bc65071d4298764d892e3\nExtracting /root/.singularity/docker/sha256:6f06d723971b4f12e240f3336a17bf45057b575e501bc65071d4298764d892e3.tar.gz\nDownloading layer sha256:91641bf41cb3485b405e4b2a287d8abc2c5545367faad1e2f72f103bff9c18f8\nExtracting /root/.singularity/docker/sha256:91641bf41cb3485b405e4b2a287d8abc2c5545367faad1e2f72f103bff9c18f8.tar.gz\nDownloading layer sha256:bd842a2105a862f62ba4ad726531029be49046c290307e9c07a688c89f4606e6\nExtracting /root/.singularity/docker/sha256:bd842a2105a862f62ba4ad726531029be49046c290307e9c07a688c89f4606e6.tar.gz\nDownloading layer sha256:4a70713c436f2350e8a9f1c1e6c823290f331254c6c21d5657056499d8575608\nExtracting /root/.singularity/docker/sha256:4a70713c436f2350e8a9f1c1e6c823290f331254c6c21d5657056499d8575608.tar.gz\nDownloading layer sha256:63fe8c0068a811103c702452985368fc99014f83b5f0151cf631644f13f383b2\nExtracting /root/.singularity/docker/sha256:63fe8c0068a811103c702452985368fc99014f83b5f0151cf631644f13f383b2.tar.gz\nDownloading layer sha256:4daad8bdde31f5969d6a44800e993a911bed25853b2f89417b07ce7f0ac67714\nExtracting /root/.singularity/docker/sha256:4daad8bdde31f5969d6a44800e993a911bed25853b2f89417b07ce7f0ac67714.tar.gz\nDownloading layer sha256:b3e1c725a85f0953e81815b7c7aabfad9ebfd90af53f99248981282b8045d787\nExtracting /root/.singularity/docker/sha256:b3e1c725a85f0953e81815b7c7aabfad9ebfd90af53f99248981282b8045d787.tar.gz\nAdding Docker ENTRYPOINT as Singularity runscript...\n/usr/local/miniconda/bin/mriqc\nSINGULARITY_RUNDIR=/tmp/singularity-container_dir.AALdh4ht/poldracklab/mriqc:0.9.3\nHOSTNAME=9d45339bd15d\nTERM=xterm\nSINGULARITY_libexecdir=/usr/local/libexec\nUSER=root\nLS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:_.tar=01;31:_.tgz=01;31:_.arj=01;31:_.taz=01;31:_.lzh=01;31:_.lzma=01;31:_.tlz=01;31:_.txz=01;31:_.zip=01;31:_.z=01;31:_.Z=01;31:_.dz=01;31:_.gz=01;31:_.lz=01;31:_.xz=01;31:_.bz2=01;31:_.tbz=01;31:_.tbz2=01;31:_.bz=01;31:_.tz=01;31:_.deb=01;31:_.rpm=01;31:_.jar=01;31:_.rar=01;31:_.ace=01;31:_.zoo=01;31:_.cpio=01;31:_.7z=01;31:_.rz=01;31:_.jpg=01;35:_.jpeg=01;35:_.gif=01;35:_.bmp=01;35:_.pbm=01;35:_.pgm=01;35:_.ppm=01;35:_.tga=01;35:_.xbm=01;35:_.xpm=01;35:_.tif=01;35:_.tiff=01;35:_.png=01;35:_.svg=01;35:_.svgz=01;35:_.mng=01;35:_.pcx=01;35:_.mov=01;35:_.mpg=01;35:_.mpeg=01;35:_.m2v=01;35:_.mkv=01;35:_.ogm=01;35:_.mp4=01;35:_.m4v=01;35:_.mp4v=01;35:_.vob=01;35:_.qt=01;35:_.nuv=01;35:_.wmv=01;35:_.asf=01;35:_.rm=01;35:_.rmvb=01;35:_.flc=01;35:_.avi=01;35:_.fli=01;35:_.flv=01;35:_.gl=01;35:_.dl=01;35:_.xcf=01;35:_.xwd=01;35:_.yuv=01;35:_.cgm=01;35:_.emf=01;35:_.axv=01;35:_.anx=01;35:_.ogv=01;35:_.ogx=01;35:_.aac=01;36:_.au=01;36:_.flac=01;36:_.mid=01;36:_.midi=01;36:_.mka=01;36:_.mp3=01;36:_.mpc=01;36:_.ogg=01;36:_.ra=01;36:_.wav=01;36:_.axa=01;36:_.oga=01;36:_.spx=01;36:_.xspf=01;36:\nMESSAGELEVEL=1\nSINGULARITY_localstatedir=/usr/local/var\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/bin:/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin\nNEW_HOME=\nPWD=/\nLANG=en_US.UTF-8\nPS1=Singularity.mriqc:0.9.3&gt;\nRETVAL=0\nHOME=/root\nSHLVL=1\nSINGULARITY_INIT=1\nSINGULARITY_sysconfdir=/usr/local/etc\nLESSOPEN=||/usr/bin/lesspipe.sh %s\nSINGULARITY_CONTAINER=mriqc:0.9.3\nCHANGE_HOME=NO\nSINGULARITY_IMAGE=/tmp/singularity-container_dir.AALdh4ht/poldracklab/mriqc:0.9.3\nG_BROKEN_FILENAMES=1\nHISTFILE=/dev/null\nSingularity: sexec (U=0,P=15)&gt; Could not remove run directory /tmp/singularity-container_dir.AALdh4ht/poldracklab/mriqc:0.9.3: Directory not empty\n\nERROR  : Could not remove run directory /tmp/singularity-container_dir.AALdh4ht/poldracklab/mriqc:0.9.3: Directory not empty\n```\n\nHowever:\n\n```PS D:\\drive\\workspace\\singularitytest&gt; docker run -ti --rm --entrypoint=env poldracklab/mriqc:0.9.3\nPATH=/usr/local/miniconda/bin:/opt/ants:/usr/lib/fsl/5.0:/usr/lib/afni/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nHOSTNAME=bdb490ced557\nTERM=xterm\nFSLDIR=/usr/share/fsl/5.0\nFSLOUTPUTTYPE=NIFTI_GZ\nFSLMULTIFILEQUIT=TRUE\nPOSSUMDIR=/usr/share/fsl/5.0\nLD_LIBRARY_PATH=/usr/lib/fsl/5.0:\nFSLTCLSH=/usr/bin/tclsh\nFSLWISH=/usr/bin/wish\nAFNI_MODELPATH=/usr/lib/afni/models\nAFNI_IMSAVE_WARNINGS=NO\nAFNI_TTATLAS_DATASET=/us…",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/chrisfilo|chrisfilo>",
                "title": "#663 Environment variables defined in Dockerfile are lost when running images from Docker Hub",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/663",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494271528.938978",
        "date": 1494271528938
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#662 ERROR: Could not remove run directory (...) Directory not empty' https://github.com/singularityware/singularity/issues/662 by chrisfilo",
                "text": "I'm getting the following error at the end of execution:\n\n```\n[root@efa4dfbd5360 /]# singularity run docker://poldracklab/mriqc:0.9.3\nCache folder set to /root/.singularity/docker\nExtracting /root/.singularity/docker/sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4.tar.gz\nDownloading layer sha256:a4936036b8465027fd8e6a51cb5cae33190f705b4c4d17a8acf41f471c87ca83\nExtracting /root/.singularity/docker/sha256:a4936036b8465027fd8e6a51cb5cae33190f705b4c4d17a8acf41f471c87ca83.tar.gz\nDownloading layer sha256:d71212883635f51c04e6030dc23dad7a8a5db1a013eafed23fcc976db3ef3439\nExtracting /root/.singularity/docker/sha256:d71212883635f51c04e6030dc23dad7a8a5db1a013eafed23fcc976db3ef3439.tar.gz\nDownloading layer sha256:736625e6e08f2b6b983428e79a67a40acfb9647ab17184e9e2e911cd0a0c6f4f\nExtracting /root/.singularity/docker/sha256:736625e6e08f2b6b983428e79a67a40acfb9647ab17184e9e2e911cd0a0c6f4f.tar.gz\nDownloading layer sha256:de5b15143d20c60c776fd5cd31ca09caf1e293ac50f98f18bcde5dc6a84d55ac\nExtracting /root/.singularity/docker/sha256:de5b15143d20c60c776fd5cd31ca09caf1e293ac50f98f18bcde5dc6a84d55ac.tar.gz\nDownloading layer sha256:54a5564a38ad416b14910a6dc41fec03ff8df40581d9cf026c5f05e4d3ef26f0\nExtracting /root/.singularity/docker/sha256:54a5564a38ad416b14910a6dc41fec03ff8df40581d9cf026c5f05e4d3ef26f0.tar.gz\nDownloading layer sha256:91f577f6f911091eb01b3f1819860d92c4e1fb8550f37773088f0988fdd14cf5\nExtracting /root/.singularity/docker/sha256:91f577f6f911091eb01b3f1819860d92c4e1fb8550f37773088f0988fdd14cf5.tar.gz\nDownloading layer sha256:2f506b00f891f2e84f62cf1acdf59423eda26f37be82f7e39e2d5945e55b707d\nExtracting /root/.singularity/docker/sha256:2f506b00f891f2e84f62cf1acdf59423eda26f37be82f7e39e2d5945e55b707d.tar.gz\nDownloading layer sha256:12f2072347221f221d1676db9f33d123fa4540f290446e0ac7722ed4ef0a0810\nExtracting /root/.singularity/docker/sha256:12f2072347221f221d1676db9f33d123fa4540f290446e0ac7722ed4ef0a0810.tar.gz\nDownloading layer sha256:9ddcf08966105c7e4be67e90fa25881617485ab6cfd74072cd3a1ae913301274\nExtracting /root/.singularity/docker/sha256:9ddcf08966105c7e4be67e90fa25881617485ab6cfd74072cd3a1ae913301274.tar.gz\nDownloading layer sha256:d4a29c916103cde68802c58bf4ec909216cc4972895d2d5b1d448b0c8b17eceb\nExtracting /root/.singularity/docker/sha256:d4a29c916103cde68802c58bf4ec909216cc4972895d2d5b1d448b0c8b17eceb.tar.gz\nDownloading layer sha256:7f4975bb38892fcdb9285fa22776bdd387c1c947c26aa0c7c3b62a0e8650df39\nExtracting /root/.singularity/docker/sha256:7f4975bb38892fcdb9285fa22776bdd387c1c947c26aa0c7c3b62a0e8650df39.tar.gz\nDownloading layer sha256:83539119cf7d0c4d2076e8cdde9dcce2547aca339d0f1a4b6e28b28ae6933caa\nExtracting /root/.singularity/docker/sha256:83539119cf7d0c4d2076e8cdde9dcce2547aca339d0f1a4b6e28b28ae6933caa.tar.gz\nDownloading layer sha256:594bf226e62babfe551e6a88838ef0c5798a447ecedd65d5ac69abce4ae2d351\nExtracting /root/.singularity/docker/sha256:594bf226e62babfe551e6a88838ef0c5798a447ecedd65d5ac69abce4ae2d351.tar.gz\nDownloading layer sha256:399f9aadedac10094e52dc7d685ef8a04e54074bd157ebf1257cc0c4cedf7163\nExtracting /root/.singularity/docker/sha256:399f9aadedac10094e52dc7d685ef8a04e54074bd157ebf1257cc0c4cedf7163.tar.gz\nDownloading layer sha256:7d6bbcadbe0101e0f7deb1b6a83d2a520e805447e5afd48303a0229c034df2ef\nExtracting /root/.singularity/docker/sha256:7d6bbcadbe0101e0f7deb1b6a83d2a520e805447e5afd48303a0229c034df2ef.tar.gz\nDownloading layer sha256:d9e9382a21dd7dfe6babf8a4e744cafd6f2f7ebb983e2d40c7cb13fbc98b115d\nExtracting /root/.singularity/docker/sha256:d9e9382a21dd7dfe6babf8a4e744cafd6f2f7ebb983e2d40c7cb13fbc98b115d.tar.gz\nDownloading layer sha256:6f06d723971b4f12e240f3336a17bf45057b575e501bc65071d4298764d892e3\nExtracting /root/.singularity/docker/sha256:6f06d723971b4f12e240f3336a17bf45057b575e501bc65071d4298764d892e3.tar.gz\nDownloading layer sha256:91641bf41cb3485b405e4b2a287d8abc2c5545367faad1e2f72f103bff9c18f8\nExtracting /root/.singularity/docker/sha256:91641bf41cb3485b405e4b2a287d8abc2c5545367faad1e2f72f103bff9c18f8.tar.gz\nDownloading layer sha256:bd842a2105a862f62ba4ad726531029be49046c290307e9c07a688c89f4606e6\nExtracting /root/.singularity/docker/sha256:bd842a2105a862f62ba4ad726531029be49046c290307e9c07a688c89f4606e6.tar.gz\nDownloading layer sha256:4a70713c436f2350e8a9f1c1e6c823290f331254c6c21d5657056499d8575608\nExtracting /root/.singularity/docker/sha256:4a70713c436f2350e8a9f1c1e6c823290f331254c6c21d5657056499d8575608.tar.gz\nDownloading layer sha256:63fe8c0068a811103c702452985368fc99014f83b5f0151cf631644f13f383b2\nExtracting /root/.singularity/docker/sha256:63fe8c0068a811103c702452985368fc99014f83b5f0151cf631644f13f383b2.tar.gz\nDownloading layer sha256:4daad8bdde31f5969d6a44800e993a911bed25853b2f89417b07ce7f0ac67714\nExtracting /root/.singularity/docker/sha256:4daad8bdde31f5969d6a44800e993a911bed25853b2f89417b07ce7f0ac67714.tar.gz\nDownloading layer sha256:b3e1c725a85f0953e81815b7c7aabfad9ebfd90af53f99248981282b8045d787\nExtracting /root/.singularity/docker/sha256:b3e1c725a85f0953e81815b7c7aabfad9ebfd90af53f99248981282b8045d787.tar.gz\nAdding Docker ENTRYPOINT as Singularity runscript...\n/usr/local/miniconda/bin/mriqc\nusage: mriqc [-h] [-v]\n             [--participant_label [PARTICIPANT_LABEL [PARTICIPANT_LABEL ...]]]\n             [-m [{T1w,bold,T2w} [{T1w,bold,T2w} ...]]] [-s SESSION_ID]\n             [-r RUN_ID] [--nthreads NTHREADS] [--n_procs N_PROCS]\n             [--mem_gb MEM_GB] [--write-graph] [--dry-run]\n             [--use-plugin USE_PLUGIN] [--ica] [--testing] [--profile]\n             [--hmc-afni] [--hmc-fsl] [-f] [--fft-spikes-detector]\n             [-w WORK_DIR] [--report-dir REPORT_DIR] [--verbose-reports]\n             [--ants-nthreads ANTS_NTHREADS] [--ants-settings ANTS_SETTINGS]\n             [--deoblique] [--despike] [--start-idx START_IDX]\n             [--stop-idx STOP_IDX] [--correct-slice-timing]\n             bids_dir output_dir {participant,group} [{participant,group} ...]\nmriqc: error: the following arguments are required: bids_dir, output_dir, analysis_level\nSingularity: sexec (U=0,P=61)&gt; Could not remove run directory /tmp/singularity-container_dir.KJo66K53/poldracklab/mriqc:0.9.3: Directory not empty\n\nERROR  : Could not remove run directory /tmp/singularity-container_dir.KJo66K53/poldracklab/mriqc:0.9.3: Directory not empty\n```",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/chrisfilo|chrisfilo>",
                "title": "#662 ERROR: Could not remove run directory (...) Directory not empty",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/662",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494270864.774426",
        "date": 1494270864774
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/537#issuecomment-299962436|#537: Various additional tweaks for 2.3>",
                "text": "I am also running into this error:\n\n```[root@efa4dfbd5360 /]# singularity run docker://bids/mriqc\nCache folder set to /root/.singularity/docker\nDownloading layer sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4\nExtracting /root/.singularity/docker/sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4.tar.gz\nDownloading layer sha256:a8ae7b6cf97e5b5a38351ba8da779b141582ba04b72f7683bf2abc42e9031923\nExtracting /root/.singularity/docker/sha256:a8ae7b6cf97e5b5a38351ba8da779b141582ba04b72f7683bf2abc42e9031923.tar.gz\nDownloading layer sha256:4b3fed55e120f6a8344987f284a875cd992602da343f0e5910b5ef85ec4d7a1a\nExtracting /root/.singularity/docker/sha256:4b3fed55e120f6a8344987f284a875cd992602da343f0e5910b5ef85ec4d7a1a.tar.gz\nDownloading layer sha256:a71e220f17a26b208edbf6e41a13a44fd7e5bfca9cc03e41a522274c75893388\nExtracting /root/.singularity/docker/sha256:a71e220f17a26b208edbf6e41a13a44fd7e5bfca9cc03e41a522274c75893388.tar.gz\nDownloading layer sha256:d4e3bf49a457483df3bdd6aa159d5f34eb574aa8b96aee520e503422ab5d2b51\nExtracting /root/.singularity/docker/sha256:d4e3bf49a457483df3bdd6aa159d5f34eb574aa8b96aee520e503422ab5d2b51.tar.gz\nDownloading layer sha256:8cc81360634640e0001d80fe4650e0ebd8bded0c938035d3465e0ba0b61149ab\nExtracting /root/.singularity/docker/sha256:8cc81360634640e0001d80fe4650e0ebd8bded0c938035d3465e0ba0b61149ab.tar.gz\nDownloading layer sha256:050b82eab0dbc2f196e804d75260b3c70b593ec4afc099993998fcea28405cb5\nExtracting /root/.singularity/docker/sha256:050b82eab0dbc2f196e804d75260b3c70b593ec4afc099993998fcea28405cb5.tar.gz\nDownloading layer sha256:87a97b332407e404cc98d52c73fd9c9a5714a655565a49c022c398027425b2e5\nExtracting /root/.singularity/docker/sha256:87a97b332407e404cc98d52c73fd9c9a5714a655565a49c022c398027425b2e5.tar.gz\nDownloading layer sha256:46ace269c0593aeecaf8fad05ed04ebeb7ac5ebd88ffb47473cd1e90d7b1b329\nExtracting /root/.singularity/docker/sha256:46ace269c0593aeecaf8fad05ed04ebeb7ac5ebd88ffb47473cd1e90d7b1b329.tar.gz\ntar: usr/local/miniconda/lib/python2.7/site-packages/conda-4.1.11-py2.7.egg-info: Cannot open: File exists\ntar: usr/local/miniconda/pkgs/conda-4.1.11-py27_0/lib/python2.7/site-packages/conda-4.1.11-py2.7.egg-info: Cannot hard link to `usr/local/miniconda/lib/python2.7/site-packages/conda-4.1.11-py2.7.egg-info': Operation not permitted\ntar: Exiting with failure status due to previous errors\nERROR:python:Error extracting image: /root/.singularity/docker/sha256:46ace269c0593aeecaf8fad05ed04ebeb7ac5ebd88ffb47473cd1e90d7b1b329.tar.gz\nERROR: Aborting with RETVAL=0\n```\n\nusing current master (6007d3a1a46790bf1342eb99e2ac0aedd2e9cdb1)",
                "pretext": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/537#issuecomment-299962436|#537: Various additional tweaks for 2.3>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494270735.742986",
        "date": 1494270735742
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/633|#633 ERROR Cannot untar layer> by <https://github.com/chrisfilo|chrisfilo>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/633|#633 ERROR Cannot untar layer> by <https://github.com/chrisfilo|chrisfilo>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494270310.634234",
        "date": 1494270310634
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299924788|#611: Nvidia GPU support with different driver versions?>",
                "text": "I apologize for your misunderstanding - most of Singularity to run on a shared resource would require an administeator to install the base software, then the user is empowered to run and use images without root. The idea is that the software that would normally require root to install can live and run in the image that has been created by the user off of the cluster. The exception is for an image creation then import from docker, which would not require root. Singularity does not let the user escalate to root as Docker does. That is the primary difference.\n\nI hope that your group gives it a second go at some point! Feel free to close the issue if it's resolved for now, or wait for feedback from others.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299924788|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494262517.493117",
        "date": 1494262517493
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by davidedelvento on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299922757|#611: Nvidia GPU support with different driver versions?>",
                "text": "@vsoch I tried to run the non-gpu version. It downloaded *a lot* of stuff and it took quite a few minutes. After that, it failed with \n\n```ERROR  : User namespace not supported, and program not running privileged.\nABORT  : Retval = 255\n```\n\nMy comments on this:\n• The check should be done before the download\n• One of the design goals of singularity is not requiring root like docker does, and now you're telling me _well, we do too_? I understand this is _less_ than docker requires, but my sysadmins (yep, an all-male group) will not install it.",
                "pretext": "[singularityware/singularity] New comment by davidedelvento on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299922757|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494262035.365064",
        "date": 1494262035365
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-299883886|#661: singularity shell of tar.gz images>",
                "text": "It looks like it's reading the header:\n\n```DEBUG   [U=1000,P=12157]   singularity_image_check()                 First line of image(fd=5): c��Xubuntu.img\n```\nand expecting it to be squashfs\n\n```DEBUG   [U=1000,P=12157]   singularity_image_mount_squashfs_check()  Image does not appear to be of type '.sqsh': ubuntu.img.gz\n```\nI'm thinking this is no longer supported, but we should check with @gmkurtzer. I think the fix would be to do the decompression before checking the image, unless it's no longer to be supported, in which case we want it to fail. @gmkurtzer is giving a talk today so I would expect some delay, unless he is bored and waiting around and find the issue, haha. ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-299883886|#661: singularity shell of tar.gz images>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494253963.063809",
        "date": 1494253963063
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-299792224|#661: singularity shell of tar.gz images>",
                "text": "ah ok, I think I see the underlying issue - it's past midnight and I need to go to sleep, but I can definitely help with this later today! TLDR - we want to trace the variable for referencing the image, and if we decompress, make sure the name changes accordingly. We should check with @gmkurtzer about this too, it may be that there is a good reason for not supporting running .tar.gz directly. More later! gnite!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-299792224|#661: singularity shell of tar.gz images>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494228145.634173",
        "date": 1494228145634
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by tobigithub on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-299790487|#661: singularity shell of tar.gz images>",
                "text": "@vsoch, indeed the image is extracted to \n\"/tmp/singularity-rundir.UPaAzka0/ubuntu-14-desktop.tar.gz/images\" so maybe its not picking it up,\nLooking quickly through the sources the tar.gz files are handled in *image-handler.sh*. So maybe there is an issues. Btw, I can not invoke the --debug option.\n\n`\n    *.tgz|*.tar.gz)\n        NAME=`basename \"$SINGULARITY_IMAGE\"`\n        if [ -z \"${SINGULARITY_CACHEDIR:-}\" ]; then\n            SINGULARITY_CACHEDIR=\"/tmp\"\n        fi\n        if [ ! -d \"$SINGULARITY_CACHEDIR\" ]; then\n            message ERROR \"Cache directory does not exist: $SINGULARITY_CACHEDIR\\n\"\n            ABORT 1\n        fi\n        if ! SINGULARITY_TMPDIR=`mktemp -d $SINGULARITY_CACHEDIR/singularity-rundir.XXXXXXXX`; then\n            message ERROR \"Failed to create tmpdir\\n\"\n            ABORT 255\n        fi\n```    CONTAINER_DIR=\"$SINGULARITY_TMPDIR/$NAME\"\n    if ! mkdir -p \"$CONTAINER_DIR\"; then\n        message ERROR \"Could not create cache directory: $CONTAINER_DIR\\n\"\n        ABORT 255\n    fi\n\n    message 1 \"Opening gzip compressed archive, stand by...\\n\"\n    # this almost always gives permission errors, so ignore them when\n    # this almost always gives permission errors, so ignore them when\n    # running as a user.\n    tar -C \"$CONTAINER_DIR\" -xzf \"$SINGULARITY_IMAGE\" 2&gt;/dev/null\n\n    chmod -R +w \"$CONTAINER_DIR\"\n\n    SINGULARITY_IMAGE=\"$CONTAINER_DIR\"\n    SINGULARITY_RUNDIR=\"$SINGULARITY_TMPDIR\"\n    export SINGULARITY_RUNDIR SINGULARITY_IMAGE\n;;```\n`",
                "pretext": "[singularityware/singularity] New comment by tobigithub on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-299790487|#661: singularity shell of tar.gz images>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494227519.556639",
        "date": 1494227519556
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-299786704|#661: singularity shell of tar.gz images>",
                "text": "It might be that it's decompressing in a temp folder, but forgetting to rename based on the tweaked extension, or not implemented. I remember way back for some older version (or at least I think) it would decompress before using the image. I also remember that @gmkurtzer and I were chatting about .tar.gz specifically, and reasons for not using it for images.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-299786704|#661: singularity shell of tar.gz images>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494226122.394682",
        "date": 1494226122394
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-299786433|#661: singularity shell of tar.gz images>",
                "text": "Could you try that last one with --debug?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-299786433|#661: singularity shell of tar.gz images>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494226013.383644",
        "date": 1494226013383
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by tobigithub on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-299785835|#661: singularity shell of tar.gz images>",
                "text": "@vsoch: Tnx, uncompressing the file with the archive manager and the running it again is fine,\nBut I want to run the compressed archive directly.   I think its not related to a compression error, but maybe incompatible format or other issues, or its not implemented yet. In case of tar.gz the archive is somehow handled, for *.gz only it can not handle it, because the contained is not found. \n\n````\n\n*singularity image of bootstrapped ubuntu14 works fine*\n\nvm@ubuntu:~/git/singularity$ singularity shell images/ubuntu-14-desktop.img \nSingularity: Invoking an interactive shell within container...\n\nSingularity.ubuntu-14-desktop.img&gt; $ exit\nvm@ubuntu:~/git/singularity$ \n\n*compressing with gzip only*\n\nvm@ubuntu:~/git/singularity$ gzip -c -9 images/ubuntu-14-desktop.img &gt; images/ubuntu-14-desktop.img.gz\nvm@ubuntu:~/git/singularity$ \n\n*using gzip only the container is not found*\n\nvm@ubuntu:~/git/singularity$ singularity shell ubuntu-14-desktop.img.gz\nERROR  : Container not found: ubuntu-14-desktop.img.gz\nABORT  : Retval = 255\n````",
                "pretext": "[singularityware/singularity] New comment by tobigithub on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-299785835|#661: singularity shell of tar.gz images>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494225774.358553",
        "date": 1494225774358
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-299784370|#661: singularity shell of tar.gz images>",
                "text": "The command I've typically used to compress images is:\n\n```gzip -c -9 image.img &gt; image.img.gz'\n```\n\nand to decompress:\n\n```gzip -d -f image.img.gz\n```\n\nI'm not sure about .tar.gz, but I would recommend the above.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-299784370|#661: singularity shell of tar.gz images>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494225161.297786",
        "date": 1494225161297
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by tobigithub on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-299784181|#661: singularity shell of tar.gz images>",
                "text": "My naming convention for the image file was wrong, It is not a directory but really an image file.\nBut the issue persists.\n\n````\n\n*singularity image of bootstrapped ubuntu14 works fine*\n\nvm@ubuntu:~/git/singularity$ singularity shell images/ubuntu-14-desktop.img \nSingularity: Invoking an interactive shell within container...\n\nSingularity.ubuntu-14-desktop.img&gt; $ exit\nvm@ubuntu:~/git/singularity$ \n\n*compressing the image file*\n\nvm@ubuntu:~/git/singularity$ tar -czvf images/ubuntu-14-desktop.tar.gz   images/ubuntu-14-desktop.img \nimages/ubuntu-14-desktop.img\nvm@ubuntu:~/git/singularity$ \n\n*starting the singularity shell with the tar.gz image file*\n\nvm@ubuntu:~/git/singularity$ singularity shell images/ubuntu-14-desktop.tar.gz\nOpening gzip compressed archive, stand by...\nERROR  : Container does not have a valid /bin/sh\nABORT  : Retval = 255\nvm@ubuntu:~/git/singularity$ \n````",
                "pretext": "[singularityware/singularity] New comment by tobigithub on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-299784181|#661: singularity shell of tar.gz images>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494225085.290742",
        "date": 1494225085290
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by jmstover on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-299783032|#661: singularity shell of tar.gz images>",
                "text": "I haven't done a tgz image yet... but when you made it, you made the tarball with the `images/ubuntu-14-desktop` path.\n\nI'm not sure when it extracts it, if it expects it to be with the root as the extract point. What happens if you create the tarball like:\n\n```cd images/ubuntu-14-desktop\ntar -czvf ../ubuntu-14-desktop.tar.gz .\n```\nDo you still get the same error?",
                "pretext": "[singularityware/singularity] New comment by jmstover on issue <https://github.com/singularityware/singularity/issues/661#issuecomment-299783032|#661: singularity shell of tar.gz images>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494224577.241720",
        "date": 1494224577241
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#661 singularity shell of tar.gz images' https://github.com/singularityware/singularity/issues/661 by tobigithub",
                "text": "Not sure if bug or feature request, running tar.gz images does not work, however singularity says its uncompressing the tar.gz container and trying to run it. Also changing permissions to read/write (other) does not help. Maybe caching issue of expanded image?\n\nReason for compression: smaller files, faster handling on network or USB sticks etc.\nExample:\n\n````\n\n*bootstrapped ubuntu image runs fine (131 MByte)*\n\nvm@ubuntu:~/git/singularity$ singularity shell images/ubuntu-14-desktop\nSingularity: Invoking an interactive shell within container...\nSingularity.ubuntu-14-desktop&gt; $ exit\n\n*now compress to tar.gz (2.1 MB) // File shrank by 2147483679 bytes; padding with zeros*\n\nvm@ubuntu:~/git/singularity$ tar -czvf images/ubuntu-14-desktop.tar.gz   images/ubuntu-14-desktop \nimages/ubuntu-14-desktop\n\n*singularity shell with tar.gz singularity image does not run*\n\nvm@ubuntu:~/git/singularity$ \nvm@ubuntu:~/git/singularity$ singularity shell images/ubuntu-14-desktop.tar.gz\nOpening gzip compressed archive, stand by...\nERROR  : Container does not have a valid /bin/sh\nABORT  : Retval = 255\nvm@ubuntu:~/git/singularity$ \n````\nTobias",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/tobigithub|tobigithub>",
                "title": "#661 singularity shell of tar.gz images",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/661",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494224134.200868",
        "date": 1494224134200
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#660 compiling singularity on RHEL 5' https://github.com/singularityware/singularity/issues/660 by Amjadhpc",
                "text": "Hello,\nWe have  an HPC system that is still running on RHEL 5 for legacy reasons. \nWe have kernel   2.6.18-164.el5 , glibc-2.5.42 and gcc-4.1.2 .\n\nI would like to know if someone has been able to compile and install singularity on  RHEL 5. ?\nI tried compiling 2.2.1 version and ran into errors regarding  'O_CLOEXEC'  .\nO_CLOEXEC is not supported on glibc 2.5.42\n\nThanks",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/Amjadhpc|Amjadhpc>",
                "title": "#660 compiling singularity on RHEL 5",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/660",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494143866.203536",
        "date": 1494143866203
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299680131|#611: Nvidia GPU support with different driver versions?>",
                "text": "Well, it won't replicate the error entirely, so we can't really test it. What we can do is figure out if it has to do with your installation, specifically the fact that you don't have sudo (and doesn't have anything to do with gpu/nvidia at all). If you can try the same command on your (non sudo install) location with the non-gpu image:\n\n```/path/to/singularity shell docker://tensorflow/tensorflow:latest\n```\nif that doesn't work, we know for sure it's the install., and perhaps you can ask a system admin to install for you? \n\nAnd if you were to try the above on your (sudo) workstation, it would work too :)\n\nProbably either way, your best bet is going to be to wait for a version (2.3) that your admin is comfortable installing, and have him/her install it. Probability says it's a him, lol.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299680131|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494128024.756592",
        "date": 1494128024756
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by davidedelvento on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299678816|#611: Nvidia GPU support with different driver versions?>",
                "text": "@vsoch Yes, I have a workstation where I can be root, however that one does not have GPUs. Does it matter?",
                "pretext": "[singularityware/singularity] New comment by davidedelvento on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299678816|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494125429.680927",
        "date": 1494125429680
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299653763|#611: Nvidia GPU support with different driver versions?>",
                "text": "And do you have a workstation where you can be root to create and bootstrap images?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299653763|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494091025.326595",
        "date": 1494091025326
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299653678|#611: Nvidia GPU support with different driver versions?>",
                "text": "I think @GodloveD might have hit the nail in the head. To test, could you try running with --debug, and then without those additional args?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299653678|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494090931.321859",
        "date": 1494090931321
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299641578|#611: Nvidia GPU support with different driver versions?>",
                "text": "When you install Singularity as root it creates an SUID binary that's used\nto escalate privileges for some operations.  I believe that the --nv option\nmay require privilege escalation because all of the libraries must be bind\nmounted into the container regardless of whether or not the appropriate\nplaces to mount them already exist.  This might be different if you have\naccess to an overlay file system(?) but what I'm trying to say is that if\nyou are installing Singularity on a machine where you don't have root\naccess --nv may not work.\n\nOn Sat, May 6, 2017 at 8:34 AM, Davide <mailto:notifications@github.com|notifications@github.com> wrote:\n\n&gt; @vsoch <https://github.com/vsoch> Thanks for the suggestion, I will try\n&gt; that and let you know. Just one detail which might be important: my prefix\n&gt; is not nor can be /usr/local because I'm not root on the machine where\n&gt; I'm installing. Therefore I can delete everything in my prefix in one shot.\n&gt; I'm mentioning just in case this --nv hack makes implicit assumptions\n&gt; about the prefix.\n&gt; \n&gt; —\n&gt; You are receiving this because you were mentioned.\n&gt; Reply to this email directly, view it on GitHub\n&gt; <https://github.com/singularityware/singularity/issues/611#issuecomment-299636926>,\n&gt; or mute the thread\n&gt; <https://github.com/notifications/unsubscribe-auth/AHUUXH5Tq2BNbE4IErhupPqYU9CdwEmiks5r3GjQgaJpZM4M-zk7>\n&gt; .",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299641578|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494079106.753055",
        "date": 1494079106753
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by davidedelvento on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299636926|#611: Nvidia GPU support with different driver versions?>",
                "text": "@vsoch Thanks for the suggestion, I will try that and let you know. Just one detail which might be important: my prefix is not nor can be `/usr/local` because I'm not root on the machine where I'm installing. Therefore I can delete everything in my prefix in one shot. I'm mentioning just in case this `--nv` hack makes implicit assumptions about the prefix.",
                "pretext": "[singularityware/singularity] New comment by davidedelvento on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299636926|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494074063.546118",
        "date": 1494074063546
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299610152|#611: Nvidia GPU support with different driver versions?>",
                "text": "I think your install might be off.. can you try removing everything from the old version completely, there is actually a lot hiding:\n\n```$ sudo rm -rf /usr/local/libexec/singularity\n$ sudo rm -rf /usr/local/etc/singularity\n$ sudo rm -rf /usr/local/include/singularity\n$ sudo rm -rf /usr/local/lib/singularity\n$ sudo rm -rf /usr/local/var/lib/singularity/\n$ sudo rm /usr/local/bin/singularity\n$ sudo rm /usr/local/bin/run-singularity\n$ sudo rm /usr/local/etc/bash_completion.d/singularity \n$ sudo rm /usr/local/man/man1/singularity.1\n```\nThen, when you download and install, just do this in a fresh place:\n\n```$ git clone -b development https://github.com/singularityware/singularity.git\n$ cd singularity\n$ git fetch\n$ git checkout development\n$ ./autogen.sh\n$ ./configure --prefix=/usr/local --sysconfdir=/etc\n$ make\n$ sudo make install\n```\nthen do `singularity --version`. You should see something that looks like `2.2.99-development.g945c6ee\n` - the ones above don't seem quite right to me.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299610152|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494037753.290572",
        "date": 1494037753290
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by davidedelvento on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299608407|#611: Nvidia GPU support with different driver versions?>",
                "text": "Thanks @vsoch for the message. I should have mentioned that on my own...\nThanks also @GodloveD for that, however these were some of the options I did try and did not work (I retried them right now, just in case).\n\nI installed many versions, but I deleted a few of them. For the ones that I did not delete, the output of `--version` is one of `2.2.1`, `2.2.99-HEAD.g1a64d3b` or `2.2.99`. Is any of these supposed to work?",
                "pretext": "[singularityware/singularity] New comment by davidedelvento on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299608407|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494035515.192648",
        "date": 1494035515192
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299600804|#611: Nvidia GPU support with different driver versions?>",
                "text": "good catch @GodloveD !",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299600804|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494028807.795993",
        "date": 1494028807795
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299600737|#611: Nvidia GPU support with different driver versions?>",
                "image_url": "https://asciinema.org/a/2n8lxkukfa0z2o6pcxp1yki9g.png",
                "image_width": 372,
                "image_height": 250,
                "image_bytes": 60612,
                "text": "Use either --nv (2 dashes) or -n. :relaxed:\n\nOn May 5, 2017 7:57 PM, \"Vanessa Sochat\" <mailto:notifications@github.com|notifications@github.com> wrote:\n\n&gt; hey @davidedelvento <https://github.com/davidedelvento> could you double\n&gt; check the version?\n&gt; \n&gt; singularity --version\n&gt; \n&gt; I just tested with a (slightly dated) and then updated development branch,\n&gt; and I couldn't produce this error:\n&gt; \n&gt; <https://asciinema.org/a/2n8lxkukfa0z2o6pcxp1yki9g?speed=3>\n&gt; \n&gt; —\n&gt; You are receiving this because you were mentioned.\n&gt; Reply to this email directly, view it on GitHub\n&gt; <https://github.com/singularityware/singularity/issues/611#issuecomment-299600521>,\n&gt; or mute the thread\n&gt; <https://github.com/notifications/unsubscribe-auth/AHUUXC0NHeg06lkcXk1yENBaNxiP6fR6ks5r27dMgaJpZM4M-zk7>\n&gt; .",
                "pretext": "[singularityware/singularity] New comment by GodloveD on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299600737|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494028767.792487",
        "date": 1494028767792
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299600521|#611: Nvidia GPU support with different driver versions?>",
                "image_url": "https://asciinema.org/a/2n8lxkukfa0z2o6pcxp1yki9g.png",
                "image_width": 372,
                "image_height": 250,
                "image_bytes": 60612,
                "text": "hey @davidedelvento could you double check the version? \n\n```singularity --version\n```\n\nI just tested with a (slightly dated) and then updated development branch, and I couldn't produce this error:\n\n<https://asciinema.org/a/2n8lxkukfa0z2o6pcxp1yki9g?speed=3>",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299600521|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494028634.782433",
        "date": 1494028634782
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by davidedelvento on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299583061|#611: Nvidia GPU support with different driver versions?>",
                "text": "I must be doing something very stupid. Every time I try to run something like\n\n```/path/to/singularity shell -nv docker://tensorflow/tensorflow:latest-gpu\n```\n\nI get\n\n```ERROR: Unknown option: -nv\n```\n\nAnd yes, I installed the dev branch, and even explicitly tried the `1a64d3b`. I also set the `SINGULARITY_INCLUDEGPU` env variable to `1` at configure/compile time and runtime.\n\nSince the `exec` command mentioned `-n`, I tried that too (and double dashes --nv etc).\n\nClues?",
                "pretext": "[singularityware/singularity] New comment by davidedelvento on issue <https://github.com/singularityware/singularity/issues/611#issuecomment-299583061|#611: Nvidia GPU support with different driver versions?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1494020684.880261",
        "date": 1494020684880
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-299334508|#659: Using development branch on Singularity Hub>",
                "text": "yeah I understand completely! There are some exciting updates / changes to singularity hub, and it's infrastructure coming in the next few months - still figuring out some details and then we will be able to move forward with the work! Minimally, when 2.3 is out I will update the builders quickly for the new version.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-299334508|#659: Using development branch on Singularity Hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493939677.525428",
        "date": 1493939677525
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by belledon on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-299333965|#659: Using development branch on Singularity Hub>",
                "text": "@vsoch , \n It makes sense to shy away from \"quasi-finished\" versions! I have all I need on my end. Just figured it may serve some use in controlled settings. ",
                "pretext": "[singularityware/singularity] New comment by belledon on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-299333965|#659: Using development branch on Singularity Hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493939452.496806",
        "date": 1493939452496
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-299333551|#659: Using development branch on Singularity Hub>",
                "text": "hey @belledon ! I could definitely generate a custom development image for a workaround for now, although my hope was to be able to provide versioned (eg 2.3) images to not have any \"quasi finished\" ones up there. Hey @gmkurtzer how close realistically are we to 2.3 release?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/659#issuecomment-299333551|#659: Using development branch on Singularity Hub>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493939286.475430",
        "date": 1493939286475
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#659 Using development branch on Singularity Hub' https://github.com/singularityware/singularity/issues/659 by belledon",
                "text": "Hey @vsoch ,\n\nI was trying to build a container from a docker container and ran into an old issue with file names being too long when using `2.2.1`. I was pressed for time so I didn't think to save the output (I'd be happy to recreate it over the weekend). However, I remember that bug was fixed in the `librefractor` branch (which I'm assuming is now `development`). Cloning and doing a local build from the `development` branch worked without a hitch. I was wondering if it would be easy on your end to include the singularity branch in build options of Singularity Hub? Sorry if this is a repost/ not practical.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/belledon|belledon>",
                "title": "#659 Using development branch on Singularity Hub",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/659",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493938482.361950",
        "date": 1493938482361
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#658 [feature request] Option to run only parts of the bootstrapping process. ' https://github.com/singularityware/singularity/issues/658 by georghildebrand",
                "text": "Hi here, i am fascinated by singularity. In the last weeks i started playing around with it a little and it works quite nice on our HPC system. One nice feature to have would be, if you could add a functionality to allow running the different bootstrapping stages separately. \n\nExample: \nwhen doing\n&gt; singularity bootstrap image.img imagedef.def\nit would help to if one could run %post, %setup, bootstrap separately.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/georghildebrand|georghildebrand>",
                "title": "#658 [feature request] Option to run only parts of the bootstrapping process. ",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/658",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493928552.301936",
        "date": 1493928552301
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/628#issuecomment-299249237|#628: Add a Gitter chat badge to README.md>",
                "text": "There still could be another option, here are some that I found:\n\n• <https://ryver.com/>\n• <https://rocket.chat/>\n• <https://www.samepage.io/>\n• <https://sdelements.github.io/lets-chat/>\n• <https://glip.com/pricing>\n\nit's too bad the <https://www.recode.net/2017/3/9/14872162/googles-hangouts-slack-rooms-thread-conversation|new hangouts> I think isn't free, I bet that one will top them all :)\n\nself hosting is probably a no go, but a nice option if we ever have the resources.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/628#issuecomment-299249237|#628: Add a Gitter chat badge to README.md>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493917812.358585",
        "date": 1493917812358
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/628#issuecomment-299226383|#628: Add a Gitter chat badge to README.md>",
                "text": "yeah I'm in agreement - I really wanted Gitter to be great, but it doesn't work very well. ",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/628#issuecomment-299226383|#628: Add a Gitter chat badge to README.md>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493912854.915981",
        "date": 1493912854915
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/475#issuecomment-299209731|#475: Add/opensuse>",
                "text": "@FlyElephant-M31, We are getting close to releasing 2.3, and would love to have this support. Any chance on getting it ported to the development branch?\n\nThank you!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/475#issuecomment-299209731|#475: Add/opensuse>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493909679.884390",
        "date": 1493909679884
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/628#issuecomment-299209300|#628: Add a Gitter chat badge to README.md>",
                "text": "Do we want Gitter as our default? I love the idea, but it is a tad clunky and not as intuitive as Slack. On the other hand, even though Slack has a fantastic interface, it's financially motivated limitations (especially for an open source project) has really rubbed me the wrong way.\n\nThoughts?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/628#issuecomment-299209300|#628: Add a Gitter chat badge to README.md>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493909592.856661",
        "date": 1493909592856
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by djw8605 on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-299207333|#653: Add bind mounts to slurm support, and clarify options>",
                "text": "Thank you very much @gmkurtzer.  I was waiting on my sys admin here to build and install the new version to test it.\n\nThank you very much, I will open an issue or PR if we find anything not working.",
                "pretext": "[singularityware/singularity] New comment by djw8605 on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-299207333|#653: Add bind mounts to slurm support, and clarify options>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493909216.735997",
        "date": 1493909216735
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/653|#653 Add bind mounts to slurm support, and clarify options> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/653|#653 Add bind mounts to slurm support, and clarify options> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493909127.706604",
        "date": 1493909127706
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-299206862|#653: Add bind mounts to slurm support, and clarify options>",
                "text": "I am inclined to accept this PR as it stands considering I am pretty sure that the SLURM support as it stands in the development branch right now doesn't work.\n\n@djw8605 If you have an opportunity to test and find any issues, let's open another PR.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-299206862|#653: Add bind mounts to slurm support, and clarify options>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493909121.704624",
        "date": 1493909121704
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/642|#642 bind paths and overlay in the configuration file> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/642|#642 bind paths and overlay in the configuration file> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493854685.202630",
        "date": 1493854685202
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-299065104|#642: bind paths and overlay in the configuration file>",
                "text": "It sounds like this issue is ready for closing, and I'm in cleanup mode. Comment and let me know if it needs reopening.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-299065104|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493854685.202613",
        "date": 1493854685202
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-299036986|#655: Making the world a better place>",
                "text": "Wahoo, thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-299036986|#655: Making the world a better place>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493845956.704398",
        "date": 1493845956704
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-299036919|#655: Making the world a better place>",
                "text": ":rainbow: :earth_asia: :smile: ",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-299036919|#655: Making the world a better place>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493845936.700033",
        "date": 1493845936700
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/655|#655 Making the world a better place> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/655|#655 Making the world a better place> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493845877.686258",
        "date": 1493845877686
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/657#issuecomment-299025394|#657: Files missing in release archive>",
                "text": "haha, np! I think at that time we were still having conversations like \"oh, releases! yeah we should have those... Github tags? Oh yeah that will make it work!\" :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/657#issuecomment-299025394|#657: Files missing in release archive>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493843238.995460",
        "date": 1493843238995
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-299024148|#655: Making the world a better place>",
                "image_url": "https://asciinema.org/a/118922.png",
                "image_width": 226,
                "image_height": 250,
                "image_bytes": 88689,
                "text": "I've updated the PR to do the following:\n\n• info statements are not printed with any color, even\n• the progress bar is not printed with any color, ever\n• this means by default, we can have colors enabled for logger prefixes for a subset of levels (but not all)\n\nFor a demo of this during runtime, <https://asciinema.org/a/118922?speed=3|see here>\nFor a demo of the different levels and all colors, <https://asciinema.org/a/118923?speed=3|see here>",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-299024148|#655: Making the world a better place>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            },
            {
                "fallback": "asciinema.org: Singularity Message (Python) colors, Interactive",
                "image_url": "https://asciinema.org/a/118923.png",
                "image_width": 226,
                "image_height": 250,
                "image_bytes": 76102,
                "service_name": "asciinema.org",
                "text": "This shows the complete array of Singularity message colors for the Python bits. For the complete example, see the description in: the runtime example here",
                "title": "Singularity Message (Python) colors, Interactive",
                "id": 2,
                "title_link": "https://asciinema.org/a/118923?speed=3",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493842967.924073",
        "date": 1493842967924
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/657|#657 Files missing in release archive> by <https://github.com/cclerget|cclerget>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/657|#657 Files missing in release archive> by <https://github.com/cclerget|cclerget>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493840382.230716",
        "date": 1493840382230
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by cclerget on issue <https://github.com/singularityware/singularity/issues/657#issuecomment-299013754|#657: Files missing in release archive>",
                "text": "Oh my bad, sorry ! I thought it was introduced in 2.2 release",
                "pretext": "[singularityware/singularity] New comment by cclerget on issue <https://github.com/singularityware/singularity/issues/657#issuecomment-299013754|#657: Files missing in release archive>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493840382.230714",
        "date": 1493840382230
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-299006683|#642: bind paths and overlay in the configuration file>",
                "text": "@afortiorama Yes, you need dev, sys, and proc mounted.",
                "pretext": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-299006683|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493838603.754941",
        "date": 1493838603754
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/656#issuecomment-298971756|#656: ImportError: cannot import name get_fullpath>",
                "text": "in an already existing repo:\n\n```git checkout -b development\ngit pull origin development\n```\nor clone fresh\n\n```git checkout -b development https://github.com/singularityware/singularity.git\n```\n\nthen cd singularity and do the same install. You can check with:\n\n```singularity --version\n```\nwhich should be something like 2.99 followed by the commit id.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/656#issuecomment-298971756|#656: ImportError: cannot import name get_fullpath>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493830723.487317",
        "date": 1493830723487
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/657#issuecomment-298956526|#657: Files missing in release archive>",
                "text": "hey @cclerget! pull wasn't added until a later version of 2.2, so your best bet will be to use development branch. You could also try one of the security releases for 2.2, although I'm not totally sure when it was added.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/657#issuecomment-298956526|#657: Files missing in release archive>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493827348.525763",
        "date": 1493827348525
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#657 Files missing in release archive' https://github.com/singularityware/singularity/issues/657 by cclerget",
                "text": "Hello,\n\nThere is something wrong with generation of release archive.\n\nAfter compiling and installing latest release 2.2.1 from release archive:\n<https://github.com/singularityware/singularity/releases/download/2.2.1/singularity-2.2.1.tar.gz>\nor\n<https://github.com/singularityware/singularity/archive/2.2.1.tar.gz>\nthe resulting binary come without pull command.\n\nBy comparing archive content and git repository, it appear that libexec/cli/pull.* files are missing, for all versions",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/cclerget|cclerget>",
                "title": "#657 Files missing in release archive",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/657",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493825351.900435",
        "date": 1493825351900
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/656#issuecomment-298946384|#656: ImportError: cannot import name get_fullpath>",
                "text": "HI @lheck on your prefered folder. just run\n\n```git clone -b development https://github.com/singularityware/singularity.git \n```\nOr you can try with the <https://github.com/singularityware/singularity-builder|Singularity-Builder> repo.",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/656#issuecomment-298946384|#656: ImportError: cannot import name get_fullpath>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493825304.884752",
        "date": 1493825304884
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by lheck on issue <https://github.com/singularityware/singularity/issues/656#issuecomment-298918435|#656: ImportError: cannot import name get_fullpath>",
                "text": "How do I get the development branch?",
                "pretext": "[singularityware/singularity] New comment by lheck on issue <https://github.com/singularityware/singularity/issues/656#issuecomment-298918435|#656: ImportError: cannot import name get_fullpath>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493819822.167449",
        "date": 1493819822167
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/656#issuecomment-298915906|#656: ImportError: cannot import name get_fullpath>",
                "text": "hey @lheck ! This error was a name conflict, for a package called \"utils\" that does not have our functions. Could you please try installation with the development branch? We've fixed this by renaming utils to sutils. Let us know if this resolves the issue!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/656#issuecomment-298915906|#656: ImportError: cannot import name get_fullpath>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493819307.022376",
        "date": 1493819307022
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by lheck on issue <https://github.com/singularityware/singularity/issues/656#issuecomment-298913181|#656: ImportError: cannot import name get_fullpath>",
                "text": "I should mention: we have a linux system and in our python installation we have utils packages installed using pip.",
                "pretext": "[singularityware/singularity] New comment by lheck on issue <https://github.com/singularityware/singularity/issues/656#issuecomment-298913181|#656: ImportError: cannot import name get_fullpath>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493818711.857003",
        "date": 1493818711857
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#656 ImportError: cannot import name get_fullpath' https://github.com/singularityware/singularity/issues/656 by lheck",
                "text": "Dear singularity team, I am trying to build singularity and get \n./configure_transform.py --defaults ../src/lib/config_defaults.h --infile singularity.conf.in --outfile singularity.conf\nTraceback (most recent call last):\n  File \"./configure_transform.py\", line 8, in &lt;module&gt;\n    from utils import (\nImportError: cannot import name get_fullpath\nmake[1]: *** [singularity.conf] Error 1\n\nI found a similar link on this page. It looked that this specific problem only appeared under #542 with dpjensen commenting. \n\nAs I only now downloaded singularity from github, should the problem not have been solved in there?\nWhere can I go from here?",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/lheck|lheck>",
                "title": "#656 ImportError: cannot import name get_fullpath",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/656",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493818142.704732",
        "date": 1493818142704
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-298792263|#655: Making the world a better place>",
                "text": "I can tell by your quick response to this PR that you are super excited about colors in the terminal @gmkurtzer ! To make it more flexible and error tolerant, I've added an optional environment variable that will completely disable color output. Eg:\n\n```SINGULARITY_COLORIZE=false\nexport SINGULARITY_COLORIZE\n```\nI also do a check to see if the output is not in a terminal (eg going to pipe) and it doesn't use color in those cases. I tried exporting the different TERM environment variables as you specified, but it didn't seem to cause issue with the colors. This could be that I am not able to reproduce a terminal that doesn't support ansi escape. From Googling, it seems like the biggest contender is Windows-based terminals, and we could do a check for the system type if we ever add Windows support. Which I hope is just never. I didn't say that :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-298792263|#655: Making the world a better place>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493768856.895686",
        "date": 1493768856895
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-298721183|#655: Making the world a better place>",
                "text": "@gmkurtzer is there a way to test this? We can also easily disable all colors if the term is in some list, or not in some list. It really looks nice, and makes it fun and easier to distinguish the different output, I hope we can have colors :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-298721183|#655: Making the world a better place>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493749843.817234",
        "date": 1493749843817
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-298714989|#642: bind paths and overlay in the configuration file>",
                "text": "Hi,\n\nthank you, so I've disable the users bind control and disabled mount home and mount tmp. And now I can bind /pippo without the rest.\n\nwould you recommend to leave mount dev, sys and proc?",
                "pretext": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-298714989|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493748505.435288",
        "date": 1493748505435
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-298712943|#655: Making the world a better place>",
                "image_url": "https://asciinema.org/a/dqrl3xt07ypa0bkllh1jxezdb.png",
                "image_width": 372,
                "image_height": 250,
                "image_bytes": 57949,
                "text": "<https://asciinema.org/a/dqrl3xt07ypa0bkllh1jxezdb?speed=3|Seems to be ok> unless I did the change of term incorrectly? (I exported the `TERM` variable)",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-298712943|#655: Making the world a better place>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493748058.304408",
        "date": 1493748058304
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/643#issuecomment-298656279|#643: shell command doesn't read .bashrc>",
                "text": "I meant the --help with the software; I didn't see other docs.",
                "pretext": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/643#issuecomment-298656279|#643: shell command doesn't read .bashrc>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493736173.786274",
        "date": 1493736173786
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-298643075|#655: Making the world a better place>",
                "text": "It's very colorful! Can you set `TERM=xterm` and `TERM=vt100`? I'm just wondering what happens in legacy modes.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/655#issuecomment-298643075|#655: Making the world a better place>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493733410.958272",
        "date": 1493733410958
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/645|#645 `locale` configuration copied into container> by <https://github.com/nordmoen|nordmoen>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/645|#645 `locale` configuration copied into container> by <https://github.com/nordmoen|nordmoen>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493724073.141111",
        "date": 1493724073141
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/645#issuecomment-298608577|#645: `locale` configuration copied into container>",
                "text": "Resolving issue :100: ",
                "pretext": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/645#issuecomment-298608577|#645: `locale` configuration copied into container>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493724073.141103",
        "date": 1493724073141
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/645#issuecomment-298578628|#645: `locale` configuration copied into container>",
                "text": "ok cool, is this issue resolved then? And happy holidays!! I hope we get some more over here soon too :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/645#issuecomment-298578628|#645: `locale` configuration copied into container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493717847.233582",
        "date": 1493717847233
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/645#issuecomment-298561763|#645: `locale` configuration copied into container>",
                "text": "To elaborate, I tried to debug in the same way as above.\n\nFor `--contain` I get this `locale` configuration:\n```Singularity locale.img:~&gt; locale\nlocale: Cannot set LC_ALL to default locale: No such file or directory\nLANG=en_US.UTF-8\nLANGUAGE=\nLC_CTYPE=en_US.UTF-8\nLC_NUMERIC=nb_NO.UTF-8\nLC_TIME=nb_NO.UTF-8\nLC_COLLATE=\"en_US.UTF-8\"\nLC_MONETARY=nb_NO.UTF-8\nLC_MESSAGES=\"en_US.UTF-8\"\nLC_PAPER=nb_NO.UTF-8\nLC_NAME=\"en_US.UTF-8\"\nLC_ADDRESS=\"en_US.UTF-8\"\nLC_TELEPHONE=\"en_US.UTF-8\"\nLC_MEASUREMENT=nb_NO.UTF-8\nLC_IDENTIFICATION=\"en_US.UTF-8\"\nLC_ALL=\n```\n\nFor `--containall` and `--cleanenv`:\n```Singularity locale.img:~&gt; locale\nLANG=en_US.UTF-8\nLANGUAGE=\nLC_CTYPE=\"en_US.UTF-8\"\nLC_NUMERIC=\"en_US.UTF-8\"\nLC_TIME=\"en_US.UTF-8\"\nLC_COLLATE=\"en_US.UTF-8\"\nLC_MONETARY=\"en_US.UTF-8\"\nLC_MESSAGES=\"en_US.UTF-8\"\nLC_PAPER=\"en_US.UTF-8\"\nLC_NAME=\"en_US.UTF-8\"\nLC_ADDRESS=\"en_US.UTF-8\"\nLC_TELEPHONE=\"en_US.UTF-8\"\nLC_MEASUREMENT=\"en_US.UTF-8\"\nLC_IDENTIFICATION=\"en_US.UTF-8\"\nLC_ALL=\n```\nIn all of them I get the following from `locale -a`:\n```Singularity locale.img:~/Repos/singularity_images/locale&gt; locale -a\nC\nC.UTF-8\nen_US.utf8\nPOSIX\n```\nI don't know if `locale` is case-sensitive, but that could be the problem?",
                "pretext": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/645#issuecomment-298561763|#645: `locale` configuration copied into container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493715041.773407",
        "date": 1493715041773
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/645#issuecomment-298556094|#645: `locale` configuration copied into container>",
                "text": "Again, sorry for the delay, Norwegian holidays...\n\nI tried all the options you mentioned with the same result:\n```bash\n ✘  ~/Repos/singularity_images/locale  singularity shell --contain locale.img\nSingularity: Invoking an interactive shell within container...\n\nSingularity locale.img:~&gt; cd /workspace/\nSingularity locale.img:/workspace&gt; ./a.out \nterminate called after throwing an instance of 'std::runtime_error'\n  what():  locale::facet::_S_create_c_locale name not valid\nAborted (core dumped)\nSingularity locale.img:/workspace&gt; exit\nexit\n ✘  ~/Repos/singularity_images/locale  singularity shell --cleanenv locale.img\nSingularity: Invoking an interactive shell within container...\n\nSingularity locale.img:~/Repos/singularity_images/locale&gt; cd /workspace/\nSingularity locale.img:/workspace&gt; ./a.out \nterminate called after throwing an instance of 'std::runtime_error'\n  what():  locale::facet::_S_create_c_locale name not valid\nAborted (core dumped)\nSingularity locale.img:/workspace&gt; exit\nexit\n ✘  ~/Repos/singularity_images/locale  singularity shell --containall locale.img\nSingularity: Invoking an interactive shell within container...\n\nSingularity locale.img:~&gt; cd /workspace/\nSingularity locale.img:/workspace&gt; ./a.out \nterminate called after throwing an instance of 'std::runtime_error'\n  what():  locale::facet::_S_create_c_locale name not valid\nAborted (core dumped)\n```",
                "pretext": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/645#issuecomment-298556094|#645: `locale` configuration copied into container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493714211.641076",
        "date": 1493714211641
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#655 Making the world a better place' https://github.com/singularityware/singularity/pull/655 by vsoch",
                "image_url": "https://asciinema.org/a/118543.png",
                "image_width": 372,
                "image_height": 250,
                "image_bytes": 40632,
                "text": "I'll just leave this here.\n\n<https://asciinema.org/a/118543?speed=3>\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#655 Making the world a better place",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/655",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493706487.648211",
        "date": 1493706487648
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/654#issuecomment-298441597|#654: Add/plugins: environment variable driven custom functions for Singularity>",
                "text": "Thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/654#issuecomment-298441597|#654: Add/plugins: environment variable driven custom functions for Singularity>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493675247.592967",
        "date": 1493675247592
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/654|#654 Add/plugins: environment variable driven custom functions for Singularity> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/654|#654 Add/plugins: environment variable driven custom functions for Singularity> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493675156.576664",
        "date": 1493675156576
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-298436356|#653: Add bind mounts to slurm support, and clarify options>",
                "text": "I resolved it via the web interface, can you test it?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-298436356|#653: Add bind mounts to slurm support, and clarify options>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493673741.309178",
        "date": 1493673741309
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#654 Add/plugins: environment variable driven custom functions for Singularity' https://github.com/singularityware/singularity/pull/654 by vsoch",
                "image_url": "https://asciinema.org/a/118507.png",
                "image_width": 372,
                "image_height": 250,
                "image_bytes": 53901,
                "text": "This is a first go at a (simple) implementation for custom functionality to be triggered by an environment variable. In this case, we have the following issue. For most of our bootstraps, a recursive function to change permissions on the tarballs is sufficient to produce a working container. This process is much faster than our old approach (by 2-6 or 7 times depending on the image), and the ideal \"default\" setting. However, we have niche use cases, namely containers like `docker://blacklabelops/centos` where the default doing this, <https://github.com/singularityware/singularity/issues/538#issuecomment-289534014|as we've seen before>\n\n```singularity shell docker://blacklabelops/centos\n```\nisn't going to work. However we should not add extreme levels of custom commands on funky tarballs that require slowing down the process by 2-7 fold for all users just for these niche use cases. \n\nThe workaround is to empower the user to ask for this permissions fix, and the slowdown, and we can do this by way of what I am calling a \"plugin\" or a custom function/filter to run given the preference for it. With our current base, this makes sense to specify via environment variables, and @gmkurtzer we could have some kind of command line flag, or in the case of many plugins, an additional `%plugins` or `%custom` section in the bootstrap (at some point in the future.) For example, here is how the current PR works:\n\n```\n\n*Runs normally, changing permissions after Python at the end  (fast)*\n\nsingularity shell docker://ubuntu\n\n*Changes permissions in memory using python*\n\nSINGULARITY_FIX_PERMS=True\nexport SINGULARITY_FIX_PERMS\nsingularity shell docker://ubuntu\n```\n\nTo see how it works, I've also prepared a <https://asciinema.org/a/118507?speed=3|DEMO>.\n\nIn the future, you could imagine something like:\n\n```\nBootstrap: docker\nFrom: blacklabelops/centos\n\n%custom\nplugin fix_perms\n```\n\nor\n\n```\nBootstrap: docker\nFrom: blacklabelops/centos\n\n%plugins\nfix_perms var1\nadd_webserver port\n```\netc.etc.\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#654 Add/plugins: environment variable driven custom functions for Singularity",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/654",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493673414.243223",
        "date": 1493673414243
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by djw8605 on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-298421567|#653: Add bind mounts to slurm support, and clarify options>",
                "text": "Great!  @gmkurtzer I was able to change the \"base\" of this pull request.\n\nCould you look at the conflict, it looks like you changed it to use the function `singularity_registry_get` instead of `envar_path`.  I'm not familiar with this function, possibly you could help resolve this conflict?",
                "pretext": "[singularityware/singularity] New comment by djw8605 on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-298421567|#653: Add bind mounts to slurm support, and clarify options>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493669925.458606",
        "date": 1493669925458
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-298416418|#653: Add bind mounts to slurm support, and clarify options>",
                "text": "Hi @djw8605,\n\nThis looks fantastic! Can you rebase or resubmit this PR against the development branch (as opposed to master)? Sorry about the confusion in branches, we are moving to the standard GitFlow model as soon as we get 2.3 released.\n\nThank you!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-298416418|#653: Add bind mounts to slurm support, and clarify options>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493668643.156026",
        "date": 1493668643156
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/648#issuecomment-298416027|#648: Fix for glibc-2.25 changes>",
                "text": "Hi @jlec,\n\nOh fantastic news about maintaining it in Gentoo main repo, thank you! We should post a news bulletin about that!\n\nBootstrapping using a base OS tarball is very clean, great idea! Let me know if you need a hand or have any questions. If you want to join our Slack, send me a mail at gmkurtzer@gmail.com.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/648#issuecomment-298416027|#648: Fix for glibc-2.25 changes>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493668546.132971",
        "date": 1493668546132
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/652|#652 Fix for glibc-2.25 changes> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/652|#652 Fix for glibc-2.25 changes> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493668420.102475",
        "date": 1493668420102
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/652#issuecomment-298415511|#652: Fix for glibc-2.25 changes>",
                "text": "Perfect, thank you!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/652#issuecomment-298415511|#652: Fix for glibc-2.25 changes>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493668416.101631",
        "date": 1493668416101
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by djw8605 on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-298407369|#653: Add bind mounts to slurm support, and clarify options>",
                "text": "@bbockelm As the original maintainer of the slurm support, could you take a look at this pull request.",
                "pretext": "[singularityware/singularity] New comment by djw8605 on pull request <https://github.com/singularityware/singularity/pull/653#issuecomment-298407369|#653: Add bind mounts to slurm support, and clarify options>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493666262.606757",
        "date": 1493666262606
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#653 Add bind mounts to slurm support, and clarify options' https://github.com/singularityware/singularity/pull/653 by djw8605",
                "text": "After testing with real user's feedback, we have made changes to the Slurm support for singularity.\n\nChanges proposed in this pull request:\n\n• Added some return value checks.\n• Renamed option --image to --singularity-image.\n• Added --singularity-bind option\n• Added \"spank/singularity\" string in format string passed to slurm_error().\n• Wrapped lines that spanned more than 80 characters where I could.\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/djw8605|djw8605>",
                "title": "#653 Add bind mounts to slurm support, and clarify options",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/653",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493666224.598166",
        "date": 1493666224598
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/648|#648 Fix for glibc-2.25 changes> by <https://github.com/jlec|jlec>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/648|#648 Fix for glibc-2.25 changes> by <https://github.com/jlec|jlec>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493664168.097408",
        "date": 1493664168097
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#652 Fix for glibc-2.25 changes' https://github.com/singularityware/singularity/pull/652 by jlec",
                "text": "In glibc 2.25 sys/types.h doesn't automatically include sys/sysmacros.h\nanymore [1]. This leads to errors [2] like\n\nlibtool: link: x86_64-pc-linux-gnu-gcc -Wall -fpie -fPIC -O2 -pipe\n-march=native -Wall -Wl,-O1 -Wl,--as-needed -o sexec-suid sexec_suid-sexec.o\nutil/sexec_suid-util.o util/sexec_suid-file.o  lib/.libs/libsingularity.a\nlib/.libs/libsingularity.a(libsingularity_la-loop-control.o): In function\n`singularity_loop_bind':\nloop-control.c:(.text+0x422): undefined reference to `makedev'\nlib/.libs/libsingularity.a(dev.o): In function `singularity_mount_dev':\n\n1)\n<https://sourceware.org/ml/libc-alpha/2015-11/msg00253.html>\n2)\n<https://bugs.gentoo.org/show_bug.cgi?id=617082>\n\nSigned-off-by: Justin Lecher <mailto:jlec@gentoo.org|jlec@gentoo.org>\n\nFixes #648\n\nChanges proposed in this pull request\n\n -\n -\n -\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/jlec|jlec>",
                "title": "#652 Fix for glibc-2.25 changes",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/652",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493664156.094486",
        "date": 1493664156094
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/643#issuecomment-298385631|#643: shell command doesn't read .bashrc>",
                "text": "good idea. Do you mean the --help with the software, the docs, or both?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/643#issuecomment-298385631|#643: shell command doesn't read .bashrc>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493660944.291430",
        "date": 1493660944291
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/643#issuecomment-298378896|#643: shell command doesn't read .bashrc>",
                "text": "Ok.  How about documenting this surprising behavior in the shell help?  I think normally people would expect it to run the shell from /etc/passwd.  That's what I expected.  I see the help says it will run /bin/sh, but that's not actually what it does.\n\nI also see the -s option can be used to set SINGULARITY_SHELL.",
                "pretext": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/643#issuecomment-298378896|#643: shell command doesn't read .bashrc>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493659246.882615",
        "date": 1493659246882
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by jlec on pull request <https://github.com/singularityware/singularity/pull/648#issuecomment-298377337|#648: Fix for glibc-2.25 changes>",
                "text": "Hi @gmkurtzer \n\nsure will send it later.\n\nI am maintaining singularity in the main gentoo repository. \n\nBootstrap should be fairly straight forward. We are providing a _stage 3_ as tarball, which is basically a bootable system. For some more convenience the bootstrap should include setting up at least the main repository. I can have a look into that.",
                "pretext": "[singularityware/singularity] New comment by jlec on pull request <https://github.com/singularityware/singularity/pull/648#issuecomment-298377337|#648: Fix for glibc-2.25 changes>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493658836.786397",
        "date": 1493658836786
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-298375073|#642: bind paths and overlay in the configuration file>",
                "text": "@afortiorama to answer your question about crashing with overlay, that was a problem on Centos7.2 but not CentOS7.3.  It would crash whenever it was used in combination with cvmfs as you are doing.",
                "pretext": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-298375073|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493658247.654473",
        "date": 1493658247654
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/651#issuecomment-298370582|#651: singularity inspect>",
                "text": "yes exactly! We would start with labels, but probably eventually want to expose more about the containers configuration, etc.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/651#issuecomment-298370582|#651: singularity inspect>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493657000.374691",
        "date": 1493657000374
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/651#issuecomment-298369917|#651: singularity inspect>",
                "text": "Something like this?\n\n```$ singularity -q exec docker://centos cat /.singularity.d/labels.json\n{\"build-date\": \"20170406\", \"vendor\": \"CentOS\", \"name\": \"CentOS Base Image\", \"license\": \"GPLv2\"}gmk@gmkdev2:~/git/singularity$ \n```",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/651#issuecomment-298369917|#651: singularity inspect>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493656802.331572",
        "date": 1493656802331
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#651 singularity inspect' https://github.com/singularityware/singularity/issues/651 by vsoch",
                "text": "If our singularity metadata folder is hidden, and if we aren't (yet) having support for a header proper, we should consider providing a simple command line utility for the user to (minimally) access some of the containers metadata. For example, docker inspect reveals the equivalent of it's configuration (and it's json, which isn't great for parsing in bash, but is still possible and of course works great with most programming languages). Here I can see it while running the docker container, ubuntu:\n\n```\n docker inspect ubuntu\n[\n    {\n        \"Id\": \"sha256:f7b3f317ec734a73deca91b34c2b1e3dd7454650da9c8ef3047d29a873865178\",\n        \"RepoTags\": [\n            \"ubuntu:latest\"\n        ],\n        \"RepoDigests\": [\n            \"ubuntu@sha256:f3a61450ae43896c4332bda5e78b453f4a93179045f20c8181043b26b5e79028\"\n        ],\n        \"Parent\": \"\",\n        \"Comment\": \"\",\n\n...\netc\n```\n\nRight now, just by running a command to cat the labels, I can see some basic stuff about a singularity container:\n\n``` singularity exec ubuntu.img cat /.singularity.d/labels.json\n{\n    \"SINGULARITY_DEFFILE_BOOTSTRAP\": \"docker\",\n    \"SINGULARITY_DEFFILE\": \"Singularity\",\n    \"SINGULARITY_DEFFILE_FROM\": \"ubuntu:latest\",\n    \"SINGULARITY_BOOTSTRAP_VERSION\": \"2.2.99\"\n}\n```\nso, given that we will eventually want to interact with containers in this manner (eg integration with external tools) and we want it to not have to be known that labels (or other stuffs) are \"hiding\" in this hidden folder, we should provide easy access to these things via some kind of `inspect`. We could even use singularity to bootstrap Docker's API and serve their metadata without needing to pull the layers (eg you could inspect a Docker image and return a specific field, the size, number of layers, etc., and this is useful so you know how to best generate your singularity spec that bootstraps a Docker image. Thoughts?",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/vsoch|vsoch>",
                "title": "#651 singularity inspect",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/651",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493610832.035144",
        "date": 1493610832035
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/650#issuecomment-298274736|#650: adding docs for -T/--notest command in bootstrap>",
                "text": ":)",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/650#issuecomment-298274736|#650: adding docs for -T/--notest command in bootstrap>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493604899.740236",
        "date": 1493604899740
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/650#issuecomment-298274611|#650: adding docs for -T/--notest command in bootstrap>",
                "text": "Haha, thanks!!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/650#issuecomment-298274611|#650: adding docs for -T/--notest command in bootstrap>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493604809.735724",
        "date": 1493604809735
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/650|#650 adding docs for -T/--notest command in bootstrap> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/650|#650 adding docs for -T/--notest command in bootstrap> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493604798.735182",
        "date": 1493604798735
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#650 adding docs for -T/--notest command in bootstrap' https://github.com/singularityware/singularity/pull/650 by vsoch",
                "text": "Fixes #@gmk :)\n\nChanges proposed in this pull request\n\n• adding a line to the bootstrap help doc to explain the notest option.\n• \n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#650 adding docs for -T/--notest command in bootstrap",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/650",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493604038.692031",
        "date": 1493604038692
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/647#issuecomment-298273204|#647: Add ability to skip tests when bootstrapping image>",
                "text": "Singularity development branch now supports the ability to skip the `%test` during `bootstrap` with the `--notest` option.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/647#issuecomment-298273204|#647: Add ability to skip tests when bootstrapping image>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493603660.669371",
        "date": 1493603660669
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/649#issuecomment-298238458|#649: Add compression support for .img format>",
                "text": "Support for compressed images via SquashFS does already exist. Would that meet the use-case?\n\nBtw, on the fly decompression can not work with the default Singularity image in the format it stands now. ",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/649#issuecomment-298238458|#649: Add compression support for .img format>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493565855.937487",
        "date": 1493565855937
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/647#issuecomment-298238344|#647: Add ability to skip tests when bootstrapping image>",
                "text": "Hiya! Nope, no documentation on it yet as it was just introduced for testing. \n\nOptionally suppressing the tests during build would be an easy addition, I'll add it. \n\nGreg",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/647#issuecomment-298238344|#647: Add ability to skip tests when bootstrapping image>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493565736.932676",
        "date": 1493565736932
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#649 Add compression support for .img format' https://github.com/singularityware/singularity/issues/649 by DeepHorizons",
                "text": "While there is already a discussion on minimizing the image size in #470, another idea to reduce the size would be compression. A fast compression method such as LZ4 could be used to allow on the fly decoding. With initial tests images are often reduced to less than 50% of their original size.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/DeepHorizons|DeepHorizons>",
                "title": "#649 Add compression support for .img format",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/649",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493565616.927405",
        "date": 1493565616927
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DeepHorizons on issue <https://github.com/singularityware/singularity/issues/647#issuecomment-298235984|#647: Add ability to skip tests when bootstrapping image>",
                "text": "Hey @gmkurtzer \n\nNeat option! I'll check that out when I get the chance. Anything in the docs on how it works / debugging?\n\n`%buildtest` and `%runtest` don't exactly fit my use case. I don't know of any test that I could run on my GPU images that would not require a GPU. I still run the tests on the cluster with a GPU, I just don't need to run the tests when building. The main reason behind this is for better error reporting. If I could suppress the tests when building, I could have better error logging on the build process. Instead I have to have everything ignoring errors and looking through the logs manually.",
                "pretext": "[singularityware/singularity] New comment by DeepHorizons on issue <https://github.com/singularityware/singularity/issues/647#issuecomment-298235984|#647: Add ability to skip tests when bootstrapping image>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493563180.825209",
        "date": 1493563180825
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/648#issuecomment-298234293|#648: Fix for glibc-2.25 changes>",
                "text": "Ahh, this looks great thank you! Can you re-PR this against the \"development\" branch?\n\nAlso is there any chance you would be interested in brining in Gentoo bootstrap support and/or submitting it to Gentoo as a package to include?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/648#issuecomment-298234293|#648: Fix for glibc-2.25 changes>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493561095.739681",
        "date": 1493561095739
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#648 Fix for glibc-2.25 changes' https://github.com/singularityware/singularity/pull/648 by jlec",
                "text": "In glibc 2.25 sys/types.h doesn't automatically include sys/sysmacros.h\nanymore [1]. This leads to errors [2] like\n\nlibtool: link: x86_64-pc-linux-gnu-gcc -Wall -fpie -fPIC -O2 -pipe\n-march=native -Wall -Wl,-O1 -Wl,--as-needed -o sexec-suid sexec_suid-sexec.o\nutil/sexec_suid-util.o util/sexec_suid-file.o  lib/.libs/libsingularity.a\nlib/.libs/libsingularity.a(libsingularity_la-loop-control.o): In function\n`singularity_loop_bind':\nloop-control.c:(.text+0x422): undefined reference to `makedev'\nlib/.libs/libsingularity.a(dev.o): In function `singularity_mount_dev':\n\n1)\n<https://sourceware.org/ml/libc-alpha/2015-11/msg00253.html>\n2)\n<https://bugs.gentoo.org/show_bug.cgi?id=617082>\n\nSigned-off-by: Justin Lecher <mailto:jlec@gentoo.org|jlec@gentoo.org>",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/jlec|jlec>",
                "title": "#648 Fix for glibc-2.25 changes",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/648",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493549965.350752",
        "date": 1493549965350
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/647#issuecomment-298134595|#647: Add ability to skip tests when bootstrapping image>",
                "text": "Hiya @DeepHorizons,\n\nWe too have been working on GPU support and you can check it out in the 'development' branch with the `--nv` option.\n\nWould it work to have a separate %buildtest and %runtest?\n\nGreg",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/647#issuecomment-298134595|#647: Add ability to skip tests when bootstrapping image>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493425679.588708",
        "date": 1493425679588
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/615#issuecomment-298132630|#615: Issue looking up hostname inside container>",
                "text": "Great news, thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/615#issuecomment-298132630|#615: Issue looking up hostname inside container>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493424310.490883",
        "date": 1493424310490
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-298129947|#642: bind paths and overlay in the configuration file>",
                "text": "Hi @afortiorama,\n\nI am not sure that I understand exactly, but the administrator does have the ability to bind the directories that they wish. The admin can define the `bind point`s to always include into the container, and then can enable/disable the `mount tmp` option.\n\nBut we make an assumption.... That the admin defines the most a user can do, but it is up to the user to decide if they want less then that. For example, `--contain` is basically saying, \"I don't need what the admin suggested, I know what I'm doing, using at my own risk\". The ability for users to utilize the `-B` option is also enabled/disabled by the administrator. If the admin decides users can do that, then they can technically override the administrator's bind points and give themselves the ability to shoot themselves in the foot. LOL\n\nHopefully that answers your questions and concerns, otherwise please accept my preemptive apology for the misunderstand and never-mind. ;)\n\nThanks!\n\nGreg",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-298129947|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493422673.350255",
        "date": 1493422673350
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/644|#644 running from home path vs system path> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/644|#644 running from home path vs system path> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493422214.307429",
        "date": 1493422214307
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/644#issuecomment-298129138|#644: running from home path vs system path>",
                "text": "Singularity is very specific when it comes to the path of the configuration file, so each of those installations will most likely be using different configs. It also seems that \"test.py\" is in your current directory, so I would suggest that there is a difference between the two installations and/or configurations.\n\nThis doesn't seem like a Singularity error or issue, so I'm closing the issue (perhaps it deserves further discussion on the Google Group)?\n\nHope that helps!\n\nGreg",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/644#issuecomment-298129138|#644: running from home path vs system path>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493422213.307377",
        "date": 1493422213307
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/643|#643 shell command doesn't read .bashrc> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/643|#643 shell command doesn't read .bashrc> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493421922.279508",
        "date": 1493421922279
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/643#issuecomment-298128620|#643: shell command doesn't read .bashrc>",
                "text": "This is a \"feature\"! HAH\n\nIt came originally because I would always use `/bin/sh` for shell, but not all sh'es are equal (e.g. some are links to bash, sometimes dash, sometimes zsh, etc). It made the most sense to use Bash by default if present, but, when calling Bash directly, it automatically sources all of it's own login and dot files. Thus, if nothing else is passed, we call it with `--norc` option:\n\n```\n$ singularity shell -p /tmp/centos.img \nSingularity: Invoking an interactive shell within container...\n\nSingularity centos.img:~/git/singularity&gt; ps auxf\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\ngmk          1  0.0  0.0  12884   156 pts/4    S    23:24   0:00 /usr/local/libexec/singularity/bin/action-suid\ngmk          2  0.0  0.3  15208  3120 pts/4    S    23:24   0:00 /bin/bash --norc\ngmk          3  0.0  0.3  50880  3240 pts/4    R+   23:24   0:00   `_` ps auxf\nSingularity centos.img:~/git/singularity&gt; \n```\n\nIf you specify `SINGULARITY_SHELL` in your environment, or use `exec` as you pointed out, you can bypass this default behavior.\n\nHope that helps!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/643#issuecomment-298128620|#643: shell command doesn't read .bashrc>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493421921.279474",
        "date": 1493421921279
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-298128154|#635: Mounting of user home directory failing with --containall on development branch>",
                "text": "Fantastic, thank you!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-298128154|#635: Mounting of user home directory failing with --containall on development branch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493421681.256602",
        "date": 1493421681256
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#647 Add ability to skip tests when bootstrapping image' https://github.com/singularityware/singularity/issues/647 by DeepHorizons",
                "text": "I'm building singularity images using an automated build system. The build system does not mimic the production system which the containers will be run on, in particular we are adding in support for GPUs. Because of this, the tests that I write for the images are meant to be run on production system, and fail on the build system.\n\nIs there a way to not run tests when bootstrapping an image? There was something like this in #305 but was never fleshed out.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/DeepHorizons|DeepHorizons>",
                "title": "#647 Add ability to skip tests when bootstrapping image",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/647",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493420796.167813",
        "date": 1493420796167
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/636|#636 Adding check for empty Docker layers> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/636|#636 Adding check for empty Docker layers> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493419723.049598",
        "date": 1493419723049
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/646#issuecomment-298118222|#646: [feature request]: checking for image size before import/bootstrap/other>",
                "text": "Just for linking to the docker pull idea: <https://github.com/singularityware/singularity/issues/531>",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/646#issuecomment-298118222|#646: [feature request]: checking for image size before import/bootstrap/other>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493417419.761076",
        "date": 1493417419761
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/646#issuecomment-298116662|#646: [feature request]>",
                "text": "hey @ityonemo ! I think this would be very reasonable / doable to implement, even without having the user specify a `%size` field.  Here are a few cases that come off the top of my head:\n\n*Case 1: User is making a new image*\n\nThis would be akin to doing a bootstrap or import into a newly created image. Given that we are adding docker layers to something, it is reasonable that, given that the layers dump is too big for the image that exists or is being generated, we could issue a warning. If we had create and bootstrap (or import) wrapped into one command (eg, @gmkurtzer this would have been like the docker pull I've been poking about) then the size of the image would be already available to compare against the size of the layers.  This would be fairly accurate given that the image is not yet generated, because we have confidence that most of the dump of content is going to fit in the empty image. So in summary:\n• given a new image with pull (bootstrap + create) we compare layers size to image size, stop if overflow\n• given a pre-existing empty image (bootstrap or import after create) we get size of image first, and compare to layers, stop if overflow\n\n*Case 2: User is importing into existing image*\n\nThis (I hope) is less likely done, because it would mean a less reproducible practice, but you can imagine importing layers into an already existing image. In this case, the most we can do is estimate the size of content in the image, estimate the size of the layers, and issue a warning (but probably not stop the process) if the imported stuffs is greater than the image size. The reason is because some of the dump of the layers might just override stuff already there, so the size wouldn't be extra added. So in summary:\n• given a pre-existing non empty image, we can't say what % of the image files will be overwritten, so the most we can do is give a warning.\n\n*Case 3: User is bootstrapping*\n\nThis case is most similar to what you are describing - the user has some idea about the size of the content in his bootstrap spec (meaning downloads and installs that aren't coming from the docker or other bootstrap). In this case, the user could specify some kind of `%size` parameter to check, but to play devil's advocate, couldn't he/she make this same specification when the image is created? Or is the idea to preserve this knowledge with the bootstrap?\n\nTLDR - I think this is a good feature to think about and possibly add, and implementation wise it is very doable. I added an endpoint to the Python internal API that will return the size for Docker layers, and this could be used by the calling function to do a check before any time intensive stuffs are done. I'll chat with @gmkurtzer about if/when/where would be reasonable to implement this!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/646#issuecomment-298116662|#646: [feature request]>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493416862.678013",
        "date": 1493416862678
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#646 [feature request]' https://github.com/singularityware/singularity/issues/646 by ityonemo",
                "text": "Do you think it's reasonable to have a minimum size check for the singularity container bootstrap definitions? Perhaps a %size field in the container that checks to see if the existing image has at a minimum enough space, and halts if the .img file being bootstrapped is large enough.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/ityonemo|ityonemo>",
                "title": "#646 [feature request]",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/646",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493414443.262990",
        "date": 1493414443262
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/645#issuecomment-298053752|#645: `locale` configuration copied into container>",
                "text": "Have you tried the `--contain` and `--containall` commands to isolate your host from the container? If you just want to isolate environment vars, try `--cleanenv`. Note - these are runtime variables, not anything you specify in a bootstrap definition. Eg:\n\n```singularity shell --contain muffin.img\n```",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/645#issuecomment-298053752|#645: `locale` configuration copied into container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493399274.522411",
        "date": 1493399274522
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#645 `locale` configuration copied into container' https://github.com/singularityware/singularity/issues/645 by nordmoen",
                "text": "I have encountered yet another problem on the way to simulate my robot. This time around it seems as if some of my system configuration has been copied into the container, overwriting the docker configuration.\n\nThe problem is that launching <http://gazebosim.org/|`gzserver`> inside a container results in an error being thrown:\n```Singularity dyret_map.img:~&gt; gzserver\nNo protocol specified\nterminate called after throwing an instance of 'std::runtime_error'\n  what():  locale::facet::_S_create_c_locale name not valid\nAborted (core dumped)\n```\n\nTracking this down lead to the discovery that inside the container the `locale` is set to the same thing as outside without installing the necessary languages.\n\nInside my container executing `locale`:\n```Singularity dyret_map.img:~&gt; locale\nlocale: Cannot set LC_ALL to default locale: No such file or directory\nLANG=en_US.UTF-8\nLANGUAGE=\nLC_CTYPE=en_US.UTF-8\nLC_NUMERIC=nb_NO.UTF-8\nLC_TIME=nb_NO.UTF-8\nLC_COLLATE=\"en_US.UTF-8\"\nLC_MONETARY=nb_NO.UTF-8\nLC_MESSAGES=\"en_US.UTF-8\"\nLC_PAPER=nb_NO.UTF-8\nLC_NAME=\"en_US.UTF-8\"\nLC_ADDRESS=\"en_US.UTF-8\"\nLC_TELEPHONE=\"en_US.UTF-8\"\nLC_MEASUREMENT=nb_NO.UTF-8\nLC_IDENTIFICATION=\"en_US.UTF-8\"\nLC_ALL=\n```\nThen executing `locale -a` inside the container shows that the above languages (`nb_NO.UTF-8`) are not installed\n```Singularity dyret_map.img:~&gt; locale -a\nC\nC.UTF-8\nen_US.utf8\nPOSIX\n```\n\nIt seems to me that the configuration has been copied from my host computer into the container. To replicate this I created this small `C++` program:\n```cpp\n#include &lt;iostream&gt;\n#include &lt;locale&gt;\n\n// test_locale.cpp\n\nint main() {\n        auto loc = std::locale(\"nb_NO.UTF-8\");\n        std::cout.imbue(loc);\n        std::cout &lt;&lt; \"Hello 'C' world!\\n\";\n}\n```\nWhich when compiled (`g++ -std=c++11 test_locale.cpp`) works on my host computer, but fails inside a Singularity container.\n\n```bash\nRunning post scriptlet\n• cd /workspace\n• g++ -lboost_date_time -std=c++11 test_locale.cpp\n     Running test scriptlet\n• cd /workspace\n• ./a.out\n     terminate called after throwing an instance of 'std::runtime_error'\n     what():  locale::facet::_S_create_c_locale name not valid\n     Aborted (core dumped)\n     ERROR: Aborting with RETVAL=255\n     ```",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/nordmoen|nordmoen>",
                "title": "#645 `locale` configuration copied into container",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/645",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493386261.784426",
        "date": 1493386261784
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/615#issuecomment-297953722|#615: Issue looking up hostname inside container>",
                "text": "Sorry for the long delay.\n\nAdding `jorgehn-x1-carbon` to `/etc/hosts` works as expected.",
                "pretext": "[singularityware/singularity] New comment by nordmoen on issue <https://github.com/singularityware/singularity/issues/615#issuecomment-297953722|#615: Issue looking up hostname inside container>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493372024.343354",
        "date": 1493372024343
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/615|#615 Issue looking up hostname inside container> by <https://github.com/nordmoen|nordmoen>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/615|#615 Issue looking up hostname inside container> by <https://github.com/nordmoen|nordmoen>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493372024.343347",
        "date": 1493372024343
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297940327|#642: bind paths and overlay in the configuration file>",
                "text": "Said that there should be a way for an admin to share only the directories that she actually wants. for example /pippo but not /tmp ",
                "pretext": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297940327|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493368256.670193",
        "date": 1493368256670
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297938525|#642: bind paths and overlay in the configuration file>",
                "text": "Hi Vanessa,\n\nthank you. My bad. I misunderstood the --contain option. Somehow as not \nto mount everything the user wants but only that is listed.\n\nif I remove that it works.\n\ncheers\nalessandra\n\nOn 28/04/2017 09:03, Vanessa Sochat wrote:\n&gt;\n&gt; Hey @afortiorama <https://github.com/afortiorama> ! Could you describe \n&gt; the trouble that you are having? When you use |--contain| you are \n&gt; asking Singularity to disable / not allow all mounts, and so the \n&gt; configuration in your config file to mount /pippo will not be seen. \n&gt; When you add back in |-B|, you are again over-riding that and honoring \n&gt; both |--contain| and the specification for the bind and the overlayfs \n&gt; allowed by the config. Here is the description of the command:\n&gt; \n&gt; |-c/--contain This option disables the automatic sharing of writable \n&gt; filesystems on your host (e.g. $HOME and /tmp). |\n&gt; \n&gt; Could you please describe what isn't working - what your expectation \n&gt; is, and what you are not able to achieve? We can help to debug the issue.\n&gt; \n&gt; —\n&gt; You are receiving this because you were mentioned.\n&gt; Reply to this email directly, view it on GitHub \n&gt; <https://github.com/singularityware/singularity/issues/642#issuecomment-297934961>, \n&gt; or mute the thread \n&gt; <https://github.com/notifications/unsubscribe-auth/AE1IEKjRfIFmEjE1IUXxZg9w92dp8_sUks5r0Z1TgaJpZM4NJ0Ph>.\n-- \nRespect is a rational process. \\//\nFatti non foste a viver come bruti, ma per seguir virtute e canoscenza(Dante)\nFor Ur-Fascism, disagreement is treason. (U. Eco)\nBut but but her emails... (Anonymous)",
                "pretext": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297938525|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493367720.577274",
        "date": 1493367720577
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297934961|#642: bind paths and overlay in the configuration file>",
                "text": "Hey @afortiorama ! Could you describe the trouble that you are having? When you use `--contain` you are asking Singularity to disable / not allow all mounts, and so the configuration in your config file to mount /pippo will not be seen. When you add back in `-B`, you are again over-riding that and honoring both `--contain` and the specification for the bind and the overlayfs allowed by the config. Here is the description of the command:\n\n```    -c/--contain        This option disables the automatic sharing of writable\n                               filesystems on your host (e.g. $HOME and /tmp).\n```\n\nCould you please describe what isn't working - what your expectation is, and what you are not able to achieve? We can help to debug the issue.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297934961|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493366610.392489",
        "date": 1493366610392
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297931647|#642: bind paths and overlay in the configuration file>",
                "text": "Hi,\n\nit still doesn't work\n\n*Configuration* \n[singularity]# egrep 'overlay =|pippo' /etc/singularity/singularity.conf\nenable overlay = yes\nbind path = /pippo\n\n*New version*\n[singularity]# /usr/bin/singularity --version\n2.2.99\n\n*Running without options*\n[singularity]# /usr/bin/singularity shell --contain /cvmfs/atlas.cern.ch/repo/images/singularity/x86_64-slc6.img \nSingularity: Invoking an interactive shell within container...\n\nSingularity.x86_64-slc6.img&gt; ls /pippo\nls: cannot access /pippo: No such file or directory\nSingularity.x86_64-slc6.img&gt; exit\n\n*Running with options*\n[singularity]# /usr/bin/singularity shell -B /pippo --contain /cvmfs/atlas.cern.ch/repo/images/singularity/x86_64-slc6.img \nSingularity: Invoking an interactive shell within container...\n\nSingularity.x86_64-slc6.img&gt; ls /pippo\npluto",
                "pretext": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297931647|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493365582.230337",
        "date": 1493365582230
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#644 running from home path vs system path' https://github.com/singularityware/singularity/issues/644 by ketancmaheshwari",
                "text": "Running an image using the singularity executable from my $HOME works while using the same executable installed on an arbitrary system path does not work. The error is file not found.\n\n```\n[login1 singularity-Tensorflow]$ which singularity\n/ihome/install/singularity/bin/singularity\n[login1 singularity-Tensorflow]$ singularity exec ubuntu_tensorflow_GPU.img python test.py\npython: can't open file 'test.py': [Errno 2] No such file or directory\n\n```\nFollowing works:\n\n```\n[login1 singularity-Tensorflow]$ ~/singularity-install/bin/singularity exec ubuntu_tensorflow_GPU.img python test.py\n2017-04-27 17:51:40.045086: W tensorflow/core/platform/cpu_feature_guard.cc:45] ...\n...\n...\n\n```\n\nI checked that my home directory is mounted and available in the image. The `test.py` file is located in the directory from where the image is invoked in both cases. This problem is preventing us from making singularity available to the larger user base. Any suggestions?",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/ketancmaheshwari|ketancmaheshwari>",
                "title": "#644 running from home path vs system path",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/644",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493316001.710900",
        "date": 1493316001710
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#643 shell command doesn't read .bashrc' https://github.com/singularityware/singularity/issues/643 by DrDaveD",
                "text": "This is a fairly minor issue, but a little annoying.\n\nIn the latest development branch (I didn't test earlier versions), using the 'shell' command and --containall and --home where the mapped in home directory contains a .bashrc and the login shell is bash, bash does not read the .bashrc.  If I do 'exec $SHELL' inside the container, it then works.  If I use exec bash on the command line instead of shell, that also works.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/DrDaveD|DrDaveD>",
                "title": "#643 shell command doesn't read .bashrc",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/643",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493311692.461916",
        "date": 1493311692461
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/635|#635 Mounting of user home directory failing with --containall on development branch> by <https://github.com/DrDaveD|DrDaveD>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/635|#635 Mounting of user home directory failing with --containall on development branch> by <https://github.com/DrDaveD|DrDaveD>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493311418.385041",
        "date": 1493311418385
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297771870|#635: Mounting of user home directory failing with --containall on development branch>",
                "text": "Yes it is working now, thanks.",
                "pretext": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297771870|#635: Mounting of user home directory failing with --containall on development branch>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493311400.379721",
        "date": 1493311400379
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297750868|#642: bind paths and overlay in the configuration file>",
                "text": "Well, the 2.2 series won't get any updates (unless a security fix becomes required). If the 'development' branch works for you, I would just keep using that until the 2.3 version is released.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297750868|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493307252.106613",
        "date": 1493307252106
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297750424|#642: bind paths and overlay in the configuration file>",
                "text": "sure. Should I wait for 2.3?",
                "pretext": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297750424|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493307169.079653",
        "date": 1493307169079
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297749402|#642: bind paths and overlay in the configuration file>",
                "text": "Ooops, wrong button.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297749402|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493306957.008514",
        "date": 1493306957008
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue re-opened: <https://github.com/singularityware/singularity/issues/642|#642 bind paths and overlay in the configuration file> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue re-opened: <https://github.com/singularityware/singularity/issues/642|#642 bind paths and overlay in the configuration file> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493306951.006544",
        "date": 1493306951006
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/642|#642 bind paths and overlay in the configuration file> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/642|#642 bind paths and overlay in the configuration file> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493306949.005860",
        "date": 1493306949005
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297749363|#642: bind paths and overlay in the configuration file>",
                "text": "Can you try with the development branch (which will soon be the 2.3 release)?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297749363|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493306949.005819",
        "date": 1493306949005
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297749083|#642: bind paths and overlay in the configuration file>",
                "text": "Yes, you are understanding correctly.\n\nI'm using the 2.2.1 tarball.",
                "pretext": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297749083|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493306889.986425",
        "date": 1493306889986
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297748189|#642: bind paths and overlay in the configuration file>",
                "text": "Hi @afortiorama,\n\nIf I am understanding correctly, you are finding that the `bind path` configuration directive is not creating the directories if they don't already exist within the container even if overlay is enabled? Is that correct?\n\nWhat version of Singularity are you using?",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297748189|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493306706.926615",
        "date": 1493306706926
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297644538|#642: bind paths and overlay in the configuration file>",
                "text": "BTW I'm on CentOS7 with kernel 3.10.0-514.16.1.el7.x86_64  on ext4 and overlay isn't crashing. Are there particular situations in which it happens?",
                "pretext": "[singularityware/singularity] New comment by afortiorama on issue <https://github.com/singularityware/singularity/issues/642#issuecomment-297644538|#642: bind paths and overlay in the configuration file>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493280709.322573",
        "date": 1493280709322
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/636#issuecomment-297632870|#636: Adding check for empty Docker layers>",
                "text": "so weird, Travis appears to have fixed itself! Finally I can rest :P",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/636#issuecomment-297632870|#636: Adding check for empty Docker layers>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493277686.841354",
        "date": 1493277686841
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#642 bind paths and overlay in the configuration file' https://github.com/singularityware/singularity/issues/642 by afortiorama",
                "text": "Question\n\nif I enable overlay and bind paths in the configuration files do the paths have to exist in the image? It is not clear in the documentation. And if I use overlay and -B option I can see the directories in the container but if I list the bind path in the configuration file I can't. ",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/afortiorama|afortiorama>",
                "title": "#642 bind paths and overlay in the configuration file",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/642",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493276851.727664",
        "date": 1493276851727
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by bkemish on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-297602646|#624: binding directories in the same base directory as home>",
                "text": "Perfect! Thanks Gregory.",
                "pretext": "[singularityware/singularity] New comment by bkemish on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-297602646|#624: binding directories in the same base directory as home>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493264260.529101",
        "date": 1493264260529
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297600134|#635: Mounting of user home directory failing with --containall on development branch>",
                "text": "Oh my goodness... That was a silly error on my part, I blame this head cold I have!\n\nHopefully it is working better now?\n\nThanks for your patience on this!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297600134|#635: Mounting of user home directory failing with --containall on development branch>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493263030.424724",
        "date": 1493263030424
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297598227|#635: Mounting of user home directory failing with --containall on development branch>",
                "text": "It works with overlay enabled, but not with it disabled:\n```DEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking that home directry is configured: /srv\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking if SINGULARITY_CONTAIN is set\nDEBUG   [U=3382,P=2]       singularity_registry_get()                Returning value from registry: 'CONTAIN' = '1'\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking if home directories are being influenced by user\nDEBUG   [U=3382,P=2]       singularity_registry_get()                Returning value from registry: 'HOME' = '/cloud/login/dwd/root/home:/srv'\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking if user bind control is allowed\nDEBUG   [U=3382,P=2]       singularity_config_get_bool_char_impl()   Called singularity_config_get_bool(user bind control, yes)\nDEBUG   [U=3382,P=2]       singularity_config_get_value_impl()       Returning configuration value user bind control='yes'\nDEBUG   [U=3382,P=2]       singularity_config_get_bool_char_impl()   Return singularity_config_get_bool(user bind control, yes) = 1\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          SINGULARITY_HOME was set, not containing\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking ownership of home directory source: /cloud/login/dwd/root/home\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking to make sure home directory destination is a full path: /srv\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking if home directory is already mounted: /srv\nDEBUG   [U=3382,P=2]       singularity_runtime_rootfs()              Returning container_directory: /var/lib/singularity/mnt/final\nDEBUG   [U=3382,P=2]       check_mounted()                           Opening /proc/mounts\nDEBUG   [U=3382,P=2]       check_mounted()                           Iterating through /proc/mounts\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking if overlay is enabled\nDEBUG   [U=3382,P=2]       singularity_registry_get()                Returning NULL on 'OVERLAYFS_ENABLED'\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Staging home directory\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking if sessiondir/tmpdir is set\nDEBUG   [U=3382,P=2]       singularity_registry_get()                Returning value from registry: 'SESSIONDIR' = '/tmp/.singularity-session-Msn5SOFMjN'\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Identifying the base home directory: /srv\nDEBUG   [U=3382,P=2]       basedir()                                 Obtaining basedir for: /srv\nDEBUG   [U=3382,P=2]       basedir()                                 Iterating basedir: /srv\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking home directory base exists in container: /srv\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Creating temporary directory to stage home: /tmp/.singularity-session-Msn5SOFMjN/srv\nDEBUG   [U=3382,P=2]       s_mkpath()                                Creating directory: /tmp/.singularity-session-Msn5SOFMjN/srv\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Setting home directory source to: '/tmp/.singularity-session-Msn5SOFMjN' + '/srv'\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Setting home directory dest to: '/var/lib/singularity/mnt/final' + '/srv'\nDEBUG   [U=3382,P=2]       singularity_priv_escalate()               Temporarily escalating privileges (U=3382)\nDEBUG   [U=0,P=2]          singularity_priv_escalate()               Clearing supplementary GIDs.\nVERBOSE [U=0,P=2]          singularity_runtime_mount_home()          Mounting home directory source into container: /tmp/.singularity-session-Msn5SOFMjN/srv -&gt; /var/lib/singularity/mnt/final/srv\n```",
                "pretext": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297598227|#635: Mounting of user home directory failing with --containall on development branch>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493262084.342510",
        "date": 1493262084342
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/636#issuecomment-297593540|#636: Adding check for empty Docker layers>",
                "text": "oups, looks like I killed the update to fix the docker layers, oh well. Will add again!",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/636#issuecomment-297593540|#636: Adding check for empty Docker layers>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493259895.136674",
        "date": 1493259895136
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/641|#641 Add \"docker://\" bash_completion to \"shell-exec-run\"> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/641|#641 Add \"docker://\" bash_completion to \"shell-exec-run\"> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493257096.856760",
        "date": 1493257096856
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297585305|#635: Mounting of user home directory failing with --containall on development branch>",
                "text": "Ahh, ok. I see the problem. Luckily it was an easy fix! Will you take another look, and let me know?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297585305|#635: Mounting of user home directory failing with --containall on development branch>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493256233.765671",
        "date": 1493256233765
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/638#issuecomment-297582332|#638: Bootstrapping a container from a Fedora 25 host>",
                "text": "Oh, on RedHat and Fedora (RPM) based systems, I'd recommend building an RPM. The process is pretty simple:\n\n```$ ./autogen.sh\n$ ./configure\n$ make dist\n$ rpmbuild -ta singularity-*.tar.gz\n```\n\nAnd then install the RPMs onto your base system via the normal means.\n\nHope that helps!\n\nGreg",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/638#issuecomment-297582332|#638: Bootstrapping a container from a Fedora 25 host>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493254912.626883",
        "date": 1493254912626
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-297582044|#617: ERROR: Unrecognized OSBuild type: docker>",
                "text": "Oh, and the only reason I picked up on it so fast is because there was just a similar ticket and so it was fresh in my mind.\n\nGlad it's working now for you @inJeans and let us know how it works out for you.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-297582044|#617: ERROR: Unrecognized OSBuild type: docker>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493254780.610737",
        "date": 1493254780610
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#641 Add \"docker://\"  bash_completion to \"shell-exec-run\"' https://github.com/singularityware/singularity/pull/641 by ArangoGutierrez",
                "text": "Just a minor add\nChanges proposed in this pull request\n\n• Add \"docker://\" for shell-exec-run to bash_completion\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/ArangoGutierrez|ArangoGutierrez>",
                "title": "#641 Add \"docker://\"  bash_completion to \"shell-exec-run\"",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/641",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493245969.483061",
        "date": 1493245969483
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/640#issuecomment-297511258|#640: fixing tests>",
                "text": "Awesome, thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/640#issuecomment-297511258|#640: fixing tests>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493233744.538269",
        "date": 1493233744538
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/640|#640 fixing tests> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/640|#640 fixing tests> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493233738.536853",
        "date": 1493233738536
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/640#issuecomment-297510852|#640: fixing tests, not sure about pylint but can check in runtime!>",
                "text": "@gmkurtzer ",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/640#issuecomment-297510852|#640: fixing tests, not sure about pylint but can check in runtime!>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493233644.511606",
        "date": 1493233644511
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297500772|#635: Mounting of user home directory failing with --containall on development branch>",
                "text": "@gmkurtzer Unfortunately it still gives me an empty directory.  Here's the debug output portion related to singularity_runtime_mount_home, using the above test command and default singularity.conf:\n```DEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking that home directry is configured: /srv\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking if home directories are being influenced by user\nDEBUG   [U=3382,P=2]       singularity_registry_get()                Returning value from registry: 'HOME' = '/cloud/login/dwd/root/home:/srv'\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking if user bind control is allowed\nDEBUG   [U=3382,P=2]       singularity_config_get_bool_char_impl()   Called singularity_config_get_bool(user bind control, yes)\nDEBUG   [U=3382,P=2]       singularity_config_get_value_impl()       Returning configuration value user bind control='yes'\nDEBUG   [U=3382,P=2]       singularity_config_get_bool_char_impl()   Return singularity_config_get_bool(user bind control, yes) = 1\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking ownership of home directory source: /cloud/login/dwd/root/home\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking to make sure home directory destination is a full path: /srv\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking if home directory is already mounted: /srv\nDEBUG   [U=3382,P=2]       singularity_runtime_rootfs()              Returning container_directory: /var/lib/singularity/mnt/final\nDEBUG   [U=3382,P=2]       check_mounted()                           Opening /proc/mounts\nDEBUG   [U=3382,P=2]       check_mounted()                           Iterating through /proc/mounts\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking if overlay is enabled\nDEBUG   [U=3382,P=2]       singularity_registry_get()                Returning value from registry: 'CONTAIN' = '1'\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Staging home directory\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking if sessiondir/tmpdir is set\nDEBUG   [U=3382,P=2]       singularity_registry_get()                Returning value from registry: 'SESSIONDIR' = '/tmp/.singularity-session-MNXSRljkXY'\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Identifying the base home directory: /srv\nDEBUG   [U=3382,P=2]       basedir()                                 Obtaining basedir for: /srv\nDEBUG   [U=3382,P=2]       basedir()                                 Iterating basedir: /srv\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Checking home directory base exists in container: /srv\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Creating temporary directory to stage home: /tmp/.singularity-session-MNXSRljkXY/srv\nDEBUG   [U=3382,P=2]       s_mkpath()                                Creating directory: /tmp/.singularity-session-MNXSRljkXY/srv\nDEBUG   [U=3382,P=2]       singularity_registry_get()                Returning value from registry: 'CONTAIN' = '1'\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Setting home directory source to: '/tmp/.singularity-session-MNXSRljkXY' + '/srv'\nDEBUG   [U=3382,P=2]       singularity_runtime_mount_home()          Setting home directory dest to: '/var/lib/singularity/mnt/final' + '/srv'\nDEBUG   [U=3382,P=2]       singularity_priv_escalate()               Temporarily escalating privileges (U=3382)\nDEBUG   [U=0,P=2]          singularity_priv_escalate()               Clearing supplementary GIDs.\nVERBOSE [U=0,P=2]          singularity_runtime_mount_home()          Mounting home directory source into container: /tmp/.singularity-session-MNXSRljkXY/srv -&gt; /var/lib/singularity/mnt/final/srv\n```\n\nI get similar results with overlay disabled.",
                "pretext": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297500772|#635: Mounting of user home directory failing with --containall on development branch>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493231424.857292",
        "date": 1493231424857
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/640#issuecomment-297489810|#640: fixing tests, not sure about pylint but can check in runtime!>",
                "text": "confirmed pylint looks ok! I just didn't have it installed locally.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/640#issuecomment-297489810|#640: fixing tests, not sure about pylint but can check in runtime!>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493229017.128434",
        "date": 1493229017128
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#640 fixing tests, not sure about pylint but can check in runtime!' https://github.com/singularityware/singularity/pull/640 by vsoch",
                "text": "Probably didn't need to change the tests to output to PIPE, but it doesn't seem to matter.\n\nChanges proposed in this pull request\n\n -\n -\n -\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#640 fixing tests, not sure about pylint but can check in runtime!",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/640",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493228678.027123",
        "date": 1493228678027
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/630|#630 Markdown-ify> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/630|#630 Markdown-ify> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493221777.008206",
        "date": 1493221777008
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/630#issuecomment-297454928|#630: Markdown-ify>",
                "text": "Hrmm, this has been merged. Not sure why it didn't auto close, nor do I see it in the commit log, but I based my changes on your work, so I think GitHub is confused thus I'm closing this by hand. Feel free to check out my reorganization at <https://github.com/singularityware/singularity/commit/56ee6e80e158dda288609ca0d342a153c7ddfe19>.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/630#issuecomment-297454928|#630: Markdown-ify>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493221777.008096",
        "date": 1493221777008
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ShadowAce on issue <https://github.com/singularityware/singularity/issues/638#issuecomment-297347043|#638: Bootstrapping a container from a Fedora 25 host>",
                "text": "Thanks, guys!! \n\nI have got version 2.2.99 up and running.  One thing I noticed, though--On Fedora (and maybe on RH systems in general), the executable gets installed into /usr/local/bin which is not in root's PATH.  Easy enough to fix, but maybe it should be mentioned in the docs.\n\nThis will be great to use!  I look forward to installing it on our HPC cluster.",
                "pretext": "[singularityware/singularity] New comment by ShadowAce on issue <https://github.com/singularityware/singularity/issues/638#issuecomment-297347043|#638: Bootstrapping a container from a Fedora 25 host>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493203187.500860",
        "date": 1493203187500
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/638|#638 Bootstrapping a container from a Fedora 25 host> by <https://github.com/ShadowAce|ShadowAce>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/638|#638 Bootstrapping a container from a Fedora 25 host> by <https://github.com/ShadowAce|ShadowAce>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493203187.500845",
        "date": 1493203187500
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by c1t4r on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-297301391|#625: make singularity calling cmdline available from within container>",
                "text": "Thanks @gmkurtzer @vsoch,\n\n  that is what I do now in `/etc/singularity/init` : \n\n```\nSINGULARITY_BINDDIRS=$(grep '^[ ]_bind path[ ]_=' /etc/singularity/singularity.conf | sed 's/._=[ ]_//' | tr '\\n' ':')\nSINGULARITY_COMMANDLINE=\"$*\"\nexport SINGULARITY_COMMANDLINE SINGULARITY_BINDDIRS\n\n```yielding\n```\nsingularity exec -B /lustre /nfs/home1/CiTAR/Plurality/mksapp/images/Gaussian.sapp-2017-04-24-13-20.img /bin/bash\n\necho $SINGULARITY_BINDDIRS\n/nfs:/scratch:/etc/hosts:/etc/ssh:/var/spool/torque:/home:\n\necho $SINGULARITY_COMMANDLINE\n-B /lustre /nfs/home1/CiTAR/Plurality/mksapp/images/Gaussian.sapp-2017-04-24-13-20.img /bin/bash\n```\n\nThis enables me to reconstruct the total binds. You can close this issue :)\n\nPS I realize now this wouldn't work when I use mappings but I can fix this easily myself in `/etc/singularity/init` that's the most important thing...",
                "pretext": "[singularityware/singularity] New comment by c1t4r on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-297301391|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493196773.356790",
        "date": 1493196773356
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/617|#617 ERROR: Unrecognized OSBuild type: docker> by <https://github.com/vsoch|vsoch>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/617|#617 ERROR: Unrecognized OSBuild type: docker> by <https://github.com/vsoch|vsoch>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493183212.586948",
        "date": 1493183212586
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-297239185|#617: ERROR: Unrecognized OSBuild type: docker>",
                "text": "glad to hear @inJeans ! I still fall for these kind of things, and it's nothing to be ashamed of, it just means you are a human :) I'm going to close the issue, please re-open if necessary.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-297239185|#617: ERROR: Unrecognized OSBuild type: docker>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493183212.586933",
        "date": 1493183212586
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by inJeans on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-297238612|#617: ERROR: Unrecognized OSBuild type: docker>",
                "text": "Okay team. It was the line endings. Thanks @gmkurtzer for the suggestion. I have fallen victim to such rookie mistakes before. Thanks everyone for the help.",
                "pretext": "[singularityware/singularity] New comment by inJeans on issue <https://github.com/singularityware/singularity/issues/617#issuecomment-297238612|#617: ERROR: Unrecognized OSBuild type: docker>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493182908.560658",
        "date": 1493182908560
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297233640|#634: Add/multiprocessing>",
                "text": "Fantastic, merged!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297233640|#634: Add/multiprocessing>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493180348.356361",
        "date": 1493180348356
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/634|#634 Add/multiprocessing> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/634|#634 Add/multiprocessing> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493180338.355696",
        "date": 1493180338355
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297223758|#634: Add/multiprocessing>",
                "image_url": "https://asciinema.org/a/117638.png",
                "image_width": 372,
                "image_height": 250,
                "image_bytes": 40901,
                "text": "<https://asciinema.org/a/117638?speed=3>",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297223758|#634: Add/multiprocessing>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493175566.960214",
        "date": 1493175566960
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297216529|#634: Add/multiprocessing>",
                "text": "ok, updates are the following! We wanted to be able to separate the downloading of layers from the changing of permissions, because right now they are packaged together, and each takes a substantial amount of time. However, you can imagine it would be less than ideal to do two \"batches\" like:\n\n1. Multiprocessing task 1: Download huge chunk of layers, since it's atomic, each is saved with some `.tmp` extension.\n2. Pass this list to Multiprocessing task 2: change permissions of layers, save with final name\n\nbecause let's say we have 15 files, it takes 10 minutes to get to number 10 and then for step 1, the entire thing dies. We have to start over. That's annoying, and that's why we have it (now) like:\n\n1. Download A, change permissions A --&gt; final A\n2. Download B, change permissions B --&gt; final B\n\nso the challenge is - how to split up changing permissions from downloading without making it a PITA if you fail mid way? I decided to do the following.\n\n*Dynamic Multiprocessing Client*\n\nWhat I basically wanted to do is allow for the multiprocessing client to, midway running things, add another \"thing\" to his queue, the \"thing\" being the file that is downloaded, but still needs permissions fixed. To support this, I made the MultiProcess client take an optional second function, `func2` and given that it's defined, it doubles the number of tasks to complete:\n\n```        # If two functions are run per task, double total jobs\n        if func2 is not None:\n            total = total * 2\n```\n\nthen, as before, we create a multiprocessing pool to start the first set of tasks to download the files.\n\n```            pool = multiprocessing.Pool(self.workers,init_worker)\n```        self.start()\n        for task in tasks:\n            result = pool.apply_async(multi_wrapper,\n                                      multi_package(func,[task]))\n            results.append(result)\n            level1.append(result._job)```\n```\nbut you'll notice I'm not appending these ids (`result._job` is an int) to a level1 list, and I do this so later I can check if a result object (one of the worker job things in the queue) has been processed through the second function. To do this, I then pop each result off the queue, and if it's a level1, and if a second function (eg change permissions) is defined, I dynamically add this new job to the multiprocessing pool:\n\n```            while len(results) &gt; 0:\n                result = results.pop()\n                result.wait()\n                bot.show_progress(progress,total,length=35,prefix=prefix)\n                progress+=1\n                prefix = \"[%s/%s]\" %(progress,total)\n```            # Pass the result through a second function?\n            if func2 is not None and result._job in level1:\n                result = pool.apply_async(multi_wrapper,\n                                          multi_package(func2,[(result.get(),)]))\n                results.append(result)\n            else:\n                finished.append(result.get())```\n``` \nThen we have some catches to make sure keyboard interrupts are caught, and we return the list of finished. To support this, the different functions for download and changing permissions are now under docker/tasks, and the `get_layer` function for the docker client doesn't change permissions by default.\n\nI think/hope this should speed things up a little bit! I haven't tested that all the results are still passing, but will update the PR with fixes for anything that doesn't.\n\n*Progress Bar*\n\nThe progress bar can now minimally show the number of total tasks (downloads and permissions) as separate things instead of them being bundled into 1. I've also fixed it so the shub downloads will have the progress bar again. I changed the `&gt;` symbol to a `|` because the arrow creates a sense of \"this thing is moving\" for the user, and it's more of a \"this is a marker for where we are\" now.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297216529|#634: Add/multiprocessing>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493172322.666418",
        "date": 1493172322666
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/639#issuecomment-297195229|#639: updating test to be specific to use ubuntu 14.04 to calculate size>",
                "text": "no problemo! Working on the other PR now... trying to see if I can use a callback to add the permissions fixes to the queue",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/639#issuecomment-297195229|#639: updating test to be specific to use ubuntu 14.04 to calculate size>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493163283.693962",
        "date": 1493163283693
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/639#issuecomment-297194646|#639: updating test to be specific to use ubuntu 14.04 to calculate size>",
                "text": "Thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/639#issuecomment-297194646|#639: updating test to be specific to use ubuntu 14.04 to calculate size>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493163060.665202",
        "date": 1493163060665
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/639|#639 updating test to be specific to use ubuntu 14.04 to calculate size> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/639|#639 updating test to be specific to use ubuntu 14.04 to calculate size> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493163055.664495",
        "date": 1493163055664
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297187081|#634: Add/multiprocessing>",
                "text": "sorry - where is the base case, and where is the list of times? The logger helper was not intended for this. I would recommend trying with image `poldracklab/mriqc` and please provide a base test case (serial download) minimal 5 times, and then the comparison with the multiprocessing, for also 5 times. And to make digestion of the result easy, you can just have two python lists, eg:\n\n```base: [A,B,C,D,E]\nmulti [A,B,C,D,E]\n```\nthanks!",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297187081|#634: Add/multiprocessing>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493160403.294697",
        "date": 1493160403294
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#639 updating test to be specific to use ubuntu 14.04 to calculate size' https://github.com/singularityware/singularity/pull/639 by vsoch",
                "text": "This is a quick fix to a test to use version 14.04 of Ubuntu to test calculation of size, as latest will change.\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#639 updating test to be specific to use ubuntu 14.04 to calculate size",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/639",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493160077.245163",
        "date": 1493160077245
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297163964|#634: Add/multiprocessing>",
                "text": "Here are some results using the \"hack\" script and the PR installed on my host ( Dual XEON DeLL WS)\n\nAverage Download speed using speedtest-cli : 53.94 Mbit/s\n\n```bash\n['/tmp/singularity/libexec/python', '/usr/lib/python27.zip', '/usr/lib64/python2.7', '/usr/lib64/python2.7/plat-linux2', '/usr/lib64/python2.7/lib-tk', '/usr/lib64/python2.7/lib-old', '/usr/lib64/python2.7/lib-dynload', '/usr/lib64/python2.7/site-packages', '/usr/lib64/python2.7/site-packages/gtk-2.0', '/usr/lib/python2.7/site-packages', '/tmp/singularity/libexec/python', '/tmp/singularity/libexec/python/docker']\nVERBOSE2 SINGULARITY_COMMAND_ASIS found as False\nVERBOSE2 SINGULARITY_ROOTFS not defined (None)\nVERBOSE2 SINGULARITY_METADATA_FOLDER found as None/.singularity.d\nVERBOSE2 SINGULARITY_DISABLE_CACHE found as False\nVERBOSE2 SINGULARITY_CACHEDIR found as /home/Eduardo/.singularity\nVERBOSE2 SINGULARITY_ENVBASE found as None/.singularity.d/env\nVERBOSE2 SINGULARITY_LABELFILE found as None/.singularity.d/labels.json\nVERBOSE2 SINGULARITY_INCLUDECMD found as False\nVERBOSE2 SINGULARITY_PULLFOLDER found as /tmp/singularity/libexec/python\nVERBOSE2 SHUB_NAMEBYHASH not defined (None)\nVERBOSE2 SHUB_NAMEBYCOMMIT not defined (None)\nVERBOSE2 SHUB_CONTAINERNAME not defined (None)\nVERBOSE2 SINGULARITY_CONTENTS found as None/.singularity.d/.layers\nDEBUG Headers found: Content-Type,Accept\nVERBOSE Registry: index.docker.io\nVERBOSE Namespace: library\nVERBOSE Repo Name: ubuntu\nVERBOSE Repo Tag: latest\nVERBOSE Version: None\nVERBOSE Obtaining tags: <https://index.docker.io/v2/library/ubuntu/tags/list>\nDEBUG GET <https://index.docker.io/v2/library/ubuntu/tags/list>\nDEBUG Http Error with code 401\nDEBUG GET <https://auth.docker.io/token?service=registry.docker.io&amp;expires_in=9000&amp;scope=repository:library/ubuntu:pull>\nDEBUG Headers found: Content-Type,Authorization,Accept\nVERBOSE Obtaining manifest: <https://index.docker.io/v2/library/ubuntu/manifests/latest>\nDEBUG GET <https://index.docker.io/v2/library/ubuntu/manifests/latest>\nDEBUG Image manifest version 2.2 found.\nDEBUG Adding digest sha256:aafe6b5e13de557451e1781fe7276620275625f970015cbd10036ab7d8ae27c0\nDEBUG Adding digest sha256:0a2b43a726608d3835aa027bbe181624789130c212eb191baa481f1d788a0676\nDEBUG Adding digest sha256:18bdd1e546d21240bd4c3e4e29032a38f18102d780a78686508d40fe01c60158\nDEBUG Adding digest sha256:8198342c3e05101bb56b0a585dc34e39346ece39ee5d39287cda24b1fb445fed\nDEBUG Adding digest sha256:f56970a44fd409805e3872cac236d29f5eed1a45e189bb765bcd2163c915f384\n         1633 function calls (1568 primitive calls) in 2.436 seconds\n\n   Ordered by: internal time, call count\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n        4    0.716    0.179    0.718    0.179 ssl.py:833(do_handshake)\n        4    0.716    0.179    0.716    0.179 ssl.py:642(read)\n        4    0.587    0.147    0.936    0.234 socket.py:541(create_connection)\n       24    0.349    0.015    0.349    0.015 socket.py:227(meth)\n        4    0.048    0.012    0.048    0.012 ssl.py:401(load_default_certs)\n    12/10    0.007    0.001    0.007    0.001 socket.py:280(close)\n        4    0.002    0.000    0.002    0.000 ssl.py:346(*new*)\n       40    0.001    0.000    0.717    0.018 socket.py:410(readline)\n      8/3    0.001    0.000    0.007    0.002 socket.py:340(read)\n       19    0.001    0.000    0.001    0.000 message.py:146(write)\n        4    0.000    0.000    0.000    0.000 ssl.py:673(getpeercert)\n     13/5    0.000    0.000    0.001    0.000 sre_parse.py:395(_parse)\n        4    0.000    0.000    0.718    0.180 ssl.py:529(*init*)\n        8    0.000    0.000    0.000    0.000 ssl.py:814(close)\n        4    0.000    0.000    0.001    0.000 httplib.py:271(readheaders)\n        4    0.000    0.000    2.423    0.606 urllib2.py:1154(do_open)\n        9    0.000    0.000    0.000    0.000 urllib2.py:348(add_handler)\n       24    0.000    0.000    0.000    0.000 httplib.py:1005(putheader)\n     24/5    0.000    0.000    0.000    0.000 sre_compile.py:64(_compile)\n        8    0.000    0.000    0.000    0.000 socket.py:189(*init*)\n        4    0.000    0.000    0.000    0.000 ssl.py:711(send)\n        4    0.000    0.000    0.000    0.000 socket.py:196(close)\n    35/16    0.000    0.000    0.000    0.000 sre_parse.py:151(getwidth)\n      123    0.000    0.000    0.000    0.000 sre_parse.py:193(*next)\n       19    0.000    0.000    0.001    0.000 message.py:112(emit)\n        4    0.000    0.000    0.001    0.000 ssl.py:198(_dnsname_match)\n        4    0.000    0.000    0.716    0.179 httplib.py:392(_read_status)\n        4    0.000    0.000    0.717    0.179 httplib.py:431(begin)\n        8    0.000    0.000    0.002    0.000 re.py:230(_compile)\n        4    0.000    0.000    0.050    0.012 ssl.py:410(create_default_context)\n        2    0.000    0.000    0.000    0.000 decoder.py:370(raw_decode)\n        6    0.000    0.000    0.000    0.000 urlparse.py:168(urlsplit)\n        8    0.000    0.000    0.000    0.000 re.py:208(escape)\n        4    0.000    0.000    1.655    0.414 httplib.py:1067(_send_request)\n      3/2    0.000    0.000    2.435    1.218 base.py:176(get)\n       82    0.000    0.000    0.000    0.000 sre_parse.py:141(*getitem*)\n        4    0.000    0.000    0.717    0.179 httplib.py:1084(getresponse)\n      2/1    0.000    0.000    2.000    2.000 api.py:113(update_token)\n        4    0.000    0.000    2.424    0.606 urllib2.py:411(open)\n        4    0.000    0.000    0.718    0.180 ssl.py:355(wrap_socket)\n        5    0.000    0.000    0.002    0.000 sre_compile.py:567(compile)\n        2    0.000    0.000    0.005    0.002 httplib.py:609(_read_chunked)\n        3    0.000    0.000    0.000    0.000 utf_8.py:15(decode)\n       75    0.000    0.000    0.000    0.000 sre_parse.py:149(append)\n      106    0.000    0.000    0.000    0.000 sre_parse.py:212(get)\n        4    0.000    0.000    0.001    0.000 mimetools.py:24(*init*)\n        4    0.000    0.000    0.001    0.000 urllib2.py:226(*init*)\n        5    0.000    0.000    0.001    0.000 sre_parse.py:706(parse)\n        4    0.000    0.000    1.654    0.414 httplib.py:1252(connect)\n       24    0.000    0.000    0.000    0.000 urllib2.py:1184(&lt;genexpr&gt;)\n        8    0.000    0.000    0.000    0.000 socket.py:250(*init*)\n       26    0.000    0.000    0.000    0.000 rfc822.py:202(isheader)\n        4    0.000    0.000    0.000    0.000 mimetools.py:33(parsetype)\n     13/5    0.000    0.000    0.001    0.000 sre_parse.py:317(_parse_sub)\n        4    0.000    0.000    0.000    0.000 urllib2.py:1125(do_request_)\n        4    0.000    0.000    1.655    0.414 httplib.py:840(send)\n        5    0.000    0.000    0.000    0.000 urllib.py:958(*init*)\n        1    0.000    0.000    0.000    0.000 api.py:333(read_digests)\n        4    0.000    0.000    0.000    0.000 urllib.py:1092(splithost)\n        4    0.000    0.000    0.000    0.000 urllib.py:1078(splittype)\n        4    0.000    0.000    2.423    0.606 urllib2.py:439(_open)\n        4    0.000    0.000    0.000    0.000 urllib2.py:208(request_host)\n        1    0.000    0.000    0.000    0.000 urllib.py:1372(getproxies_environment)\n        6    0.000    0.000    0.000    0.000 urlparse.py:137(urlparse)\n        4    0.000    0.000    0.000    0.000 urllib.py:1183(splittag)\n        3    0.000    0.000    0.000    0.000 sre_compile.py:256(_optimize_charset)\n        4    0.000    0.000    0.000    0.000 ssl.py:743(sendall)\n        4    0.000    0.000    1.655    0.414 httplib.py:867(_send_output)\n      8/7    0.000    0.000    0.002    0.000 socket.py:289(*del*)\n        4    0.000    0.000    2.423    0.606 urllib2.py:1241(https_open)\n        4    0.000    0.000    0.000    0.000 httplib.py:888(putrequest)\n      3/2    0.000    0.000    2.428    1.214 base.py:205(submit_request)\n        1    0.000    0.000    0.000    0.000 urllib2.py:479(build_opener)\n       26    0.000    0.000    0.000    0.000 httplib.py:257(addheader)\n        4    0.000    0.000    0.000    0.00…",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297163964|#634: Add/multiprocessing>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493154158.072701",
        "date": 1493154158072
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/637#issuecomment-297157062|#637: SELinux Support?>",
                "text": "Ahh, cool. I \"think\" it should work just fine, but I haven't tested or even played with MLS mode. If you do get around to testing, will you report back on this issue?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/637#issuecomment-297157062|#637: SELinux Support?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493152572.668084",
        "date": 1493152572668
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by JusticeForMikeBrown on issue <https://github.com/singularityware/singularity/issues/637#issuecomment-297156351|#637: SELinux Support?>",
                "text": "Recon only!",
                "pretext": "[singularityware/singularity] New comment by JusticeForMikeBrown on issue <https://github.com/singularityware/singularity/issues/637#issuecomment-297156351|#637: SELinux Support?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493152408.625603",
        "date": 1493152408625
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/637#issuecomment-297153796|#637: SELinux Support?>",
                "text": "Hi @JusticeForMikeBrown \n\nI don't play much with selinux, but I can say that on my development Centos system, I have selinux both enabled and in enforcing targeted mode. Have you found an issue or are you doing recon?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/637#issuecomment-297153796|#637: SELinux Support?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493151829.471901",
        "date": 1493151829471
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297152860|#635: Mounting of user home directory failing with --containall on development branch>",
                "text": "@DrDaveD Will you retest with the latest development branch please?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297152860|#635: Mounting of user home directory failing with --containall on development branch>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493151623.418203",
        "date": 1493151623418
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/638#issuecomment-297149663|#638: Bootstrapping a container from a Fedora 25 host>",
                "text": "Hi @ShadowAce,\n\nDepending on what version of Singularity you are using, you will see different results as the bootstrap definition syntax that I gave as an example in some previous videos has been superseded with a much more flexible definition file syntax (as @ArangoGutierrez demonstrated and as the current documentation suggests).\n\nHope that helps, and sorry for the confusion.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/638#issuecomment-297149663|#638: Bootstrapping a container from a Fedora 25 host>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493150883.226353",
        "date": 1493150883226
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/638#issuecomment-297145397|#638: Bootstrapping a container from a Fedora 25 host>",
                "text": "Hi did someone say Fedora?\nI have a Fedora 24 Host, with the standard repo (master branch) (Installed Today 25 April)\nThis would be the .def file that you need\nFirst create the container:\n\n```sudo singularity create /SomePath/Centos7.img\n```\nPaste this on a .def using your favorite text editor\n\n```bash\nBootStrap: yum\nOSVersion: 7\nMirrorURL: <http://mirror.centos.org/centos-%>{OSVERSION}/%{OSVERSION}/os/$basearch/\nInclude: yum\n\n%post\n\nyum install vim-minimal python procps-ng\n```\n\nThen run the bootstrap process\n\n```sudo singularity bootstrap /Somepath/Centos7.img Centos7.def\n```\n\nIt worked on my Fedora 24 host. It should work on Fed 25.\n\nHere you can find more info about the bootstrap process on the standard repo (<https://github.com/singularityware/singularity|master branch>)\n&gt; <http://singularity.lbl.gov/docs-bootstrap|Bootstrap-Docs>",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/638#issuecomment-297145397|#638: Bootstrapping a container from a Fedora 25 host>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493149947.969358",
        "date": 1493149947969
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#638 Bootstrapping a container from a Fedora 25 host' https://github.com/singularityware/singularity/issues/638 by ShadowAce",
                "text": "I have installed singularity via the standard repo (version 2.0) on a Fedora 25 VM\n\nI have create a container using the recommended method:\n\nsudo singularity create container.img\n\nI have created a centos.def file as I saw in an exmaple video by gmkurtzer:\n```\nRELEASE=7\n\nDistType \"redhat\"\nMirrorURL \"<http://mirror.centos.org/centos-$>{RELEASE}/${RELEASE}/os/\\$basearch/\"\n\nSetup\nBootstrap\n\nInstallPkgs yum vim-minimal python procps-ng\n\nCleanup\n```\n\nHowever, when I run the bootstrap command:\n\nsudo singularity bootstrap container.img centos.def\n\nI get the following error message:\n\n```\nRedirecting to '/usr/bin/dnf --noplugins -c /mnt//etc/bootstrap-yum.conf --tolerant --installroot /mnt -y install /etc/redhat-release coreutils' (see 'man yum2dnf')\n\nNo such command: --tolerant. Please use /usr/bin/dnf --help\nIt could be a DNF plugin command, but loading of plugins is currently disabled.\n\n```\nAm I doing something wrong?  Does singularity not yet support dnf on the host?",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/ShadowAce|ShadowAce>",
                "title": "#638 Bootstrapping a container from a Fedora 25 host",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/638",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493142851.000112",
        "date": 1493142851000
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#637 SELinux Support?' https://github.com/singularityware/singularity/issues/637 by JusticeForMikeBrown",
                "text": "Hello\n\nI am new to singularity and was wondering if you have any guides on using it with SELinux in an HPC environment?\n\nThanks\nDoug",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/JusticeForMikeBrown|JusticeForMikeBrown>",
                "title": "#637 SELinux Support?",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/637",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493132084.776024",
        "date": 1493132084776
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297054379|#635: Mounting of user home directory failing with --containall on development branch>",
                "text": "I have reproduced this, debugging...",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/635#issuecomment-297054379|#635: Mounting of user home directory failing with --containall on development branch>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493131674.645720",
        "date": 1493131674645
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-297047667|#624: binding directories in the same base directory as home>",
                "text": "@bkemish In the `singularity.conf` you may also find it adventageous to not only disable the automatic mounting of home, but add a `bind point` to /srv/home and ensure that `enable overlay` is set to `yes`. That way you don't have to do the bind by hand.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-297047667|#624: binding directories in the same base directory as home>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493130435.257032",
        "date": 1493130435257
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297020162|#634: Add/multiprocessing>",
                "text": "<https://docs.python.org/2/library/hotshot.html>",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297020162|#634: Add/multiprocessing>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493124786.719649",
        "date": 1493124786719
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297019777|#634: Add/multiprocessing>",
                "text": "In case it's of interest (even outside this PR) there are modules in python that let us do a pretty detailed logging of every function call! For example, here is just creating the client and getting images for ubuntu:latest:\n\n```\n         1456 function calls (1393 primitive calls) in 2.560 seconds\n\n   Ordered by: internal time, call count\n\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n        4    0.956    0.239    1.320    0.330 socket.py:537(create_connection)\n        4    0.780    0.195    0.780    0.195 ssl.py:401(do_handshake)\n        4    0.455    0.114    0.455    0.114 ssl.py:254(read)\n       12    0.365    0.030    0.365    0.030 socket.py:223(meth)\n        4    0.001    0.000    0.781    0.195 ssl.py:202(*init*)\n       19    0.000    0.000    0.000    0.000 message.py:146(write)\n       40    0.000    0.000    0.455    0.011 socket.py:406(readline)\n     12/4    0.000    0.000    0.000    0.000 sre_parse.py:379(_parse)\n    32/14    0.000    0.000    0.000    0.000 sre_parse.py:140(getwidth)\n        8    0.000    0.000    0.000    0.000 ssl.py:394(close)\n        9    0.000    0.000    0.000    0.000 urllib2.py:323(add_handler)\n        4    0.000    0.000    0.000    0.000 httplib.py:267(readheaders)\n        4    0.000    0.000    0.000    0.000 socket.py:192(close)\n        4    0.000    0.000    0.000    0.000 ssl.py:290(send)\n       24    0.000    0.000    0.000    0.000 httplib.py:980(putheader)\n        4    0.000    0.000    2.557    0.639 urllib2.py:1139(do_open)\n        8    0.000    0.000    0.000    0.000 socket.py:185(*init*)\n     22/4    0.000    0.000    0.000    0.000 sre_compile.py:32(_compile)\n      3/2    0.000    0.000    2.558    1.279 base.py:159(submit_request)\n        4    0.000    0.000    0.781    0.195 ssl.py:476(wrap_socket)\n      3/2    0.000    0.000    2.559    1.280 base.py:130(get)\n        4    0.000    0.000    0.455    0.114 httplib.py:437(begin)\n        6    0.000    0.000    0.000    0.000 urlparse.py:168(urlsplit)\n        3    0.000    0.000    0.000    0.000 utf_8.py:15(decode)\n       19    0.000    0.000    0.000    0.000 message.py:112(emit)\n        4    0.000    0.000    0.455    0.114 httplib.py:398(_read_status)\n    12/10    0.000    0.000    0.000    0.000 socket.py:276(close)\n        4    0.000    0.000    2.101    0.525 httplib.py:822(send)\n      8/3    0.000    0.000    0.000    0.000 socket.py:336(read)\n        2    0.000    0.000    0.000    0.000 decoder.py:372(raw_decode)\n      103    0.000    0.000    0.000    0.000 sre_parse.py:182(*next)\n        4    0.000    0.000    2.101    0.525 httplib.py:1212(connect)\n        4    0.000    0.000    0.455    0.114 httplib.py:1053(getresponse)\n        4    0.000    0.000    2.102    0.525 httplib.py:1036(_send_request)\n        4    0.000    0.000    2.557    0.639 urllib2.py:386(open)\n        6    0.000    0.000    0.000    0.000 urlparse.py:137(urlparse)\n        3    0.000    0.000    0.000    0.000 sre_compile.py:207(_optimize_charset)\n      2/1    0.000    0.000    1.876    1.876 api.py:113(update_token)\n        1    0.000    0.000    0.000    0.000 urllib.py:1361(getproxies_environment)\n        8    0.000    0.000    0.000    0.000 socket.py:246(*init*)\n        4    0.000    0.000    0.001    0.000 re.py:226(_compile)\n        4    0.000    0.000    0.000    0.000 mimetools.py:24(*init*)\n       76    0.000    0.000    0.000    0.000 sre_parse.py:130(*getitem*)\n        4    0.000    0.000    0.000    0.000 urllib2.py:199(*init*)\n        4    0.000    0.000    0.000    0.000 mimetools.py:33(parsetype)\n        4    0.000    0.000    0.000    0.000 urllib.py:1067(splittype)\n        4    0.000    0.000    0.000    0.000 urllib2.py:181(request_host)\n        1    0.000    0.000    0.000    0.000 urllib2.py:454(build_opener)\n        4    0.000    0.000    0.000    0.000 urllib2.py:1110(do_request_)\n        4    0.000    0.000    0.000    0.000 urllib.py:1172(splittag)\n        4    0.000    0.000    0.001    0.000 sre_compile.py:493(compile)\n        2    0.000    0.000    0.000    0.000 decoder.py:361(decode)\n     12/4    0.000    0.000    0.000    0.000 sre_parse.py:301(_parse_sub)\n        4    0.000    0.000    0.000    0.000 sre_compile.py:478(_code)\n        4    0.000    0.000    0.000    0.000 sre_parse.py:675(parse)\n        2    0.000    0.000    0.000    0.000 httplib.py:614(_read_chunked)\n       10    0.000    0.000    0.000    0.000 &lt;string&gt;:8(*new*)\n        4    0.000    0.000    0.000    0.000 ssl.py:463(makefile)\n        4    0.000    0.000    2.101    0.525 httplib.py:849(_send_output)\n        4    0.000    0.000    0.000    0.000 httplib.py:370(*init*)\n        4    0.000    0.000    0.000    0.000 sre_compile.py:359(_compile_info)\n       62    0.000    0.000    0.000    0.000 sre_parse.py:138(append)\n       26    0.000    0.000    0.000    0.000 httplib.py:253(addheader)\n       19    0.000    0.000    0.000    0.000 message.py:80(emitError)\n       10    0.000    0.000    2.557    0.256 urllib2.py:374(_call_chain)\n        5    0.000    0.000    0.000    0.000 urllib.py:952(*init*)\n        4    0.000    0.000    0.000    0.000 urllib.py:1081(splithost)\n        4    0.000    0.000    2.557    0.639 urllib2.py:414(_open)\n        4    0.000    0.000    0.000    0.000 ssl.py:320(sendall)\n       26    0.000    0.000    0.000    0.000 rfc822.py:197(isheader)\n        4    0.000    0.000    0.000    0.000 rfc822.py:88(*init*)\n        1    0.000    0.000    0.000    0.000 api.py:333(read_digests)\n        4    0.000    0.000    2.557    0.639 urllib2.py:1221(https_open)\n        2    0.000    0.000    0.000    0.000 base.py:46(update_headers)\n        1    0.000    0.000    0.684    0.684 api.py:208(get_manifest)\n      8/7    0.000    0.000    0.000    0.000 socket.py:285(*del*)\n       10    0.000    0.000    0.000    0.000 sre_compile.py:354(_simple)\n        3    0.000    0.000    0.000    0.000 urlparse.py:160(_splitnetloc)\n        1    0.000    0.000    0.000    0.000 shell.py:71(parse_image_uri)\n        5    0.000    0.000    0.000    0.000 urllib.py:1006(*init*)\n        4    0.000    0.000    0.000    0.000 httplib.py:870(putrequest)\n        1    0.000    0.000    1.876    1.876 api.py:68(*init*)\n        7    0.000    0.000    0.000    0.000 httplib.py:553(close)\n        4    0.000    0.000    0.000    0.000 base.py:189(prepare_request)\n        4    0.000    0.000    0.455    0.114 ssl.py:335(recv)\n       88    0.000    0.000    0.000    0.000 sre_parse.py:201(get)\n       54    0.000    0.000    0.000    0.000 sre_parse.py:195(match)\n        8    0.000    0.000    0.000    0.000 urllib2.py:261(get_host)\n        4    0.000    0.000    2.558    0.639 urllib2.py:123(urlopen)\n        4    0.000    0.000    0.000    0.000 mimetools.py:50(parseplist)\n        2    0.000    0.000    0.000    0.000 sutils.py:59(add_http)\n       12    0.000    0.000    0.000    0.000 message.py:234(debug)\n        4    0.000    0.000    0.000    0.000 urllib2.py:516(http_response)\n        2    0.000    0.000    0.000    0.000 UserDict.py:40(items)\n        1    0.000    0.000    1.876    1.876 api.py:179(get_tags)\n        8    0.000    0.000    0.000    0.000 urllib2.py:254(get_type)\n        6    0.000    0.000    0.000    0.000 httplib.py:569(read)\n        4    0.000    0.000    2.102    0.525 httplib.py:1015(request)\n        4    0.000    0.000    0.000    0.000 httplib.py:726(*init*)\n        4    0.000    0.000    0.000    0.000 httplib.py:812(close)\n       28    0.000    0.000    0.000    0.000 httplib.py:842(_output)\n       24    0.000    0.000    0.000    0.000 urllib2.py:1168(&lt;genexpr&gt;)\n       22    0.000    0.000    0.000    0.000 sre_parse.py:90(*init*)\n       19    0.000    0.000    0.000    0.000 message.py:104(isEnabledFor)\n        4    0.000    0.000    0.000    0.000 httplib.py:1204(*init*)\n        3    0.000    0.000    0.000    0.000 sre_compile.py:178(_compile_charset)\n        1    0.000    0.000    0.000    0.000 re.py:134(match)…",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-297019777|#634: Add/multiprocessing>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493124699.701122",
        "date": 1493124699701
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-296845761|#634: Add/multiprocessing>",
                "text": "ok a quick update on testing this (trivially) with a larger image. It's expensive so I limited to the test to a subset of layers [0:12] for `poldracklab/mriqc`. I also ran it just once, so we are going to miss any and all variance. The serial test is as follows:\n\n```\n\n*('Serial download time:', 547.8233549594879)*\n\n```\nand the multiprocessing hung and never finished, and I wasn't able to get any kind of log, but I can talk about my observations.\n\nWhat I observed is that the multiprocessing handled the smaller layers simultaneously, and they were all completed very quickly. The bottle neck was the larger layers - because we are still handling the layer download and permission changes via one worker. This means that any improvements / speed ups in time are due to making the smaller layers efficient to finish in \"parallel\" but the bottle neck is always going to be the largest layer. Interestingly enough, dumping more stuff into one layer is the recommended Dockery way of doing things, to prevent having more smaller layers. It's even farther from our approach since we are working with entire image files. \n\nIt would be great if someone that has this kind of infrastructure could test this proper, or just give me a log in and I'll do it. I can't be charging my group dollars per hour for it, it's not really good.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-296845761|#634: Add/multiprocessing>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493074967.691958",
        "date": 1493074967691
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/636#issuecomment-296819520|#636: Adding check for empty Docker layers>",
                "text": "ok, this seems to resolve the bug mentioned:\n\n```Exploding layer: sha256:7d6bbcadbe0101e0f7deb1b6a83d2a520e805447e5afd48303a0229c034df2ef.tar.gz\nExploding layer: sha256:d9e9382a21dd7dfe6babf8a4e744cafd6f2f7ebb983e2d40c7cb13fbc98b115d.tar.gz\nExploding layer: sha256:6f06d723971b4f12e240f3336a17bf45057b575e501bc65071d4298764d892e3.tar.gz\nExploding layer: sha256:91641bf41cb3485b405e4b2a287d8abc2c5545367faad1e2f72f103bff9c18f8.tar.gz\nExploding layer: sha256:bd842a2105a862f62ba4ad726531029be49046c290307e9c07a688c89f4606e6.tar.gz\nExploding layer: sha256:4a70713c436f2350e8a9f1c1e6c823290f331254c6c21d5657056499d8575608.tar.gz\nExploding layer: sha256:63fe8c0068a811103c702452985368fc99014f83b5f0151cf631644f13f383b2.tar.gz\nExploding layer: sha256:4daad8bdde31f5969d6a44800e993a911bed25853b2f89417b07ce7f0ac67714.tar.gz\nExploding layer: sha256:b3e1c725a85f0953e81815b7c7aabfad9ebfd90af53f99248981282b8045d787.tar.gz\nExploding layer: sha256:2bf1a0cf6f2a1259591399f9afe1956e03128633732c390aa0889af805e1b9a4.tar.gz\nFontconfig warning: ignoring C.UTF-8: not a valid language tag\nusage: mriqc [-h] [-v]\n             [--participant_label [PARTICIPANT_LABEL [PARTICIPANT_LABEL ...]]]\n             [-m [{T1w,bold,T2w} [{T1w,bold,T2w} ...]]] [-s SESSION_ID]\n             [-r RUN_ID] [--nthreads NTHREADS] [--n_procs N_PROCS]\n             [--mem_gb MEM_GB] [--write-graph] [--dry-run]\n             [--use-plugin USE_PLUGIN] [--ica] [--testing] [--profile]\n             [--hmc-afni] [--hmc-fsl] [-f] [--fft-spikes-detector]\n             [-w WORK_DIR] [--report-dir REPORT_DIR] [--verbose-reports]\n             [--ants-nthreads ANTS_NTHREADS] [--ants-settings ANTS_SETTINGS]\n             [--deoblique] [--despike] [--start-idx START_IDX]\n             [--stop-idx STOP_IDX] [--correct-slice-timing]\n             bids_dir output_dir {participant,group} [{participant,group} ...]\nmriqc: error: the following arguments are required: bids_dir, output_dir, analysis_level\n```\n@gmkurtzer ready for review.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/636#issuecomment-296819520|#636: Adding check for empty Docker layers>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493067298.312720",
        "date": 1493067298312
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#636 Adding check for empty Docker layers' https://github.com/singularityware/singularity/pull/636 by vsoch",
                "text": "Fixes #633 \n\nWe recently observed that, for some images with `ENV` or `LABELS` they can produce empty layers. \n\n<https://github.com/singularityware/singularity/issues/633>\n\nThis isn't a problem for Docker, but in our case, we did not expect this and attempt to change permissions using a function to show progress that divides the progress by the total objects to change. In the case of an empty layer, the total objects is 0, and you can imagine where that goes (division by zero, anyone?). As a reasonable fix to this, I have added a check for the number of objects, and given that it's 0, the user is warned:\n\n```singularity run docker://poldracklab/mriqc:0.9.3\nDocker image path: index.docker.io/poldracklab/mriqc:0.9.3\nCache folder set to /home/vanessa/.singularity/docker\n[1/24] Download |===================================| 100.0% layer 3ed9\nWARNING /home/vanessa/.singularity/docker/sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4.tar.gz.IZWQ8d is empty.\n[2/24] Download |===================================| 100.0% layer 4936\n[2/24] Prepare  |===================================| 100.0% layer 4936\n[3/24] Download |===================================| 100.0% layer d712\n[3/24] Prepare  |===================================| 100.0% layer d712\n[4/24] Download |===================================| 100.0% layer 7366\n[4/24] Prepare  |===================================| 100.0% layer 7366\n[5/24] Download |===================================| 100.0% layer de5b\n[5/24] Prepare  |===================================| 100.0% layer de5b\n[6/24] Download |===================================| 100.0% layer 4a55\n[6/24] Prepare  |===================================| 100.0% layer 4a55\n[7/24] Download |===================================| 100.0% layer 91f5\n[7/24] Prepare  |===================================| 100.0% layer 91f5\n[8/24] Download |===================================| 100.0% layer f506\n[8/24] Prepare  |===================================| 100.0% layer f506\n[9/24] Download |===================================| 100.0% layer 12f2\n[9/24] Prepare  |===================================| 100.0% layer 12f2\n[10/24] Download |===================================| 100.0% layer 9ddc\n```\n\nI think this is a reasonable solution, because there could be many stupid cases when a layer is empty, and this should not break the standard import/run, but the user should be alerted in case this is undesired functionality. \n\nThis image is a beast so it's still running the above (we need to make sure there is no issue from within Singularity to still extract the empty layer, but after that we should be good to go. @chrisfilo \n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#636 Adding check for empty Docker layers",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/636",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493065883.963766",
        "date": 1493065883963
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/633#issuecomment-296810038|#633: ERROR Cannot untar layer>",
                "text": "I think so. I'm testing a quick fix for this, will PR after I've looked over a few more things.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/633#issuecomment-296810038|#633: ERROR Cannot untar layer>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493065100.765398",
        "date": 1493065100765
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-296807042|#634: Add/multiprocessing>",
                "text": "ok I'm running on a n1-standard-32 (32 vCPUs, 120 GB memory) machine. First with a dinky image, ubuntu:latest. Here are results:\n\nserial\n```[30.841593980789185,\n 30.764344930648804,\n 30.08139419555664,\n 29.94521188735962,\n 29.80375099182129,\n 30.066102981567383,\n 30.142144918441772,\n 29.913299083709717,\n 30.201260805130005,\n 30.04903221130371]\n```\n\nHere are times using 2* CPU, in this case, 64 workers\n\n```[28.287593126296997,\n 27.664984941482544,\n 27.844917058944702,\n 28.089011192321777,\n 28.063278198242188,\n 27.838926076889038,\n 28.12764596939087,\n 28.15303897857666,\n 28.949312925338745,\n 28.98016881942749]\n```\n(not remarkably different)\n\nand finally here are times that are varying the workers (the idea being one configuration would be most optimal)\n\n```{1: 31.716920137405396,\n 2: 27.720598936080933,\n 3: 28.177881956100464,\n 4: 27.763348817825317,\n 5: 27.959540128707886,\n 6: 27.824767112731934,\n 7: 27.991510152816772,\n 8: 27.83053994178772,\n 9: 28.043720960617065,\n 10: 27.929732084274292,\n 11: 28.3353009223938,\n 12: 28.204150915145874,\n 13: 28.106995105743408,\n 14: 28.08035182952881,\n 15: 28.072475910186768,\n 16: 28.16374707221985,\n 17: 30.745393991470337,\n 18: 28.644512176513672,\n 19: 28.469332933425903,\n 20: 28.34295082092285,\n 21: 28.574687957763672,\n 22: 28.814728021621704,\n 23: 28.784103870391846,\n 24: 28.82189178466797,\n 25: 29.055819988250732,\n 26: 28.978917837142944,\n 27: 29.062932014465332,\n 28: 29.211053133010864,\n 29: 29.674387216567993}\n```\nAgain, it's really not convincingly different to warrant adding this. What I'm doing next is testing a much heftier image (one with 24 layers that are each much larger) and from there, I would suggest the following:\n\n• if we see a difference, proceed with questions posted above\n• if we don't see a difference, discuss if there are other components of the python API that would benefit from the multiprocessing, and if so, try those out.\n• if no to both of the above, we can drop the PR.\n\nFor those interested in running their own test cases (@ArangoGutierrez) I have provided the testing code <https://gist.github.com/vsoch/84e966971ca4d9fe65fbceb9691a1344|here>. And you of course can use the PR here if you don't want to work internally in Python with simple dummy functions.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-296807042|#634: Add/multiprocessing>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493064363.583250",
        "date": 1493064363583
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ickc on pull request <https://github.com/singularityware/singularity/pull/630#issuecomment-296805350|#630: Markdown-ify>",
                "text": "No worries.\n\nIt seems that only by rebasing it, there's conflicts from the diff of the 2 branches. I'll take a look into this later.",
                "pretext": "[singularityware/singularity] New comment by ickc on pull request <https://github.com/singularityware/singularity/pull/630#issuecomment-296805350|#630: Markdown-ify>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493063948.474340",
        "date": 1493063948474
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#635 Mounting of user home directory failing with --containall on development branch' https://github.com/singularityware/singularity/issues/635 by DrDaveD",
                "text": "On Friday @gmk fixed one problem with mounting a user home directory in commit 6d18256 but there's still at least one problem.  Reproduce with \n```singularity shell --containall --home $HOME/root/home:/srv centos7.img\n```\nwhere $HOME/root/home contains some files you want in a temporary directory; it ends up with an empty directory instead of the one requested.  I believe the problem has to do with this message\n```singularity_runtime_mount_home()          Requested --contain option with no workdir, leaving homedir_source undefined\n```\nI attempted a quick fix (using SESSIONDIR if WORKDIR not found) but it still had problems so either I did it wrong or this isn't the last problem.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/DrDaveD|DrDaveD>",
                "title": "#635 Mounting of user home directory failing with --containall on development branch",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/635",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493060237.522167",
        "date": 1493060237522
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-296775506|#634: Add/multiprocessing>",
                "text": "As yes and two more things that came to mind now that I've slept a bit:\n\n• the number of workers is a variable. It will depend on the running environment. This means we might expose it via an environment or config variable (likely config since the user could specify something suboptimal for the cluster) or have a calculation that figures it out automatically. The suggestions I saw were 2*CPU, but in testing on my small instance I found that generally odd numbers were better, eg 3,5,7.\n• Logging. I also figured out how to get the workers sending their logging to the log, and this can be done at the same level as the Singularity logger.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-296775506|#634: Add/multiprocessing>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493057426.750562",
        "date": 1493057426750
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/631#issuecomment-296769828|#631: Test parallel processing of download / fix permissions> (assigned to <https://github.com/vsoch|vsoch>)",
                "text": "yes please test the current PR for this on different machines (with varying CPU) and compare the PR branch to development. Any shell command should work, and up to you how to time! Thanks!",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/631#issuecomment-296769828|#631: Test parallel processing of download / fix permissions> (assigned to <https://github.com/vsoch|vsoch>)",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493056508.493757",
        "date": 1493056508493
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/630#issuecomment-296752044|#630: Markdown-ify>",
                "text": "This looks good, but can you rebase this against the development branch?\n\nDue to my ignorance, confusion and inability to break old habits easily, the master branch was being used as \"trunk\". This will be resolved as soon as 2.3 gets released. Until then, can you please rebase this to the \"development\" branch?\n\nThank you!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/630#issuecomment-296752044|#630: Markdown-ify>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493054094.839313",
        "date": 1493054094839
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/629#issuecomment-296747818|#629: Fix commit 0650c9d>",
                "text": "Hi @ickc, it is not the same license. At an initial glance, clause #3 has been modified, and the locations of the files are in different places. This structure and the file contents was dictated to me by legals of DOE, UCOP, and LBNL so they can not be modified at this time. I already have plans to modify the license and contributors clause but I am waiting for approvals before I can proceed. When that happens, I will re-review this PR and try to encompass as much as possible.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/629#issuecomment-296747818|#629: Fix commit 0650c9d>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493053615.712694",
        "date": 1493053615712
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296737369|#625: make singularity calling cmdline available from within container>",
                "text": "At the moment (in the development branch) all variables are generally being wiped clean that are prefixed with `SINGULARITY_` including `SINGULARITY_BINDDIRS`. If you want to ensure that that variable (or any others) are transposed down into the container, you can do so by editing `/etc/singularity/init` and doing something like:\n\n```SINGULARITYENV_SINGULARITY_BINDDIRS=\"$SINGULARITY_BINDDIRS\"`\nexport SINGULARITYENV_SINGULARITY_BINDDIRS\n```\n\nHope that helps!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296737369|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493052263.345994",
        "date": 1493052263345
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/633#issuecomment-296724845|#633: ERROR Cannot untar layer>",
                "text": "Here's the dockerfile used to create this image: <https://github.com/poldracklab/mriqc/blob/master/Dockerfile>\nHere's layer analysis:\n<https://microbadger.com/images/poldracklab/mriqc>\n\nI guess the ENVs are causing a problem?",
                "pretext": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/633#issuecomment-296724845|#633: ERROR Cannot untar layer>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493050576.890870",
        "date": 1493050576890
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/631#issuecomment-296664904|#631: Test parallel processing of download / fix permissions> (assigned to <https://github.com/vsoch|vsoch>)",
                "text": "Do you have any test scrypt to run? or simply any ``` singularity import ``` can be used as a test. \nI enjoy doing parallel stuff ( mostly on C/C++ , with OpenMP or the threads lib) ",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/631#issuecomment-296664904|#631: Test parallel processing of download / fix permissions> (assigned to <https://github.com/vsoch|vsoch>)",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493039995.808707",
        "date": 1493039995808
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-296662570|#634: Add/multiprocessing>",
                "text": "Do you have any test to run? or simply any ``` singularity import ``` can be used as a test. I enjoy doing parallel stuff ",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on pull request <https://github.com/singularityware/singularity/pull/634#issuecomment-296662570|#634: Add/multiprocessing>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493039466.683653",
        "date": 1493039466683
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/633#issuecomment-296562364|#633: ERROR Cannot untar layer>",
                "text": "Could be something like this: <https://github.com/moby/moby/issues/20917#issuecomment-191901912> can look more into tomorrow. Err today. Whatever.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/633#issuecomment-296562364|#633: ERROR Cannot untar layer>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493020184.454501",
        "date": 1493020184454
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/633#issuecomment-296560869|#633: ERROR Cannot untar layer>",
                "image_url": "https://cloud.githubusercontent.com/assets/814322/25326903/f43f7438-2886-11e7-8d3a-13d73e59a02d.png",
                "image_width": 1048,
                "image_height": 296,
                "image_bytes": 39809,
                "text": "The error is because there is an archive (or maybe more than one, it quits at the first) that is empty:\n\n<https://cloud.githubusercontent.com/assets/814322/25326903/f43f7438-2886-11e7-8d3a-13d73e59a02d.png|image>\n\nany ideas? Here is the layer:\n\n```DEBUG GET (stream) https://index.docker.io/v2/poldracklab/mriqc/blobs/sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4\n[1/24] Download |===================================| 100.0% layer 3ed9\nDEBUG Download of raw file (pre permissions fix) is /home/vanessa/.singularity/docker/sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4.tar.gz._Q66UL\nVERBOSE Fixing permission for /home/vanessa/.singularity/docker/sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4.tar.gz._Q66UL\n```\n\nand it triggers this bug:\n\n```Traceback (most recent call last):\n  File \"/usr/local/libexec/singularity/python/import.py\", line 107, in &lt;module&gt;\n    main()\n  File \"/usr/local/libexec/singularity/python/import.py\", line 83, in main\n    layerfile=LAYERFILE)\n  File \"/usr/local/libexec/singularity/python/docker/main.py\", line 104, in IMPORT\n    prefix=prefix)\n  File \"/usr/local/libexec/singularity/python/docker/api.py\", line 280, in get_layer\n    prefix=prefix)\n  File \"/usr/local/libexec/singularity/python/sutils.py\", line 329, in change_tar_permissions\n    bot.show_progress(ii,count,length=35,prefix=prefix,suffix=suffix)\n  File \"/usr/local/libexec/singularity/python/message.py\", line 173, in show_progress\n    percent = 100 * (iteration / float(total))\nZeroDivisionError: float division by zero\n```\n\nI can add a workaround to check if this total is 0, but I'd like to figure out why it's empty in the first place. It could be a bad download, or something on the Docker side, and the closer we can get to the root, the better. No pun intended. :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/633#issuecomment-296560869|#633: ERROR Cannot untar layer>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493019875.410204",
        "date": 1493019875410
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#634 Add/multiprocessing' https://github.com/singularityware/singularity/pull/634 by vsoch",
                "text": "This is the first PR to add multiprocessing to downloads, which, with some trivial testing, seems like it might speed things up by a small amount (see here <http://www.vanessasaur.us/rawr/2017/multiprocess/>). A few things I'd like to talk about:\n\n*Progress Bar*\n\nthe stream downloader now has the progress bar removed, in favor of including it with the multiprocessing calls (to ensure that you don't see crazy output). This also means that the updates are less frequent, and a lot more jumpy (eg, one bar is shown for all layers, and it proceeds when a layer is done. I used Pool.imap instead of Pool.imap_unordered or Pool.apply_async to ensure that the ordering is preserved.  This also means that the progress bar is gone for shub, and this should be changed. I'd like to have a discussion about a new progress bar strategy - is there a more ideal visual that can be shown that doesn't have the arrow `&gt;` making the user expecting more moving progress? If so, should we do the same for the shub image, or implement the old version for that (having the call to bot.show_progress be in separate functions, which is different than how it was before, both were in the stream function.\n\n*Testing*\n\nI'd like to have some test this out on different OS and CPUs to see if it does make a difference. And also get feedback on tweaking the MultiProcess module that I added in case we can make it faster.\n\nI noticed strange behavior with pool, that it would print an empty newline after each process. As a fix I wrote a `mute` function that sends stderr output to null, and that resolved it. I don't think I need to close this, but wanted to check.\n\nGoing to sleep!\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/vsoch|vsoch>",
                "title": "#634 Add/multiprocessing",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/634",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493018844.265160",
        "date": 1493018844265
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#633 ERROR Cannot untar layer' https://github.com/singularityware/singularity/issues/633 by chrisfilo",
                "text": "`singularity run docker://ubuntu` worked but:\n\n```[root@8357ee35d5f7 /]# singularity run docker://poldracklab/mriqc:0.9.3\nDocker image path: index.docker.io/poldracklab/mriqc:0.9.3\nCache folder set to /root/.singularity/docker\n[1/24] Download |===================================| 100.0% layer 3ed9\nERROR Cannot untar layer /root/.singularity/docker/sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4.tar.gz.TxY6kY, was there a problem with download?\n```\n\nI've tried without the tag with the same effect. This is the development branch running inside docker.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/chrisfilo|chrisfilo>",
                "title": "#633 ERROR Cannot untar layer",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/633",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493016987.034312",
        "date": 1493016987034
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/632|#632 ERROR : Could not virtualize file system namespace: Operation not permitted> by <https://github.com/chrisfilo|chrisfilo>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/632|#632 ERROR : Could not virtualize file system namespace: Operation not permitted> by <https://github.com/chrisfilo|chrisfilo>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493016811.015437",
        "date": 1493016811015
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/632#issuecomment-296545074|#632: ERROR : Could not virtualize file system namespace: Operation not permitted>",
                "text": "`--privileged` solved the problem. Thanks!",
                "pretext": "[singularityware/singularity] New comment by chrisfilo on issue <https://github.com/singularityware/singularity/issues/632#issuecomment-296545074|#632: ERROR : Could not virtualize file system namespace: Operation not permitted>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493016809.015259",
        "date": 1493016809015
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/632#issuecomment-296529285|#632: ERROR : Could not virtualize file system namespace: Operation not permitted>",
                "text": "hey @chrisfilo ! I'm guessing you are running this inside Docker, did you check the things from <https://groups.google.com/a/lbl.gov/forum/#!topic/singularity/e9mlDuzKowc|this post>? Specifically:\n\n• confirm running with `--privileged` via inspect\n• adding `--cap-add=SYS_ADMIN `\n• could be related to <https://github.com/moby/moby/issues/2918>\n\nIt would be good to see this run from via a non-Docker centos 6 to confirm it's Docker related, although I'm not sure who has those lying around :) Could you also please provide the complete `--debug` output, to anticipate the above needing further investigating?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/632#issuecomment-296529285|#632: ERROR : Could not virtualize file system namespace: Operation not permitted>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493012531.625273",
        "date": 1493012531625
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#632 ERROR  : Could not virtualize file system namespace: Operation not permitted' https://github.com/singularityware/singularity/issues/632 by chrisfilo",
                "text": "Running on CentOS 6 using root and af9551859655ca37f04e621a24f7d6614c3c5a8d version of Singularity (development HEAD at the time of writing).\n\n```\n[root@f00125c69849 /]# singularity run docker://ubuntu\nDocker image path: index.docker.io/library/ubuntu:latest\nCache folder set to /root/.singularity/docker\n[1/5] Download |===================================| 100.0% layer c627\n[1/5] Prepare  |===================================| 100.0% layer c627\n[2/5] Download |===================================| 100.0% layer d4fc\n[2/5] Prepare  |===================================| 100.0% layer d4fc\n[3/5] Download |===================================| 100.0% layer c912\n[3/5] Prepare  |===================================| 100.0% layer c912\n[4/5] Download |===================================| 100.0% layer 0062\n[4/5] Prepare  |===================================| 100.0% layer 0062\n[5/5] Download |===================================| 100.0% layer b33f\n[5/5] Prepare  |===================================| 100.0% layer b33f\nImporting: base Singularity environment\nExploding layer: sha256:c62795f78da9ad31d9669cb4feb4e8fba995a299a0b2bd0f05b10fdc05b1f35e.tar.gz\nExploding layer: sha256:d4fceeeb758e5103c39daf44c73404bf476ef6fd6b7a9a11e2260fcc1797c806.tar.gz\nExploding layer: sha256:5c9125a401ae0cf5a5b4128633e7a4e84230d3eb4c541c661618a70e5d29aeff.tar.gz\nExploding layer: sha256:0062f774e9942f61d13928855ab8111adc27def6f41bd6f7902c329ec836882b.tar.gz\nExploding layer: sha256:6b33fd031facf4d7dd97afeea8a93260c2f15c3e795eeccd8969198a3d52678d.tar.gz\nExploding layer: sha256:fe44851d529f465f9aa107b32351c8a0a722fc0619a2a7c22b058084fac068a4.tar.gz\nSingularity: action-suid (U=0,P=31)&gt; Could not virtualize file system namespace: Operation not permitted\n\nERROR  : Could not virtualize file system namespace: Operation not permitted\nSingularity: action-suid (U=0,P=31)&gt; Retval = 255\n\nABORT  : Retval = 255\n[root@f00125c69849 /]# Singularity: singularity: cleanupd (U=0,P=80)&gt; Failed removing file: /tmp/.singularity-runtime.eL6PzXJ2/container/ubuntu/root\n\nSingularity: singularity: cleanupd (U=0,P=80)&gt; Could not remove directory /tmp/.singularity-runtime.eL6PzXJ2: Directory not empty\n\nSingularity: singularity: cleanupd (U=0,P=80)&gt; Retval = 255\n```",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/chrisfilo|chrisfilo>",
                "title": "#632 ERROR  : Could not virtualize file system namespace: Operation not permitted",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/632",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493011163.528943",
        "date": 1493011163528
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-296520433|#624: binding directories in the same base directory as home>",
                "text": "Great to hear! ",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-296520433|#624: binding directories in the same base directory as home>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493006851.257228",
        "date": 1493006851257
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/631#issuecomment-296515652|#631: Test parallel processing of download / fix permissions> (assigned to <https://github.com/vsoch|vsoch>)",
                "text": "ok! So I got only about 1/2 done the implementation, but I tested this out:\n\n<http://www.vanessasaur.us/rawr/2017/multiprocess/>\n\nand it does look like there is marginal speed up for using multiprocessing. This was also tested on a dinky instance (read the post for details!) The challenge is going to be to integrate the progress bar into this framework. I have some ideas, but am still debugging a bit. What I'd like to do is implement a base working case, and then have it tested in a few different places (eg, more CPU!) to see how big of a difference it can make. If we decide to implement this:\n\n• we will need to be sure the progress bar is still useful, likely it won't have the same granularity\n• possibly we want to split the changing of permissions into two different things, so we can again have more processes working on it, and give the user better updates\n• I noticed cool behavior that I did optimally (on my weeny instance) with an odd number of pools. If it's the case that the number of pools needs to be optimzied per the cluster, we either need to:\n     • figure out the optimum at runtime\n     • give the admin a configuration value (with a reasonable default) and instructions / tool for determining an optimal\n\nor something like that. More on this later!! Learning about this stuff is wicked cool :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/631#issuecomment-296515652|#631: Test parallel processing of download / fix permissions> (assigned to <https://github.com/vsoch|vsoch>)",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1493003922.064569",
        "date": 1493003922064
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by bkemish on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-296508243|#624: binding directories in the same base directory as home>",
                "text": "Thanks everybody! \n\nThe various solutions you offered all seem to work. My mistake using the -H option was that I tried to use /srv/home, when I should have used /srv/home/username. The command  \"singularity shell -H $HOME:/home/${HOME##*/} -bind /srv image\" works fine. However, I have elected to follow the other advice and have changed \"mount home = yes\" to \"mount home = no\" in /usr/local/etc/singularity/singularity.conf. ",
                "pretext": "[singularityware/singularity] New comment by bkemish on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-296508243|#624: binding directories in the same base directory as home>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492999514.764484",
        "date": 1492999514764
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/624|#624 binding directories in the same base directory as home> by <https://github.com/bkemish|bkemish>",
                "text": "[singularityware/singularity] Issue closed: <https://github.com/singularityware/singularity/issues/624|#624 binding directories in the same base directory as home> by <https://github.com/bkemish|bkemish>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492999514.764462",
        "date": 1492999514764
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#631 Test parallel processing of download / fix permissions' https://github.com/singularityware/singularity/issues/631 by vsoch",
                "text": "I have to be careful about using the term \"parallel\" because it could refer to different processes, threading, and intertwined with some concurrency. For this first case I'm going to test serial vs. multiprocessing, because that seems like the most common way to go about it.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/vsoch|vsoch> (assigned to <https://github.com/vsoch|vsoch>)",
                "title": "#631 Test parallel processing of download / fix permissions",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/631",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492990861.239858",
        "date": 1492990861239
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#630 Markdown-ify' https://github.com/singularityware/singularity/pull/630 by ickc",
                "text": "• 5fa3752: For all files that are already written in markdown, add a `.md` extension so that GitHub would recognize it. Contents hasn't been changed, only extension is added.\n• 30243c4: Fix markdown syntax. No wordings has been changed.\n\nRelated to #629.",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/ickc|ickc>",
                "title": "#630 Markdown-ify",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/630",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492989172.161695",
        "date": 1492989172161
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ickc on pull request <https://github.com/singularityware/singularity/pull/629#issuecomment-296495224|#629: Fix commit 0650c9d>",
                "text": "I don't understand, because I actually didn't change the license. It is the same as before.\n\nBut IANAL. The purpose is really just to achieve what commit 0650c9d wanted to achieve. You might try to replicate what I did in your liking so that GitHub will recognize it.",
                "pretext": "[singularityware/singularity] New comment by ickc on pull request <https://github.com/singularityware/singularity/pull/629#issuecomment-296495224|#629: Fix commit 0650c9d>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492988410.126815",
        "date": 1492988410126
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/629|#629 Fix commit 0650c9d> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/629|#629 Fix commit 0650c9d> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492966634.080994",
        "date": 1492966634080
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/629#issuecomment-296456854|#629: Fix commit 0650c9d>",
                "text": "Thank you for suggesting this, but the project license is not to be changed without legal approvals.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/629#issuecomment-296456854|#629: Fix commit 0650c9d>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492966634.080977",
        "date": 1492966634080
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#629 Fix commit 0650c9d' https://github.com/singularityware/singularity/pull/629 by ickc",
                "text": "See <https://github.com/ickc/singularity/blob/master/LICENSE.md|singularity/LICENSE.md at master · ickc/singularity> for demo on GitHub's recognition of the LICENSE.",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/ickc|ickc>",
                "title": "#629 Fix commit 0650c9d",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/629",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492942576.085511",
        "date": 1492942576085
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by katakombi on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296428118|#625: make singularity calling cmdline available from within container>",
                "text": "Hi @gmkurtzer  and @vsoch ,\n\n I have a suggestion: instead of having the entire cmdline it would be sufficient for now to have just a list of bind dirs e.g. `SINGULARITY_BINDDIRS='/home:/opt/software:/scratch:/lustre'\nThat would be probably much easier and straightforward to do, right?",
                "pretext": "[singularityware/singularity] New comment by katakombi on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296428118|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492936540.900370",
        "date": 1492936540900
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by katakombi on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296427530|#625: make singularity calling cmdline available from within container>",
                "text": "I guess you even could. It probably required more caution to integrate this in MPI though.\nWhy are you asking?\nIn either case I do not know the `-B` arguments of the running container process and cannot reconstruct the singularity exec call on the remote host. ",
                "pretext": "[singularityware/singularity] New comment by katakombi on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296427530|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492935740.875206",
        "date": 1492935740875
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296424071|#625: make singularity calling cmdline available from within container>",
                "text": "like \n\n```cat scripty.sh\nsingularity exec $SINGULARITY_IMAGE $MPIRUN_ARGS\n```\nthen just do:\n\n```ssh $HOSTNAME &lt; scripty.sh\n```\n\napologies for being an ignoramus about this, I've never actually done anything with MPI :)",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296424071|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492930947.729454",
        "date": 1492930947729
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296423987|#625: make singularity calling cmdline available from within container>",
                "text": "can you take a local script and direct it to the neighbor node with stdin?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296423987|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492930814.724321",
        "date": 1492930814724
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by katakombi on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296423093|#625: make singularity calling cmdline available from within container>",
                "text": "Hi @vsoch, thanks for your thoughts. However, my case is somewhat different: \n\nMy app containers are ready and can be used on a single node.\nBut I want to invoke multinode `mpirun` jobs.\nThis is just doable from within containers because they use OpenMPI versions 1.xx (no hybrid MPI). Mpirun uses ssh to invoke the processes on neighbour nodes so I wrapped SSH to call from\n`ssh $HOSTNAME \"$MPIRUN_ARGS\"`\nto\n`ssh $HOSTNAME \"singularity exec $SINGULARITY_IMAGE $MPIRUN_ARGS\"`\n\nThis seems to work just fine until the point I want to pass a bind directory in the invoking call.\nI need the bind directories information to make it available to the neighbour nodes or else jobs die :(\nI didn't want to ask for making just the -B directories available as env vars because it is not too general. I reckoned it is better to have the entire cmdline. \n\n@gmkurtzer seems like there are a few possibilities to get the quotes into an envvar e.g. the `printq` approach: <http://stackoverflow.com/questions/6306386/how-can-i-escape-an-arbitrary-string-for-use-as-a-command-line-argument-in-bash>",
                "pretext": "[singularityware/singularity] New comment by katakombi on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296423093|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492929322.685722",
        "date": 1492929322685
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296421416|#625: make singularity calling cmdline available from within container>",
                "text": "hey @katakombi - this seems like a use case for some kind of workflow management that can handle the arguments and processing of commands, is that what you are getting at? The simplest way of going about this would be to have each container perform one small, modular task, and thus any running of it would envoke the task. custom arguments get tricky, but maybe you could do something like have the container expect inputs (and arguments?) to be specified in some log/folder where the call is from. Could you provide a concrete example for what you are wanting to do? I think a workflow management solution might be a way to go... for which <https://github.com/pditommaso/awesome-pipeline|there are many!>",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296421416|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492926456.608962",
        "date": 1492926456608
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by katakombi on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296420962|#625: make singularity calling cmdline available from within container>",
                "text": "Oh yes, of course, now I understand!\nI wasn't thinking of that just because I am mainly interested in the singularity command line (without the exec part) but ofc quotes could appear even inside singularity arguments (e.g. dirs with spaces etc)\n\nI see the following possibilities:\n• Agree on using just one type of quotes (' or \") then this should work\n• Write a substitution function (using ' \" ) which maintains the structure of the command. Is it even possible? I do not really know and would have to try it...\n• Do not use an env var but dump the command in a container log file e.g. /tmp/var/log/singularity.log\n\nkind regards",
                "pretext": "[singularityware/singularity] New comment by katakombi on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296420962|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492925615.588557",
        "date": 1492925615588
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296411590|#625: make singularity calling cmdline available from within container>",
                "text": "Hi @katakombi,\n\nThe quoting becomes a big issue actually if you ever have to pass variables that might have a space, or a necessary quote, or escape characters within it. For example, if the original command is something like:\n\n```$ test() { echo \"$*\"; }\n$ test yum groupinstall \"Development Tools\"\nyum groupinstall Development Tools\n```\n\nYou can see how the quoting was lost in the response. So if I were to capture that in a single string variable that could be easily passed, I would also loose the quotes. For many commands this will work fine, but when things get quoted, unexpected results/failures will surface.\n\nThe appropriate way to deal with this is arrays, but that can't be easily obtained or passed via a Bourne environment variable.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296411590|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492908761.070894",
        "date": 1492908761070
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by katakombi on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296371444|#625: make singularity calling cmdline available from within container>",
                "text": "Hi Greg,\n\n something like a `SINGULARITYCMD` env var would be sufficient in my case. What do you mean by problems with quoting? Can you give a few examples of what you have in mind there?\n\nthanks",
                "pretext": "[singularityware/singularity] New comment by katakombi on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296371444|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492865765.137950",
        "date": 1492865765137
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/628#issuecomment-296342078|#628: Add a Gitter chat badge to README.md>",
                "text": "wow, is it just me, or did this robot spell check for us too? Wowza.",
                "pretext": "[singularityware/singularity] New comment by vsoch on pull request <https://github.com/singularityware/singularity/pull/628#issuecomment-296342078|#628: Add a Gitter chat badge to README.md>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492829306.877617",
        "date": 1492829306877
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#628 Add a Gitter chat badge to README.md' https://github.com/singularityware/singularity/pull/628 by gitter-badger",
                "text": "*singularityware/singularity now has a Chat Room on Gitter*\n\n@vsoch has just created a chat room. You can visit it here: &lt;https://gitter.im/singularityware/singularity?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;content=body_link|&lt;https://gitter.im/singularityware/singularity&gt;&gt;.\n\nThis pull-request adds this badge to your README.md:\n\n&lt;https://gitter.im/singularityware/singularity?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=body_badge|&lt;https://badges.gitter.im/singularityware/singularity.svg|Gitter&gt;&gt;\n\nIf my aim is a little off, please <https://github.com/gitterHQ/readme-badger/issues|let me know>.\n\nHappy chatting.\n\nPS: <https://gitter.im/settings/badger/opt-out|Click here> if you would prefer not to receive automatic pull-requests from Gitter in future.",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/gitter-badger|gitter-badger>",
                "title": "#628 Add a Gitter chat badge to README.md",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/628",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492828784.857035",
        "date": 1492828784857
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/626#issuecomment-296289842|#626: chdir to image directory to keep image accessed, prevent unmount>",
                "text": "Awesome, thank you!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/626#issuecomment-296289842|#626: chdir to image directory to keep image accessed, prevent unmount>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492804058.034401",
        "date": 1492804058034
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/626|#626 chdir to image directory to keep image accessed, prevent unmount> by <https://github.com/DrDaveD|DrDaveD>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/626|#626 chdir to image directory to keep image accessed, prevent unmount> by <https://github.com/DrDaveD|DrDaveD>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492802984.800997",
        "date": 1492802984800
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DrDaveD on pull request <https://github.com/singularityware/singularity/pull/626#issuecomment-296285746|#626: chdir to image directory to keep image accessed, prevent unmount>",
                "text": "Ok on the development branch, I didn't know about that.  I will close this PR and make a new one, not only to rebase but also because it turns out that doing chdir fails when the image directory is a relative path.  I'm changing it to do open instead of chdir.\n\nIt's very easy to reproduce.  I'll include simple steps in the next pull request.",
                "pretext": "[singularityware/singularity] New comment by DrDaveD on pull request <https://github.com/singularityware/singularity/pull/626#issuecomment-296285746|#626: chdir to image directory to keep image accessed, prevent unmount>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492802841.769463",
        "date": 1492802841769
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by frenchwr on issue <https://github.com/singularityware/singularity/issues/627#issuecomment-296272784|#627: Loading of Singularity Issues and Potential Network Congestion Issues?>",
                "text": "@gmkurtzer Thank you for the detailed response. It sounds like Singularity was designed with these types of use cases in mind. @damonms I'll let you follow up with any specific questions in case you have them.",
                "pretext": "[singularityware/singularity] New comment by frenchwr on issue <https://github.com/singularityware/singularity/issues/627#issuecomment-296272784|#627: Loading of Singularity Issues and Potential Network Congestion Issues?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492800416.203895",
        "date": 1492800416203
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/626#issuecomment-296263275|#626: chdir to image directory to keep image accessed, prevent unmount>",
                "text": "Can you tell me more about the issue itself? Do you have a reproducer that I can test on a RHEL7.3 kernel?\n\nBTW, The PR will need to be rebased to the `development` branch to be merged.\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/626#issuecomment-296263275|#626: chdir to image directory to keep image accessed, prevent unmount>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492798165.648761",
        "date": 1492798165648
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/627#issuecomment-296262280|#627: Loading of Singularity Issues and Potential Network Congestion Issues?>",
                "text": "Hello,\n\nAs with any job programs and data being run at scale, there is the possibility for congestion of shared infrastructure. Now, Singularity was architected for parallel execution in mind which is one reason why we use a single image file by default. This single image file contains the root file system of your container but the entire image does _NOT_ get moved from GPFS or any POSIX compatible shared storage to each compute node that is running it. But, there is of course some data that will always be pulled as the image is loaded. Initially the image and file system meta-data and header, then once it is loaded, only the bits required for the container to operate will be transferred. No wasted (or rather very little) wasted network Tx/Rx.\n\nAdditionally, for very large jobs, that require large amounts of metadata lookups, Singularity will also be very beneficial there as the image itself is only a single metadata lookup to your shared storage (GPFS, Lustre, NFS, etc..). Then the image's metadata is cached, and thus metadata calls on inodes within the image are all done locally, which can yield very high performance benefits when comparing to shared storage.\n\nTo summarize; yes, there will be an increase in network load due to the containers being loaded but the architecture itself was designed to be as optimal as possible to work with shared storage.\n\nLet me know if that answers your question and/or causes more.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/627#issuecomment-296262280|#627: Loading of Singularity Issues and Potential Network Congestion Issues?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492797893.581200",
        "date": 1492797893581
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by damonms on issue <https://github.com/singularityware/singularity/issues/627#issuecomment-296255798|#627: Loading of Singularity Issues and Potential Network Congestion Issues?>",
                "text": "Hi All,\n\nI work in the lab that is stemming this issue. I'm happy to provide test cases if desired.\n\nCheers,\nSteve",
                "pretext": "[singularityware/singularity] New comment by damonms on issue <https://github.com/singularityware/singularity/issues/627#issuecomment-296255798|#627: Loading of Singularity Issues and Potential Network Congestion Issues?>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492796297.179758",
        "date": 1492796297179
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-296247946|#624: binding directories in the same base directory as home>",
                "text": "hey @bkemish !\n\nWhen you bind the base of /srv, by way of project and share being in the image, they are included under that bind. However if /srv/home is bound first to home, it's going to skip /srv all together. For example, here I have a folder \"gitlab\" in my /srv folder:\n```ls /srv\ngitlab\n```\nHere I am sheling into ubuntu, binding my home to srv/home\n ```vanessa@vanessa-ThinkPad-T450s:~$ singularity shell -B /home/vanessa:/srv/home/vanessa docker://ubuntu\nDocker image path: index.docker.io/library/ubuntu:latest\nCache folder set to /home/vanessa/.singularity/docker\nImporting: base Singularity environment\nExploding layer: sha256:c62795f78da9ad31d9669cb4feb4e8fba995a299a0b2bd0f05b10fdc05b1f35e.tar.gz\nExploding layer: sha256:d4fceeeb758e5103c39daf44c73404bf476ef6fd6b7a9a11e2260fcc1797c806.tar.gz\nExploding layer: sha256:5c9125a401ae0cf5a5b4128633e7a4e84230d3eb4c541c661618a70e5d29aeff.tar.gz\nExploding layer: sha256:0062f774e9942f61d13928855ab8111adc27def6f41bd6f7902c329ec836882b.tar.gz\nExploding layer: sha256:6b33fd031facf4d7dd97afeea8a93260c2f15c3e795eeccd8969198a3d52678d.tar.gz\nExploding layer: sha256:fe44851d529f465f9aa107b32351c8a0a722fc0619a2a7c22b058084fac068a4.tar.gz\nSingularity: Invoking an interactive shell within container...\n```\nand now we see home is there, gitlabis not.\n ```Singularity ubuntu:~&gt; ls /srv\nhome\nSingularity ubuntu:~&gt; \n```\nA similar thing happens when you specify Home instead of bind:\n```singularity shell -H /home/vanessa:/srv/home/vanessa docker://ubuntu\nDocker image path: index.docker.io/library/ubuntu:latest\nCache folder set to /home/vanessa/.singularity/docker\nImporting: base Singularity environment\nExploding layer: sha256:c62795f78da9ad31d9669cb4feb4e8fba995a299a0b2bd0f05b10fdc05b1f35e.tar.gz\nExploding layer: sha256:d4fceeeb758e5103c39daf44c73404bf476ef6fd6b7a9a11e2260fcc1797c806.tar.gz\nExploding layer: sha256:5c9125a401ae0cf5a5b4128633e7a4e84230d3eb4c541c661618a70e5d29aeff.tar.gz\nExploding layer: sha256:0062f774e9942f61d13928855ab8111adc27def6f41bd6f7902c329ec836882b.tar.gz\nExploding layer: sha256:6b33fd031facf4d7dd97afeea8a93260c2f15c3e795eeccd8969198a3d52678d.tar.gz\nExploding layer: sha256:fe44851d529f465f9aa107b32351c8a0a722fc0619a2a7c22b058084fac068a4.tar.gz\nSingularity: Invoking an interactive shell within container...\nSingularity ubuntu:/home/vanessa&gt; ls /srv/\nhome\nSingularity ubuntu:/home/vanessa&gt; ls /home\nvanessa\nSingularity ubuntu:/home/vanessa&gt; \n```\n\nSo this bug probably comes down to what gets bound first, what is specified as defaults for the container to bind, and if your configuring lets you create directories on the fly. If users have their homes under srv, and the setting in the configure binds this automatically, this means by default /srv/home/username is probably bound to the container's home, and the rest goes away (as we saw above).\n\nSo the warning that you get:\n```If I try \"singularity shell --bind /srv my.img\" I get the warning\nWARNING: Not mounting requested bind point (already mounted in container): /srv\n ```\nIs related to that point.\n\nThe other two error messages are related to the fact that you are asking to bind directories that don't exist in the container. There is a setting in the config that will have something along the lines of \"create non existing directories by default\" and this is likely turned off. For example, when I ask singularity to bind to a non existing point in my container on my local machine:\n```\n:~$ singularity shell -B /srv/gitlab:/scratch docker://ubuntu\nDocker image path: index.docker.io/library/ubuntu:latest\nCache folder set to /home/vanessa/.singularity/docker\nImporting: base Singularity environment\nExploding layer: sha256:c62795f78da9ad31d9669cb4feb4e8fba995a299a0b2bd0f05b10fdc05b1f35e.tar.gz\nExploding layer: sha256:d4fceeeb758e5103c39daf44c73404bf476ef6fd6b7a9a11e2260fcc1797c806.tar.gz\nExploding layer: sha256:5c9125a401ae0cf5a5b4128633e7a4e84230d3eb4c541c661618a70e5d29aeff.tar.gz\nExploding layer: sha256:0062f774e9942f61d13928855ab8111adc27def6f41bd6f7902c329ec836882b.tar.gz\nExploding layer: sha256:6b33fd031facf4d7dd97afeea8a93260c2f15c3e795eeccd8969198a3d52678d.tar.gz\nExploding layer: sha256:fe44851d529f465f9aa107b32351c8a0a722fc0619a2a7c22b058084fac068a4.tar.gz\nSingularity: Invoking an interactive shell within container...\n\nSingularity ubuntu:~&gt; ls /scratch/\nconfig data logs\n```It works fine because /scratch was created on the fly! If I try this one my cluster where I can't do this, or even if I run a container that doesn't have some \"automatically mounted\" directores inside I get that message:\n```\nsingularity shell docker://ubuntu:latest\nlibrary/ubuntu:latest\nDownloading layer: sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4\nDownloading layer: sha256:6b33fd031facf4d7dd97afeea8a93260c2f15c3e795eeccd8969198a3d52678d\nDownloading layer: sha256:0062f774e9942f61d13928855ab8111adc27def6f41bd6f7902c329ec836882b\nDownloading layer: sha256:5c9125a401ae0cf5a5b4128633e7a4e84230d3eb4c541c661618a70e5d29aeff\nDownloading layer: sha256:d4fceeeb758e5103c39daf44c73404bf476ef6fd6b7a9a11e2260fcc1797c806\nDownloading layer: sha256:c62795f78da9ad31d9669cb4feb4e8fba995a299a0b2bd0f05b10fdc05b1f35e\nWARNING: Non exista\nThere could be a bug that it is mounting home at /srv/home/, and then skipping the mount of /srv because it already finds home. I would play around with the -H option to try mounting home where it traditionally is (/home) and see if that helps to resolve some of the issues.\nnt bind point (directory) in container: '/share/PI'\nWARNING: Non existant bind point (directory) in container: '/scratch'\nWARNING: Non existant bind point (directory) in container: '/local-scratch'\nSingularity: Invoking an interactive shell within container...\n```\nand this is because I am not allowed to create mounts for directories in the container that don't exist. The setting that controls that is the following:\n\n```\n\n*ENABLE OVERLAY: [BOOL]*\n\n*DEFAULT: yes*\n\n*Enabling this option will make it possible to specify bind paths to locations*\n\n*that do not currently exist within the container. Some limitations still exist*\n\n*when running in completely non-privileged mode. (note: this option is only*\n\n*supported on hosts that support overlay file systems).*\n\n*note: currently disabled because RHEL7 kernel crashes with it... :(*\n\nenable overlay = no\n```(note this is version 2.2 above) 2.3 now looks like this:\n```\n\n*ENABLE OVERLAY: [BOOL]*\n\n*DEFAULT: yes*\n\n*Enabling this option will make it possible to specify bind paths to locations*\n\n*that do not currently exist within the container. note: this only works when*\n\n*using the standard SUID mode (not user-namespaces)).*\n\nenable overlay = yes\n```\n\nSo given that you have control over the setup / config file and want to allow users to bind directories and have them automatically created, you can change this setting. If not, then in your bootstrap spec you could just make:\n```mkdir -p /srv/project\nmkdir -p /srv/share\n```\nand then I would specify home to be bound to /home instead, and just bind those two directories to themselves. Eg:\n```singularity -H /srv/home/vanessa:/home -B /srv/project:/srv/project -B /srv/share/srv/share container.img\n```\nI don't think you need to specify the host:mount if it's the same, I just like doing that so I'm clear about my intentions, to myself, lol.\n\nAn easier route would just be to bind /srv, given that it exists in the container, it should include the subdirectores. The reason I didn't suggest this first is because it might already be detected as mounted given that home is mounted by default in the settings. You could play around with doing this and mount home elsewhere, or prevent it from being mounted.\n\nHopefully this gives some insight and things to try! If you are still having trouble, please show the commands that you've tried with --debug and we should be able to see exactly what is going on there.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-296247946|#624: binding directories in the same base directory as home>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492794315.698225",
        "date": 1492794315698
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#627 Loading of Singularity Issues and Potential Network Congestion Issues?' https://github.com/singularityware/singularity/issues/627 by frenchwr",
                "text": "Hi there! We have started using Singularity at Vanderbilt University's HPC center (Advanced Computing Center for Research and Education, or ACCRE; <http://www.accre.vanderbilt.edu/>) and we LOVE it! Really great work with this tool.\n\nOne issue that is a little unclear to me...\n\nWe have a lot of relatively small, embarrassingly parallel type analyses on our cluster. It is not uncommon at all for users to submit and run 1000 or more single core jobs through SLURM at once with job arrays, with each job running for a relatively short amount of time. Should we be concerned about potential network congestion issues if an image is loaded off of a shared filesystem (we use GPFS) potentially hundreds or thousands of times in a relatively short period of time? Some of the images being developed by our users are on the order of 5GB. Does the entire image get moved from GPFS to a compute node each time a container of that image is run?\n\nThanks again, and all the best! ",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/frenchwr|frenchwr>",
                "title": "#627 Loading of Singularity Issues and Potential Network Congestion Issues?",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/627",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492794212.672510",
        "date": 1492794212672
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request submitted: '#626 chdir to image directory to keep image accessed, prevent unmount' https://github.com/singularityware/singularity/pull/626 by DrDaveD",
                "text": "Change proposed in this pull request:\n\n• When the image is a directory, chdir to that directory in the outer sexec process.  This is to fix a problem at least on some kernels (e.g. the one in Centos7.3), where there's something about singularity's use of containers that prevents the kernel from thinking that the image is still in use if this chdir is not done. That is, the kernel does not prevent the filesystem that the image is in from being unmounted.  This was first noticed in a case where the filesystem was automounted, but it is also easily demonstrated with a manual umount command.  Keeping a file descriptor open to the top level directory would probably work just as well, but this seems simpler.\n\n@singularityware-admin",
                "pretext": "[singularityware/singularity] Pull request submitted by <https://github.com/DrDaveD|DrDaveD>",
                "title": "#626 chdir to image directory to keep image accessed, prevent unmount",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/pull/626",
                "color": "6CC644",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492793701.540353",
        "date": 1492793701540
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/354#issuecomment-296227465|#354: Strange bind behavior on cluster>",
                "text": "I see we never updated this issue after Centos7.3 came out: it does not crash with overlayfs use in singularity in combination with cvmfs like it did with 7.2.  Here's the <https://sft.its.cern.ch/jira/browse/CVM-1090|cvmfs ticket> for reference.",
                "pretext": "[singularityware/singularity] New comment by DrDaveD on issue <https://github.com/singularityware/singularity/issues/354#issuecomment-296227465|#354: Strange bind behavior on cluster>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492789552.451053",
        "date": 1492789552451
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296225972|#625: make singularity calling cmdline available from within container>",
                "text": "Hi @katakombi, what if there was a single variable, perhaps something like `SINGULARITYCMD=...` which has the full command. The bigger problem in either case is related to quoting of variables. Do you have any thoughts on how to solve that?\n\nThanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/625#issuecomment-296225972|#625: make singularity calling cmdline available from within container>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492789214.354785",
        "date": 1492789214354
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/622#issuecomment-296223258|#622: mentioning googlegroup/gitter/slack/whatever in readme>",
                "text": "I craeted a community ages ago, before we moved it to its own organization. So I just created one for SingularityWare at <https://gitter.im/singularityware> if anyone wants to test.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/622#issuecomment-296223258|#622: mentioning googlegroup/gitter/slack/whatever in readme>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492788603.179798",
        "date": 1492788603179
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-296194324|#624: binding directories in the same base directory as home>",
                "text": "Hi @bkemish for \n&gt; \"Can anyone tell me how to either fix the binding on /srv or disable the automatic binding of $HOME so that I can bind /srv manually myself.\" \nTake a loot at \n```/usr/local/etc/singularity/singularity.conf```\n```bash\n\n*SINGULARITY.CONF*\n\n*This is the global configuration file for Singularity. This file controls*\n\n*what the container is allowed to do on a particular host, and as a result*\n\n*this file must be owned by root.*\n\n```\n\nAlso for the rest of the issue, would you give it a to the ```development``` branch and see if it works. I don' t have those folders on network, and  \n```singularity shell --bind /srv/ my.img\n```\nWorked for in my host",
                "pretext": "[singularityware/singularity] New comment by ArangoGutierrez on issue <https://github.com/singularityware/singularity/issues/624#issuecomment-296194324|#624: binding directories in the same base directory as home>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492782254.425037",
        "date": 1492782254425
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#625 make singularity calling cmdline available from within container' https://github.com/singularityware/singularity/issues/625 by katakombi",
                "text": "In order to spawn nested container calls on neighbour nodes via ssh I'd like to have the entire cmdline available from within the container process, e.g. `singularity exec -B /mnt/share /home/user/containers/Ubuntu.sapp`\n\nBy now there is a certain amount of information inside a container process telling about how the container process got invoked, namely\n\n• SINGULARITY_libexecdir=/usr/lib/x86_64-linux-gnu\n• SINGULARITY_localstatedir=/var\n• SINGULARITY_sysconfdir=/etc\n• SINGULARITY_INIT=1\n• SINGULARITY_CONTAINER=e.g. Ubuntu.sapp\n• SINGULARITY_IMAGE=e.g. Ubuntu.sapp\n\nbut not sufficient for e.g. custom binds passed via the `-B` parameter.\nIn my case it would be enough to make the entire call available using one variable.\n\nSee also: <https://groups.google.com/a/lbl.gov/forum/#!topic/singularity/2_BuEkMb6aI>",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/katakombi|katakombi>",
                "title": "#625 make singularity calling cmdline available from within container",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/625",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492773494.866577",
        "date": 1492773494866
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#624 binding directories in the same base directory as home ' https://github.com/singularityware/singularity/issues/624 by bkemish",
                "text": "I am trying to use singularity on a  Linux cluster where network users have their home directory mapped to /srv/home/&lt;username&gt;. I also wish to bind 2 other network directories called /srv/proj and /srv/share. I created /srv/home, /srv/proj and /srv/share in the image. When I try to run \"singularity shell --bind /srv/proj --bind /srv/share my.img\" I get the warnings\nWARNING: Skipping user bind, non existant bind point (directory) in container: '/srv/proj'\nWARNING: Skipping user bind, non existant bind point (directory) in container: '/srv/share'\nand  the directories aren't bound.\n\nIf I try  \"singularity shell --bind /srv my.img\" I get the warning\nWARNING: Not mounting requested bind point (already  mounted in container): /srv\n\nIf I use a local user whose home directory is in /home everything works perfectly. I have tried changing the home using the -H option and --contain but /srv/home is still bound and I can not bind anything else in /srv. I can bind those directories to other locations on the image, but my use case is to run old pipelines which were developed on an old version of Ubuntu and unfortunately they have these directories hardcoded all over the place. Can anyone tell me how to either fix the binding on /srv or disable the automatic binding of $HOME so that I can bind /srv manually myself.\n\nThanks.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/bkemish|bkemish>",
                "title": "#624 binding directories in the same base directory as home ",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/624",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492738576.628316",
        "date": 1492738576628
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#623 RFE: `singularity shrink`' https://github.com/singularityware/singularity/issues/623 by akkornel",
                "text": "When I am bootstrapping a container, I'm never too sure how big that container image needs to be.  However, once I'm done bootstrapping it, I should never need to make changes to it.\n\nIt would be nice to have a `singularity shrink` command, which will shrink a container image to its smallest size.\n\nIt's actually possible to do this in shell today, with something like this script:\n\n```image=PATH_TO_IMAGE\nstripped_img=`tempfile --directory=.`\ntail -n +2 $image &gt; $stripped_img\ne2fsck -f $stripped_img\nresize2fs -M $stripped_img\nshrunk_img=`tempfile --directory=.`\nhead -n 1 $image &gt; $shrunk_img\ncat $stripped_img &gt;&gt; $shrunk_img\nrm $stripped_img\nmv $shrunk_img $image\nchmod a+x $image\n```\n\nThe above shell is inefficient (space utilization is up to 2x the image size), but safe (the original image isn't deleted until the very end).\n\nBut, it would probably be better implemented in the same way as `singularity expand`.",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/akkornel|akkornel>",
                "title": "#623 RFE: `singularity shrink`",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/623",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492733683.145976",
        "date": 1492733683145
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/619#issuecomment-295947065|#619: `-f/--file` option restored to export command in export.exec and export.help>",
                "text": "Merged, thanks!",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/619#issuecomment-295947065|#619: `-f/--file` option restored to export command in export.exec and export.help>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492727755.392923",
        "date": 1492727755392
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/619|#619 `-f/--file` option restored to export command in export.exec and export.help> by <https://github.com/gmkurtzer|gmkurtzer>",
                "text": "[singularityware/singularity] Pull request closed: <https://github.com/singularityware/singularity/pull/619|#619 `-f/--file` option restored to export command in export.exec and export.help> by <https://github.com/gmkurtzer|gmkurtzer>",
                "id": 1,
                "color": "E3E4E6",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492727746.391482",
        "date": 1492727746391
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/622#issuecomment-295936623|#622: mentioning googlegroup/gitter/slack/whatever in readme>",
                "text": "Hey Anton - are you suggesting Gitter in place of slack? We don't currently have a paid plan, so most of the conversation on slack is (soon) lost given the number o users that we have.  I haven't looked at Gitter in a long bit - is it unlimited for free, for history too?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/622#issuecomment-295936623|#622: mentioning googlegroup/gitter/slack/whatever in readme>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492725996.113046",
        "date": 1492725996113
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/621#issuecomment-295933494|#621: make normal UP button inside shell>",
                "text": "Could you try the development branch? We handle the shell differently now! I used to have this bug too and haven't seen it in a while.",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/621#issuecomment-295933494|#621: make normal UP button inside shell>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492725503.020581",
        "date": 1492725503020
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by antonkulaga on issue <https://github.com/singularityware/singularity/issues/621#issuecomment-295930190|#621: make normal UP button inside shell>",
                "text": "Here is what I did to get the bug:\n``` sudo singularity import sra.img docker://itsjeffreyy/sratoolkit\n singularity shell sra.img\nSingularity.sra.img&gt; ls \nSingularity.sra.img&gt; ^[[A #when I push \"up arrow\"\n```\nI use the version from the website, 2.2.1",
                "pretext": "[singularityware/singularity] New comment by antonkulaga on issue <https://github.com/singularityware/singularity/issues/621#issuecomment-295930190|#621: make normal UP button inside shell>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492725019.927903",
        "date": 1492725019927
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/621#issuecomment-295928530|#621: make normal UP button inside shell>",
                "text": "What version of singualrity are you using @antonkulaga? \n\nThe development branch should automatically use `/bin/bash` if it is available, where previous versions just always called `/bin/sh`.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on issue <https://github.com/singularityware/singularity/issues/621#issuecomment-295928530|#621: make normal UP button inside shell>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492724758.877698",
        "date": 1492724758877
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] Issue created: '#622 making a gitter channel' https://github.com/singularityware/singularity/issues/622 by antonkulaga",
                "text": "Gitter chats and mailing lists are often useful to facilitate the discussions inside the commonity. In case of gitter it is super-easy to make it and add the badge to the repo",
                "pretext": "[singularityware/singularity] Issue created by <https://github.com/antonkulaga|antonkulaga>",
                "title": "#622 making a gitter channel",
                "id": 1,
                "title_link": "https://github.com/singularityware/singularity/issues/622",
                "color": "F29513",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492722539.404962",
        "date": 1492722539404
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/619#issuecomment-295906806|#619: `-f/--file` option restored to export command in export.exec and export.help>",
                "text": "It looks good! Well done! I will test it locally here shortly.",
                "pretext": "[singularityware/singularity] New comment by gmkurtzer on pull request <https://github.com/singularityware/singularity/pull/619#issuecomment-295906806|#619: `-f/--file` option restored to export command in export.exec and export.help>",
                "id": 1,
                "color": "C4E8B4",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492721439.136740",
        "date": 1492721439136
    },
    {
        "text": "",
        "bot_id": "B26GYMSLV",
        "attachments": [
            {
                "fallback": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/621#issuecomment-295875178|#621: make normal UP button inside shell>",
                "text": "I am having trouble reproducing this (because I've had the same error for a long time) but I think it has to do with your `$SHELL` variable, specifically this happened for me on ubuntu when I wasn't using bash. What do you have for `$SHELL` both inside and outside the container and does it change when you start the container with `/bin/bash` instead?",
                "pretext": "[singularityware/singularity] New comment by vsoch on issue <https://github.com/singularityware/singularity/issues/621#issuecomment-295875178|#621: make normal UP button inside shell>",
                "id": 1,
                "color": "FAD5A1",
                "mrkdwn_in": [
                    "text",
                    "pretext"
                ]
            }
        ],
        "type": "message",
        "subtype": "bot_message",
        "ts": "1492717209.059326",
        "date": 1492717209059
    }
]
